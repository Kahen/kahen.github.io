import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as s,a as e}from"./app-DpDzgwdT.js";const t={},p=e('<h1 id="openrewrite-使用指南" tabindex="-1"><a class="header-anchor" href="#openrewrite-使用指南"><span>OpenRewrite 使用指南</span></a></h1><h2 id="_1-概览" tabindex="-1"><a class="header-anchor" href="#_1-概览"><span>1. 概览</span></a></h2><p>OpenRewrite 是一个用于 Java 和其他源代码的代码重构生态系统。有时，我们需要将依赖升级到最新版本，应用安全补丁，消除使用已弃用的 API，从一种技术迁移到另一种技术（例如，从 JUnit 断言迁移到 AssertJ）等。我们可以使用 OpenRewrite 库来解决这些挑战。在本教程中，我们将讨论 OpenRewrite 项目的基础知识，并展示一些如何在实践中使用它的例子。在每种情况下，我们都将使用 Spring PetClinic 应用程序。</p><h2 id="_2-openrewrite-基础" tabindex="-1"><a class="header-anchor" href="#_2-openrewrite-基础"><span>2. OpenRewrite 基础</span></a></h2><p>以下是我们可以使用 OpenRewrite 执行的一些常见类型的升级：</p><ul><li>语言升级：从旧版本的语言迁移到新版本，例如从 Java 8 迁移到 Java 11 或更高版本。</li><li>框架升级：适应像 Spring Boot、Hibernate 等框架的新版本。</li><li>依赖迁移：在存在重大变更时，从库的一个版本升级到另一个版本。</li><li>安全补丁：用安全的替代品替换易受攻击的方法或库。</li><li>自定义转换：针对我们的业务逻辑或基础设施特定的任何转换。</li></ul><h3 id="_2-1-openrewrite-配方" tabindex="-1"><a class="header-anchor" href="#_2-1-openrewrite-配方"><span>2.1. OpenRewrite 配方</span></a></h3><p>OpenRewrite 的主要特点是它将通过将配方应用于项目自动重构源代码。OpenRewrite 附带了各种内置配方，用于常见的转换，社区也经常为广泛使用的任务贡献配方。每个配方可以执行特定的重构任务。这些配方是用 Java 代码编写的，并使用 OpenRewrite Maven 或 Gradle 插件包含在构建过程中。在本教程中，我们将重点关注 Maven 插件。</p><h3 id="_2-2-maven-依赖" tabindex="-1"><a class="header-anchor" href="#_2-2-maven-依赖"><span>2.2. Maven 依赖</span></a></h3><p>让我们从在 <em>pom.xml</em> 的 <em><code>&lt;plugins&gt;</code></em> 部分导入 <em>rewrite-maven-plugin</em> 插件开始：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>`\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````org.openrewrite.maven```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````rewrite-maven-plugin```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n    ````````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>````````5.8.1````````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>````````\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>`\n        ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeRecipes</span><span class="token punctuation">&gt;</span></span>```````\n            `<span class="token comment">&lt;!-- 定义配方 --&gt;</span>`\n        ````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeRecipes</span><span class="token punctuation">&gt;</span></span>````\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>`\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>```\n        `<span class="token comment">&lt;!-- 配方的依赖 --&gt;</span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><code>&lt;activeRecipes&gt;</code></em> 标签指定了当插件运行时应激活哪些 OpenRewrite 配方。此外，我们可以定义插件可能需要的任何其他依赖。如果某些配方需要外部库或特定版本的库，这可能特别有用。</p><h3 id="_2-3-检出-spring-petclinic" tabindex="-1"><a class="header-anchor" href="#_2-3-检出-spring-petclinic"><span>2.3. 检出 Spring PetClinic</span></a></h3><p>让我们从本地检出 Spring PetClinic 的相关分支：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/spring-projects/spring-petclinic.git<span class="token punctuation">;</span>\n<span class="token builtin class-name">cd</span> spring-petclinic<span class="token punctuation">;</span>\n<span class="token function">git</span> switch <span class="token parameter variable">-c</span> <span class="token number">2.5</span>.x <span class="token number">1.5</span>.x<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，Java 和 Spring Boot 的版本分别是 8 和 1.5。在接下来的部分中，我们将经历最广泛使用的配方。</p><h2 id="_3-升级-spring-boot" tabindex="-1"><a class="header-anchor" href="#_3-升级-spring-boot"><span>3. 升级 Spring Boot</span></a></h2><p>升级 Spring Boot 项目可能是一个复杂的任务，这取决于我们当前使用的版本和我们想要升级到的版本之间的变化。然而，使用 OpenRewrite 可以帮助我们顺利地进行这个过程。让我们将 PetClinic 项目从 Spring Boot 1.5 升级到 2.7。</p><h3 id="_3-1-maven-依赖" tabindex="-1"><a class="header-anchor" href="#_3-1-maven-依赖"><span>3.1. Maven 依赖</span></a></h3><p>让我们在 <em>rewrite-maven-plugin</em> 插件的 <em><code>&lt;activeRecipes&gt;</code></em> 部分添加 <em>UpgradeSpringBoot_2_7</em> 配方：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeRecipes</span><span class="token punctuation">&gt;</span></span>```````\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>recipe</span><span class="token punctuation">&gt;</span></span>```org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_7```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>recipe</span><span class="token punctuation">&gt;</span></span>```\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeRecipes</span><span class="token punctuation">&gt;</span></span>````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，我们需要在插件的 <em><code>&lt;dependencies&gt;</code></em> 部分声明 <em>rewrite-spring</em> 依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````org.openrewrite.recipe```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````rewrite-spring```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n    ````````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>````````5.0.11````````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>````````\n`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，要升级到 Spring Boot 3，我们需要使用 <em>UpgradeSpringBoot_3_0</em> 配方。</p><h3 id="_3-2-运行-spring-boot-升级配方" tabindex="-1"><a class="header-anchor" href="#_3-2-运行-spring-boot-升级配方"><span>3.2. 运行 Spring Boot 升级配方</span></a></h3><p>现在，我们已经准备好通过运行此命令来执行迁移：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mvn rewrite:run\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面，我们可以看到 Maven 的结果：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> --- rewrite-maven-plugin:5.8.1:run <span class="token punctuation">(</span>default-cli<span class="token punctuation">)</span> @ spring-petclinic ---\n<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Using active recipe<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">[</span>org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_7<span class="token punctuation">]</span>\n<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Using active styles<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Validating active recipes<span class="token punctuation">..</span>.\n<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Project <span class="token punctuation">[</span>petclinic<span class="token punctuation">]</span> Resolving Poms<span class="token punctuation">..</span>.\n<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Project <span class="token punctuation">[</span>petclinic<span class="token punctuation">]</span> Parsing <span class="token builtin class-name">source</span> files\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，我们看到 Maven 列出了活动的配方，并应用了 <em>pom</em> 和源文件更改。运行配方后，OpenRewrite 提供了更改列表。我们可以使用 <em>git diff</em> 来检查结果：</p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code>`&lt;parent&gt;`\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   ```````&lt;groupId&gt;```````org.springframework.boot```````&lt;/groupId&gt;```````\n</span><span class="token prefix unchanged"> </span><span class="token line">   ```````&lt;artifactId&gt;```````spring-boot-starter-parent```````&lt;/artifactId&gt;```````\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">   ````````&lt;version&gt;````````1.5.4.RELEASE````````&lt;/version&gt;````````\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   ````````&lt;version&gt;````````2.7.14````````&lt;/version&gt;````````\n</span></span>`&lt;/parent&gt;`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正如我们在这里看到的，<em>spring-boot-starter-parent</em> 版本已经升级到 2.7.14。此外，在升级过程中，我们的一些 Java 类中的 <em>@Autowired</em> 已经被移除：</p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import org.springframework.beans.factory.annotation.Autowired;\n</span></span>class VetController {\n\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   private final VetRepository vets;\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">   @Autowired\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   public VetController(VetRepository clinicService) {\n</span><span class="token prefix unchanged"> </span><span class="token line">       this.vets = clinicService;\n</span><span class="token prefix unchanged"> </span><span class="token line">   }\n</span></span>}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，在 Spring Boot 2.x 及以上版本中，如果一个类有一个单一构造函数，它将自动用于自动装配，而不需要 <em>@Autowired</em> 注解。<strong>当我们升级到较新的 Spring Boot 版本时，许多受管理的依赖项，包括 JUnit，也可能会被升级</strong>。Spring Boot 2.x 默认使用 JUnit 5，而 Spring Boot 1.5 与 JUnit 4 对齐。这意味着测试的结构和运行方式会有预期的变化。根据我们的需求，我们可以只升级 JUnit 而不升级 Spring Boot。在下一节中，我们将看到如何从 JUnit 4 迁移到 JUnit 5。</p><h2 id="_4-升级到-junit5" tabindex="-1"><a class="header-anchor" href="#_4-升级到-junit5"><span>4. 升级到 JUnit5</span></a></h2><p>JUnit 是 Java 应用程序中单元测试的事实标准。<strong>OpenRewrite 支持从 JUnit 4 迁移到其后继者 JUnit 5</strong>。</p><h3 id="_4-1-maven-依赖" tabindex="-1"><a class="header-anchor" href="#_4-1-maven-依赖"><span>4.1. Maven 依赖</span></a></h3><p>让我们在 <em>pom.xml</em> 中激活 <em>JUnit5BestPractices</em> 配方：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeRecipes</span><span class="token punctuation">&gt;</span></span>```````\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>recipe</span><span class="token punctuation">&gt;</span></span>```org.openrewrite.java.testing.junit5.JUnit5BestPractices```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>recipe</span><span class="token punctuation">&gt;</span></span>```\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeRecipes</span><span class="token punctuation">&gt;</span></span>````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，我们需要在插件的 <em><code>&lt;dependencies&gt;</code></em> 部分声明 <em>rewrite-testing-frameworks</em> 依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````org.openrewrite.recipe```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````rewrite-testing-frameworks```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n    ````````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>````````2.0.12````````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>````````\n`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-运行-junit-升级配方" tabindex="-1"><a class="header-anchor" href="#_4-2-运行-junit-升级配方"><span>4.2. 运行 JUnit 升级配方</span></a></h3><p>现在，我们通过运行 <em>mvn rewrite:run</em> 命令来执行迁移。此命令大约在一分钟内完成，并将所有测试迁移到 JUnit 5，同时更新 <em>pom.xml</em>：</p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import org.junit.Before;\n</span><span class="token prefix deleted">-</span><span class="token line">import org.junit.Test;\n</span><span class="token prefix deleted">-</span><span class="token line">import org.junit.runner.RunWith;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import static org.junit.jupiter.api.Assertions.assertEquals;\n</span><span class="token prefix inserted">+</span><span class="token line">import static org.junit.jupiter.api.Assertions.assertThrows;\n</span><span class="token prefix inserted">+</span><span class="token line">import org.junit.jupiter.api.BeforeEach;\n</span><span class="token prefix inserted">+</span><span class="token line">import org.junit.jupiter.api.Test;\n</span><span class="token prefix inserted">+</span><span class="token line">import org.junit.jupiter.api.extension.ExtendWith;\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import org.mockito.runners.MockitoJUnitRunner;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import org.mockito.junit.jupiter.MockitoExtension;\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    @Before\n</span><span class="token prefix deleted">-</span><span class="token line">    public void setup() {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    @BeforeEach\n</span><span class="token prefix inserted">+</span><span class="token line">    void setup() {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        this.petTypeFormatter = new PetTypeFormatter(pets);\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    @Test(expected = ParseException.class)\n</span><span class="token prefix deleted">-</span><span class="token line">    public void shouldThrowParseException() throws ParseException {\n</span><span class="token prefix deleted">-</span><span class="token line">        Mockito.when(this.pets.findPetTypes()).thenReturn(makePetTypes());\n</span><span class="token prefix deleted">-</span><span class="token line">        petTypeFormatter.parse(&quot;Fish&quot;, Locale.ENGLISH);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    @Test\n</span><span class="token prefix inserted">+</span><span class="token line">    void shouldThrowParseException() throws ParseException {\n</span><span class="token prefix inserted">+</span><span class="token line">        assertThrows(ParseException.class, () -&gt; {\n</span><span class="token prefix inserted">+</span><span class="token line">            Mockito.when(this.pets.findPetTypes()).thenReturn(makePetTypes());\n</span><span class="token prefix inserted">+</span><span class="token line">            petTypeFormatter.parse(&quot;Fish&quot;, Locale.ENGLISH);\n</span><span class="token prefix inserted">+</span><span class="token line">        });\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   }\n</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>OpenRewrite 不仅更新了导入和 <em>@Test</em> 注解，还修改了方法可见性，应用了 <em>MockitoExtension</em>，并采用了 <em>assertThrows()</em>。总的来说，OpenRewrite 可以帮助 JUnit 迁移完成以下任务：</p><ul><li>更新注解，例如将 <em>@Before</em> 更改为 <em>@BeforeEach</em> 或 <em>@After</em> 更改为 <em>@AfterEach</em>。</li><li>修改断言方法调用以与 JUnit 5 的语法对齐。 -- 移除或替换 JUnit 4 特定功能，使用 JUnit 5 的对应功能。</li><li>更新从 JUnit 4 包到 JUnit 5 包的导入语句。</li></ul><h2 id="_5-升级到-java-11" tabindex="-1"><a class="header-anchor" href="#_5-升级到-java-11"><span>5. 升级到 Java 11</span></a></h2><p>将旧的源代码升级到 Java 11 可能是一个具有挑战性和耗时的问题。在本节中，我们将使用 OpenRewrite 执行从 Java 8 到 Java 11 的自动化迁移。</p><h3 id="_5-1-maven-依赖" tabindex="-1"><a class="header-anchor" href="#_5-1-maven-依赖"><span>5.1. Maven 依赖</span></a></h3><p>要升级 Java，我们需要不同的依赖和配方。让我们在 <em><code>&lt;activeRecipes&gt;</code></em> 部分添加 <em>Java8toJava11</em> 配方：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeRecipes</span><span class="token punctuation">&gt;</span></span>```````\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>recipe</span><span class="token punctuation">&gt;</span></span>```org.openrewrite.java.migrate.Java8toJava11```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>recipe</span><span class="token punctuation">&gt;</span></span>```\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeRecipes</span><span class="token punctuation">&gt;</span></span>````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，我们需要在我们的插件中声明 <em>rewrite-migrate-java</em> 依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````org.openrewrite.recipe```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````rewrite-migrate-java```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n    ````````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>````````2.1.1````````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>````````\n`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，要升级到 Java 17，我们需要使用 <em>UpgradeToJava17</em> 配方。</p><h3 id="_5-2-运行-java-升级配方" tabindex="-1"><a class="header-anchor" href="#_5-2-运行-java-升级配方"><span>5.2. 运行 Java 升级配方</span></a></h3><p>要升级 Java，我们可以应用 <em>mvn rewrite:run</em> 命令。之后，我们将看到类似的输出：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Using active recipe<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">[</span>org.openrewrite.java.migrate.Java8toJava11<span class="token punctuation">]</span>\n<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Running recipe<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">..</span>.\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Changes have been made to pom.xml by:\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>     org.openrewrite.java.migrate.Java8toJava11\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>         org.openrewrite.java.migrate.javax.AddJaxbDependencies\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>             org.openrewrite.java.dependencies.AddDependency: <span class="token punctuation">{</span>groupId<span class="token operator">=</span>jakarta.xml.bind, <span class="token assign-left variable">artifactId</span><span class="token operator">=</span>jakarta.xml.bind-api, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">2.3</span>.x, <span class="token assign-left variable">onlyIfUsing</span><span class="token operator">=</span>javax.xml.bind<span class="token punctuation">..</span>*, <span class="token assign-left variable">acceptTransitive</span><span class="token operator">=</span>true<span class="token punctuation">}</span>\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>                 org.openrewrite.maven.AddDependency: <span class="token punctuation">{</span>groupId<span class="token operator">=</span>jakarta.xml.bind, <span class="token assign-left variable">artifactId</span><span class="token operator">=</span>jakarta.xml.bind-api, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">2.3</span>.x, <span class="token assign-left variable">onlyIfUsing</span><span class="token operator">=</span>javax.xml.bind<span class="token punctuation">..</span>*, <span class="token assign-left variable">acceptTransitive</span><span class="token operator">=</span>true<span class="token punctuation">}</span>\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>             org.openrewrite.java.migrate.javax.AddJaxbRuntime: <span class="token punctuation">{</span>runtime<span class="token operator">=</span>glassfish<span class="token punctuation">}</span>\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>                 org.openrewrite.java.migrate.javax.AddJaxbRuntime<span class="token variable">$AddJaxbRuntimeMaven</span>\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>         org.openrewrite.java.migrate.cobertura.RemoveCoberturaMavenPlugin\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>             org.openrewrite.maven.RemovePlugin: <span class="token punctuation">{</span>groupId<span class="token operator">=</span>org.codehaus.mojo, <span class="token assign-left variable">artifactId</span><span class="token operator">=</span>cobertura-maven-plugin<span class="token punctuation">}</span>\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>         org.openrewrite.java.migrate.wro4j.UpgradeWro4jMavenPluginVersion\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>             org.openrewrite.maven.UpgradePluginVersion: <span class="token punctuation">{</span>groupId<span class="token operator">=</span>ro.isdc.wro4j, <span class="token assign-left variable">artifactId</span><span class="token operator">=</span>wro4j-maven-plugin, <span class="token assign-left variable">newVersion</span><span class="token operator">=</span><span class="token number">1.10</span>.1<span class="token punctuation">}</span>\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>         org.openrewrite.java.migrate.JavaVersion11\n<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span>             org.openrewrite.java.migrate.UpgradeJavaVersion: <span class="token punctuation">{</span>version<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>Java8toJava11</em> 配方产生了以下主要相关更改：</p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    ``&lt;java.version&gt;``1.8``&lt;/java.version&gt;``\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    ``&lt;java.version&gt;``11``&lt;/java.version&gt;``\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    ``&lt;wro4j.version&gt;``1.8.0``&lt;/wro4j.version&gt;``\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    ``&lt;wro4j.version&gt;``1.10.1``&lt;/wro4j.version&gt;``\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    `````&lt;dependency&gt;`````\n</span><span class="token prefix inserted">+</span><span class="token line">      ```````&lt;groupId&gt;```````jakarta.xml.bind```````&lt;/groupId&gt;```````\n</span><span class="token prefix inserted">+</span><span class="token line">      ```````&lt;artifactId&gt;```````jakarta.xml.bind-api```````&lt;/artifactId&gt;```````\n</span><span class="token prefix inserted">+</span><span class="token line">      ````````&lt;version&gt;````````2.3.3````````&lt;/version&gt;````````\n</span><span class="token prefix inserted">+</span><span class="token line">    `````&lt;/dependency&gt;`````\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    `````&lt;dependency&gt;`````\n</span><span class="token prefix inserted">+</span><span class="token line">      ```````&lt;groupId&gt;```````org.glassfish.jaxb```````&lt;/groupId&gt;```````\n</span><span class="token prefix inserted">+</span><span class="token line">      ```````&lt;artifactId&gt;```````jaxb-runtime```````&lt;/artifactId&gt;```````\n</span><span class="token prefix inserted">+</span><span class="token line">      ````````&lt;version&gt;````````2.3.8````````&lt;/version&gt;````````\n</span><span class="token prefix inserted">+</span><span class="token line">      `&lt;scope&gt;`provided`&lt;/scope&gt;`\n</span><span class="token prefix inserted">+</span><span class="token line">    `````&lt;/dependency&gt;`````\n</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，我们看到 <em>java.version</em> Maven 属性被更改为 11，这设置了 <em>maven.compiler.source</em> 和 <em>maven.compiler.target</em>。这解锁了 Java 11 语言特性，如 <em>var</em>。在此过程中，<em>wro4j</em> 也更新到了最新版本。Wro4j 是 Java 应用程序中优化和管理 Web 资源（如 JavaScript 和 CSS 文件）的流行开源项目。此外，在从 Java 8 迁移到 Java 11 时，一个主要的变化是 JDK 中移除了 <em>javax.xml.bind</em> 模块。许多依赖此模块进行 JAXB 功能的应用程序需要添加第三方依赖项以保留此功能。一个这样的替代品是 <em>jakarta.xml.bind-api</em> 依赖项。</p><h2 id="_6-结论" tabindex="-1"><a class="header-anchor" href="#_6-结论"><span>6. 结论</span></a></h2><p>在本教程中，我们提供了一个逐步指南，利用 OpenRewrite 项目在 Spring PetClinic 代码库中无缝升级 Spring Boot、JUnit 和 Java 的版本。通过遵循本教程，我们可以深入了解升级过程的复杂性，确保更平滑的过渡和这些核心组件更好的代码兼容性。 OK</p>',62),i=[p];function l(o,c){return s(),a("div",null,i)}const u=n(t,[["render",l],["__file","2024-06-27-A Guide to OpenRewrite.html.vue"]]),v=JSON.parse('{"path":"/posts/baeldung/2024-06-27/2024-06-27-A%20Guide%20to%20OpenRewrite.html","title":"OpenRewrite 使用指南","lang":"zh-CN","frontmatter":{"date":"2022-06-28T00:00:00.000Z","category":["Java"],"tag":["OpenRewrite","代码重构"],"head":[["meta",{"name":"keywords","content":"OpenRewrite, Java, 代码重构, Spring Boot, JUnit, Maven"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-06-27/2024-06-27-A%20Guide%20to%20OpenRewrite.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"OpenRewrite 使用指南"}],["meta",{"property":"og:description","content":"OpenRewrite 使用指南 1. 概览 OpenRewrite 是一个用于 Java 和其他源代码的代码重构生态系统。有时，我们需要将依赖升级到最新版本，应用安全补丁，消除使用已弃用的 API，从一种技术迁移到另一种技术（例如，从 JUnit 断言迁移到 AssertJ）等。我们可以使用 OpenRewrite 库来解决这些挑战。在本教程中，我们..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-27T21:53:19.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"OpenRewrite"}],["meta",{"property":"article:tag","content":"代码重构"}],["meta",{"property":"article:published_time","content":"2022-06-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-27T21:53:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OpenRewrite 使用指南\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-27T21:53:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"OpenRewrite 使用指南 1. 概览 OpenRewrite 是一个用于 Java 和其他源代码的代码重构生态系统。有时，我们需要将依赖升级到最新版本，应用安全补丁，消除使用已弃用的 API，从一种技术迁移到另一种技术（例如，从 JUnit 断言迁移到 AssertJ）等。我们可以使用 OpenRewrite 库来解决这些挑战。在本教程中，我们..."},"headers":[{"level":2,"title":"1. 概览","slug":"_1-概览","link":"#_1-概览","children":[]},{"level":2,"title":"2. OpenRewrite 基础","slug":"_2-openrewrite-基础","link":"#_2-openrewrite-基础","children":[{"level":3,"title":"2.1. OpenRewrite 配方","slug":"_2-1-openrewrite-配方","link":"#_2-1-openrewrite-配方","children":[]},{"level":3,"title":"2.2. Maven 依赖","slug":"_2-2-maven-依赖","link":"#_2-2-maven-依赖","children":[]},{"level":3,"title":"2.3. 检出 Spring PetClinic","slug":"_2-3-检出-spring-petclinic","link":"#_2-3-检出-spring-petclinic","children":[]}]},{"level":2,"title":"3. 升级 Spring Boot","slug":"_3-升级-spring-boot","link":"#_3-升级-spring-boot","children":[{"level":3,"title":"3.1. Maven 依赖","slug":"_3-1-maven-依赖","link":"#_3-1-maven-依赖","children":[]},{"level":3,"title":"3.2. 运行 Spring Boot 升级配方","slug":"_3-2-运行-spring-boot-升级配方","link":"#_3-2-运行-spring-boot-升级配方","children":[]}]},{"level":2,"title":"4. 升级到 JUnit5","slug":"_4-升级到-junit5","link":"#_4-升级到-junit5","children":[{"level":3,"title":"4.1. Maven 依赖","slug":"_4-1-maven-依赖","link":"#_4-1-maven-依赖","children":[]},{"level":3,"title":"4.2. 运行 JUnit 升级配方","slug":"_4-2-运行-junit-升级配方","link":"#_4-2-运行-junit-升级配方","children":[]}]},{"level":2,"title":"5. 升级到 Java 11","slug":"_5-升级到-java-11","link":"#_5-升级到-java-11","children":[{"level":3,"title":"5.1. Maven 依赖","slug":"_5-1-maven-依赖","link":"#_5-1-maven-依赖","children":[]},{"level":3,"title":"5.2. 运行 Java 升级配方","slug":"_5-2-运行-java-升级配方","link":"#_5-2-运行-java-升级配方","children":[]}]},{"level":2,"title":"6. 结论","slug":"_6-结论","link":"#_6-结论","children":[]}],"git":{"createdTime":1719525199000,"updatedTime":1719525199000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":6.95,"words":2085},"filePathRelative":"posts/baeldung/2024-06-27/2024-06-27-A Guide to OpenRewrite.md","localizedDate":"2022年6月28日","excerpt":"\\n<h2>1. 概览</h2>\\n<p>OpenRewrite 是一个用于 Java 和其他源代码的代码重构生态系统。有时，我们需要将依赖升级到最新版本，应用安全补丁，消除使用已弃用的 API，从一种技术迁移到另一种技术（例如，从 JUnit 断言迁移到 AssertJ）等。我们可以使用 OpenRewrite 库来解决这些挑战。在本教程中，我们将讨论 OpenRewrite 项目的基础知识，并展示一些如何在实践中使用它的例子。在每种情况下，我们都将使用 Spring PetClinic 应用程序。</p>\\n<h2>2. OpenRewrite 基础</h2>\\n<p>以下是我们可以使用 OpenRewrite 执行的一些常见类型的升级：</p>","autoDesc":true}');export{u as comp,v as data};
