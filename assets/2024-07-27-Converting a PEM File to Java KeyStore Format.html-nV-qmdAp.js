import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as a,a as r}from"./app-DWhzy7sT.js";const s={},n=r(`<h1 id="将pem文件转换为java-keystore格式" tabindex="-1"><a class="header-anchor" href="#将pem文件转换为java-keystore格式"><span>将PEM文件转换为Java KeyStore格式</span></a></h1><p>在之前的教程中，我们展示了如何将Java KeyStore（JKS）转换为PEM格式。在本教程中，我们将转换PEM格式为标准的Java KeyStore（JKS）格式。Java KeyStore是一个容器，用于存储与其匹配的私钥的证书。</p><p>我们将使用_keytool_和_openssl_命令的组合来完成从PEM到JKS的转换。_keytool_命令随JDK（Java开发工具包）提供，用于将PEM转换为PKCS12格式。第二个命令_openssl_需要下载，其作用是将PKCS12转换为JKS。</p><p>JKS是Java特有的文件格式，直到Java 8之前都是KeyStores的默认格式。从Java 9开始，PKCS#12成为默认的KeyStore格式。尽管JKS存在，PKCS#12是一个标准化的、语言中立的存储加密数据的格式。PKCS#12格式也被称为PKCS12或PFX。</p><p>PEM（隐私增强邮件）也是一种证书容器格式。PEM文件以Base64编码。这确保了数据在不同系统之间的传输过程中保持完整。</p><p>此外，PEM文件可以包含一个或多个实例，每个实例都由纯文本头和尾分隔：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>-----BEGIN CERTIFICATE-----

// base64 编码

-----END CERTIFICATE-----
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们现在将经历将所有证书和私钥从PEM转换为JKS格式的步骤。</p><p>为了示例的目的，我们将创建一个自签名证书。</p><h3 id="_3-1-创建pem文件" tabindex="-1"><a class="header-anchor" href="#_3-1-创建pem文件"><span>3.1. 创建PEM文件</span></a></h3><p><strong>我们将首先使用_openssl_生成两个文件，<em>key.pem_和_cert.pem</em>：</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>openssl req -newkey rsa:2048 -x509 -keyout key.pem -out cert.pem -days 365
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>工具将提示我们输入PEM密码短语和其他信息。</p><p>一旦我们回答了所有提示，_openssl_工具将输出两个文件：</p><ul><li><em>key.pem</em>（私钥）</li><li><em>cert.pem</em>（公钥证书）</li></ul><p><strong>我们将使用这些文件生成我们的自签名证书。</strong></p><h3 id="_3-2-生成pkcs12证书" tabindex="-1"><a class="header-anchor" href="#_3-2-生成pkcs12证书"><span>3.2. 生成PKCS12证书</span></a></h3><p>在大多数情况下，证书以公钥密码学标准#12（PKCS12）格式存在。较少使用Java KeyStore（JKS）格式。</p><p>让我们<strong>将PEM转换为PKCS12格式：</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>openssl pkcs12 -export -in cert.pem -inkey key.pem -out certificate.p12 -name &quot;certificate&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在命令运行时，我们将被提示输入之前为_key.pem_创建的密码短语：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Enter pass phrase for key.pem:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后，我们将看到提示，要求为_certificate.p12_输入新密码：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Enter Export Password:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后，我们将拥有一个存储在PCKS12格式中的_certificate.p12_ KeyStore。</p><h3 id="_3-3-pkcs-12-转换为-jks" tabindex="-1"><a class="header-anchor" href="#_3-3-pkcs-12-转换为-jks"><span>3.3. PKCS#12 转换为 JKS</span></a></h3><p>最后一步是将PKCS12转换为JKS格式：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>keytool -importkeystore -srckeystore certificate.p12 -srcstoretype pkcs12 -destkeystore cert.jks
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在命令执行时，它将提示我们为_cert.jks_文件输入新密码：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Enter destination keystore password:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>它将提示我们输入我们之前创建的_certificate.p12_密码：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Enter source keystore password:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后，我们应该看到最终输出：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Entry for alias certificate successfully imported.
Import command completed: 1 entries successfully imported, 0 entries failed or cancelled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>结果是存储在JKS格式中的_cert.jks_ KeyStore。</p><h2 id="_4-结论" tabindex="-1"><a class="header-anchor" href="#_4-结论"><span>4. 结论</span></a></h2><p>在本文中，我们描述了使用中间PKCS12格式将PEM文件转换为JKS格式的步骤。</p><p>作为辅助工具，我们使用了_keytool_和_openssl_命令。</p>`,38),i=[n];function o(l,d){return a(),t("div",null,i)}const m=e(s,[["render",o],["__file","2024-07-27-Converting a PEM File to Java KeyStore Format.html.vue"]]),v=JSON.parse('{"path":"/posts/baeldung/2024-07-27/2024-07-27-Converting%20a%20PEM%20File%20to%20Java%20KeyStore%20Format.html","title":"将PEM文件转换为Java KeyStore格式","lang":"zh-CN","frontmatter":{"date":"2022-04-01T00:00:00.000Z","category":["Java","SSL"],"tag":["PEM","JKS","keytool","openssl"],"head":[["meta",{"name":"keywords","content":"Java, SSL, PEM, JKS, keytool, openssl"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-27/2024-07-27-Converting%20a%20PEM%20File%20to%20Java%20KeyStore%20Format.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"将PEM文件转换为Java KeyStore格式"}],["meta",{"property":"og:description","content":"将PEM文件转换为Java KeyStore格式 在之前的教程中，我们展示了如何将Java KeyStore（JKS）转换为PEM格式。在本教程中，我们将转换PEM格式为标准的Java KeyStore（JKS）格式。Java KeyStore是一个容器，用于存储与其匹配的私钥的证书。 我们将使用_keytool_和_openssl_命令的组合来完成从..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-27T09:56:42.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"PEM"}],["meta",{"property":"article:tag","content":"JKS"}],["meta",{"property":"article:tag","content":"keytool"}],["meta",{"property":"article:tag","content":"openssl"}],["meta",{"property":"article:published_time","content":"2022-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-27T09:56:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"将PEM文件转换为Java KeyStore格式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-27T09:56:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"将PEM文件转换为Java KeyStore格式 在之前的教程中，我们展示了如何将Java KeyStore（JKS）转换为PEM格式。在本教程中，我们将转换PEM格式为标准的Java KeyStore（JKS）格式。Java KeyStore是一个容器，用于存储与其匹配的私钥的证书。 我们将使用_keytool_和_openssl_命令的组合来完成从..."},"headers":[{"level":3,"title":"3.1. 创建PEM文件","slug":"_3-1-创建pem文件","link":"#_3-1-创建pem文件","children":[]},{"level":3,"title":"3.2. 生成PKCS12证书","slug":"_3-2-生成pkcs12证书","link":"#_3-2-生成pkcs12证书","children":[]},{"level":3,"title":"3.3. PKCS#12 转换为 JKS","slug":"_3-3-pkcs-12-转换为-jks","link":"#_3-3-pkcs-12-转换为-jks","children":[]},{"level":2,"title":"4. 结论","slug":"_4-结论","link":"#_4-结论","children":[]}],"git":{"createdTime":1722074202000,"updatedTime":1722074202000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.58,"words":773},"filePathRelative":"posts/baeldung/2024-07-27/2024-07-27-Converting a PEM File to Java KeyStore Format.md","localizedDate":"2022年4月1日","excerpt":"\\n<p>在之前的教程中，我们展示了如何将Java KeyStore（JKS）转换为PEM格式。在本教程中，我们将转换PEM格式为标准的Java KeyStore（JKS）格式。Java KeyStore是一个容器，用于存储与其匹配的私钥的证书。</p>\\n<p>我们将使用_keytool_和_openssl_命令的组合来完成从PEM到JKS的转换。_keytool_命令随JDK（Java开发工具包）提供，用于将PEM转换为PKCS12格式。第二个命令_openssl_需要下载，其作用是将PKCS12转换为JKS。</p>\\n<p>JKS是Java特有的文件格式，直到Java 8之前都是KeyStores的默认格式。从Java 9开始，PKCS#12成为默认的KeyStore格式。尽管JKS存在，PKCS#12是一个标准化的、语言中立的存储加密数据的格式。PKCS#12格式也被称为PKCS12或PFX。</p>","autoDesc":true}');export{m as comp,v as data};
