import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as t}from"./app-D9qUUkNr.js";const p={},e=t(`<hr><h1 id="如何在-java-中计算-时间之前" tabindex="-1"><a class="header-anchor" href="#如何在-java-中计算-时间之前"><span>如何在 Java 中计算“时间之前”</span></a></h1><p>计算相对时间和两个时间点之间的持续时间是软件系统中的常见用例。例如，我们可能希望向用户显示自发布新照片等事件以来经过了多少时间。这样的“时间之前”文本的例子包括“5分钟前”，“1年前”等。</p><p>虽然语义和选择的词语完全取决于上下文，但总体思路是相同的。</p><p>在本教程中，我们将探讨在 Java 中计算“时间之前”的几种解决方案。<strong>由于 Java 8 中引入了新的日期和时间 API，我们将分别讨论版本 7 和版本 8 的解决方案。</strong></p><h2 id="_2-java-版本-7" tabindex="-1"><a class="header-anchor" href="#_2-java-版本-7"><span>2. Java 版本 7</span></a></h2><p>Java 7 中有几个与时间相关的类。此外，由于 Java 7 Date API 的不足，还有几个第三方时间和日期库可用。</p><p>首先，让我们使用纯 Java 7 来计算“时间之前”。</p><h3 id="_2-1-纯-java-7" tabindex="-1"><a class="header-anchor" href="#_2-1-纯-java-7"><span>2.1. 纯 Java 7</span></a></h3><p>我们定义一个枚举，它包含不同的时间粒度，并将它们转换为毫秒：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">TimeGranularity</span> <span class="token punctuation">{</span>
    <span class="token constant">SECONDS</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">MINUTES</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">HOURS</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">HOURS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">DAYS</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">DAYS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">WEEKS</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">DAYS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">MONTHS</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">DAYS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">YEARS</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">DAYS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">DECADES</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">DAYS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token number">365</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">long</span> <span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们使用了 <code>java.util.concurrent.TimeUnit</code> 枚举，这是一个用于时间转换的强大工具。使用 <code>TimeUnit</code> 枚举，我们为 <code>TimeGranularity</code> 枚举的每个值重写 <code>toMillis()</code> 抽象方法，以便它返回每个值相当于的毫秒数。例如，对于“十年”，它返回 3650 天的毫秒数。</p><p>通过定义 <code>TimeGranularity</code> 枚举，我们可以定义两个方法。第一个方法接受一个 <code>java.util.Date</code> 对象和一个 <code>TimeGranularity</code> 实例，并返回一个“时间之前”的字符串：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">calculateTimeAgoByTimeGranularity</span><span class="token punctuation">(</span><span class="token class-name">Date</span> pastTime<span class="token punctuation">,</span> <span class="token class-name">TimeGranularity</span> granularity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> timeDifferenceInMillis <span class="token operator">=</span> <span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> pastTime<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> timeDifferenceInMillis <span class="token operator">/</span> granularity<span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span>
          granularity<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ago&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个方法将当前时间和给定时间的差值除以毫秒中的 <code>TimeGranularity</code> 值。因此，我们可以粗略地计算自给定时间以来经过的时间量。</p><p>我们使用了 <code>getCurrentTime()</code> 方法来获取当前时间。为了测试，我们返回一个固定的时间点，避免从本地机器读取时间。在实践中，这个方法将使用 <code>System.currentTimeMillis()</code> 或 <code>LocalDateTime.now()</code> 返回当前时间的真实值。</p><p>让我们测试一下这个方法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;5 hours ago&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">TimeAgoCalculator</span><span class="token punctuation">.</span><span class="token function">calculateTimeAgoByTimeGranularity</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TimeGranularity</span><span class="token punctuation">.</span><span class="token constant">HOURS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，我们还可以编写一个方法，自动检测最适合的时间粒度，并返回更人性化的输出：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">calculateHumanFriendlyTimeAgo</span><span class="token punctuation">(</span><span class="token class-name">Date</span> pastTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> timeDifferenceInMillis <span class="token operator">=</span> <span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> pastTime<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeDifferenceInMillis <span class="token operator">/</span> <span class="token class-name">TimeGranularity</span><span class="token punctuation">.</span><span class="token constant">DECADES</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several decades ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>timeDifferenceInMillis <span class="token operator">/</span> <span class="token class-name">TimeGranularity</span><span class="token punctuation">.</span><span class="token constant">YEARS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several years ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>timeDifferenceInMillis <span class="token operator">/</span> <span class="token class-name">TimeGranularity</span><span class="token punctuation">.</span><span class="token constant">MONTHS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several months ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>timeDifferenceInMillis <span class="token operator">/</span> <span class="token class-name">TimeGranularity</span><span class="token punctuation">.</span><span class="token constant">WEEKS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several weeks ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>timeDifferenceInMillis <span class="token operator">/</span> <span class="token class-name">TimeGranularity</span><span class="token punctuation">.</span><span class="token constant">DAYS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several days ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>timeDifferenceInMillis <span class="token operator">/</span> <span class="token class-name">TimeGranularity</span><span class="token punctuation">.</span><span class="token constant">HOURS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several hours ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>timeDifferenceInMillis <span class="token operator">/</span> <span class="token class-name">TimeGranularity</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several minutes ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;moments ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，让我们看看一个测试示例：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;several hours ago&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">TimeAgoCalculator</span><span class="token punctuation">.</span><span class="token function">calculateHumanFriendlyTimeAgo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>根据上下文，我们可以使用不同的词语，如“几个”，“一些”，“许多”，甚至是确切的值。</p><h3 id="_2-2-joda-time-库" tabindex="-1"><a class="header-anchor" href="#_2-2-joda-time-库"><span>2.2. Joda-Time 库</span></a></h3><p>在 Java 8 发布之前，Joda-Time 是 Java 中各种时间和日期相关操作的事实标准。我们可以使用 Joda-Time 库的三个类来计算“时间之前”：</p><ul><li><code>org.joda.time.Period</code>，它接受两个 <code>org.joda.time.DateTime</code> 对象，并计算这两个时间点之间的差异</li><li><code>org.joda.time.format.PeriodFormatter</code>，它定义了打印 <code>Period</code> 对象的格式</li><li><code>org.joda.time.format.PeriodFormatuilder</code>，它是一个构建器类，用于创建自定义的 <code>PeriodFormatter</code></li></ul><p>我们可以使用这三个类轻松地获取现在和过去某个时间之间的确切时间：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">calculateExactTimeAgoWithJodaTime</span><span class="token punctuation">(</span><span class="token class-name">Date</span> pastTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Period</span> period <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Period</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span>pastTime<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PeriodFormatter</span> formatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PeriodFormatterBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendYears</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSuffix</span><span class="token punctuation">(</span><span class="token string">&quot; year &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; years &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSeparator</span><span class="token punctuation">(</span><span class="token string">&quot;and &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendMonths</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSuffix</span><span class="token punctuation">(</span><span class="token string">&quot; month &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; months &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSeparator</span><span class="token punctuation">(</span><span class="token string">&quot;and &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendWeeks</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSuffix</span><span class="token punctuation">(</span><span class="token string">&quot; week &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; weeks &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSeparator</span><span class="token punctuation">(</span><span class="token string">&quot;and &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendDays</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSuffix</span><span class="token punctuation">(</span><span class="token string">&quot; day &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; days &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSeparator</span><span class="token punctuation">(</span><span class="token string">&quot;and &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSuffix</span><span class="token punctuation">(</span><span class="token string">&quot; hour &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; hours &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSeparator</span><span class="token punctuation">(</span><span class="token string">&quot;and &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSuffix</span><span class="token punctuation">(</span><span class="token string">&quot; minute &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; minutes &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSeparator</span><span class="token punctuation">(</span><span class="token string">&quot;and &quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendSuffix</span><span class="token punctuation">(</span><span class="token string">&quot; second&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; seconds&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">toFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> formatter<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>period<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们看看一个示例用法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;5 hours and 1 minute and 1 second&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">TimeAgoCalculator</span><span class="token punctuation">.</span><span class="token function">calculateExactTimeAgoWithJodaTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以生成更人性化的输出：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">calculateHumanFriendlyTimeAgoWithJodaTime</span><span class="token punctuation">(</span><span class="token class-name">Date</span> pastTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Period</span> period <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Period</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span>pastTime<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>period<span class="token punctuation">.</span><span class="token function">getYears</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several years ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>period<span class="token punctuation">.</span><span class="token function">getMonths</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several months ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>period<span class="token punctuation">.</span><span class="token function">getWeeks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several weeks ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>period<span class="token punctuation">.</span><span class="token function">getDays</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several days ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>period<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several hours ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>period<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several minutes ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;moments ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以运行一个测试，看看这个方法返回一个更人性化的“时间之前”字符串：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;several hours ago&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">TimeAgoCalculator</span><span class="token punctuation">.</span><span class="token function">calculateHumanFriendlyTimeAgoWithJodaTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>再次，我们可以使用不同的术语，如“一个”，“几个”或“一些”，具体取决于用例。</p><h3 id="_2-3-joda-time-timezone" tabindex="-1"><a class="header-anchor" href="#_2-3-joda-time-timezone"><span>2.3. Joda-Time <em>TimeZone</em></span></a></h3><p>使用 Joda-Time 库计算“时间之前”时，添加时区非常简单：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token function">calculateZonedTimeAgoWithJodaTime</span><span class="token punctuation">(</span><span class="token class-name">Date</span> pastTime<span class="token punctuation">,</span> <span class="token class-name">TimeZone</span> zone<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">DateTimeZone</span> dateTimeZone <span class="token operator">=</span><span class="token class-name">DateTimeZone</span><span class="token punctuation">.</span><span class="token function">forID</span><span class="token punctuation">(</span>zone<span class="token punctuation">.</span><span class="token function">getID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Period</span> period <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Period</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span>pastTime<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dateTimeZone<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token function">getCurrentTimeByTimeZone</span><span class="token punctuation">(</span>zone<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">PeriodFormat</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>period<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getCurrentTimeByTimeZone()</code> 方法返回指定时区的当前时间值。对于测试，这个方法返回一个固定的时间点，但在实践中，这应该使用 <code>Calendar.getInstance(zone).getTimeInMillis()</code> 或 <code>LocalDateTime.now(zone)</code> 返回当前时间的真实值。</p><h2 id="_3-java-8" tabindex="-1"><a class="header-anchor" href="#_3-java-8"><span>3. Java 8</span></a></h2><p>Java 8 引入了一个新的改进的日期和时间 API，它采纳了 Joda-Time 库的许多想法。<strong>我们可以使用原生的 <code>java.time.Duration</code> 和 <code>java.time.Period</code> 类来计算“时间之前”：</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">calculateTimeAgoWithPeriodAndDuration</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span> pastTime<span class="token punctuation">,</span> <span class="token class-name">ZoneId</span> zone<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Period</span> period <span class="token operator">=</span> <span class="token class-name">Period</span><span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span>pastTime<span class="token punctuation">.</span><span class="token function">toLocalDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getCurrentTimeByTimeZone</span><span class="token punctuation">(</span>zone<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocalDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Duration</span> duration <span class="token operator">=</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span>pastTime<span class="token punctuation">,</span> <span class="token function">getCurrentTimeByTimeZone</span><span class="token punctuation">(</span>zone<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>period<span class="token punctuation">.</span><span class="token function">getYears</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several years ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>period<span class="token punctuation">.</span><span class="token function">getMonths</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several months ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>period<span class="token punctuation">.</span><span class="token function">getDays</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several days ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>duration<span class="token punctuation">.</span><span class="token function">toHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several hours ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>duration<span class="token punctuation">.</span><span class="token function">toMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several minutes ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>duration<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;several seconds ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;moments ago&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码片段支持时区，并仅使用原生 Java 8 API。</p><h2 id="_4-prettytime-库" tabindex="-1"><a class="header-anchor" href="#_4-prettytime-库"><span>4. PrettyTime 库</span></a></h2><p><strong>PrettyTime 是一个强大的库，专门提供“时间之前”功能，并支持 i18n。</strong> 它还高度可定制，易于使用，并且可以与 Java 版本 7 和 8 一起使用。</p><p>首先，让我们将它的依赖项添加到我们的 <em>pom.xml</em>：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\`\`\`
    \`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>\`\`\`org.ocpsoft.prettytime\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\`\`\`
    \`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>\`\`\`prettytime\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\`\`\`
    \`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\`\`\`3.2.7.Final\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\`\`\`
\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\`\`\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，以人性化的格式获取“时间之前”变得非常容易：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token function">calculateTimeAgoWithPrettyTime</span><span class="token punctuation">(</span><span class="token class-name">Date</span> pastTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">PrettyTime</span> prettyTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrettyTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> prettyTime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>pastTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-time4j-库" tabindex="-1"><a class="header-anchor" href="#_5-time4j-库"><span>5. Time4J 库</span></a></h2><p>最后，Time4J 是另一个用于操作 Java 中时间和日期数据的优秀库。它有一个 <em>PrettyTime</em> 类，可以用来计算时间之前。</p><p>让我们添加它的依赖项：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\`\`\`
    \`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>\`\`\`net.time4j\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\`\`\`
    \`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>\`\`\`time4j-base\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\`\`\`
    \`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\`\`\`5.9\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\`\`\`
\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\`\`\`
\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\`\`\`
    \`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>\`\`\`net.time4j\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\`\`\`
    \`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>\`\`\`time4j-sqlxml\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\`\`\`
    \`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\`\`\`5.8\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\`\`\`
\`\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\`\`\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加此依赖项后，计算时间之前变得非常简单：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token function">calculateTimeAgoWithTime4J</span><span class="token punctuation">(</span><span class="token class-name">Date</span> pastTime<span class="token punctuation">,</span> <span class="token class-name">ZoneId</span> zone<span class="token punctuation">,</span> <span class="token class-name">Locale</span> locale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">PrettyTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>locale<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">printRelative</span><span class="token punctuation">(</span>pastTime<span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zone<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>与 PrettyTime 库一样，Time4J 也默认支持 i18n。</p><h2 id="_6-结论" tabindex="-1"><a class="header-anchor" href="#_6-结论"><span>6. 结论</span></a></h2><p>在本文中，我们讨论了在 Java 中计算“时间之前”的不同方法。</p><p>有适用于纯 Java 和第三方库的解决方案。由于 Java 8 中引入了新的日期和时间 API，纯 Java 解决方案在 8 之前的版本和之后的版本是不同的。</p><p>一如既往，示例的源代码可在 GitHub 上获取。 OK</p>`,60),o=[e];function c(l,i){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","2024-07-17-How to Calculate  Time Ago  in Java.html.vue"]]),d=JSON.parse('{"path":"/posts/baeldung/2024-07-17/2024-07-17-How%20to%20Calculate%20%20Time%20Ago%20%20in%20Java.html","title":"如何在 Java 中计算“时间之前”","lang":"zh-CN","frontmatter":{"date":"2022-04-01T00:00:00.000Z","category":["Java","日期和时间"],"tag":["时间计算","Java 8","Joda-Time","PrettyTime","Time4J"],"head":[["meta",{"name":"keywords","content":"Java 时间计算, Java 8 日期和时间 API, Joda-Time, PrettyTime, Time4J"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-17/2024-07-17-How%20to%20Calculate%20%20Time%20Ago%20%20in%20Java.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"如何在 Java 中计算“时间之前”"}],["meta",{"property":"og:description","content":"如何在 Java 中计算“时间之前” 计算相对时间和两个时间点之间的持续时间是软件系统中的常见用例。例如，我们可能希望向用户显示自发布新照片等事件以来经过了多少时间。这样的“时间之前”文本的例子包括“5分钟前”，“1年前”等。 虽然语义和选择的词语完全取决于上下文，但总体思路是相同的。 在本教程中，我们将探讨在 Java 中计算“时间之前”的几种解决方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-17T21:12:20.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"时间计算"}],["meta",{"property":"article:tag","content":"Java 8"}],["meta",{"property":"article:tag","content":"Joda-Time"}],["meta",{"property":"article:tag","content":"PrettyTime"}],["meta",{"property":"article:tag","content":"Time4J"}],["meta",{"property":"article:published_time","content":"2022-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-17T21:12:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何在 Java 中计算“时间之前”\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-17T21:12:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"如何在 Java 中计算“时间之前” 计算相对时间和两个时间点之间的持续时间是软件系统中的常见用例。例如，我们可能希望向用户显示自发布新照片等事件以来经过了多少时间。这样的“时间之前”文本的例子包括“5分钟前”，“1年前”等。 虽然语义和选择的词语完全取决于上下文，但总体思路是相同的。 在本教程中，我们将探讨在 Java 中计算“时间之前”的几种解决方..."},"headers":[{"level":2,"title":"2. Java 版本 7","slug":"_2-java-版本-7","link":"#_2-java-版本-7","children":[{"level":3,"title":"2.1. 纯 Java 7","slug":"_2-1-纯-java-7","link":"#_2-1-纯-java-7","children":[]},{"level":3,"title":"2.2. Joda-Time 库","slug":"_2-2-joda-time-库","link":"#_2-2-joda-time-库","children":[]},{"level":3,"title":"2.3. Joda-Time TimeZone","slug":"_2-3-joda-time-timezone","link":"#_2-3-joda-time-timezone","children":[]}]},{"level":2,"title":"3. Java 8","slug":"_3-java-8","link":"#_3-java-8","children":[]},{"level":2,"title":"4. PrettyTime 库","slug":"_4-prettytime-库","link":"#_4-prettytime-库","children":[]},{"level":2,"title":"5. Time4J 库","slug":"_5-time4j-库","link":"#_5-time4j-库","children":[]},{"level":2,"title":"6. 结论","slug":"_6-结论","link":"#_6-结论","children":[]}],"git":{"createdTime":1721250740000,"updatedTime":1721250740000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":6.05,"words":1816},"filePathRelative":"posts/baeldung/2024-07-17/2024-07-17-How to Calculate  Time Ago  in Java.md","localizedDate":"2022年4月1日","excerpt":"<hr>\\n<h1>如何在 Java 中计算“时间之前”</h1>\\n<p>计算相对时间和两个时间点之间的持续时间是软件系统中的常见用例。例如，我们可能希望向用户显示自发布新照片等事件以来经过了多少时间。这样的“时间之前”文本的例子包括“5分钟前”，“1年前”等。</p>\\n<p>虽然语义和选择的词语完全取决于上下文，但总体思路是相同的。</p>\\n<p>在本教程中，我们将探讨在 Java 中计算“时间之前”的几种解决方案。<strong>由于 Java 8 中引入了新的日期和时间 API，我们将分别讨论版本 7 和版本 8 的解决方案。</strong></p>\\n<h2>2. Java 版本 7</h2>","autoDesc":true}');export{r as comp,d as data};
