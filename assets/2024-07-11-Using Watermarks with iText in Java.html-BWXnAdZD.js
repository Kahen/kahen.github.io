import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as s,a as t}from"./app-BTwZI-W8.js";const p={},e=t(`<h1 id="使用java中的itext添加水印" tabindex="-1"><a class="header-anchor" href="#使用java中的itext添加水印"><span>使用Java中的iText添加水印</span></a></h1><p>iText PDF是一个用于创建和操作PDF文件的Java库。水印有助于保护机密信息。</p><p>在本教程中，我们将通过为水印创建一个新的PDF文件并为现有PDF文件添加水印来探索iText PDF库。</p><h2 id="_2-maven依赖项" tabindex="-1"><a class="header-anchor" href="#_2-maven依赖项"><span>2. Maven依赖项</span></a></h2><p>在本教程中，我们将使用Maven来管理我们的依赖项。我们将需要iText依赖项来开始使用iText PDF库。此外，我们还需要_AssertJ_依赖项进行测试。我们将在_pom.xml_中添加这两个依赖项：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\`\`
    \`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>\`\`com.itextpdf\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\`\`
    \`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>\`\`itext7-core\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\`\`
    \`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\`\`7.2.4\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\`\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>\`pom\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>\`
\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\`\`
\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\`\`
    \`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>\`\`org.assertj\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\`\`
    \`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>\`\`assertj-core\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\`\`
    \`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\`\`3.25.3\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\`\`
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>\`test\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\`
\`\`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\`\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>水印有助于在文档或图像文件上叠加或下层文本或徽标。这对于版权保护、数字产品营销、防止伪造等至关重要。</p><p>在本教程中，我们将为我们生成的PDF添加“机密”水印。水印将防止未经授权的使用我们生成的PDF：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2022/12/watermarks.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="_4-使用itext生成pdf" tabindex="-1"><a class="header-anchor" href="#_4-使用itext生成pdf"><span>4. 使用iText生成PDF</span></a></h2><p>在本文中，让我们整理一个故事，并使用iText PDF库将我们的故事转换为PDF格式。我们将编写一个简单的程序，<em>StoryTime</em>。首先，我们将声明两个_String_类型的变量。我们将在声明的变量中存储我们的故事：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StoryTime</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> aliceStory <span class="token operator">=</span> <span class="token string">&quot;I am ...&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> paulStory <span class="token operator">=</span> <span class="token string">&quot;I am Paul ..&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们将简化_String_值以简化。然后，让我们声明一个_String_类型的变量，该变量将存储我们生成的PDF的输出路径：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">OUTPUT_DIR</span> <span class="token operator">=</span> <span class="token string">&quot;output/alice.pdf&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后，让我们创建一个包含程序逻辑的方法。我们将创建一个_PdfWriter_实例以指定我们的输出路径和名称。</p><p>接下来，我们将创建一个_PdfDocument_实例来处理我们的PDF文件。为了将我们的_String_值添加到PDF文档中，我们将创建一个新的_Document_实例：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createPdf</span><span class="token punctuation">(</span><span class="token class-name">String</span> output<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token class-name">PdfWriter</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfWriter</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PdfDocument</span> pdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfDocument</span><span class="token punctuation">(</span>writer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Document</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span>pdf<span class="token punctuation">,</span> <span class="token class-name">PageSize</span><span class="token punctuation">.</span><span class="token constant">A4</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Paragraph</span><span class="token punctuation">(</span>aliceSpeech<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token class-name">PdfFontFactory</span><span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token class-name">StandardFonts</span><span class="token punctuation">.</span><span class="token constant">TIMES_ROMAN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Paragraph</span><span class="token punctuation">(</span>paulSpeech<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token class-name">PdfFontFactory</span><span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token class-name">StandardFonts</span><span class="token punctuation">.</span><span class="token constant">TIMES_ROMAN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们的方法将在_OUTPUT_DIR_生成一个新的PDF文件并存储它。</p><h2 id="_5-向生成的pdf添加水印" tabindex="-1"><a class="header-anchor" href="#_5-向生成的pdf添加水印"><span>5. 向生成的PDF添加水印</span></a></h2><p>在上一节中，我们使用iText PDF库生成了一个PDF文件。首先生成PDF有助于了解页面大小、旋转和页数。这有助于有效地添加水印。让我们为我们的简单程序添加更多的逻辑。我们的程序将向生成的PDF添加水印。</p><p>首先，让我们创建一个方法来指定我们水印的属性。我们将设置水印的_Font_、<em>fontSize_和_Opacity</em>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Paragraph</span> <span class="token function">createWatermarkParagraph</span><span class="token punctuation">(</span><span class="token class-name">String</span> watermark<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token class-name">PdfFont</span> font <span class="token operator">=</span> <span class="token class-name">PdfFontFactory</span><span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token class-name">StandardFonts</span><span class="token punctuation">.</span><span class="token constant">HELVETICA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Text</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>watermark<span class="token punctuation">)</span><span class="token punctuation">;</span>
    text<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
    text<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    text<span class="token punctuation">.</span><span class="token function">setOpacity</span><span class="token punctuation">(</span><span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Paragraph</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，让我们创建一个包含将水印添加到我们PDF文档的逻辑的方法。该方法将接受_Document_、_Paragraph_和_offset_作为参数。我们将计算放置我们水印段落的位置和旋转：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addWatermarkToGeneratedPDF</span><span class="token punctuation">(</span><span class="token class-name">Document</span> document<span class="token punctuation">,</span> <span class="token keyword">int</span> pageIndex<span class="token punctuation">,</span>
  <span class="token class-name">Paragraph</span> paragraph<span class="token punctuation">,</span> <span class="token keyword">float</span> verticalOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token class-name">PdfPage</span> pdfPage <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getPdfDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PageSize</span> pageSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">PageSize</span><span class="token punctuation">)</span> pdfPage<span class="token punctuation">.</span><span class="token function">getPageSizeWithRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">float</span> x <span class="token operator">=</span> <span class="token punctuation">(</span>pageSize<span class="token punctuation">.</span><span class="token function">getLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> pageSize<span class="token punctuation">.</span><span class="token function">getRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">float</span> y <span class="token operator">=</span> <span class="token punctuation">(</span>pageSize<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> pageSize<span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">float</span> xOffset <span class="token operator">=</span> <span class="token number">100f</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">float</span> rotationInRadians <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">180</span> <span class="token operator">*</span> <span class="token number">45f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">showTextAligned</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">,</span> x <span class="token operator">-</span> xOffset<span class="token punctuation">,</span> y <span class="token operator">+</span> verticalOffset<span class="token punctuation">,</span>
      pageIndex<span class="token punctuation">,</span> <span class="token constant">CENTER</span><span class="token punctuation">,</span> <span class="token constant">TOP</span><span class="token punctuation">,</span> rotationInRadians<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们通过调用_showTextAligned()_方法将水印段落添加到我们的文档中。接下来，让我们编写一个方法来生成一个新的PDF并添加水印。我们将调用_createWatermarkParagraph()_方法和_addWatermarkToGeneratedPDF()_方法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createNewPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token class-name">StoryTime</span> storyTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StoryTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> waterMark <span class="token operator">=</span> <span class="token string">&quot;CONFIDENTIAL&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">PdfWriter</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfWriter</span><span class="token punctuation">(</span>storyTime<span class="token punctuation">.</span><span class="token constant">OUTPUT_FILE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PdfDocument</span> pdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfDocument</span><span class="token punctuation">(</span>writer<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Document</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span>pdf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Paragraph</span><span class="token punctuation">(</span>storyTime<span class="token punctuation">.</span>alice<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token class-name">PdfFontFactory</span><span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token class-name">StandardFonts</span><span class="token punctuation">.</span><span class="token constant">TIMES_ROMAN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Paragraph</span><span class="token punctuation">(</span>storyTime<span class="token punctuation">.</span>paul<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Paragrapgh</span> paragraph <span class="token operator">=</span> storyTime<span class="token punctuation">.</span><span class="token function">createWatermarkParagraph</span><span class="token punctuation">(</span>waterMark<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> document<span class="token punctuation">.</span><span class="token function">getPdfDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNumberOfPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            storyTime<span class="token punctuation">.</span><span class="token function">addWatermarkToGeneratedPDF</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> i<span class="token punctuation">,</span> paragraph<span class="token punctuation">,</span> <span class="token number">0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，让我们编写一个单元测试来验证水印的存在：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenNewTexts_whenGeneratingNewPDFWithIText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token class-name">StoryTime</span> storyTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StoryTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> waterMark <span class="token operator">=</span> <span class="token string">&quot;CONFIDENTIAL&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">LocationTextExtractionStrategy</span> extStrategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LocationTextExtractionStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">PdfDocument</span> pdfDocument <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfDocument</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PdfReader</span><span class="token punctuation">(</span>storyTime<span class="token punctuation">.</span><span class="token constant">OUTPUT_FILE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> pdfDocument<span class="token punctuation">.</span><span class="token function">getNumberOfPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> textFromPage <span class="token operator">=</span> <span class="token function">getTextFromPage</span><span class="token punctuation">(</span>pdfDocument<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> extStrategy<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">assertThat</span><span class="token punctuation">(</span>textFromPage<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>waterMark<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们的测试验证了我们生成的PDF中水印的存在。</p><h2 id="_6-向现有pdf添加水印" tabindex="-1"><a class="header-anchor" href="#_6-向现有pdf添加水印"><span>6. 向现有PDF添加水印</span></a></h2><p><strong>iText PDF库使向现有PDF添加水印变得容易</strong>。我们将首先将我们的PDF文档加载到我们的程序中。并使用iText库来操作我们的现有PDF。</p><p>首先，我们需要创建一个添加水印段落的方法。由于我们在上一节中创建了一个，我们也可以在这里使用它。</p><p>接下来，我们将创建一个包含将帮助我们向现有PDF添加水印的逻辑的方法。该方法将接受_Document_、<em>Paragraph</em>、<em>PdfExtGState</em>、pageIndex和offSet_作为参数。在方法中，我们将创建一个新的_PdfCanvas_实例以将数据写入我们的PDF内容流。</p><p>然后，我们将计算PDF上水印的位置和旋转。我们将刷新文档并释放状态以提高性能：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addWatermarkToExistingPDF</span><span class="token punctuation">(</span><span class="token class-name">Document</span> document<span class="token punctuation">,</span> <span class="token keyword">int</span> pageIndex<span class="token punctuation">,</span>
  <span class="token class-name">Paragraph</span> paragraph<span class="token punctuation">,</span> <span class="token class-name">PdfExtGState</span> graphicState<span class="token punctuation">,</span> <span class="token keyword">float</span> verticalOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token class-name">PdfDocument</span> pdfDocument <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getPdfDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PdfPage</span> pdfPage <span class="token operator">=</span> pdfDocument<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PageSize</span> pageSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">PageSize</span><span class="token punctuation">)</span> pdfPage<span class="token punctuation">.</span><span class="token function">getPageSizeWithRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">float</span> x <span class="token operator">=</span> <span class="token punctuation">(</span>pageSize<span class="token punctuation">.</span><span class="token function">getLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> pageSize<span class="token punctuation">.</span><span class="token function">getRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">float</span> y <span class="token operator">=</span> <span class="token punctuation">(</span>pageSize<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> pageSize<span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token class-name">PdfCanvas</span> over <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfCanvas</span><span class="token punctuation">(</span>pdfDocument<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    over<span class="token punctuation">.</span><span class="token function">saveState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    over<span class="token punctuation">.</span><span class="token function">setExtGState</span><span class="token punctuation">(</span>graphicState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">float</span> xOffset <span class="token operator">=</span> <span class="token number">14</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">float</span> rotationInRadians <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">180</span> <span class="token operator">*</span> <span class="token number">45f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    document<span class="token punctuation">.</span><span class="token function">showTextAligned</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">,</span> x <span class="token operator">-</span> xOffset<span class="token punctuation">,</span> y <span class="token operator">+</span> verticalOffset<span class="token punctuation">,</span>
      pageIndex<span class="token punctuation">,</span> <span class="token constant">CENTER</span><span class="token punctuation">,</span> <span class="token constant">TOP</span><span class="token punctuation">,</span> rotationInRadians<span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    over<span class="token punctuation">.</span><span class="token function">restoreState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    over<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，让我们编写一个方法来向现有PDF添加水印。我们将调用_createWatermarkParagraph()_来添加水印段落。此外，我们将调用_addWatermarkToExistingPDF()_来处理向页面添加水印的任务：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addWatermarkToExistingPdf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token class-name">StoryTime</span> storyTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StoryTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> outputPdf <span class="token operator">=</span> <span class="token string">&quot;output/aliceNew.pdf&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> watermark <span class="token operator">=</span> <span class="token string">&quot;CONFIDENTIAL&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">PdfDocument</span> pdfDocument <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfDocument</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PdfReader</span><span class="token punctuation">(</span><span class="token string">&quot;output/alice.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token keyword">new</span> <span class="token class-name">PdfWriter</span><span class="token punctuation">(</span>outputPdf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Document</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span>pdfDocument<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Paragraph</span> paragraph <span class="token operator">=</span> storyTime<span class="token punctuation">.</span><span class="token function">createWatermarkParagraph</span><span class="token punctuation">(</span>watermark<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PdfExtGState</span> transparentGraphicState <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfExtGState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFillOpacity</span><span class="token punctuation">(</span><span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> document<span class="token punctuation">.</span><span class="token function">getPdfDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNumberOfPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            storyTime<span class="token punctuation">.</span><span class="token function">addWatermarkToExistingPage</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> i<span class="token punctuation">,</span> paragraph<span class="token punctuation">,</span>
              transparentGraphicState<span class="token punctuation">,</span> <span class="token number">0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们编写一个单元测试来验证水印的存在：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenAnExistingPDF_whenManipulatedPDFWithITextmark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">StoryTime</span> storyTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StoryTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> outputPdf <span class="token operator">=</span> <span class="token string">&quot;output/aliceupdated.pdf&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> watermark <span class="token operator">=</span> <span class="token string">&quot;CONFIDENTIAL&quot;</span><span class="token punctuation">;</span>

    <span class="token class-name">LocationTextExtractionStrategy</span> extStrategy
      <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LocationTextExtractionStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">PdfDocument</span> pdfDocument <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfDocument</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PdfReader</span><span class="token punctuation">(</span>outputPdf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> pdfDocument<span class="token punctuation">.</span><span class="token function">getNumberOfPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> textFromPage <span class="token operator">=</span> <span class="token function">getTextFromPage</span><span class="token punctuation">(</span>pdfDocument<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> extStrategy<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">assertThat</span><span class="token punctuation">(</span>textFromPage<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>watermark<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们的测试验证了我们现有PDF中水印的存在。</p><h2 id="_7-结论" tabindex="-1"><a class="header-anchor" href="#_7-结论"><span>7. 结论</span></a></h2><p>在本教程中，我们通过生成一个新的PDF来探索iText PDF库。我们向生成的PDF添加了水印，然后又向现有PDF添加了水印。iText库在操作PDF方面看起来非常强大。完整的代码可以在GitHub上找到。</p><p><img src="https://www.baeldung.com/wp-content/themes/baeldung/icon/logo.svg" alt="img" loading="lazy"><img src="https://secure.gravatar.com/avatar/dc417739e22ae675b0e1f7012bbddaa5?s=50&amp;r=g" alt="img" loading="lazy"><img src="https://secure.gravatar.com/avatar/db9b6e888453bec33b0a1b1522bae628?s=50&amp;r=g" alt="img" loading="lazy"><img src="https://www.baeldung.com/wp-content/uploads/2022/04/announcement-icon.png" alt="img" loading="lazy"><img src="https://www.baeldung.com/wp-content/uploads/2022/12/watermarks.png" alt="img" loading="lazy"></p><p>OK</p>`,44),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","2024-07-11-Using Watermarks with iText in Java.html.vue"]]),d=JSON.parse('{"path":"/posts/baeldung/2024-07-11/2024-07-11-Using%20Watermarks%20with%20iText%20in%20Java.html","title":"使用Java中的iText添加水印","lang":"zh-CN","frontmatter":{"date":"2022-12-01T00:00:00.000Z","category":["Java","iText"],"tag":["PDF","Watermark"],"head":[["meta",{"name":"keywords","content":"iText, PDF, Watermark, Java"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-11/2024-07-11-Using%20Watermarks%20with%20iText%20in%20Java.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"使用Java中的iText添加水印"}],["meta",{"property":"og:description","content":"使用Java中的iText添加水印 iText PDF是一个用于创建和操作PDF文件的Java库。水印有助于保护机密信息。 在本教程中，我们将通过为水印创建一个新的PDF文件并为现有PDF文件添加水印来探索iText PDF库。 2. Maven依赖项 在本教程中，我们将使用Maven来管理我们的依赖项。我们将需要iText依赖项来开始使用iText ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.baeldung.com/wp-content/uploads/2022/12/watermarks.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-11T03:44:42.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"PDF"}],["meta",{"property":"article:tag","content":"Watermark"}],["meta",{"property":"article:published_time","content":"2022-12-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-11T03:44:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用Java中的iText添加水印\\",\\"image\\":[\\"https://www.baeldung.com/wp-content/uploads/2022/12/watermarks.png\\",\\"https://www.baeldung.com/wp-content/themes/baeldung/icon/logo.svg\\",\\"https://secure.gravatar.com/avatar/dc417739e22ae675b0e1f7012bbddaa5?s=50&r=g\\",\\"https://secure.gravatar.com/avatar/db9b6e888453bec33b0a1b1522bae628?s=50&r=g\\",\\"https://www.baeldung.com/wp-content/uploads/2022/04/announcement-icon.png\\",\\"https://www.baeldung.com/wp-content/uploads/2022/12/watermarks.png\\"],\\"datePublished\\":\\"2022-12-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-11T03:44:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"使用Java中的iText添加水印 iText PDF是一个用于创建和操作PDF文件的Java库。水印有助于保护机密信息。 在本教程中，我们将通过为水印创建一个新的PDF文件并为现有PDF文件添加水印来探索iText PDF库。 2. Maven依赖项 在本教程中，我们将使用Maven来管理我们的依赖项。我们将需要iText依赖项来开始使用iText ..."},"headers":[{"level":2,"title":"2. Maven依赖项","slug":"_2-maven依赖项","link":"#_2-maven依赖项","children":[]},{"level":2,"title":"4. 使用iText生成PDF","slug":"_4-使用itext生成pdf","link":"#_4-使用itext生成pdf","children":[]},{"level":2,"title":"5. 向生成的PDF添加水印","slug":"_5-向生成的pdf添加水印","link":"#_5-向生成的pdf添加水印","children":[]},{"level":2,"title":"6. 向现有PDF添加水印","slug":"_6-向现有pdf添加水印","link":"#_6-向现有pdf添加水印","children":[]},{"level":2,"title":"7. 结论","slug":"_7-结论","link":"#_7-结论","children":[]}],"git":{"createdTime":1720669482000,"updatedTime":1720669482000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":5.49,"words":1646},"filePathRelative":"posts/baeldung/2024-07-11/2024-07-11-Using Watermarks with iText in Java.md","localizedDate":"2022年12月1日","excerpt":"\\n<p>iText PDF是一个用于创建和操作PDF文件的Java库。水印有助于保护机密信息。</p>\\n<p>在本教程中，我们将通过为水印创建一个新的PDF文件并为现有PDF文件添加水印来探索iText PDF库。</p>\\n<h2>2. Maven依赖项</h2>\\n<p>在本教程中，我们将使用Maven来管理我们的依赖项。我们将需要iText依赖项来开始使用iText PDF库。此外，我们还需要_AssertJ_依赖项进行测试。我们将在_pom.xml_中添加这两个依赖项：</p>\\n<div class=\\"language-xml\\" data-ext=\\"xml\\" data-title=\\"xml\\"><pre class=\\"language-xml\\"><code>``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span>``\\n    ``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span>``com.itextpdf``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span>``\\n    ``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span>``itext7-core``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span>``\\n    ``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>version</span><span class=\\"token punctuation\\">&gt;</span></span>``7.2.4``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>version</span><span class=\\"token punctuation\\">&gt;</span></span>``\\n    `<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>type</span><span class=\\"token punctuation\\">&gt;</span></span>`pom`<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>type</span><span class=\\"token punctuation\\">&gt;</span></span>`\\n``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span>``\\n``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span>``\\n    ``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span>``org.assertj``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span>``\\n    ``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span>``assertj-core``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span>``\\n    ``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>version</span><span class=\\"token punctuation\\">&gt;</span></span>``3.25.3``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>version</span><span class=\\"token punctuation\\">&gt;</span></span>``\\n    `<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>scope</span><span class=\\"token punctuation\\">&gt;</span></span>`test`<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>scope</span><span class=\\"token punctuation\\">&gt;</span></span>`\\n``<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span>``\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
