import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as s,a as t}from"./app-D9qUUkNr.js";const e={},p=t(`<h1 id="java中将字符串转换为biginteger" tabindex="-1"><a class="header-anchor" href="#java中将字符串转换为biginteger"><span>Java中将字符串转换为BigInteger</span></a></h1><p>在本教程中，我们将演示如何将字符串转换为BigInteger。BigInteger通常用于处理非常大的数值，这些数值通常是由任意的算术计算得出的结果。</p><h2 id="_2-将十进制-基数10-整数字符串转换" tabindex="-1"><a class="header-anchor" href="#_2-将十进制-基数10-整数字符串转换"><span>2. 将十进制（基数10）整数字符串转换</span></a></h2><p>要将十进制字符串转换为BigInteger，我们将使用<strong>BigInteger(String value)构造函数</strong>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> inputString <span class="token operator">=</span> <span class="token string">&quot;878&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">BigInteger</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>inputString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;878&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-转换非十进制整数字符串" tabindex="-1"><a class="header-anchor" href="#_3-转换非十进制整数字符串"><span>3. 转换非十进制整数字符串</span></a></h2><p>使用默认的<strong>BigInteger(String value)构造函数</strong>转换非十进制字符串，如十六进制数字，<strong>我们可能会得到一个</strong> NumberFormatException：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> inputString <span class="token operator">=</span> <span class="token string">&quot;290f98&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>inputString<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个异常可以通过两种方式处理。</p><p>一种方式是使用<strong>BigInteger(String value, int radix)构造函数</strong>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> inputString <span class="token operator">=</span> <span class="token string">&quot;290f98&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">BigInteger</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>inputString<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;2690968&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这种情况下，我们指定基数或基数为16，用于将十六进制转换为十进制。</p><p>另一种方式是首先<strong>将非十进制字符串转换为字节数组，然后使用BigInteger(byte [] bytes)构造函数</strong>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> inputStringBytes <span class="token operator">=</span> inputString<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">BigInteger</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>inputStringBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;290f98&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样可以得到正确的结果，因为<strong>BigInteger(byte [] bytes)构造函数</strong>将包含二进制补码表示的字节数组转换为BigInteger。</p><h2 id="_4-结论" tabindex="-1"><a class="header-anchor" href="#_4-结论"><span>4. 结论</span></a></h2><p>在本文中，我们查看了在Java中将字符串转换为BigInteger的几种方式。</p><p>如常，本教程中使用的所有代码示例都可以在GitHub上找到。</p>`,18),o=[p];function i(c,r){return s(),a("div",null,o)}const g=n(e,[["render",i],["__file","2024-07-28-Converting String to BigInteger in Java.html.vue"]]),d=JSON.parse('{"path":"/posts/baeldung/2024-07-28/2024-07-28-Converting%20String%20to%20BigInteger%20in%20Java.html","title":"Java中将字符串转换为BigInteger","lang":"zh-CN","frontmatter":{"date":"2024-07-28T00:00:00.000Z","category":["Java","BigInteger"],"tag":["Java","BigInteger","String"],"head":[["meta",{"name":"keywords","content":"Java, BigInteger, String, 转换"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-28/2024-07-28-Converting%20String%20to%20BigInteger%20in%20Java.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"Java中将字符串转换为BigInteger"}],["meta",{"property":"og:description","content":"Java中将字符串转换为BigInteger 在本教程中，我们将演示如何将字符串转换为BigInteger。BigInteger通常用于处理非常大的数值，这些数值通常是由任意的算术计算得出的结果。 2. 将十进制（基数10）整数字符串转换 要将十进制字符串转换为BigInteger，我们将使用BigInteger(String value)构造函数： ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-28T00:59:18.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"BigInteger"}],["meta",{"property":"article:tag","content":"String"}],["meta",{"property":"article:published_time","content":"2024-07-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-28T00:59:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java中将字符串转换为BigInteger\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-28T00:59:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"Java中将字符串转换为BigInteger 在本教程中，我们将演示如何将字符串转换为BigInteger。BigInteger通常用于处理非常大的数值，这些数值通常是由任意的算术计算得出的结果。 2. 将十进制（基数10）整数字符串转换 要将十进制字符串转换为BigInteger，我们将使用BigInteger(String value)构造函数： ..."},"headers":[{"level":2,"title":"2. 将十进制（基数10）整数字符串转换","slug":"_2-将十进制-基数10-整数字符串转换","link":"#_2-将十进制-基数10-整数字符串转换","children":[]},{"level":2,"title":"3. 转换非十进制整数字符串","slug":"_3-转换非十进制整数字符串","link":"#_3-转换非十进制整数字符串","children":[]},{"level":2,"title":"4. 结论","slug":"_4-结论","link":"#_4-结论","children":[]}],"git":{"createdTime":1722128358000,"updatedTime":1722128358000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.34,"words":403},"filePathRelative":"posts/baeldung/2024-07-28/2024-07-28-Converting String to BigInteger in Java.md","localizedDate":"2024年7月28日","excerpt":"\\n<p>在本教程中，我们将演示如何将字符串转换为BigInteger。BigInteger通常用于处理非常大的数值，这些数值通常是由任意的算术计算得出的结果。</p>\\n<h2>2. 将十进制（基数10）整数字符串转换</h2>\\n<p>要将十进制字符串转换为BigInteger，我们将使用<strong>BigInteger(String value)构造函数</strong>：</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">String</span> inputString <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"878\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">BigInteger</span> result <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">BigInteger</span><span class=\\"token punctuation\\">(</span>inputString<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">assertEquals</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"878\\"</span><span class=\\"token punctuation\\">,</span> result<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{g as comp,d as data};
