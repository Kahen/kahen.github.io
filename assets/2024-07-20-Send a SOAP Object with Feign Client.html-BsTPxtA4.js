import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as t}from"./app-DFhKiB50.js";const p={},e=t('<hr><h1 id="使用feign客户端发送soap对象" tabindex="-1"><a class="header-anchor" href="#使用feign客户端发送soap对象"><span>使用Feign客户端发送SOAP对象</span></a></h1><p>Feign抽象了HTTP调用，并使其声明式化。通过这样做，Feign隐藏了底层细节，如HTTP连接管理、硬编码的URL和其他样板代码。使用Feign客户端的一个显著优势是使HTTP调用变得简单，并消除了大量的代码。通常，我们使用Feign来处理REST API的_application/json_媒体类型。然而，Feign客户端也可以很好地处理其他媒体类型，如_text/xml_、多部分请求等。</p><p>在本教程中，我们将学习如何使用Feign调用基于SOAP的Web服务（<em>text/xml</em>）。</p><h2 id="_2-soap-web-service" tabindex="-1"><a class="header-anchor" href="#_2-soap-web-service"><span>2. SOAP Web Service</span></a></h2><p>假设有一个SOAP Web服务，包含两个操作——<em>getUser_和_createUser</em>。</p><p>让我们使用cURL调用_createUser_操作：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>curl -d @request.xml -i -o -X POST --header &#39;Content-Type: text/xml&#39;\n  http://localhost:18080/ws/users\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里，_request.xml_包含SOAP负载：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">soapenv:</span>Envelope</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>soapenv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.xmlsoap.org/soap/envelope/<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name"><span class="token namespace">xmlns:</span>feig</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.baeldung.com/springbootsoap/feignclient<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">soapenv:</span>Header</span><span class="token punctuation">/&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">soapenv:</span>Body</span><span class="token punctuation">&gt;</span></span>``\n         ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">feig:</span>createUserRequest</span><span class="token punctuation">&gt;</span></span>``\n             ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">feig:</span>user</span><span class="token punctuation">&gt;</span></span>``\n                 ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">feig:</span>id</span><span class="token punctuation">&gt;</span></span>``1``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">feig:</span>id</span><span class="token punctuation">&gt;</span></span>``\n                 ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">feig:</span>name</span><span class="token punctuation">&gt;</span></span>``john doe``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">feig:</span>name</span><span class="token punctuation">&gt;</span></span>``\n                 ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">feig:</span>email</span><span class="token punctuation">&gt;</span></span>``john.doe@gmail.com``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">feig:</span>email</span><span class="token punctuation">&gt;</span></span>``\n             ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">feig:</span>user</span><span class="token punctuation">&gt;</span></span>``\n         ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">feig:</span>createUserRequest</span><span class="token punctuation">&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">soapenv:</span>Body</span><span class="token punctuation">&gt;</span></span>``\n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">soapenv:</span>Envelope</span><span class="token punctuation">&gt;</span></span>``\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果所有配置都正确，我们将获得一个成功的响应：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">SOAP-ENV:</span>Envelope</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>SOAP-ENV</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.xmlsoap.org/soap/envelope/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">SOAP-ENV:</span>Header</span><span class="token punctuation">/&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">SOAP-ENV:</span>Body</span><span class="token punctuation">&gt;</span></span>``\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">ns2:</span>createUserResponse</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>ns2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.baeldung.com/springbootsoap/feignclient<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n            ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">ns2:</span>message</span><span class="token punctuation">&gt;</span></span>``Success! Created the user with id - 1``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">ns2:</span>message</span><span class="token punctuation">&gt;</span></span>``\n        ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">ns2:</span>createUserResponse</span><span class="token punctuation">&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">SOAP-ENV:</span>Body</span><span class="token punctuation">&gt;</span></span>``\n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">SOAP-ENV:</span>Envelope</span><span class="token punctuation">&gt;</span></span>``\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类似地，其他操作_getUser_也可以使用cURL调用。</p><h2 id="_3-依赖项" tabindex="-1"><a class="header-anchor" href="#_3-依赖项"><span>3. 依赖项</span></a></h2><p>接下来，让我们看看如何使用Feign调用这个SOAP Web服务。让我们开发两个不同的客户端来调用SOAP服务。Feign支持多种现有的HTTP客户端，如Apache HttpComponents、OkHttp、_java.net.URL_等。让我们使用Apache _HttpComponents_作为我们的底层HTTP客户端。首先，让我们为OpenFeign Apache HttpComponents添加依赖项：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`````io.github.openfeign`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````feign-hc5`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`````11.8````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>````\n```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在接下来的部分中，让我们学习几种使用Feign调用SOAP Web服务的方法。</p><h2 id="_4-作为纯文本的soap对象" tabindex="-1"><a class="header-anchor" href="#_4-作为纯文本的soap对象"><span>4. 作为纯文本的SOAP对象</span></a></h2><p>我们可以将SOAP请求作为纯文本发送，将_content-type_和_accept_头设置为_text/xml_。现在，让我们开发一个演示这种方法的客户端：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SoapClient</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@RequestLine</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@Headers</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;SOAPAction: createUser&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Type: text/xml;charset=UTF-8&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;Accept: text/xml&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token class-name">String</span> <span class="token function">createUserWithPlainText</span><span class="token punctuation">(</span><span class="token class-name">String</span> soapBody<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里，<em>createUserWithPlainText_接受一个_String</em> SOAP负载。注意，我们显式定义了_accept_和_content-type_头。这是因为在发送SOAP正文作为文本时，必须将_Content-Type_和_Accept_头指定为_text/xml_。</p><p>这种方法的一个缺点是我们必须事先知道SOAP负载。幸运的是，如果WSDL可用，可以使用开源工具如SoapUI生成负载。一旦负载准备好，让我们使用Feign调用SOAP Web服务：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">void</span> <span class="token function">givenSOAPPayload_whenRequest_thenReturnSOAPResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n    <span class="token class-name">String</span> successMessage<span class="token operator">=</span><span class="token string">&quot;Success! Created the user with id&quot;</span><span class="token punctuation">;</span>\n    <span class="token class-name">SoapClient</span> client <span class="token operator">=</span> <span class="token class-name">Feign</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n       <span class="token punctuation">.</span><span class="token function">client</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ApacheHttp5Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n       <span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span><span class="token class-name">SoapClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;http://localhost:18080/ws/users/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assertDoesNotThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> client<span class="token punctuation">.</span><span class="token function">createUserWithPlainText</span><span class="token punctuation">(</span><span class="token function">soapPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token class-name">String</span> soapResponse<span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">createUserWithPlainText</span><span class="token punctuation">(</span><span class="token function">soapPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assertNotNull</span><span class="token punctuation">(</span><span class="token function">soapPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assertTrue</span><span class="token punctuation">(</span>soapResponse<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>successMessage<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Feign支持记录SOAP消息和其他HTTP相关信息。这些信息对于调试至关重要。因此，让我们启用Feign日志记录。记录这些消息需要额外的_feign-slf4j_依赖项：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`````io.github.openfeign`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````feign-slf4j`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`````11.8````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>````\n```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们增强我们的测试用例以包括日志信息：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">SoapClient</span> client <span class="token operator">=</span> <span class="token class-name">Feign</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">client</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ApacheHttp5Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">logger</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Slf4jLogger</span><span class="token punctuation">(</span><span class="token class-name">SoapClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">logLevel</span><span class="token punctuation">(</span><span class="token class-name">Logger<span class="token punctuation">.</span>Level</span><span class="token punctuation">.</span><span class="token constant">FULL</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span><span class="token class-name">SoapClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;http://localhost:18080/ws/users/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，当我们运行测试时，我们有类似的日志：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>18:01:58.295 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot;SOAPAction: createUser[\\r][\\n]&quot;\n18:01:58.295 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot;`&lt;soapenv:Envelope xmlns:soapenv=\\&quot;http://schemas.xmlsoap.org/soap/envelope/\\&quot; xmlns:feig=\\&quot;http://www.baeldung.com/springbootsoap/feignclient\\&quot;&gt;`&quot;[\\n]&quot;\n18:01:58.295 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot; ``&lt;soapenv:Header/&gt;``[\\n]&quot;\n18:01:58.295 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot; ``&lt;soapenv:Body&gt;``[\\n]&quot;\n18:01:58.295 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot; ``&lt;feig:createUserRequest&gt;``[\\n]&quot;\n18:01:58.295 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot; ``&lt;feig:user&gt;``[\\n]&quot;\n18:01:58.295 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot; ``&lt;feig:id&gt;``1``&lt;/feig:id&gt;``[\\n]&quot;\n18:01:58.295 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot; ``&lt;feig:name&gt;``john doe``&lt;/feig:name&gt;``[\\n]&quot;\n18:01:58.296 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot; ``&lt;feig:email&gt;``john.doe@gmail.com``&lt;/feig:email&gt;``[\\n]&quot;\n18:01:58.296 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot; ``&lt;/feig:user&gt;``[\\n]&quot;\n18:01:58.296 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot; ``&lt;/feig:createUserRequest&gt;``[\\n]&quot;\n18:01:58.296 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot; ``&lt;/soapenv:Body&gt;``[\\n]&quot;\n18:01:58.296 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 &gt;&gt; &quot;``&lt;/soapenv:Envelope&gt;``&quot;\n18:01:58.300 [main] DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 `&lt;&lt; &quot;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=\\&quot;http://schemas.xmlsoap.org/soap/envelope/\\&quot;&gt;```&lt;SOAP-ENV:Header/&gt;````&lt;SOAP-ENV:Body&gt;```&lt;ns2:createUserResponse xmlns:ns2=\\&quot;http://www.baeldung.com/springbootsoap/feignclient\\&quot;&gt;```&lt;ns2:message&gt;``Success! Created the user with id - 1``&lt;/ns2:message&gt;````&lt;/ns2:createUserResponse&gt;````&lt;/SOAP-ENV:Body&gt;````&lt;/SOAP-ENV:Envelope&gt;``&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-feign-soap-codec" tabindex="-1"><a class="header-anchor" href="#_5-feign-soap-codec"><span>5. Feign SOAP Codec</span></a></h2><p>调用SOAP Web服务的一种更干净和更好的方法是使用Feign的SOAP Codec。该编解码器帮助编组（Java到SOAP）/解组（SOAP到Java）SOAP消息。然而，编解码器需要额外的_feign-soap_依赖项。因此，让我们声明这个依赖项：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`````io.github.openfeign`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````feign-soap`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`````11.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version```xml</span>\n<span class="token attr-name">```&lt;dependency</span><span class="token punctuation">&gt;</span></span>```\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`````io.github.openfeign`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````feign-soap`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`````11.8````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>````\n```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Feign SOAP codec使用_JAXB_和_SoapMessage_以及_JAXBContextFactory_提供所需的编组器和解组器来编码和解码SOAP对象。</p><p>接下来，根据我们创建的XSD，让我们生成领域类。JAXB需要这些领域类来编组和解组SOAP消息。首先，让我们向我们的_pom.xml_添加一个插件：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>`\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`````org.jvnet.jaxb2.maven2`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````maven-jaxb2-plugin`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`````0.14.0````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>````\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>`\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>`\n            `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>`feign-soap-stub-generation`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>`\n            `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">&gt;</span></span>`compile`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">&gt;</span></span>`\n            `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>`\n                `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>`generate`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>`\n            `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>`\n            `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>`\n                `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>schemaDirectory</span><span class="token punctuation">&gt;</span></span>`target/generated-sources/jaxb`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>schemaDirectory</span><span class="token punctuation">&gt;</span></span>`\n                `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>schemaIncludes</span><span class="token punctuation">&gt;</span></span>`\n                    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>`*.xsd`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>`\n                `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>schemaIncludes</span><span class="token punctuation">&gt;</span></span>`\n                `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatePackage</span><span class="token punctuation">&gt;</span></span>`com.baeldung.feign.soap.client`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>generatePackage</span><span class="token punctuation">&gt;</span></span>`\n                `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generateDirectory</span><span class="token punctuation">&gt;</span></span>`target/generated-sources/jaxb`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>generateDirectory</span><span class="token punctuation">&gt;</span></span>`\n            `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>`\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，我们配置了插件在_compile_阶段运行。现在，让我们生成存根：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mvn clean compile\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>构建成功后，_target_文件夹包含源代码：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2022/03/soap-clients-1.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>接下来，让我们使用这些存根和Feign调用SOAP Web服务。但首先，让我们向我们的_SoapClient_添加一个新方法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestLine</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Headers</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;Content-Type: text/xml;charset=UTF-8&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token class-name">CreateUserResponse</span> <span class="token function">createUserWithSoap</span><span class="token punctuation">(</span><span class="token class-name">CreateUserRequest</span> soapBody<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，让我们测试SOAP Web服务：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">void</span> <span class="token function">whenSoapRequest_thenReturnSoapResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">JAXBContextFactory</span> jaxbFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JAXBContextFactory<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">withMarshallerJAXBEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">SoapClient</span> client <span class="token operator">=</span> <span class="token class-name">Feign</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">encoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SOAPEncoder</span><span class="token punctuation">(</span>jaxbFactory<span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">decoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SOAPDecoder</span><span class="token punctuation">(</span>jaxbFactory<span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span><span class="token class-name">SoapClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;http://localhost:18080/ws/users/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">CreateUserRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateUserRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    user<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">&quot;john.doe@gmail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    request<span class="token punctuation">.</span><span class="token function">setUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">CreateUserResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">createUserWithSoap</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assertNotNull</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assertNotNull</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assertTrue</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;Success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们增强我们的测试用例以记录HTTP和SOAP消息：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">SoapClient</span> client <span class="token operator">=</span> <span class="token class-name">Feign</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">encoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SOAPEncoder</span><span class="token punctuation">(</span>jaxbFactory<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">errorDecoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SOAPErrorDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">logger</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Slf4jLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">logLevel</span><span class="token punctuation">(</span><span class="token class-name">Logger<span class="token punctuation">.</span>Level</span><span class="token punctuation">.</span><span class="token constant">FULL</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">decoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SOAPDecoder</span><span class="token punctuation">(</span>jaxbFactory<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span><span class="token class-name">SoapClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;http://localhost:18080/ws/users/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码生成了我们之前看到的类似日志。</p><p>最后，让我们处理SOAP Faults。Feign提供了一个_SOAPErrorDecoder_，它将SOAP Fault作为_SOAPFaultException_返回。所以，让我们将这个_SOAPErrorDecoder_设置为Feign错误解码器并处理SOAP Faults：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">SoapClient</span> client <span class="token operator">=</span> <span class="token class-name">Feign</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">encoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SOAPEncoder</span><span class="token punctuation">(</span>jaxbFactory<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">errorDecoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SOAPErrorDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">decoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SOAPDecoder</span><span class="token punctuation">(</span>jaxbFactory<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span><span class="token class-name">SoapClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;http://localhost:18080/ws/users/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">try</span> <span class="token punctuation">{</span>\n    client<span class="token punctuation">.</span><span class="token function">createUserWithSoap</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SOAPFaultException</span> soapFaultException<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">assertNotNull</span><span class="token punctuation">(</span>soapFaultException<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assertTrue</span><span class="token punctuation">(</span>soapFaultException<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;This is a reserved user id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，如果SOAP Web服务抛出SOAP Fault，它将由_SOAPFaultException_处理。</p><h2 id="_6-结论" tabindex="-1"><a class="header-anchor" href="#_6-结论"><span>6. 结论</span></a></h2><p>在本文中，我们学习了如何使用Feign调用SOAP Web服务。Feign是一个声明式的HTTP客户端，可以轻松调用SOAP/REST Web服务。使用Feign的优势是它减少了代码行数。较少的代码行数导致较少的错误和较少的单元测试。</p><p>如往常一样，完整的源代码可在GitHub上获得。</p><p><a href="kimi://action?name=cheer-on-kimi">给Kimi加油</a></p><p>OK</p>',54),o=[e];function c(l,i){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","2024-07-20-Send a SOAP Object with Feign Client.html.vue"]]),d=JSON.parse('{"path":"/posts/baeldung/2024-07-20/2024-07-20-Send%20a%20SOAP%20Object%20with%20Feign%20Client.html","title":"使用Feign客户端发送SOAP对象","lang":"zh-CN","frontmatter":{"date":"2022-03-01T00:00:00.000Z","category":["Java","Web Services"],"tag":["Feign","SOAP"],"head":[["meta",{"name":"keywords","content":"Java, SOAP, Feign, Web Services"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-20/2024-07-20-Send%20a%20SOAP%20Object%20with%20Feign%20Client.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"使用Feign客户端发送SOAP对象"}],["meta",{"property":"og:description","content":"使用Feign客户端发送SOAP对象 Feign抽象了HTTP调用，并使其声明式化。通过这样做，Feign隐藏了底层细节，如HTTP连接管理、硬编码的URL和其他样板代码。使用Feign客户端的一个显著优势是使HTTP调用变得简单，并消除了大量的代码。通常，我们使用Feign来处理REST API的_application/json_媒体类型。然而，F..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.baeldung.com/wp-content/uploads/2022/03/soap-clients-1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-20T08:15:35.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"Feign"}],["meta",{"property":"article:tag","content":"SOAP"}],["meta",{"property":"article:published_time","content":"2022-03-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-20T08:15:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用Feign客户端发送SOAP对象\\",\\"image\\":[\\"https://www.baeldung.com/wp-content/uploads/2022/03/soap-clients-1.png\\"],\\"datePublished\\":\\"2022-03-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-20T08:15:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"使用Feign客户端发送SOAP对象 Feign抽象了HTTP调用，并使其声明式化。通过这样做，Feign隐藏了底层细节，如HTTP连接管理、硬编码的URL和其他样板代码。使用Feign客户端的一个显著优势是使HTTP调用变得简单，并消除了大量的代码。通常，我们使用Feign来处理REST API的_application/json_媒体类型。然而，F..."},"headers":[{"level":2,"title":"2. SOAP Web Service","slug":"_2-soap-web-service","link":"#_2-soap-web-service","children":[]},{"level":2,"title":"3. 依赖项","slug":"_3-依赖项","link":"#_3-依赖项","children":[]},{"level":2,"title":"4. 作为纯文本的SOAP对象","slug":"_4-作为纯文本的soap对象","link":"#_4-作为纯文本的soap对象","children":[]},{"level":2,"title":"5. Feign SOAP Codec","slug":"_5-feign-soap-codec","link":"#_5-feign-soap-codec","children":[]},{"level":2,"title":"6. 结论","slug":"_6-结论","link":"#_6-结论","children":[]}],"git":{"createdTime":1721463335000,"updatedTime":1721463335000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":5.82,"words":1745},"filePathRelative":"posts/baeldung/2024-07-20/2024-07-20-Send a SOAP Object with Feign Client.md","localizedDate":"2022年3月1日","excerpt":"<hr>\\n<h1>使用Feign客户端发送SOAP对象</h1>\\n<p>Feign抽象了HTTP调用，并使其声明式化。通过这样做，Feign隐藏了底层细节，如HTTP连接管理、硬编码的URL和其他样板代码。使用Feign客户端的一个显著优势是使HTTP调用变得简单，并消除了大量的代码。通常，我们使用Feign来处理REST API的_application/json_媒体类型。然而，Feign客户端也可以很好地处理其他媒体类型，如_text/xml_、多部分请求等。</p>\\n<p>在本教程中，我们将学习如何使用Feign调用基于SOAP的Web服务（<em>text/xml</em>）。</p>","autoDesc":true}');export{r as comp,d as data};
