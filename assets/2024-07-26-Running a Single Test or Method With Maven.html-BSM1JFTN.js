import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as e}from"./app-CbPcg273.js";const t={},p=e(`<hr><h1 id="使用maven单独运行单个测试或方法" tabindex="-1"><a class="header-anchor" href="#使用maven单独运行单个测试或方法"><span>使用Maven单独运行单个测试或方法</span></a></h1><h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述"><span>1. 概述</span></a></h2><p>通常，我们使用Maven surefire插件在Maven构建过程中执行测试。</p><p>本教程将探讨如何使用此插件来运行单个测试类或测试方法。</p><h2 id="_2-问题介绍" tabindex="-1"><a class="header-anchor" href="#_2-问题介绍"><span>2. 问题介绍</span></a></h2><p>Maven surefire插件使用起来非常简单。它只有一个目标：<em>test</em>。</p><p>因此，在默认配置下，我们可以通过命令 <em>mvn test</em> 执行项目中的所有测试。</p><p>有时，我们可能只想执行单个测试类甚至单个测试方法。</p><p>本教程将以JUnit 5作为测试提供者的例子，来说明如何实现这一点。</p><h2 id="_3-示例项目" tabindex="-1"><a class="header-anchor" href="#_3-示例项目"><span>3. 示例项目</span></a></h2><p>为了更直接地显示测试结果，让我们创建几个简单的测试类：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">TheFirstUnitTest</span> <span class="token punctuation">{</span>
    <span class="token comment">// 声明日志记录器 ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">whenTestCase_thenPass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        日志记录器<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;运行一个虚拟测试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">TheSecondUnitTest</span> <span class="token punctuation">{</span>
    <span class="token comment">// 声明日志记录器 ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">whenTestCase1_thenPrintTest1_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        日志记录器<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;运行When Case1: test1_1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">whenTestCase1_thenPrintTest1_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        日志记录器<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;运行When Case1: test1_2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">whenTestCase1_thenPrintTest1_3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        日志记录器<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;运行When Case1: test1_3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">whenTestCase2_thenPrintTest2_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        日志记录器<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;运行When Case2: test2_1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <em>TheFirstUnitTest</em> 类中，我们只有一个测试方法。然而，《TheSecondUnitTest》包含四个测试方法。我们所有的方法名称都遵循“ <em>when…then…</em> ”模式。</p><p>为了简单起见，我们让每个测试方法输出一行指示该方法正在被调用的文本。</p><p>现在，如果我们运行 <em>mvn test</em>，将执行所有测试：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ mvn <span class="token builtin class-name">test</span>
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 扫描项目<span class="token punctuation">..</span>.
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> -------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  T E S T S
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> -------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 运行 com.baeldung.runasingletest.TheSecondUnitTest
<span class="token number">16</span>:58:16.444 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO <span class="token punctuation">..</span>.TheSecondUnitTest - 运行When Case2: test2_1
<span class="token number">16</span>:58:16.448 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO <span class="token punctuation">..</span>.TheSecondUnitTest - 运行When Case1: test1_1
<span class="token number">16</span>:58:16.449 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO <span class="token punctuation">..</span>.TheSecondUnitTest - 运行When Case1: test1_2
<span class="token number">16</span>:58:16.450 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO <span class="token punctuation">..</span>.TheSecondUnitTest - 运行When Case1: test1_3
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 测试运行：4，失败：0，错误：0，跳过：0，耗时：0.065秒 - 在 com.baeldung.runasingletest.TheSecondUnitTest
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 运行 com.baeldung.runasingletest.TheFirstUnitTest
<span class="token number">16</span>:58:16.453 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO <span class="token punctuation">..</span>.TheFirstUnitTest - 运行一个虚拟测试
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 测试运行：1，失败：0，错误：0，跳过：0，耗时：0秒 - 在 com.baeldung.runasingletest.TheFirstUnitTest
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 结果：
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 测试运行：5，失败：0，错误：0，跳过：0
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，让我们告诉Maven只执行指定的测试。</p><h2 id="_4-执行单个测试类" tabindex="-1"><a class="header-anchor" href="#_4-执行单个测试类"><span>4. 执行单个测试类</span></a></h2><p>Maven surefire插件提供了一个 <em>test</em> 参数，我们可以使用它来指定我们想要执行的测试类或方法。</p><p><strong>如果我们想执行单个测试类，我们可以执行命令 <em>mvn test -Dtest=”TestClassName”</em>。</strong></p><p>例如，我们可以将 <em>-Dtest=”TheFirstUnitTest”</em> 传递给 <em>mvn</em> 命令，以仅执行 <em>TheFirstUnitTest</em> 类：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ mvn <span class="token builtin class-name">test</span> <span class="token parameter variable">-Dtest</span><span class="token operator">=</span><span class="token string">&quot;TheFirstUnitTest&quot;</span>
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 扫描项目<span class="token punctuation">..</span>.
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> -------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  T E S T S
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> -------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 运行 com.baeldung.runasingletest.TheFirstUnitTest
<span class="token number">17</span>:10:35.351 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO com.baeldung.runasingletest.TheFirstUnitTest - 运行一个虚拟测试
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 测试运行：1，失败：0，错误：0，跳过：0，耗时：0.053秒 - 在 com.baeldung.runasingletest.TheFirstUnitTest
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 结果：
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 测试运行：1，失败：0，错误：0，跳过：0
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------ 
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 构建成功
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正如输出所示，只有我们传递给 <em>test</em> 参数的测试类被执行了。</p><h2 id="_5-执行单个测试方法" tabindex="-1"><a class="header-anchor" href="#_5-执行单个测试方法"><span>5. 执行单个测试方法</span></a></h2><p>此外，<strong>我们可以通过将 <em>-Dtest=”TestClassName#TestMethodName”</em> 传递给_mvn_命令，要求Maven surefire插件执行单个测试方法。</strong></p><p>现在让我们执行 <em>TheSecondUnitTest</em> 类中的 <em>whenTestCase2_thenPrintTest2_1()</em> 方法：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ mvn <span class="token builtin class-name">test</span> <span class="token parameter variable">-Dtest</span><span class="token operator">=</span><span class="token string">&quot;TheSecondUnitTest#whenTestCase2_thenPrintTest2_1&quot;</span>
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 扫描项目<span class="token punctuation">..</span>.
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> -------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  T E S T S
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> -------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 运行 com.baeldung.runasingletest.TheSecondUnitTest
<span class="token number">17</span>:22:07.063 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO <span class="token punctuation">..</span>.TheSecondUnitTest - 运行When Case2: test2_1
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 测试运行：1，失败：0，错误：0，跳过：0，耗时：0.057秒 - 在 com.baeldung.runasingletest.TheSecondUnitTest
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 结果：
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 测试运行：1，失败：0，错误：0，跳过：0
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------ 
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 构建成功
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正如我们所看到的，这次，我们只执行了指定的测试方法。</p><h2 id="_6-关于-test-参数的更多信息" tabindex="-1"><a class="header-anchor" href="#_6-关于-test-参数的更多信息"><span>6. 关于 <em>test</em> 参数的更多信息</span></a></h2><p>到目前为止，我们已经展示了如何通过相应地提供 <em>test</em> 参数值来执行单个测试类或测试方法。</p><p>实际上，Maven surefire插件允许我们以不同的格式设置 <em>test</em> 参数的值，以灵活地执行测试。</p><p>接下来，我们将展示一些常用的格式：</p><ul><li>按名称执行多个测试类：<em>-Dtest=”TestClassName1, TestClassName2, TestClassName3…”</em></li><li>按名称模式执行多个测试类：<em>-Dtest=”*ServiceUnitTest”</em> 或 <em>-Dtest=”The<em>UnitTest, Controller</em>Test”</em></li><li>指定多个测试方法的名称：<em>-Dtest=”ClassName#method1+method2”</em></li><li>按名称模式指定多个方法名称：<em>-Dtest=”ClassName#whenSomethingHappens</em>*”_</li></ul><p>最后，让我们再看一个例子。</p><p>假设我们只想执行 <em>TheSecondUnitTest</em> 类中的所有“ <em>whenTestCase1…</em> ”方法。</p><p>因此，根据我们上面讨论的模式，我们希望 <em>-Dtest=”TheSecondUnitTest#whenTestCase1*”</em> 能够完成这项工作：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ mvn <span class="token builtin class-name">test</span> <span class="token parameter variable">-Dtest</span><span class="token operator">=</span><span class="token string">&quot;TheSecondUnitTest#whenTestCase1*&quot;</span>
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 扫描项目<span class="token punctuation">..</span>.
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> -------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  T E S T S
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> -------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 运行 com.baeldung.runasingletest.TheSecondUnitTest
<span class="token number">17</span>:51:04.973 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO <span class="token punctuation">..</span>.TheSecondUnitTest - 运行When Case1: test1_1
<span class="token number">17</span>:51:04.979 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO <span class="token punctuation">..</span>.TheSecondUnitTest - 运行When Case1: test1_2
<span class="token number">17</span>:51:04.980 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO <span class="token punctuation">..</span>.TheSecondUnitTest - 运行When Case1: test1_3
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 测试运行：3，失败：0，错误：0，跳过：0，耗时：0.055秒 - 在 com.baeldung.runasingletest.TheSecondUnitTest
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 结果：
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 测试运行：3，失败：0，错误：0，跳过：0
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------ 
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 构建成功
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正如我们所期望的，只有匹配指定名称模式的三个测试方法被执行了。</p><h2 id="_7-结论" tabindex="-1"><a class="header-anchor" href="#_7-结论"><span>7. 结论</span></a></h2><p>Maven surefire插件提供了一个 <em>test</em> 参数，允许我们在选择要执行的测试方面具有很大的灵活性。</p><p>在本文中，我们讨论了一些常用的 <em>test</em> 参数值格式。</p><p>此外，我们通过示例</p>`,43),i=[p];function c(l,o){return a(),s("div",null,i)}const r=n(t,[["render",c],["__file","2024-07-26-Running a Single Test or Method With Maven.html.vue"]]),v=JSON.parse('{"path":"/posts/baeldung/2024-07-26/2024-07-26-Running%20a%20Single%20Test%20or%20Method%20With%20Maven.html","title":"使用Maven单独运行单个测试或方法","lang":"zh-CN","frontmatter":{"date":"2022-06-06T00:00:00.000Z","category":["Maven","Testing"],"tag":["Maven","Surefire Plugin","JUnit","Test"],"head":[["meta",{"name":"keywords","content":"Maven, Surefire Plugin, JUnit, Testing, Run Single Test"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-26/2024-07-26-Running%20a%20Single%20Test%20or%20Method%20With%20Maven.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"使用Maven单独运行单个测试或方法"}],["meta",{"property":"og:description","content":"使用Maven单独运行单个测试或方法 1. 概述 通常，我们使用Maven surefire插件在Maven构建过程中执行测试。 本教程将探讨如何使用此插件来运行单个测试类或测试方法。 2. 问题介绍 Maven surefire插件使用起来非常简单。它只有一个目标：test。 因此，在默认配置下，我们可以通过命令 mvn test 执行项目中的所有测..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-26T20:57:55.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"Maven"}],["meta",{"property":"article:tag","content":"Surefire Plugin"}],["meta",{"property":"article:tag","content":"JUnit"}],["meta",{"property":"article:tag","content":"Test"}],["meta",{"property":"article:published_time","content":"2022-06-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-26T20:57:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用Maven单独运行单个测试或方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-06T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-26T20:57:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"使用Maven单独运行单个测试或方法 1. 概述 通常，我们使用Maven surefire插件在Maven构建过程中执行测试。 本教程将探讨如何使用此插件来运行单个测试类或测试方法。 2. 问题介绍 Maven surefire插件使用起来非常简单。它只有一个目标：test。 因此，在默认配置下，我们可以通过命令 mvn test 执行项目中的所有测..."},"headers":[{"level":2,"title":"1. 概述","slug":"_1-概述","link":"#_1-概述","children":[]},{"level":2,"title":"2. 问题介绍","slug":"_2-问题介绍","link":"#_2-问题介绍","children":[]},{"level":2,"title":"3. 示例项目","slug":"_3-示例项目","link":"#_3-示例项目","children":[]},{"level":2,"title":"4. 执行单个测试类","slug":"_4-执行单个测试类","link":"#_4-执行单个测试类","children":[]},{"level":2,"title":"5. 执行单个测试方法","slug":"_5-执行单个测试方法","link":"#_5-执行单个测试方法","children":[]},{"level":2,"title":"6. 关于 test 参数的更多信息","slug":"_6-关于-test-参数的更多信息","link":"#_6-关于-test-参数的更多信息","children":[]},{"level":2,"title":"7. 结论","slug":"_7-结论","link":"#_7-结论","children":[]}],"git":{"createdTime":1722027475000,"updatedTime":1722027475000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":4.6,"words":1379},"filePathRelative":"posts/baeldung/2024-07-26/2024-07-26-Running a Single Test or Method With Maven.md","localizedDate":"2022年6月6日","excerpt":"<hr>\\n<h1>使用Maven单独运行单个测试或方法</h1>\\n<h2>1. 概述</h2>\\n<p>通常，我们使用Maven surefire插件在Maven构建过程中执行测试。</p>\\n<p>本教程将探讨如何使用此插件来运行单个测试类或测试方法。</p>\\n<h2>2. 问题介绍</h2>\\n<p>Maven surefire插件使用起来非常简单。它只有一个目标：<em>test</em>。</p>\\n<p>因此，在默认配置下，我们可以通过命令 <em>mvn test</em> 执行项目中的所有测试。</p>\\n<p>有时，我们可能只想执行单个测试类甚至单个测试方法。</p>\\n<p>本教程将以JUnit 5作为测试提供者的例子，来说明如何实现这一点。</p>","autoDesc":true}');export{r as comp,v as data};
