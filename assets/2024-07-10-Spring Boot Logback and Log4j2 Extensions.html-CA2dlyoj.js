import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as s,a as t}from"./app-DpDzgwdT.js";const p={},e=t('<h1 id="spring-boot-logback-和-log4j2-扩展" tabindex="-1"><a class="header-anchor" href="#spring-boot-logback-和-log4j2-扩展"><span>Spring Boot Logback 和 Log4j2 扩展</span></a></h1><p>记录是任何软件应用程序的重要组成部分，它有助于故障排除和调试问题。此外，它还可用于监控目的。Spring Boot 支持流行的日志框架，如 Logback 和 Log4j2。<strong>Spring Boot 为 Logback 和 Log4j2 提供了一些扩展，这些扩展可能对高级配置很有用。</strong></p><p>在本教程中，我们将探讨 Spring Boot 应用程序中的 Logback 和 Log4j2 扩展。</p><p>Spring Boot 默认使用 Logback 库进行记录。在这一部分中，我们将了解一些可以帮助进行高级配置的 Logback 扩展。</p><p>还值得一提的是，<strong>Spring Boot 建议使用 <em>logback-spring.xml</em> 而不是默认的 <em>logback.xml</em></strong>。<strong>我们不能在标准的 <em>logback.xml</em> 中使用扩展，因为 <em>logback.xml</em> 配置文件加载得太早了</strong>。</p><h3 id="_2-1-maven-依赖项" tabindex="-1"><a class="header-anchor" href="#_2-1-maven-依赖项"><span>2.1. Maven 依赖项</span></a></h3><p>要使用 Logback，我们需要在 <em>pom.xml</em> 中添加 <em>logback-classic</em> 依赖项。然而，<em>logback-classic</em> 依赖项已经在 Spring Boot Starter 依赖项中可用。</p><p>因此，我们只需要在 <em>pom.xml</em> 中添加 <em>spring-boot-starter-web</em> 依赖项：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`````org.springframework.boot`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````spring-boot-starter-web`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-基本记录" tabindex="-1"><a class="header-anchor" href="#_2-2-基本记录"><span>2.2. 基本记录</span></a></h3><p>首先，我们将在主 Spring Boot 类中添加一些日志，以用于我们的示例：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringBootLogbackExtensionsApplication</span> <span class="token punctuation">{</span>\n    \n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">SpringBootLogbackExtensionsApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SpringBootLogbackExtensionsApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;调试日志消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;信息日志消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;错误日志消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;警告日志消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;跟踪日志消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-特定于配置文件的设置" tabindex="-1"><a class="header-anchor" href="#_2-3-特定于配置文件的设置"><span>2.3. 特定于配置文件的设置</span></a></h3><p>Spring 配置文件提供了一种机制，可以根据激活的配置文件调整应用程序配置。</p><p>例如，我们可以为各种环境定义分离的 Logback 配置，如 &quot;development&quot; 和 &quot;production&quot;。<strong>如果我们想要一个单一的 Logback 配置，我们可以使用 <em>logback-spring.xml</em> 中的 <em>springProfile</em> 元素</strong>。</p><p><strong>使用 <em>springProfile</em> 元素，我们可以根据激活的 Spring 配置文件选择性地包含或排除配置部分。我们可以使用 <em>name</em> 属性来允许哪个配置文件接受配置</strong>。</p><p>默认情况下，Spring Boot 仅记录到控制台。现在，假设我们想要为 &quot;production&quot; 记录到文件，为 &quot;development&quot; 记录到控制台。我们可以通过使用 <em>springProfile</em> 元素轻松实现。</p><p>让我们创建一个 <em>logback-spring.xml</em> 文件：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>development<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Console<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.PatternLayout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n            ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pattern</span><span class="token punctuation">&gt;</span></span>``%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pattern</span><span class="token punctuation">&gt;</span></span>``\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">&gt;</span></span>`\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>```\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Console<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>`\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span>``\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">&gt;</span></span>````\n\n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>production<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RollingFile<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``\n        ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>``${LOGS}/spring-boot-logger.log``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span>``\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.encoder.PatternLayoutEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n            ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pattern</span><span class="token punctuation">&gt;</span></span>``%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pattern</span><span class="token punctuation">&gt;</span></span>``\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>`\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n            `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>`${LOGS}/archived/spring-boot-logger-%d{yyyy-MM-dd}.log`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>`\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span>`\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>```\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RollingFile<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>`\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span>``\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">&gt;</span></span>````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，我们可以使用 JVM 系统参数 <em>-Dspring.profiles.active=development</em> 或 <em>-Dspring.profiles.active=production</em> 设置激活的配置文件。</p><p>现在，如果我们使用 <em>development</em> 配置文件运行 Spring Boot 应用程序，我们将在控制台中获得以下输出：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>10:31:13.766 [main] INFO  c.b.e.SpringBootLogbackExtensionsApplication - 信息日志消息\n10:31:13.766 [main] ERROR c.b.e.SpringBootLogbackExtensionsApplication - 错误日志消息\n10:31:13.766 [main] WARN  c.b.e.SpringBootLogbackExtensionsApplication - 警告日志消息\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，我们可能想要为 &quot;staging&quot; 或 &quot;production&quot; 记录到文件。为了支持这种情况，<em>springProfile’s</em> <em>name</em> 属性接受配置文件表达式。配置文件表达式允许更复杂的配置文件逻辑：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>production | staging<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    ``<span class="token comment">&lt;!-- 配置 --&gt;</span>``\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">&gt;</span></span>````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述配置在 &quot;production&quot; 或 &quot;staging&quot; 配置文件激活时启用。</p><h3 id="_2-4-环境属性" tabindex="-1"><a class="header-anchor" href="#_2-4-环境属性"><span>2.4. 环境属性</span></a></h3><p><strong>有时，我们需要在记录配置中访问 <em>application.properties</em> 文件中的值。在这种情况下，我们使用 Logback 配置中的 <em>springProperty</em> 元素</strong>。</p><p><em>springProperty</em> 元素类似于 Logback 的标准 <em>property</em> 元素。然而，我们可以确定属性的来源来自环境，而不是指定一个直接的值。</p><p><em>springProperty</em> 元素有一个 <em>source</em> 属性，它取应用程序属性的值。如果环境中没有设置属性，则从 <em>defaultValue</em> 属性中取默认值。我们还需要为 <em>name</em> 属性设置一个值，以便在配置中的其他元素中引用该属性。</p><p>最后，我们可以设置 <em>scope</em> 属性。<em>context</em> 作用域中的属性是上下文的一部分，它在所有记录事件中都可用。</p><p>假设我们想使用应用程序名称作为日志文件的名称。首先，在 <em>application.properties</em> 文件中定义应用程序名称：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>spring.application.name=logback-extension\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后在 <em>logback-spring.xml</em> 中暴露应用程序名称以供使用：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOGS<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./logs<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProperty</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>context<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>application.name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>spring.application.name<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>`\n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>production<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RollingFile<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>``\n        ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>``${LOGS}/${application.name}.log``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span>``\n        ``<span class="token comment">&lt;!-- 配置 --&gt;</span>``\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>```\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">&gt;</span></span>````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的配置中，我们将 <em>springProperty</em> 元素的 <em>source</em> 属性设置为属性 <em>spring.application.name</em>。此外，我们使用 <em>${application.name}</em> 引用该属性。</p><p>在下一节中，我们将讨论 Spring Boot 应用程序中的 Log4j2 扩展。</p><h2 id="_3-log4j2-扩展" tabindex="-1"><a class="header-anchor" href="#_3-log4j2-扩展"><span>3. Log4j2 扩展</span></a></h2><p>Log4j2 扩展与 Logback 扩展类似。<strong>我们不能在标准的 <em>log4j2.xml</em> 配置文件中使用扩展，因为它加载得太早了</strong>。</p><p>Spring Boot 推荐的方法是将 Log4j2 配置存储在一个名为 <em>log4j2-spring.xml</em> 的单独文件中。如果存在，Spring Boot 将在加载任何其他 Log4j2 配置之前加载此文件。</p><h3 id="_3-1-maven-依赖项" tabindex="-1"><a class="header-anchor" href="#_3-1-maven-依赖项"><span>3.1. Maven 依赖项</span></a></h3><p>要使用 Log4j2 库而不是默认的 Logback，我们需要 <strong>从我们的启动依赖项中排除 Logback</strong>：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`````org.springframework.boot`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````spring-boot-starter-web`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>`\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>`\n            `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`````org.springframework.boot`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`````\n            `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````spring-boot-starter-logging`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````\n        `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>`\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，我们需要在 <em>pom.xml</em> 文件中添加 <em>spring-boot-starter-log4j2</em> 和 <em>log4j-spring-boot</em> 依赖项：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`````org.springframework.boot`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````spring-boot-starter-log4j2`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>````\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`````org.apache.logging.log4j`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`````\n    `````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````log4j-spring-boot`````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`````\n````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们在应用程序中包含 <em>log4j-spring-boot</em> 库以支持 Log4j2 设置中的 SpringBoot 配置文件。如果没有这个依赖项，我们将看到以下错误消息：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>2023-01-21 15:56:12,473 main ERROR Error processing element SpringProfile ([Loggers: null]): CLASS_NOT_FOUND\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-2-特定于配置文件的设置" tabindex="-1"><a class="header-anchor" href="#_3-2-特定于配置文件的设置"><span>3.2. 特定于配置文件的设置</span></a></h3><p>尽管将设置放入不同的日志配置文件在大多数情况下都能正常工作，但可能存在我们希望为不同环境使用单一日志设置的情况。在这种情况下，<strong>我们可以使用 <em>SpringProfile</em> 元素将 Spring Boot 配置文件添加到我们的配置中</strong>。</p><p>让我们编写一个简单的 <em>log4j2-spring.xml</em>：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SpringProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>development<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.baeldung.extensions<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>debug<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>`\n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SpringProfile</span><span class="token punctuation">&gt;</span></span>``\n\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SpringProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>production<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.baeldung.extensions<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>error<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>`\n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SpringProfile</span><span class="token punctuation">&gt;</span></span>``\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这与我们在 Logback 部分讨论的示例类似。</p><p>如果我们使用 <em>production</em> 配置文件运行应用程序，我们现在将看到来自应用程序的 ERROR 日志，并且不再有来自 <em>com.baeldung.extensions</em> 包的 DEBUG 日志：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>2023-01-22T11:19:52,885 ERROR [main] c.b.e.SpringBootLog4j2ExtensionsApplication: Error log message\n2023-01-22T11:19:52,885 FATAL [main] c.b.e.SpringBootLog4j2ExtensionsApplication: Fatal log message\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>重要的是要注意，<em>SpringProfile</em> 部分在 <em>configuration</em> 元素内的任何位置都受支持。</p><h3 id="_3-3-环境属性查找" tabindex="-1"><a class="header-anchor" href="#_3-3-环境属性查找"><span>3.3. 环境属性查找</span></a></h3><p>Log4j2 Lookups 提供了一种方法，为我们的日志配置文件提供值。</p><p><strong>我们可以使用 Log4j2 Lookup 在我们的 Log4j2 配置中从 <em>application.properties</em> 文件中访问值。此外，我们可以使用激活的和默认的配置文件的值。为此，在 Log4j2 配置中，我们可以使用以 <em>spring-</em> 为前缀的查找</strong>。</p><p>让我们在 <em>application.properties</em> 文件中设置 <em>spring.application.name=log4j2-extension</em>。然后，从 Spring 环境读取 <em>spring.application.name</em>：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Console</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Console-Extensions<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>SYSTEM_OUT<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span>\n        <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>%d %p %c{1.} [%t] ${spring:spring.application.name} %m%n<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Console</span><span class="token punctuation">&gt;</span></span>`\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的配置中，我们使用以 <em>spring-</em> 为前缀的查找设置 <em>spring.application.name</em>。运行后，应用程序将把以下消息记录到控制台：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>2023-01-22 16:17:30,301 ERROR c.b.e.SpringBootLog4j2ExtensionsApplication [main] log4j2-extension Error log message\n2023-01-22 16:17:30,301 FATAL c.b.e.SpringBootLog4j2ExtensionsApplication [main] log4j2-extension Fatal log message\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-log4j2-系统属性" tabindex="-1"><a class="header-anchor" href="#_3-4-log4j2-系统属性"><span>3.4. Log4j2 系统属性</span></a></h3><p>Log4j2 提供了几个系统属性，可用于配置各个方面。我们可以将这些系统属性添加到 <em>log4j2.system.properties</em> 文件中。</p><p>让我们添加 <em>log4j2.debug=true</em> 属性。这个系统属性将打印所有内部日志到控制台：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>TRACE StatusLogger Log4jLoggerFactory.getContext() found anchor class java.util.logging.Logger\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们还可以将系统属性添加到 <em>application.properties</em> 文件中。在 <em>log4j2.system.properties</em> 文件中定义的属性优先于 <em>application.properties</em> 文件。</p><h2 id="_4-结论" tabindex="-1"><a class="header-anchor" href="#_4-结论"><span>4. 结论</span></a></h2><p>Spring Boot 提供了广泛的日志支持。在本教程中，我们探索了 Spring Boot 中的 Logback 和 Log4j2 扩展。</p><p>如往常一样，Logback 扩展的完整源代码可在 GitHub 上获得。此外，Log4j2 扩展的源代码也可在 GitHub 上获得。</p><p><a href="kimi://action?name=cheer-on-kimi">给Kimi加油</a></p><p>OK</p>',71),o=[e];function l(c,i){return s(),a("div",null,o)}const g=n(p,[["render",l],["__file","2024-07-10-Spring Boot Logback and Log4j2 Extensions.html.vue"]]),k=JSON.parse('{"path":"/posts/baeldung/2024-07-10/2024-07-10-Spring%20Boot%20Logback%20and%20Log4j2%20Extensions.html","title":"Spring Boot Logback 和 Log4j2 扩展","lang":"zh-CN","frontmatter":{"date":"2024-07-10T00:00:00.000Z","category":["Spring Boot","Logback","Log4j2"],"tag":["Spring Boot","Logback","Log4j2","日志"],"head":[["meta",{"name":"keywords","content":"Spring Boot, Logback, Log4j2, 日志配置, 扩展"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-10/2024-07-10-Spring%20Boot%20Logback%20and%20Log4j2%20Extensions.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"Spring Boot Logback 和 Log4j2 扩展"}],["meta",{"property":"og:description","content":"Spring Boot Logback 和 Log4j2 扩展 记录是任何软件应用程序的重要组成部分，它有助于故障排除和调试问题。此外，它还可用于监控目的。Spring Boot 支持流行的日志框架，如 Logback 和 Log4j2。Spring Boot 为 Logback 和 Log4j2 提供了一些扩展，这些扩展可能对高级配置很有用。 在本教..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-10T03:43:29.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"Spring Boot"}],["meta",{"property":"article:tag","content":"Logback"}],["meta",{"property":"article:tag","content":"Log4j2"}],["meta",{"property":"article:tag","content":"日志"}],["meta",{"property":"article:published_time","content":"2024-07-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-10T03:43:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Boot Logback 和 Log4j2 扩展\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-10T03:43:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"Spring Boot Logback 和 Log4j2 扩展 记录是任何软件应用程序的重要组成部分，它有助于故障排除和调试问题。此外，它还可用于监控目的。Spring Boot 支持流行的日志框架，如 Logback 和 Log4j2。Spring Boot 为 Logback 和 Log4j2 提供了一些扩展，这些扩展可能对高级配置很有用。 在本教..."},"headers":[{"level":3,"title":"2.1. Maven 依赖项","slug":"_2-1-maven-依赖项","link":"#_2-1-maven-依赖项","children":[]},{"level":3,"title":"2.2. 基本记录","slug":"_2-2-基本记录","link":"#_2-2-基本记录","children":[]},{"level":3,"title":"2.3. 特定于配置文件的设置","slug":"_2-3-特定于配置文件的设置","link":"#_2-3-特定于配置文件的设置","children":[]},{"level":3,"title":"2.4. 环境属性","slug":"_2-4-环境属性","link":"#_2-4-环境属性","children":[]},{"level":2,"title":"3. Log4j2 扩展","slug":"_3-log4j2-扩展","link":"#_3-log4j2-扩展","children":[{"level":3,"title":"3.1. Maven 依赖项","slug":"_3-1-maven-依赖项","link":"#_3-1-maven-依赖项","children":[]},{"level":3,"title":"3.2. 特定于配置文件的设置","slug":"_3-2-特定于配置文件的设置","link":"#_3-2-特定于配置文件的设置","children":[]},{"level":3,"title":"3.3. 环境属性查找","slug":"_3-3-环境属性查找","link":"#_3-3-环境属性查找","children":[]},{"level":3,"title":"3.4. Log4j2 系统属性","slug":"_3-4-log4j2-系统属性","link":"#_3-4-log4j2-系统属性","children":[]}]},{"level":2,"title":"4. 结论","slug":"_4-结论","link":"#_4-结论","children":[]}],"git":{"createdTime":1720583009000,"updatedTime":1720583009000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":7.06,"words":2119},"filePathRelative":"posts/baeldung/2024-07-10/2024-07-10-Spring Boot Logback and Log4j2 Extensions.md","localizedDate":"2024年7月10日","excerpt":"\\n<p>记录是任何软件应用程序的重要组成部分，它有助于故障排除和调试问题。此外，它还可用于监控目的。Spring Boot 支持流行的日志框架，如 Logback 和 Log4j2。<strong>Spring Boot 为 Logback 和 Log4j2 提供了一些扩展，这些扩展可能对高级配置很有用。</strong></p>\\n<p>在本教程中，我们将探讨 Spring Boot 应用程序中的 Logback 和 Log4j2 扩展。</p>\\n<p>Spring Boot 默认使用 Logback 库进行记录。在这一部分中，我们将了解一些可以帮助进行高级配置的 Logback 扩展。</p>","autoDesc":true}');export{g as comp,k as data};
