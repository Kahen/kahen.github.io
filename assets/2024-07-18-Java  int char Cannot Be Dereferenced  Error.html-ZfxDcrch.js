import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as e,a as s}from"./app-DNwYcgl6.js";const t={},p=s(`<hr><h1 id="java-int-char-不能被解引用-错误-baeldung-1-概述" tabindex="-1"><a class="header-anchor" href="#java-int-char-不能被解引用-错误-baeldung-1-概述"><span>Java “int/char 不能被解引用” 错误 | Baeldung## 1. 概述</span></a></h1><p>在本教程中，我们将仔细查看 Java 错误 “int cannot be dereferenced”（int 不能被解引用）。首先，我们将创建一个产生此错误的示例。接下来，我们将解释异常的主要原因。最后，我们将看到如何修复它。</p><h2 id="_2-实例演示" tabindex="-1"><a class="header-anchor" href="#_2-实例演示"><span>2. 实例演示</span></a></h2><p>现在，让我们看一个生成编译错误 “X cannot be dereferenced”（X 不能被解引用）的示例。</p><p>这里，<em>X</em> 代表八种 Java 基本类型之一，即 <em>int</em>, <em>byte</em>, <em>short</em>, <em>long</em>, <em>float</em>, <em>double</em>, <em>boolean</em>, 和 <em>char</em>。</p><p>首先，让我们创建一个类 <em>Test</em> 并<strong>将一个 <em>int</em> 与另一个值进行比较</strong>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当从终端编译代码时，我们将得到错误：</p><div class="language-plaintext line-numbers-mode" data-ext="plaintext" data-title="plaintext"><pre class="language-plaintext"><code>$ javac Test.java
Test.java:8: error: int cannot be dereferenced
        System.out.println(x.toString());
                             ^
1 error
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，像 Eclipse 和 IntelliJ 这样的现代 IDE 甚至在编译之前就会显示错误：</p><h2 id="_3-原因" tabindex="-1"><a class="header-anchor" href="#_3-原因"><span>3. 原因</span></a></h2><p>在 Java 中，引用是某个对象/变量的地址。解引用是指通过引用访问对象的特性的动作。<strong>对基本类型进行任何解引用操作都会导致 “X cannot be dereferenced” 错误，其中 X 是基本类型。</strong> 这是因为基本类型不被视为对象 —— 它们代表原始值：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当从终端构建代码时，我们将得到 “<em>int cannot be dereferenced</em>” 错误。</p><p>然而，对于 <em>Object</em>，它工作正常：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Object</span> testObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
testObj<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里，<em>testObj</em> 是一个对象，解引用发生在调用 <em>toString()</em> 时使用 <strong>.</strong> 运算符在 <em>testObj</em> 上。这不会给出任何错误，因为 <em>testObj</em> 是一个对象，因此解引用将起作用。</p><h2 id="_4-解决方案" tabindex="-1"><a class="header-anchor" href="#_4-解决方案"><span>4. 解决方案</span></a></h2><p>在我们的示例中，我们需要检查两个值的相等性。</p><p><strong>我们问题的第一个解决方案是使用 <em>==</em> 而不是 <em>equals()</em> 对基本类型</strong>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当我们运行代码时，它将打印 “true”。</p><p><strong>第二个解决方案是将基本类型更改为包装类</strong>。</p><p>Java 为每种基本类型提供了包装类对象。</p><p>例如，如果我们必须使用 <em>equals()</em>，我们可以将基本类型转换为包装对象：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Integer</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个错误没有一劳永逸的解决方案。根据用例，我们可以使用上述两种解决方案中的任何一种。</p><h2 id="_5-结论" tabindex="-1"><a class="header-anchor" href="#_5-结论"><span>5. 结论</span></a></h2><p>我们已经解释了 Java 的 <em>“int cannot be dereferenced”</em> 错误。然后，我们讨论了如何产生错误以及异常的原因。最后，我们讨论了解决错误的方案。</p><p>OK</p>`,31),o=[p];function c(i,r){return e(),n("div",null,o)}const u=a(t,[["render",c],["__file","2024-07-18-Java  int char Cannot Be Dereferenced  Error.html.vue"]]),m=JSON.parse('{"path":"/posts/baeldung/2024-07-18/2024-07-18-Java%20%20int%20char%20Cannot%20Be%20Dereferenced%20%20Error.html","title":"Java “int/char 不能被解引用” 错误 | Baeldung## 1. 概述","lang":"zh-CN","frontmatter":{"date":"2022-06-01T00:00:00.000Z","category":["Java"],"tag":["Error Handling","Java Basics"],"head":[["meta",{"name":"keywords","content":"Java, int, char, dereference, error"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-18/2024-07-18-Java%20%20int%20char%20Cannot%20Be%20Dereferenced%20%20Error.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"Java “int/char 不能被解引用” 错误 | Baeldung## 1. 概述"}],["meta",{"property":"og:description","content":"Java “int/char 不能被解引用” 错误 | Baeldung## 1. 概述 在本教程中，我们将仔细查看 Java 错误 “int cannot be dereferenced”（int 不能被解引用）。首先，我们将创建一个产生此错误的示例。接下来，我们将解释异常的主要原因。最后，我们将看到如何修复它。 2. 实例演示 现在，让我们看一个生..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-18T05:08:38.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"Error Handling"}],["meta",{"property":"article:tag","content":"Java Basics"}],["meta",{"property":"article:published_time","content":"2022-06-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-18T05:08:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java “int/char 不能被解引用” 错误 | Baeldung## 1. 概述\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-18T05:08:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"Java “int/char 不能被解引用” 错误 | Baeldung## 1. 概述 在本教程中，我们将仔细查看 Java 错误 “int cannot be dereferenced”（int 不能被解引用）。首先，我们将创建一个产生此错误的示例。接下来，我们将解释异常的主要原因。最后，我们将看到如何修复它。 2. 实例演示 现在，让我们看一个生..."},"headers":[{"level":2,"title":"2. 实例演示","slug":"_2-实例演示","link":"#_2-实例演示","children":[]},{"level":2,"title":"3. 原因","slug":"_3-原因","link":"#_3-原因","children":[]},{"level":2,"title":"4. 解决方案","slug":"_4-解决方案","link":"#_4-解决方案","children":[]},{"level":2,"title":"5. 结论","slug":"_5-结论","link":"#_5-结论","children":[]}],"git":{"createdTime":1721279318000,"updatedTime":1721279318000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.24,"words":673},"filePathRelative":"posts/baeldung/2024-07-18/2024-07-18-Java  int char Cannot Be Dereferenced  Error.md","localizedDate":"2022年6月1日","excerpt":"<hr>\\n<h1>Java “int/char 不能被解引用” 错误 | Baeldung## 1. 概述</h1>\\n<p>在本教程中，我们将仔细查看 Java 错误 “int cannot be dereferenced”（int 不能被解引用）。首先，我们将创建一个产生此错误的示例。接下来，我们将解释异常的主要原因。最后，我们将看到如何修复它。</p>\\n<h2>2. 实例演示</h2>\\n<p>现在，让我们看一个生成编译错误 “X cannot be dereferenced”（X 不能被解引用）的示例。</p>\\n<p>这里，<em>X</em> 代表八种 Java 基本类型之一，即 <em>int</em>, <em>byte</em>, <em>short</em>, <em>long</em>, <em>float</em>, <em>double</em>, <em>boolean</em>, 和 <em>char</em>。</p>","autoDesc":true}');export{u as comp,m as data};
