import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as s,a as t}from"./app-BTwZI-W8.js";const e={},p=t('<h1 id="将swagger-api导入postman" tabindex="-1"><a class="header-anchor" href="#将swagger-api导入postman"><span>将Swagger API导入Postman</span></a></h1><p>在本文中，我们将看到如何将Swagger API导入Postman。</p><p>Swagger是一个开源的规则集、规范和工具集，用于开发和描述REST API。然而，2021年之后，<strong>OpenAPI指的是行业标准规范</strong>，而Swagger指的是工具。</p><p>Postman是一个用于构建和使用API的平台。Postman简化了API生命周期的每一步，并简化了协作。我们可以使用<strong>Postman在不编写任何代码的情况下测试我们的API</strong>。</p><p>我们可以使用独立应用程序或浏览器扩展。</p><p>我们可以与任何现有应用程序一起工作，或者我们可以从头开始创建一个简单的应用程序，该程序公开REST API。</p><h3 id="_4-1-maven依赖" tabindex="-1"><a class="header-anchor" href="#_4-1-maven依赖"><span>4.1. Maven依赖</span></a></h3><p>我们需要添加一些依赖项，以使用Swagger与Swagger-UI：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>``io.springfox``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>``springfox-swagger2``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>``3.0.0``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>``\n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>``\n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>``io.springfox``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>``springfox-swagger-ui``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>``\n    ``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>``3.0.0``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>``\n``<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>``\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-java配置" tabindex="-1"><a class="header-anchor" href="#_4-2-java配置"><span>4.2. Java配置</span></a></h3><p>Swagger可以像这样简单配置：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringFoxConfig</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">api</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span><span class="token constant">SWAGGER_2</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当我们启动应用程序时，我们可以<strong>检查Swagger-UI并找到每个控制器的REST API描述</strong>：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2022/08/1_Swagger-UI.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>我们还可以看到<strong>为我们的REST API生成的API文档</strong>：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2022/08/Swagger-API_Docs.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="_5-导入到postman" tabindex="-1"><a class="header-anchor" href="#_5-导入到postman"><span>5. 导入到Postman</span></a></h2><p>有多种方法可以将API导入Postman，但在大多数情况下，它需要<strong>Swagger或OpenAPI定义以某种文本格式可用</strong>（例如，JSON）。</p><p>我们可以打开Postman并导航到左侧的_APIs_选项，然后点击_Import_以查看可用的不同选项：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2022/08/Postman_API_Import.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_5-1-导入文件" tabindex="-1"><a class="header-anchor" href="#_5-1-导入文件"><span>5.1. 导入文件</span></a></h3><p><strong>如果我们有一个可用的Swagger JSON文件</strong>，我们可以通过Postman中的文件选项导入它：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2022/08/Postman_API_Import_File.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_5-2-导入链接" tabindex="-1"><a class="header-anchor" href="#_5-2-导入链接"><span>5.2. 导入链接</span></a></h3><p>如果我们有Swagger-UI链接，我们可以直接使用该链接将API导入Postman。</p><p>按以下方式从Swagger-UI复制API链接：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2022/08/2_Swagger_Copy_Link.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>然后通过Postman使用相同的链接导入它：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2022/08/Postman_API_Import_Link.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_5-3-通过原始文本导入" tabindex="-1"><a class="header-anchor" href="#_5-3-通过原始文本导入"><span>5.3. 通过原始文本导入</span></a></h3><p>我们还可以直接<strong>将JSON作为原始文本粘贴</strong>以导入API：</p><h3 id="_5-4-通过代码库导入" tabindex="-1"><a class="header-anchor" href="#_5-4-通过代码库导入"><span>5.4. 通过代码库导入</span></a></h3><p>要从代码库导入API，我们需要<strong>登录Postman</strong>。以GitHub为例，让我们按照以下步骤操作：</p><ol><li>导航到_Code Repository_标签。</li><li>点击_GitHub_。</li><li>确认GitHub账户并<strong>授权_postmanlabs_访问仓库</strong>。完成后，返回Postman应用程序进行进一步步骤。</li><li>在Postman上，选择_<strong>组织</strong><em>、</em><strong>仓库</strong><em>和</em><strong>分支</strong><em>，然后点击_Continue</em>。</li><li><strong>确认我们需要导入的API</strong>，然后点击_Import_。</li></ol><h2 id="_6-结论" tabindex="-1"><a class="header-anchor" href="#_6-结论"><span>6. 结论</span></a></h2><p>在本文中，我们探讨了将REST API导入Postman的不同方式。</p>',36),o=[p];function c(i,l){return s(),a("div",null,o)}const u=n(e,[["render",c],["__file","2024-07-16-Import Swagger APIs into Postman.html.vue"]]),d=JSON.parse('{"path":"/posts/baeldung/2024-07-16/2024-07-16-Import%20Swagger%20APIs%20into%20Postman.html","title":"将Swagger API导入Postman","lang":"zh-CN","frontmatter":{"date":"2022-08-01T00:00:00.000Z","category":["Swagger","Postman"],"tag":["API","REST"],"head":[["meta",{"name":"keywords","content":"Swagger, Postman, API, REST, 导入"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-16/2024-07-16-Import%20Swagger%20APIs%20into%20Postman.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"将Swagger API导入Postman"}],["meta",{"property":"og:description","content":"将Swagger API导入Postman 在本文中，我们将看到如何将Swagger API导入Postman。 Swagger是一个开源的规则集、规范和工具集，用于开发和描述REST API。然而，2021年之后，OpenAPI指的是行业标准规范，而Swagger指的是工具。 Postman是一个用于构建和使用API的平台。Postman简化了API..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.baeldung.com/wp-content/uploads/2022/08/1_Swagger-UI.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-16T17:33:32.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"API"}],["meta",{"property":"article:tag","content":"REST"}],["meta",{"property":"article:published_time","content":"2022-08-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-16T17:33:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"将Swagger API导入Postman\\",\\"image\\":[\\"https://www.baeldung.com/wp-content/uploads/2022/08/1_Swagger-UI.jpg\\",\\"https://www.baeldung.com/wp-content/uploads/2022/08/Swagger-API_Docs.jpg\\",\\"https://www.baeldung.com/wp-content/uploads/2022/08/Postman_API_Import.jpg\\",\\"https://www.baeldung.com/wp-content/uploads/2022/08/Postman_API_Import_File.jpg\\",\\"https://www.baeldung.com/wp-content/uploads/2022/08/2_Swagger_Copy_Link.jpg\\",\\"https://www.baeldung.com/wp-content/uploads/2022/08/Postman_API_Import_Link.jpg\\"],\\"datePublished\\":\\"2022-08-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-16T17:33:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"将Swagger API导入Postman 在本文中，我们将看到如何将Swagger API导入Postman。 Swagger是一个开源的规则集、规范和工具集，用于开发和描述REST API。然而，2021年之后，OpenAPI指的是行业标准规范，而Swagger指的是工具。 Postman是一个用于构建和使用API的平台。Postman简化了API..."},"headers":[{"level":3,"title":"4.1. Maven依赖","slug":"_4-1-maven依赖","link":"#_4-1-maven依赖","children":[]},{"level":3,"title":"4.2. Java配置","slug":"_4-2-java配置","link":"#_4-2-java配置","children":[]},{"level":2,"title":"5. 导入到Postman","slug":"_5-导入到postman","link":"#_5-导入到postman","children":[{"level":3,"title":"5.1. 导入文件","slug":"_5-1-导入文件","link":"#_5-1-导入文件","children":[]},{"level":3,"title":"5.2. 导入链接","slug":"_5-2-导入链接","link":"#_5-2-导入链接","children":[]},{"level":3,"title":"5.3. 通过原始文本导入","slug":"_5-3-通过原始文本导入","link":"#_5-3-通过原始文本导入","children":[]},{"level":3,"title":"5.4. 通过代码库导入","slug":"_5-4-通过代码库导入","link":"#_5-4-通过代码库导入","children":[]}]},{"level":2,"title":"6. 结论","slug":"_6-结论","link":"#_6-结论","children":[]}],"git":{"createdTime":1721151212000,"updatedTime":1721151212000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.38,"words":715},"filePathRelative":"posts/baeldung/2024-07-16/2024-07-16-Import Swagger APIs into Postman.md","localizedDate":"2022年8月1日","excerpt":"\\n<p>在本文中，我们将看到如何将Swagger API导入Postman。</p>\\n<p>Swagger是一个开源的规则集、规范和工具集，用于开发和描述REST API。然而，2021年之后，<strong>OpenAPI指的是行业标准规范</strong>，而Swagger指的是工具。</p>\\n<p>Postman是一个用于构建和使用API的平台。Postman简化了API生命周期的每一步，并简化了协作。我们可以使用<strong>Postman在不编写任何代码的情况下测试我们的API</strong>。</p>\\n<p>我们可以使用独立应用程序或浏览器扩展。</p>\\n<p>我们可以与任何现有应用程序一起工作，或者我们可以从头开始创建一个简单的应用程序，该程序公开REST API。</p>","autoDesc":true}');export{u as comp,d as data};
