import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as e}from"./app-DpDzgwdT.js";const o={},t=e(`<hr><h1 id="检查与mongodb的连接" tabindex="-1"><a class="header-anchor" href="#检查与mongodb的连接"><span>检查与MongoDB的连接</span></a></h1><h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述"><span>1. 概述</span></a></h2><p>在本教程中，我们将学习如何检查与MongoDB的连接。</p><p>重要的是要连接到单个MongoDB实例，我们需要指定MongoDB实例的URI。</p><h2 id="_2-使用mongo-shell检查连接" tabindex="-1"><a class="header-anchor" href="#_2-使用mongo-shell检查连接"><span>2. 使用Mongo Shell检查连接</span></a></h2><p>在本节中，我们将使用mongo shell命令连接到MongoDB服务器。我们将探索连接到MongoDB的不同情况。</p><h3 id="_2-1-在默认端口上检查连接" tabindex="-1"><a class="header-anchor" href="#_2-1-在默认端口上检查连接"><span>2.1. 在默认端口上检查连接</span></a></h3><p><strong>默认情况下，MongoDB运行在端口_27017_，但我们也可以在其他端口上运行它。</strong> 我们可以使用简单的mongo命令连接到MongoDB服务器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ mongo
MongoDB shell version v4.4.2
connecting to: mongodb://localhost:27017/?compressors<span class="token operator">=</span>disabled<span class="token operator">&amp;</span><span class="token assign-left variable">gssapiServiceName</span><span class="token operator">=</span>mongodb
Implicit session: session <span class="token punctuation">{</span> <span class="token string">&quot;id&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;b7f80a0c-c7b9-4aea-b34c-605b85e601dd&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
MongoDB server version: <span class="token number">4.0</span>.1-rc0-2-g54f1582fc6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的命令中，默认情况下，MongoDB假设端口为_27017_。如果MongoDB服务器关闭，我们会遇到以下错误：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ mongo <span class="token parameter variable">--host</span> localhost <span class="token parameter variable">--port</span> <span class="token number">27017</span> admin
MongoDB shell version v4.4.2
connecting to: mongodb://localhost:27017/admin?compressors<span class="token operator">=</span>disabled<span class="token operator">&amp;</span><span class="token assign-left variable">gssapiServiceName</span><span class="token operator">=</span>mongodb
Error: couldn&#39;t connect to server localhost:27017, connection attempt failed:
  SocketException: Error connecting to localhost:27017 :: caused by :: Connection refused <span class="token builtin class-name">:</span>
connect@src/mongo/shell/mongo.js:374:17
@<span class="token punctuation">(</span>connect<span class="token punctuation">)</span>:2:6
exception: connect failed
exiting with code <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这种情况下，我们遇到错误是因为我们无法连接到服务器。</p><h3 id="_2-2-在受保护的mongodb数据库上检查连接" tabindex="-1"><a class="header-anchor" href="#_2-2-在受保护的mongodb数据库上检查连接"><span>2.2. 在受保护的MongoDB数据库上检查连接</span></a></h3><p>MongoDB可以通过身份验证进行保护。在这种情况下，我们需要在命令中传递用户名和密码：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ mongo mongodb://baeldung:baeldung@localhost:27017
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在这里，我们使用用户名“baeldung”和密码“baeldung”连接到在localhost上运行的MongoDB。</p><h3 id="_2-3-在自定义端口上检查连接" tabindex="-1"><a class="header-anchor" href="#_2-3-在自定义端口上检查连接"><span>2.3. 在自定义端口上检查连接</span></a></h3><p>我们也可以在自定义端口上运行MongoDB。我们所要做的就是在_mongod.conf_文件中进行更改。如果MongoDB在其他端口上运行，我们需要在命令中提供该端口：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ mongo mongodb://localhost:27001
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在这里，在mongo shell中，我们还可以检查数据库服务器当前的活动连接。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>var status <span class="token operator">=</span> db.serverStatus<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
status.connections
<span class="token punctuation">{</span>
    <span class="token string">&quot;current&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">21</span>,
    <span class="token string">&quot;available&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">15979</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>_serverStatus_返回一个文档，提供数据库进程当前状态的概述。定期运行_serverStatus_命令将收集有关MongoDB实例的统计信息。</p><h2 id="_3-使用java驱动代码检查连接" tabindex="-1"><a class="header-anchor" href="#_3-使用java驱动代码检查连接"><span>3. 使用Java驱动代码检查连接</span></a></h2><p>到目前为止，我们已经学会了如何使用shell检查与MongoDB的连接。现在让我们看看如何使用Java驱动代码进行同样的操作：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">MongoClientOptions<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token class-name">MongoClientOptions</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// builder settings</span>
<span class="token class-name">ServerAddress</span> <span class="token class-name">ServerAddress</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerAddress</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoClient</span><span class="token punctuation">(</span><span class="token class-name">ServerAddress</span><span class="token punctuation">,</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MongoDB Server is Up:- &quot;</span> <span class="token operator">+</span> mongoClient<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mongoClient<span class="token punctuation">.</span><span class="token function">getConnectPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">getStats</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MongoDB Server is Down&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span><span class="token punctuation">{</span>
    mongoClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，我们首先创建了_MongoClientOption_构建器以自定义_MongoClient_连接的配置，然后使用服务器地址创建了_MongoClient_连接。假设MongoDB服务器在localhost的_27017_端口上运行。否则，_MongoClient_将抛出错误。</p><h2 id="_4-结论" tabindex="-1"><a class="header-anchor" href="#_4-结论"><span>4. 结论</span></a></h2><p>在本教程中，我们学习了如何通过不同的实时案例检查MongoDB服务器的连接。</p><p>首先，我们使用mongo默认命令检查了连接，然后使用了经过身份验证的命令，还连接到了在自定义端口上运行的MongoDB服务器。接下来，我们检查了MongoDB shell和Java驱动代码的连接。</p><p>所有案例的示例都可以在GitHub上找到。</p>`,31),p=[t];function l(c,i){return a(),s("div",null,p)}const d=n(o,[["render",l],["__file","2024-07-19-Checking Connection to MongoDB.html.vue"]]),g=JSON.parse('{"path":"/posts/baeldung/2024-07-19/2024-07-19-Checking%20Connection%20to%20MongoDB.html","title":"检查与MongoDB的连接","lang":"zh-CN","frontmatter":{"date":"2022-04-01T00:00:00.000Z","category":["MongoDB","Java"],"tag":["MongoDB","Java","Connection"],"head":[["meta",{"name":"keywords","content":"MongoDB, Java, Connection, Check"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-19/2024-07-19-Checking%20Connection%20to%20MongoDB.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"检查与MongoDB的连接"}],["meta",{"property":"og:description","content":"检查与MongoDB的连接 1. 概述 在本教程中，我们将学习如何检查与MongoDB的连接。 重要的是要连接到单个MongoDB实例，我们需要指定MongoDB实例的URI。 2. 使用Mongo Shell检查连接 在本节中，我们将使用mongo shell命令连接到MongoDB服务器。我们将探索连接到MongoDB的不同情况。 2.1. 在默认..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-19T17:11:35.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"MongoDB"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Connection"}],["meta",{"property":"article:published_time","content":"2022-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-19T17:11:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"检查与MongoDB的连接\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-19T17:11:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"检查与MongoDB的连接 1. 概述 在本教程中，我们将学习如何检查与MongoDB的连接。 重要的是要连接到单个MongoDB实例，我们需要指定MongoDB实例的URI。 2. 使用Mongo Shell检查连接 在本节中，我们将使用mongo shell命令连接到MongoDB服务器。我们将探索连接到MongoDB的不同情况。 2.1. 在默认..."},"headers":[{"level":2,"title":"1. 概述","slug":"_1-概述","link":"#_1-概述","children":[]},{"level":2,"title":"2. 使用Mongo Shell检查连接","slug":"_2-使用mongo-shell检查连接","link":"#_2-使用mongo-shell检查连接","children":[{"level":3,"title":"2.1. 在默认端口上检查连接","slug":"_2-1-在默认端口上检查连接","link":"#_2-1-在默认端口上检查连接","children":[]},{"level":3,"title":"2.2. 在受保护的MongoDB数据库上检查连接","slug":"_2-2-在受保护的mongodb数据库上检查连接","link":"#_2-2-在受保护的mongodb数据库上检查连接","children":[]},{"level":3,"title":"2.3. 在自定义端口上检查连接","slug":"_2-3-在自定义端口上检查连接","link":"#_2-3-在自定义端口上检查连接","children":[]}]},{"level":2,"title":"3. 使用Java驱动代码检查连接","slug":"_3-使用java驱动代码检查连接","link":"#_3-使用java驱动代码检查连接","children":[]},{"level":2,"title":"4. 结论","slug":"_4-结论","link":"#_4-结论","children":[]}],"git":{"createdTime":1721409095000,"updatedTime":1721409095000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.78,"words":833},"filePathRelative":"posts/baeldung/2024-07-19/2024-07-19-Checking Connection to MongoDB.md","localizedDate":"2022年4月1日","excerpt":"<hr>\\n<h1>检查与MongoDB的连接</h1>\\n<h2>1. 概述</h2>\\n<p>在本教程中，我们将学习如何检查与MongoDB的连接。</p>\\n<p>重要的是要连接到单个MongoDB实例，我们需要指定MongoDB实例的URI。</p>\\n<h2>2. 使用Mongo Shell检查连接</h2>\\n<p>在本节中，我们将使用mongo shell命令连接到MongoDB服务器。我们将探索连接到MongoDB的不同情况。</p>\\n<h3>2.1. 在默认端口上检查连接</h3>\\n<p><strong>默认情况下，MongoDB运行在端口_27017_，但我们也可以在其他端口上运行它。</strong> 我们可以使用简单的mongo命令连接到MongoDB服务器：</p>","autoDesc":true}');export{d as comp,g as data};
