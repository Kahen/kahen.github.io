import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as s,a as t}from"./app-D9qUUkNr.js";const e={},o=t(`<h1 id="java中将long转换为string的方法" tabindex="-1"><a class="header-anchor" href="#java中将long转换为string的方法"><span>Java中将Long转换为String的方法</span></a></h1><p>在这篇简短的教程中，我们将学习如何在Java中将<strong>Long</strong>转换为<strong>String</strong>。</p><h2 id="_2-使用long-tostring" tabindex="-1"><a class="header-anchor" href="#_2-使用long-tostring"><span>2. 使用Long.toString()</span></a></h2><p>例如，假设我们有两个类型为<strong>long</strong>和<strong>Long</strong>的变量（一个是原始类型，另一个是引用类型）：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">long</span> l <span class="token operator">=</span> <span class="token number">10L</span><span class="token punctuation">;</span>
<span class="token class-name">Long</span> obj <span class="token operator">=</span> <span class="token number">15L</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以直接使用<strong>Long</strong>类的<strong>toString()<strong>方法将它们转换为</strong>String</strong>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出将如下所示：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token number">10</span>
<span class="token number">15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果我们的<strong>obj</strong>对象是<strong>null</strong>，我们将得到一个<strong>NullPointerException</strong>。</p><h2 id="_3-使用string-valueof" tabindex="-1"><a class="header-anchor" href="#_3-使用string-valueof"><span>3. 使用String.valueOf()</span></a></h2><p>我们可以使用<strong>String</strong>类的**valueOf()**方法达到相同的目的：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当<strong>obj</strong>是<strong>null</strong>时，该方法将把<strong>str2</strong>设置为“null”，而不是抛出<strong>NullPointerException</strong>。</p><h2 id="_4-使用string-format" tabindex="-1"><a class="header-anchor" href="#_4-使用string-format"><span>4. 使用String.format()</span></a></h2><p>除了<strong>String</strong>类的**valueOf()<strong>方法，我们还可以使用</strong>format()**方法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果<strong>obj</strong>是<strong>null</strong>，<strong>str2</strong>也将是“null”。</p><h2 id="_5-使用long对象的tostring-方法" tabindex="-1"><a class="header-anchor" href="#_5-使用long对象的tostring-方法"><span>5. 使用Long对象的toString()方法</span></a></h2><p>我们的<strong>obj</strong>对象可以使用其<strong>toString()<strong>方法获得</strong>String</strong>表示：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当然，如果<strong>obj</strong>是<strong>null</strong>，我们将得到一个<strong>NullPointerException</strong>。</p><h2 id="_6-使用-运算符" tabindex="-1"><a class="header-anchor" href="#_6-使用-运算符"><span>6. 使用+运算符</span></a></h2><p>我们可以简单地使用+运算符与一个空的<strong>String</strong>来获得相同的结果：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> l<span class="token punctuation">;</span>
<span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> obj<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果<strong>obj</strong>是<strong>null</strong>，<strong>str2</strong>将是“null”。</p><h2 id="_7-使用stringbuilder或stringbuffer" tabindex="-1"><a class="header-anchor" href="#_7-使用stringbuilder或stringbuffer"><span>7. 使用StringBuilder或StringBuffer</span></a></h2><p><strong>StringBuilder</strong>和<strong>StringBuffer</strong>对象可以用来将<strong>Long</strong>转换为<strong>String</strong>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果<strong>obj</strong>是<strong>null</strong>，<strong>str2</strong>将是“null”。</p><h2 id="_8-使用decimalformat" tabindex="-1"><a class="header-anchor" href="#_8-使用decimalformat"><span>8. 使用DecimalFormat</span></a></h2><p>最后，我们可以使用<strong>DecimalFormat</strong>对象的**format()**方法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DecimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DecimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，因为<strong>如果obj是null，我们将得到一个IllegalArgumentException</strong>。</p><h2 id="_9-结论" tabindex="-1"><a class="header-anchor" href="#_9-结论"><span>9. 结论</span></a></h2><p>总之，我们学习了在Java中将<strong>Long</strong>转换为<strong>String</strong>的不同方法。选择使用哪种方法取决于我们，但通常最好使用简洁且不抛出异常的方法。</p>`,36),p=[o];function r(l,i){return s(),a("div",null,p)}const g=n(e,[["render",r],["__file","2024-07-25-Convert Long to String in Java.html.vue"]]),d=JSON.parse('{"path":"/posts/baeldung/2024-07-25/2024-07-25-Convert%20Long%20to%20String%20in%20Java.html","title":"Java中将Long转换为String的方法","lang":"zh-CN","frontmatter":{"date":"2022-04-01T00:00:00.000Z","category":["Java","Programming"],"tag":["Long to String","Java"],"head":[["meta",{"name":"keywords","content":"Java, Long to String, Conversion"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-25/2024-07-25-Convert%20Long%20to%20String%20in%20Java.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"Java中将Long转换为String的方法"}],["meta",{"property":"og:description","content":"Java中将Long转换为String的方法 在这篇简短的教程中，我们将学习如何在Java中将Long转换为String。 2. 使用Long.toString() 例如，假设我们有两个类型为long和Long的变量（一个是原始类型，另一个是引用类型）： 我们可以直接使用Long类的toString()方法将它们转换为String： 输出将如下所示： ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-25T16:54:00.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"Long to String"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-25T16:54:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java中将Long转换为String的方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-25T16:54:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"Java中将Long转换为String的方法 在这篇简短的教程中，我们将学习如何在Java中将Long转换为String。 2. 使用Long.toString() 例如，假设我们有两个类型为long和Long的变量（一个是原始类型，另一个是引用类型）： 我们可以直接使用Long类的toString()方法将它们转换为String： 输出将如下所示： ..."},"headers":[{"level":2,"title":"2. 使用Long.toString()","slug":"_2-使用long-tostring","link":"#_2-使用long-tostring","children":[]},{"level":2,"title":"3. 使用String.valueOf()","slug":"_3-使用string-valueof","link":"#_3-使用string-valueof","children":[]},{"level":2,"title":"4. 使用String.format()","slug":"_4-使用string-format","link":"#_4-使用string-format","children":[]},{"level":2,"title":"5. 使用Long对象的toString()方法","slug":"_5-使用long对象的tostring-方法","link":"#_5-使用long对象的tostring-方法","children":[]},{"level":2,"title":"6. 使用+运算符","slug":"_6-使用-运算符","link":"#_6-使用-运算符","children":[]},{"level":2,"title":"7. 使用StringBuilder或StringBuffer","slug":"_7-使用stringbuilder或stringbuffer","link":"#_7-使用stringbuilder或stringbuffer","children":[]},{"level":2,"title":"8. 使用DecimalFormat","slug":"_8-使用decimalformat","link":"#_8-使用decimalformat","children":[]},{"level":2,"title":"9. 结论","slug":"_9-结论","link":"#_9-结论","children":[]}],"git":{"createdTime":1721926440000,"updatedTime":1721926440000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.68,"words":505},"filePathRelative":"posts/baeldung/2024-07-25/2024-07-25-Convert Long to String in Java.md","localizedDate":"2022年4月1日","excerpt":"\\n<p>在这篇简短的教程中，我们将学习如何在Java中将<strong>Long</strong>转换为<strong>String</strong>。</p>\\n<h2>2. 使用Long.toString()</h2>\\n<p>例如，假设我们有两个类型为<strong>long</strong>和<strong>Long</strong>的变量（一个是原始类型，另一个是引用类型）：</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">long</span> l <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10L</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">Long</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token number\\">15L</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{g as comp,d as data};
