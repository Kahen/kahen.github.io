import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,o as t,a as i}from"./app-CseMoHkL.js";const a={},n=i('<h1 id="jpa-支持-2021年工具生态系统现状" tabindex="-1"><a class="header-anchor" href="#jpa-支持-2021年工具生态系统现状"><span>JPA 支持 - 2021年工具生态系统现状</span></a></h1><p>在本教程中，我们将看看一些支持JPA的工具。我们将重点介绍两个最流行的IDE：IntelliJ IDEA和Eclipse中可用的插件。</p><h2 id="_2-intellij-idea和eclipse中的jpa支持" tabindex="-1"><a class="header-anchor" href="#_2-intellij-idea和eclipse中的jpa支持"><span>2. IntelliJ IDEA和Eclipse中的JPA支持</span></a></h2><p>JPA是Java应用程序中使用关系数据库的最广泛使用的规范。实际上，<strong>JPA定义了从注解到数据处理规则的所有实现方面。</strong></p><p>我们通常不仅仅在JPA实体上工作。除了纯ORM相关的代码，我们可能还需要诸如数据库版本控制系统、SQL/JPQL/HQL查询优化、与IoC容器的集成等。这就是插件变得非常有帮助的地方。它们可以支持数据库逆向工程、模式生成、迁移脚本生成或Spring Data JPA存储库脚手架。</p><p>当涉及到在应用程序开发中使用JPA框架时，通常都是通过IDE来完成的。这是因为它们为我们提供了<strong>一套强大的工具，以提高开发人员的生产力：</strong></p><ul><li>样板代码生成</li><li>数据库逆向工程</li><li>数据对象定义生成</li><li>Java和JPQL的高级代码自动完成</li><li>JPA特定的代码建议</li><li>等等。</li></ul><p>让我们看看两个最常见的IDE - IntelliJ IDEA和Eclipse - 它们在JPA应用程序开发支持方面提供了什么。</p><h2 id="_3-intellij-idea" tabindex="-1"><a class="header-anchor" href="#_3-intellij-idea"><span>3. IntelliJ IDEA</span></a></h2><p>IntelliJ IDEA有两个版本：社区版（免费）和旗舰版（付费）。<strong>旗舰版捆绑了一个支持JPA的插件。</strong></p><p>另一方面，社区版没有为使用JPA、Hibernate、Spring Data等提供专门的支持。</p><p>然而，IntelliJ拥有一个广泛的市场，有各种插件。因此，我们可以找到几乎所有技术的插件，JPA也不例外。</p><p><strong>对于IntelliJ IDEA社区版用户，我们将介绍JPA Buddy插件</strong>来支持JPA特性。尽管它也可以作为IntelliJ IDEA旗舰版的一个很好的补充。</p><h3 id="_3-1-intellij旗舰版的jpa插件" tabindex="-1"><a class="header-anchor" href="#_3-1-intellij旗舰版的jpa插件"><span>3.1. IntelliJ旗舰版的JPA插件</span></a></h3><p>这个插件提供了一套高级功能，包括：</p><ul><li>JPA实体的ER图</li><li>持久性工具窗口</li><li>数据库逆向工程</li><li>JPA控制台，用于测试JPQL语句并生成DDL脚本</li><li>JPA特定的代码检查和自动完成</li></ul><p>在IntelliJ IDEA旗舰版中，我们可以使用专用的工具窗口 - “持久性”。这将显示项目中JPA实体的结构。</p><p>在这个视图中，我们可以使用可视化工具创建实体属性和关系：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2021/06/persistence.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>“持久性”窗口还允许我们使用代码编辑器中的嵌入图标快速导航代码及其相关的实体层次结构。</p><p>我们还可以利用逆向工程过程。它将为我们生成JPA实体、关联和适当的注解。同时，它还会创建_persistence.xml_文件或更新一个已存在的文件。</p><p>除了通用的JPA支持外，如果我们选择Hibernate作为JPA实现，它还会提供额外的帮助。我们可以执行Hibernate特定的操作，例如（但不限于）：</p><ul><li>管理配置和映射文件</li><li>在HQL控制台中执行HQL查询</li></ul><p>有一个详细的评论展示了插件在YouTube上的实际使用情况。</p><h3 id="_3-2-jpa-buddy" tabindex="-1"><a class="header-anchor" href="#_3-2-jpa-buddy"><span>3.2. JPA Buddy</span></a></h3><p><strong>JPA Buddy提供了一套可视化编辑器，用于处理JPA实体和Spring Data JPA</strong>存储库。此外，它还支持Java和Kotlin语言。</p><p>让我们看看它提供的主要功能：</p><ul><li>可视化工具和代码导航</li><li>Hibernate Bean验证支持</li><li>Hibernate类型和JPA转换器支持</li><li>数据库版本工具支持（Liquibase和Flyway）</li><li>JPA特定的代码检查</li><li>Kotlin支持</li><li>Spring Data存储库可视化设计器</li></ul><p>我们不需要记住所有的JPA注解、Spring Data存储库方法命名规则或Liquibase标签。插件允许我们从调色板中选择所需的项目。</p><p>因此，<strong>它使我们能够使用可视化编辑器更新它们的属性</strong>，而不是编写代码：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2021/06/buddy3.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>JPA Buddy解决的另一个挑战是数据库版本控制。插件支持Liquibase和Flyway工具，并可以生成相应的XML或SQL迁移脚本。</p><p>JPA Buddy通过比较项目数据库与代码库中定义的实际JPA实体来生成脚本。生成后，我们可以在将脚本保存到代码库之前审查生成的脚本并更新它们。</p><p>除了这个之外，<strong>插件还引入了几个智能检查和快速修复</strong>，例如：</p><ul><li>实体代码中缺少ID字段</li><li>缺少无参数构造函数</li><li>Lombok使用中的潜在问题（例如，不当的equals()和hashCode()定义）</li></ul><p>除了JPA支持外，插件<strong>还可以协助创建Spring Data JPA存储库</strong>。它提供了可视化编辑器，可以帮助我们进行正确的存储库方法命名。</p><h2 id="_4-eclipse" tabindex="-1"><a class="header-anchor" href="#_4-eclipse"><span>4. Eclipse</span></a></h2><p>众所周知，Eclipse有一个庞大的插件生态系统。尽管如此，<strong>Dali Tools插件是Eclipse IDE中JPA支持的事实标准</strong>。</p><p>让我们探索这个插件。然后，我们将看看如果我们的项目中使用Hibernate，我们可以得到一些额外的支持。</p><h3 id="_4-1-dali-tools" tabindex="-1"><a class="header-anchor" href="#_4-1-dali-tools"><span>4.1. Dali Tools</span></a></h3><p><strong>Dali涵盖了JPA开发的几乎所有领域</strong>。它的功能包括（但不限于）：</p><ul><li>JPA实体的ER图</li><li>可视化编辑器和导航器</li><li>基于JPA模型的DDL（SQL）生成</li><li>数据库逆向工程</li></ul><p>插件提供了<strong>两个主要的可视化工具</strong>。上下文相关的“JPA Details”编辑器允许我们处理我们可以在“JPA Structure”导航器中选择的不同JPA对象：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2021/06/dali.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>我们可以选择并更改：</p><ul><li>实体定义，包括命名查询（带JPQL代码辅助）</li><li>实体属性和关联：一对多、多对一等</li><li>_orm.xml_文件。我们可以编辑项目的默认映射和持久性信息</li></ul><p>此外，专用的_persistence.xml_编辑器允许我们避免记忆所有可以根据JPA规范在配置文件中使用的参数。我们可以编辑从连接选项到锁定超时或验证模式的所有内容。</p><p>Dali Tools插件<strong>可以基于JPA模型生成并执行DDL SQL</strong>，针对特定数据库。此外，执行阶段与生成阶段分离，因此我们可以在将其应用于应用程序的数据库之前审查生成的SQL。</p><p>数据库逆向工程过程设置允许我们更改实体代码中的以下选项：</p><ul><li>PK生成策略</li><li>字段访问策略</li><li>关联获取策略</li><li>集合属性类（列表，集合，...）</li></ul><h3 id="_4-2-jboss-hibernate-tools" tabindex="-1"><a class="header-anchor" href="#_4-2-jboss-hibernate-tools"><span>4.2. JBoss Hibernate Tools</span></a></h3><p>让我们看看如果我们需要特定于Hibernate的支持，我们有哪些选择。在Eclipse插件库中，我们可以找到Jboss Hibernate Tools插件。</p><p><strong>这个插件可以独立使用，也可以与JPA Tools结合使用</strong>，并提供：</p><ul><li>代码生成工具，包括逆向工程和重构</li><li>高级Hibernate配置和映射文件显示和编辑</li><li>HQL执行控制台和SQL预览</li><li>数据模型导出</li></ul><p>逆向工程工具允许我们配置许多选项，包括表名掩码、类型映射，甚至可以从生成的实体类中排除某些列：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2021/06/features-hibernate-launchconfig-reveng.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>生成的JPA实体可以表示为带有*.hbm.xml*映射文件的POJO，或者作为注释类。此外，插件支持为每个实体生成DAO对象，带有CRUD方法。DAO使用Hibernate特定的类进行数据库访问。</p><p>HQL执行控制台和标准编辑器允许我们生成并执行HQL查询。除了执行任意HQL外，控制台还为HQL语句提供SQL预览。这可能有助于创建优化的SQL查询，以避免“n+1选择”和其他ORM边缘情况。</p><h2 id="_5-结论" tabindex="-1"><a class="header-anchor" href="#_5-结论"><span>5. 结论</span></a></h2><p>在本文中，我们介绍了在最受欢迎的Java IDEs：IntelliJ IDEA和Eclipse中可用的几种JPA支持工具。</p><p>我们看到这些工具如何在开发过程中帮助编写更好的应用程序并提高生产力。因此，在选择最佳工具时，我们不仅要注意“纯JPA”特性，还要注意与IDE和所选开发堆栈的集成。</p>',61),p=[n];function o(s,r){return t(),l("div",null,p)}const g=e(a,[["render",o],["__file","2024-07-29-JPA Support   State of the Tools Ecosystem in 2021.html.vue"]]),J=JSON.parse('{"path":"/posts/baeldung/2024-07-29/2024-07-29-JPA%20Support%20%20%20State%20of%20the%20Tools%20Ecosystem%20in%202021.html","title":"JPA 支持 - 2021年工具生态系统现状","lang":"zh-CN","frontmatter":{"date":"2021-06-22T00:00:00.000Z","category":["JPA","工具"],"tag":["JPA","工具","IntelliJ IDEA","Eclipse"],"head":[["meta",{"name":"keywords","content":"JPA, 工具, 教程, IntelliJ IDEA, Eclipse"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-29/2024-07-29-JPA%20Support%20%20%20State%20of%20the%20Tools%20Ecosystem%20in%202021.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"JPA 支持 - 2021年工具生态系统现状"}],["meta",{"property":"og:description","content":"JPA 支持 - 2021年工具生态系统现状 在本教程中，我们将看看一些支持JPA的工具。我们将重点介绍两个最流行的IDE：IntelliJ IDEA和Eclipse中可用的插件。 2. IntelliJ IDEA和Eclipse中的JPA支持 JPA是Java应用程序中使用关系数据库的最广泛使用的规范。实际上，JPA定义了从注解到数据处理规则的所有实..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.baeldung.com/wp-content/uploads/2021/06/persistence.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-29T01:04:20.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"JPA"}],["meta",{"property":"article:tag","content":"工具"}],["meta",{"property":"article:tag","content":"IntelliJ IDEA"}],["meta",{"property":"article:tag","content":"Eclipse"}],["meta",{"property":"article:published_time","content":"2021-06-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-29T01:04:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JPA 支持 - 2021年工具生态系统现状\\",\\"image\\":[\\"https://www.baeldung.com/wp-content/uploads/2021/06/persistence.png\\",\\"https://www.baeldung.com/wp-content/uploads/2021/06/buddy3.png\\",\\"https://www.baeldung.com/wp-content/uploads/2021/06/dali.png\\",\\"https://www.baeldung.com/wp-content/uploads/2021/06/features-hibernate-launchconfig-reveng.png\\"],\\"datePublished\\":\\"2021-06-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-29T01:04:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"JPA 支持 - 2021年工具生态系统现状 在本教程中，我们将看看一些支持JPA的工具。我们将重点介绍两个最流行的IDE：IntelliJ IDEA和Eclipse中可用的插件。 2. IntelliJ IDEA和Eclipse中的JPA支持 JPA是Java应用程序中使用关系数据库的最广泛使用的规范。实际上，JPA定义了从注解到数据处理规则的所有实..."},"headers":[{"level":2,"title":"2. IntelliJ IDEA和Eclipse中的JPA支持","slug":"_2-intellij-idea和eclipse中的jpa支持","link":"#_2-intellij-idea和eclipse中的jpa支持","children":[]},{"level":2,"title":"3. IntelliJ IDEA","slug":"_3-intellij-idea","link":"#_3-intellij-idea","children":[{"level":3,"title":"3.1. IntelliJ旗舰版的JPA插件","slug":"_3-1-intellij旗舰版的jpa插件","link":"#_3-1-intellij旗舰版的jpa插件","children":[]},{"level":3,"title":"3.2. JPA Buddy","slug":"_3-2-jpa-buddy","link":"#_3-2-jpa-buddy","children":[]}]},{"level":2,"title":"4. Eclipse","slug":"_4-eclipse","link":"#_4-eclipse","children":[{"level":3,"title":"4.1. Dali Tools","slug":"_4-1-dali-tools","link":"#_4-1-dali-tools","children":[]},{"level":3,"title":"4.2. JBoss Hibernate Tools","slug":"_4-2-jboss-hibernate-tools","link":"#_4-2-jboss-hibernate-tools","children":[]}]},{"level":2,"title":"5. 结论","slug":"_5-结论","link":"#_5-结论","children":[]}],"git":{"createdTime":1722215060000,"updatedTime":1722215060000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":7,"words":2100},"filePathRelative":"posts/baeldung/2024-07-29/2024-07-29-JPA Support   State of the Tools Ecosystem in 2021.md","localizedDate":"2021年6月22日","excerpt":"\\n<p>在本教程中，我们将看看一些支持JPA的工具。我们将重点介绍两个最流行的IDE：IntelliJ IDEA和Eclipse中可用的插件。</p>\\n<h2>2. IntelliJ IDEA和Eclipse中的JPA支持</h2>\\n<p>JPA是Java应用程序中使用关系数据库的最广泛使用的规范。实际上，<strong>JPA定义了从注解到数据处理规则的所有实现方面。</strong></p>\\n<p>我们通常不仅仅在JPA实体上工作。除了纯ORM相关的代码，我们可能还需要诸如数据库版本控制系统、SQL/JPQL/HQL查询优化、与IoC容器的集成等。这就是插件变得非常有帮助的地方。它们可以支持数据库逆向工程、模式生成、迁移脚本生成或Spring Data JPA存储库脚手架。</p>","autoDesc":true}');export{g as comp,J as data};
