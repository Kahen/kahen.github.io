const __vite__fileDeps=["assets/index.html-WEX6JsbD.js","assets/plugin-vue_export-helper-DlAUqK2U.js","assets/gRPC Authentication in Java Using Application Layer Transport Security (ALTS).html-DqmoYz-1.js","assets/mongo-share.html-DhZWxh7h.js","assets/在Mac说安装postgresql并且创建一个数据库单独给一个用户赋予权限.html-DchQJkWF.js","assets/2024-06-21- DataJpaTest and Repository Class in JUnit.html-CC8ow63-.js","assets/2024-06-21-Count the Number of Unique Digits in an Integer using Java.html-CUzQMziO.js","assets/2024-06-21-Create JavaType From Class with Jackson.html-C0RlcB0j.js","assets/2024-06-21-Custom Event Handlers and Listeners in Netty.html-CYCqc0RJ.js","assets/2024-06-21-Difference Between GroupId and ConsumerId in Apache Kafka.html-BMV3uugx.js","assets/2024-06-21-Document Query Parameters with Spring REST Docs.html-P7brfOHE.js","assets/2024-06-21-Find an Unique Email Address in a List.html-BXYhi4qH.js","assets/2024-06-21-Finding the Parent of a Node in a Binary Search Tree with Java.html-Bb3CNgfc.js","assets/2024-06-21-Generate Juggler Sequence in Java.html-B7Ph0Gfk.js","assets/2024-06-21-Get First n Characters in a String in Java.html-DTIKFUh7.js","assets/2024-06-21-Get the Initials of a Name in Java.html-DxWOf2z4.js","assets/2024-06-21-Gson TypeToken With Dynamic List Item Type.html-BhR0eRlT.js","assets/2024-06-21-How to Mock Amazon S3 for Integration Test.html-CygNyXn_.js","assets/2024-06-21-How to Pretty Print a Map in Java.html-DTJtPgHA.js","assets/2024-06-21-Implementing GraphQL Mutation Without Returning Data.html-L42cEor9.js","assets/2024-06-21-Increase the Memory Size Limit on IntelliJ IDEA.html-DxE04Ut6.js","assets/2024-06-21-Iterating All Fields of a Data Class Without Reflection in Kotlin.html-DUTXUv8k.js","assets/2024-06-21-Migrate Application from Spring Security 5 to Spring Security 6 Spring Boot 3.html-a15TBi4Y.js","assets/2024-06-21-Modify and Print List Items With Java Streams.html-CyMwsGCo.js","assets/2024-06-21-Query Hints in Spring Data JPA.html-s27W8itA.js","assets/2024-06-21-Railway Oriented Programming in Kotlin.html-8_YvLmdT.js","assets/2024-06-21-Remove Only Trailing Spaces or Whitespace From a String in Java.html-usRc4cd4.js","assets/2024-06-21-Serialization with FlatBuffers in Java.html-3bDo9jBD.js","assets/2024-06-21-Simplified Array Operations on JsonNode Without Typecasting in Jackson.html-BOw_ce_A.js","assets/2024-06-21-Skip Select Before Insert in Spring Data JPA.html-Bg_RB0eq.js","assets/2024-06-21-Spring Data JPA Repository for Database View.html-CwEdpld3.js","assets/2024-06-21-Testcontainers Desktop.html-BF8xEyjs.js","assets/2024-06-22-A Guide to etcd.html-D-TEonBd.js","assets/2024-06-22-A Guide to the  SoftDelete Annotation in Hibernate.html-lk8iTsSU.js","assets/2024-06-22-Add Camel Route at Runtime in Java.html-BS-VKkyG.js","assets/2024-06-22-Calculate Weighted Mean in Java.html-DrGMkWR0.js","assets/2024-06-22-Check if String is Base64 Encoded.html-Cv1b9Hra.js","assets/2024-06-22-Check if Two Strings Are Rotations of Each Other.html-CPG-cA2I.js","assets/2024-06-22-Check if a String Is Equal to Its Mirror Reflection.html-DGA8X_79.js","assets/2024-06-22-Collect Stream of entrySet   to a LinkedHashMap.html-CPYWxd3n.js","assets/2024-06-22-CompletableFuture runAsync   vs. supplyAsync   in Java.html-D6Aiu0JO.js","assets/2024-06-22-Convert Date to Unix Timestamp in Java.html-CJJeVVV2.js","assets/2024-06-22-Convert Infix to Postfix Expressions in Java.html-Cot3-G4v.js","assets/2024-06-22-Count Uppercase and Lowercase Letters in a String.html-CLQkiOSm.js","assets/2024-06-22-CountDownLatch vs. Semaphore.html-CtO4ggHB.js","assets/2024-06-22-Creating a Custom URL Connection.html-BPDZ5xYL.js","assets/2024-06-22-Difference Between thenApply   and thenApplyAsync   in CompletableFuture.html-DWOjD0Ln.js","assets/2024-06-22-Find The Largest Number in a String.html-B6Tx7ydq.js","assets/2024-06-22-Find the Equilibrium Indexes of an Array in Java.html-Cdvf887d.js","assets/2024-06-22-Find the First Non repeating Element of a List.html-C8Nj-n7m.js","assets/2024-06-22-Get All Results at Once in a Spring Boot Paged Query Method.html-BlsmT3nT.js","assets/2024-06-22-Get a Range of Items from a Stream in Java.html-BBiNch_-.js","assets/2024-06-22-Guide to System.in.read  .html-8zNqJk_b.js","assets/2024-06-22-How To Use findBy   With Multiple Columns in JPA.html-BW6lnZE_.js","assets/2024-06-22-How to Check if a Variable Is Defined in Thymeleaf.html-B1cbOw7N.js","assets/2024-06-22-Injecting  Mock and  Captor in JUnit 5 Method Parameters.html-B5_eHzOH.js","assets/2024-06-22-Install OpenJDK on Windows.html-DVEq5wPJ.js","assets/2024-06-22-Instantiate an Inner Class With Reflection in Java.html-CGLCsBwt.js","assets/2024-06-22-Introduction to OpenGrok.html-CcY1HNJW.js","assets/2024-06-22-Logging With AOP in Spring.html-DyCHxiJH.js","assets/2024-06-22-Mask an Email Address and Phone Number in Java.html-DzoX_Vna.js","assets/2024-06-22-Moves Zeros to the End of an Array in Java.html-D3otKZ8K.js","assets/2024-06-22-Mutable vs. Immutable Objects in Java.html-DBKJ9sA4.js","assets/2024-06-22-OAuth2 Backend for Frontend With Spring Cloud Gateway.html-DS7YH7X8.js","assets/2024-06-22-Pagination With JDBC.html-CYhFpLg9.js","assets/2024-06-22-Parse String With Thousands Separator in Kotlin.html-Ci_0C6ww.js","assets/2024-06-22-Preventing Gson from Expressing Integers as Floats.html-CXHIyyX6.js","assets/2024-06-22-Quarkus and Virtual Threads.html-CauASmVI.js","assets/2024-06-22-Run Maven From Java Code.html-UC2W3W0p.js","assets/2024-06-22-Simple Web Server in Java 18.html-UK7_K00x.js","assets/2024-06-22-Solving Rod Cutting Problem in Java.html-BSxp2KOF.js","assets/2024-06-22-Storing UUID as Base64 String in Java.html-D7CnQW6X.js","assets/2024-06-22-Translating Space Characters in URLEncoder.html-CtqGpkVO.js","assets/2024-06-22-Understanding  Raw type. References to generic types should be parameterized  Error.html-B1Sgmfae.js","assets/2024-06-22-Understanding Kafka InstanceAlreadyExistsException in Java.html-CDu8ewY4.js","assets/2024-06-22-View Kafka Headers in Java.html-Cj__siIQ.js","assets/2024-06-23-Access Job Parameters From ItemReader in Spring Batch.html-CsvWmzQG.js","assets/2024-06-23-Apply Bold Text Style for an Entire Row Using Apache POI.html-I5xusa4X.js","assets/2024-06-23-Builder Pattern and Inheritance.html-B2A-yzyO.js","assets/2024-06-23-Calculate Number of Weekdays Between Two Dates in Java.html-EIZKls07.js","assets/2024-06-23-Calculating the Power of Any Number in Java Without Using Math pow   Method.html-D-OLCAAH.js","assets/2024-06-23-Check if Two Date Ranges Overlap.html-CseC8H6s.js","assets/2024-06-23-Convert Gregorian to Hijri Date in Java.html-3uH5NCqz.js","assets/2024-06-23-Convert Long to Date in Java.html-CnBjNldr.js","assets/2024-06-23-Convert String Date to XMLGregorianCalendar in Java.html-BlAmUKN_.js","assets/2024-06-23-Convert byte to int Type in Java.html-Vd4ZcEXj.js","assets/2024-06-23-Creating Unicode Character From Its Code Point Hex String.html-DCy4UudV.js","assets/2024-06-23-Custom JSON Deserialization Using Spring WebClient.html-6HNsmVA6.js","assets/2024-06-23-Difference Between  mvn verify  and  mvn test .html-Dq-CeE28.js","assets/2024-06-23-Difference Between mvn install and mvn verify.html-DWYNk_hF.js","assets/2024-06-23-Difference between ZoneOffset.UTC and ZoneId.of  UTC  .html-BrUpR2WJ.js","assets/2024-06-23-Enable Java SSL Debug Logging.html-NYF8nLWs.js","assets/2024-06-23-Event Driven Microservices With Orkes Conductor.html-Bnh_wbgP.js","assets/2024-06-23-Event Externalization with Spring Modulith.html-ukTj3iFq.js","assets/2024-06-23-Generating Unique Positive Long Using SecureRandom in Java.html-3ipqAq5I.js","assets/2024-06-23-How to Catch Deserialization Errors in Spring Kafka .html-CPydBUFa.js","assets/2024-06-23-How to Determine if a String Contains Invalid Encoded Characters.html-Dgrh4TOb.js","assets/2024-06-23-How to Find the URL of a Service in Kubernetes.html-DDS_oSbx.js","assets/2024-06-23-Improving Test Coverage and Readability With Spock s Data Pipes and Tables.html-_ScfX4uf.js","assets/2024-06-23-Introduction to KotlinPoet.html-dfP794df.js","assets/2024-06-23-Introduction to gRPC with Spring Boot.html-BQAF2Hp9.js","assets/2024-06-23-JFR View Command in Java 21.html-Dpjd_FYE.js","assets/2024-06-23-List vs. Set in  OneToMany JPA.html-9CT1sH5X.js","assets/2024-06-23-Looking for a Backend Java Spring Team Lead with Integration Experience  Remote   Part Time    not open.html-WjmlfRq-.js","assets/2024-06-23-Monkey Patching in Java.html-D2CcTnFq.js","assets/2024-06-23-N 1 Problem in Hibernate and Spring Data JPA.html-BCHPVO_S.js","assets/2024-06-23-Normalize a URL in Java.html-D7tBXRYX.js","assets/2024-06-23-Print a Java 2D Array.html-CED8VJsn.js","assets/2024-06-23-Read and Write Files in Java Using Separate Threads.html-B1_QZujp.js","assets/2024-06-23-Regular Expression for Password Validation in Java.html-BWnUs-10.js","assets/2024-06-23-Reset ListIterator to First Element of the List in Java.html-DJmLLddZ.js","assets/2024-06-23-Rotate a Vertex Around a Certain Point in Java.html-BDI1tR9v.js","assets/2024-06-23-Run Length Encoding and Decoding in Java.html-7hjH05JU.js","assets/2024-06-23-Set an Environment Variable at Runtime in Java.html-6M3hKj-I.js","assets/2024-06-23-Setting up and Using Spock With Gradle.html-BzQAg_9p.js","assets/2024-06-23-Shutting Down on OutOfMemoryError in Java.html-D0t2a0FI.js","assets/2024-06-23-Simple Morse Code Translation in Java.html-CSXsU9cF.js","assets/2024-06-23-Structured Logging in Java.html-D-CwJ5yR.js","assets/2024-06-23-Using Current Time as Filename in Java.html-BvkoIpp1.js","assets/2024-06-24-Accessing Private Java Fields via Kotlin Extension Functions.html-D5f6joim.js","assets/2024-06-24-Add Authorities as Custom Claims in JWT Access Tokens in Spring Authorization Server.html-Bxqapzqn.js","assets/2024-06-24-Call a Method on Each Element of a List in Java.html-O_AgxyhZ.js","assets/2024-06-24-Check if List Contains at Least One Enum.html-Cgb6LciZ.js","assets/2024-06-24-Check if a Float Value is Equivalent to an Integer Value in Java.html-BcfvhHzN.js","assets/2024-06-24-Check if a Point Is Between Two Points Drawn on a Straight Line in Java.html-4ruDZxpS.js","assets/2024-06-24-Convert Joda Time DateTime to Date and Vice Versa.html-dR6zzhUF.js","assets/2024-06-24-Convert Null Value to a Default Value in Java.html-Cch_34Ow.js","assets/2024-06-24-Converting BigDecimal to Integer in Java.html-DHhZbfgQ.js","assets/2024-06-24-Converting Integer to BigDecimal in Java.html-Bogt6mnm.js","assets/2024-06-24-Create Kubernetes Operators with the Java Operator SDK.html-DqAzLtkk.js","assets/2024-06-24-Creating Reactive APIs With Micronaut and MongoDB.html-DtvB5d2X.js","assets/2024-06-24-Difference Between Xmx and MaxRAM JVM Parameters.html-BuodX79a.js","assets/2024-06-24-Difference Between a Future and a Promise in Java.html-BagIDCwr.js","assets/2024-06-24-Generational ZGC in Java 21.html-DkHO8SfO.js","assets/2024-06-24-Getting Query String Parameters from HttpServletRequest.html-BQTBosc1.js","assets/2024-06-24-Introduction to Apache Calcite.html-cXh2rB04.js","assets/2024-06-24-Introduction to Postman.html-ClbQhMqR.js","assets/2024-06-24-Introduction to Spring AI.html-CO9XcDAH.js","assets/2024-06-24-Introduction to Spring Cloud AWS 3.0   SQS Integration.html-x3ET0dbm.js","assets/2024-06-24-Java 8 Stream Operation on the Empty List.html-DM3MW5l_.js","assets/2024-06-24-Maven Dependencies Failing With a 501 Error  HTTPS Required .html-D8wNF9Nd.js","assets/2024-06-24-Printing Message on Console without Using main   Method in Java.html-DP_Qv3-v.js","assets/2024-06-24-PriorityQueue iterator   Method in Java.html-DLNhhGLk.js","assets/2024-06-24-Read Input Character by Character in Java.html-D7huu4vn.js","assets/2024-06-24-Remove Characters From a String That Are in the Other String.html-CnFLaZXn.js","assets/2024-06-24-Removing the Last Node in a Linked List.html-CXENK9Cm.js","assets/2024-06-24-Replace Non Printable Unicode Characters in Java.html-DURpF64a.js","assets/2024-06-24-Solving the ParameterResolutionException in JUnit 5.html-wBMB2KQJ.js","assets/2024-06-24-Upload Multiple Files Using WebFlux.html-B8KN7V97.js","assets/2024-06-24-Using Static Methods Instead of Deprecated JsonParser.html-CZjZB6Ol.js","assets/2024-06-24-What Happens When the JVM Runs Out of Memory to Allocate During Runtime .html-a56ByJBs.js","assets/2024-06-24-What Is the Error   Non static method cannot be referenced from a static context  .html-C4lNaUUh.js","assets/2024-06-25- Query Definitions With SpEL Support in Spring Data JPA.html-DUL7xBeT.js","assets/2024-06-25-BigDecimal.ZERO vs. new BigDecimal 0 .html-BqKRg2GZ.js","assets/2024-06-25-Calculate Months Between Two Dates in Java.html-BzHvcIBf.js","assets/2024-06-25-Callbacks in ListenableFuture and CompletableFuture.html-CgSnTK0a.js","assets/2024-06-25-Check If a Java StringBuilder Object Contains a Character.html-BeLxCJlJ.js","assets/2024-06-25-Comparing One String With Multiple Values in One Expression in Java.html-CwOqAxkE.js","assets/2024-06-25-Comparison of for Loops and Iterators.html-CaTddOz2.js","assets/2024-06-25-Convert Byte Array to JSON and Vice Versa in Java.html-D_jlWUKv.js","assets/2024-06-25-Convert Excel Files to PDF Using Java.html-uBkXKMpL.js","assets/2024-06-25-Convert String to long or Long in Java.html-EPNORJDp.js","assets/2024-06-25-Convert a String to a List of Characters in Java.html-C80KXGzJ.js","assets/2024-06-25-Convert an OutputStream to a Byte Array in Java.html-Bvj_gNrb.js","assets/2024-06-25-Detect the Last Iteration in for Loops in Java.html-vRD9BqB5.js","assets/2024-06-25-Difference Between 1L and  long  1.html-CUHUlUlv.js","assets/2024-06-25-Difference Between execute   and submit   in Executor Service.html-Be0DE1xA.js","assets/2024-06-25-Dijkstra s Algorithm in Kotlin.html-ofrIQPlh.js","assets/2024-06-25-Find Files by Extension in Specified Directory in Java.html-CqLsMISz.js","assets/2024-06-25-Find Missing Number From a Given Array in Java.html-DLCi_-j8.js","assets/2024-06-25-Fixing Hibernate QueryException  Named Parameter Not Bound.html-CPL3nbbF.js","assets/2024-06-25-Format LocalDate to ISO 8601 With T and Z.html-Cp3RoxHu.js","assets/2024-06-25-Get Client Information From HTTP Request in Java.html-B-r5dpuT.js","assets/2024-06-25-Getting All Field Names of a Class Using Kotlin Reflection.html-B1iIqB4O.js","assets/2024-06-25-How to Get Last Record in Spring Data JPA.html-D9aFt4-s.js","assets/2024-06-25-How to Write Strings to OutputStream in Java.html-CVsb-wcr.js","assets/2024-06-25-Java System.currentTimeMillis   Vs. System.nanoTime  .html-OtjI36Kt.js","assets/2024-06-25-Java s String.length   and String.getBytes  .length.html-Bp7pzzzj.js","assets/2024-06-25-Lazy Field Initialization with Lambdas.html-DIxNVgH9.js","assets/2024-06-25-Print a Double Value Without Scientific Notation in Java.html-BtfbEz2a.js","assets/2024-06-25-Reactor WebFlux vs Virtual Threads.html-M0JRN4CT.js","assets/2024-06-25-Read a File and Split It Into Multiple Files in Java.html-CBbjbY_y.js","assets/2024-06-25-Return Map Instead of List in Spring Data JPA.html-zhSgEfoT.js","assets/2024-06-25-Rotating a Java String By n Characters.html-tuzCVbvV.js","assets/2024-06-25-Sending Data to a Specific Partition in Kafka.html-CWdUpq5T.js","assets/2024-06-25-Sorting One List Based on Another List in Java.html-Dz0m3KWj.js","assets/2024-06-25-UTF 8 Validation in Java.html-0fI8SwTP.js","assets/2024-06-25-What Does It Mean to Hydrate an Object .html-C5vlCNd7.js","assets/2024-06-25-When to Use the getReferenceById   and findById   Methods in Spring Data JPA.html-T2PI3eGZ.js","assets/2024-06-26-A Guide to Timefold Solver for Employee Scheduling.html-GQAfCzLa.js","assets/2024-06-26-Connect to Database Through Intellij Data Sources and Drivers.html-CxbPqg6U.js","assets/2024-06-26-Deserializing JSON to Java Record using Gson.html-9BUUw6yL.js","assets/2024-06-26-Differences Between Entities and DTOs.html-Qbt94GUg.js","assets/2024-06-26-Extract Numbers From a String in Kotlin.html-BqKHMfUC.js","assets/2024-06-26-Get Index of First Element Matching Boolean Using Java Streams.html-CelpyoAz.js","assets/2024-06-26-Handling NullPointerException in findFirst   When the First Element Is Null.html-CBnk71T4.js","assets/2024-06-26-How to Effectively Unit Test CompletableFuture.html-BZijLVTj.js","assets/2024-06-26-Inter Process Communication Methods in Java.html-CFwgYfbI.js","assets/2024-06-26-Recursively Sum the Integers in an Array.html-GOxl3DiR.js","assets/2024-06-26-Skip Bytes in InputStream in Java.html-DCdoVuPh.js","assets/2024-06-26-Spring Kafka Trusted Packages Feature.html-CV19XpRa.js","assets/2024-06-26-Static Final Variables in Java.html-MiYRZ_KC.js","assets/2024-06-26-String s Maximum Length in Java.html-Bki1U8kP.js","assets/2024-06-26-String vs StringBuffer Comparison in Java.html-Cn-PuYgH.js","assets/2024-06-26-Verify That Lambda Expression Was Called Using Mockito.html-CPrFhq9y.js","assets/2024-06-19-Check if an Element Is Present in a Set in Java.html-BdTjfint.js","assets/2024-06-19-Checking Which Java Version Is Running in Eclipse.html-BLBNkiNy.js","assets/2024-06-19-Convert TemporalAccessor to LocalDate.html-DIi79J1N.js","assets/2024-06-19-Convert a Phone Number in Words to Number with Java.html-Cx53hQ_u.js","assets/2024-06-19-Disable  Cacheable in Spring Boot.html-CxmHfYiY.js","assets/2024-06-19-Disable  EnableScheduling on Spring Tests.html-Bsgr2nHp.js","assets/2024-06-19-Get Last n Characters From a String.html-BiRUbwOb.js","assets/2024-06-19-Get a Path to a Resource in a Java JAR File.html-D66aauKH.js","assets/2024-06-19-How to Check Number Perfection.html-CqSFAW9E.js","assets/2024-06-19-How to Scale a Bufferedimage in Java .html-BkS80PKd.js","assets/2024-06-19-How to Test Spring Application Events.html-D8-_YS5h.js","assets/2024-06-19-Immutable vs Unmodifiable Collection in Java.html-Br3Vs1yw.js","assets/2024-06-19-Internet Address Resolution SPI in Java.html-CNH6JPGf.js","assets/2024-06-19-Introduction to Light 4J.html-DvzfHI9A.js","assets/2024-06-19-Logging in Apache Camel.html-DwEITy1a.js","assets/2024-06-19-Logging in Spring Boot With Loki.html-BFwNC2xB.js","assets/2024-06-19-Multiple Level Mock Injection Into Mockito Spy Objects.html-UEt49pYd.js","assets/2024-06-19-New Features in Java 21.html-DQMIBAK7.js","assets/2024-06-19-Opening HTML File Using Java.html-D4YuCP5s.js","assets/2024-06-19-Statements Before super   in Java.html-CtISj86e.js","assets/2024-06-19-The  Struct Annotation Type in Hibernate   Structured User Defined Types.html-DjDEBQf0.js","assets/2024-06-19-The Difference Between Throwing an Exception and Mono.error   in Spring Webflux.html-BsA_SQ05.js","assets/2024-06-20- Subselect Annotation in Hibernate.html-DUCsWmlc.js","assets/2024-06-20-A Guide to Kotlin Context Receivers.html-W5hmlE8k.js","assets/2024-06-20-Add One Element to an Immutable List in Java.html-BW6Iw9Bz.js","assets/2024-06-20-Avoiding the ConcurrentModificationException in Kotlin.html-B00k97vf.js","assets/2024-06-20-Check if a Given Time Lies Between Two Times Regardless of Date.html-uC7GumE_.js","assets/2024-06-20-Checking if a Date Object Equals Yesterday.html-CVHXkj80.js","assets/2024-06-20-Convert RxJava Single to Kotlin Coroutine Deferred.html-DzmS6xxK.js","assets/2024-06-20-Converting UTF 8 to ISO 8859 1 in Java.html-Bq9sJTa3.js","assets/2024-06-20-Create Spring Prototype Scope Bean with Runtime Arguments.html-DMmY5rU6.js","assets/2024-06-20-Creating a Spring Security Key for Signing a JWT Token.html-BIfuMA4o.js","assets/2024-06-20-Difference Between eachCount   and eachCountTo   Methods in Kotlin.html-C1Wug7TF.js","assets/2024-06-20-Dynamically Managing Kafka Listeners in Spring Boot.html-Cbdw5nux.js","assets/2024-06-20-Dynamically Register Spring Beans Based on Properties.html-Cj013rxu.js","assets/2024-06-20-Finding Element by Attribute in Selenium.html-hGisOl58.js","assets/2024-06-20-Fix Ambiguous Method Call Error in Mockito.html-ayAMHgwy.js","assets/2024-06-20-Flatten a Stream of Maps to a Single Map in Java.html-IJRXOcO0.js","assets/2024-06-20-Getting a Kotlin KClass from a Package Class Name String.html-BprfaMo2.js","assets/2024-06-20-Guide to Duration in Kotlin.html-BxyeVSpH.js","assets/2024-06-20-Guide to ExecutorService vs. CompletableFuture.html-DexLzlJc.js","assets/2024-06-20-Guide to the HexFormat API.html-CEODfq7J.js","assets/2024-06-20-How to Convert Excel to JSON in Java.html-CzIH8Hp9.js","assets/2024-06-20-Implement Two Level Cache With Spring.html-DpLs0N_a.js","assets/2024-06-20-Include null Value in JSON Serialization.html-CBH2y_tn.js","assets/2024-06-20-Invalid Characters in XML.html-BpuIJ4DQ.js","assets/2024-06-20-Iterating Over Components of Object in Kotlin.html-C5X2NtTv.js","assets/2024-06-20-Java InputStream vs. InputStreamReader.html-D3ItdwqY.js","assets/2024-06-20-Normalizing the EOL Character in Java.html-ToqTsgJg.js","assets/2024-06-20-Parallel Operations on Kotlin Collections.html-Q2mu3DtT.js","assets/2024-06-20-Passing a Type to Generic Method in Kotlin.html-BPKJUvCE.js","assets/2024-06-20-Querydsl vs. JPA Criteria.html-DfMxJFOI.js","assets/2024-06-20-Reading a .gz File Line by Line Using GZIPInputStream.html-Ci0ElQhC.js","assets/2024-06-20-Representation of Integers at a Bit Level in Java.html-D7ra8nw1.js","assets/2024-06-20-Saga Pattern in a Microservices Architecture.html-DYvRI63t.js","assets/2024-06-20-Serialize Enum Property to JSON in Kotlin.html-Bhjd-_Pz.js","assets/2024-06-20-Use of Backticks in Kotlin.html-DisKy9Um.js","assets/2024-06-20-Using the  Value Annotation in Kotlin.html-BZM2XOpP.js","assets/2024-06-20-Variable Shadowing in Kotlin.html-BIDq28V1.js","assets/2024-06-20-Vigen re Cipher in Java.html-DW4vjiUW.js","assets/2024-06-20-When to Use Setter Methods or Constructors for Setting a Variable s Value in Java.html-CumIGHpg.js","assets/2024-06-21-Adding Elements to a Collection During Iteration.html-D0cYcVN9.js","assets/2024-06-21-Calculate Percentiles in Java.html-C0ykizSe.js","assets/2024-06-21-Capturing Method Arguments When Running Spock Tests.html-B-40x0v9.js","assets/2024-06-21-Check if a Number Is a Happy Number in Java.html-BELcRLNJ.js","assets/2024-06-21-Commit Offsets in Kafka.html-Bm3TRZ1X.js","assets/2024-06-21-Find the Largest Number Possible After Removing k Digits of a Number.html-C0AJTyHe.js","assets/2024-06-21-Finding the Majority Element of an Array in Java.html-BcfVseMc.js","assets/2024-06-21-Finding the Peak Elements of a List.html-D2eFtCqz.js","assets/2024-06-21-HTML Builder in Kotlin.html-CcT51hSB.js","assets/2024-06-21-How to Autowire a Spring Bean in a Servlet Filter.html-DwRWKqFe.js","assets/2024-06-21-Intro to the Apache Commons CLI.html-DTQ1xY6V.js","assets/2024-06-21-Introduction to Redpanda.html-IWhAJ5JU.js","assets/2024-06-21-Obtaining the Last Path Segment of a URI in Java.html-D8QPO22K.js","assets/2024-06-21-Parsing HTML Table in Java With Jsoup.html-CC2_ItvE.js","assets/2024-06-21-Refresh and Fetch an Entity After Save in JPA.html-yW9IOxNC.js","assets/2024-06-21-Spring Security AuthorizationManager.html-BsFWZdB5.js","assets/Add Global Exception Interceptor in gRPC Server.html-D26vTSKi.js","assets/Add an Aggregation to an Elasticsearch Query.html-DcWrRMWX.js","assets/BigDecimal equals   vs. compareTo  .html-BW1JXVwD.js","assets/Calculating Moving Averages in Java.html-n0raIJIv.js","assets/Can  Transactional and  Async Work Together .html-BMxRR1W-.js","assets/Check if Two Strings Are Permutations of Each Other in Java.html-CTIfhduJ.js","assets/Check if a Number Is Power of 2 in Java.html-BmPTQWoF.js","assets/Clear Managed Entities in JPA Hibernate.html-gbZCPexg.js","assets/Code Coverage vs. Test Coverage.html-DOXEXIlx.js","assets/Collecting into Map using Collectors.toMap   vs Collectors.groupingBy  .html-0Tx3Abs6.js","assets/Compare the Numbers of Different Types.html-Drrqs7Hr.js","assets/Comparison Between Flux.map() and Flux.doOnNext().html-BWcYDbyE.js","assets/CompletableFuture vs. Mono.html-BxXkn20M.js","assets/Compress and Create a Byte Array Using GZip.html-DqOkzJmY.js","assets/Configuring Retry Policy for gRPC Request.html-70ZdnkPq.js","assets/Consumer Processing of Kafka Messages With Delay.html-DboXY-CV.js","assets/Continue the Test Even After Assertion Failure in TestNG.html-GblyDN5l.js","assets/Convert 2D Array Into 1D Array.html-DFI7U_A1.js","assets/Convert Between CLOB and String in Java.html-DOASbgv0.js","assets/Convert Decimal to Fraction in Java.html-CPPq8ITC.js","assets/Convert From int to short in Java.html-aM0r3Evk.js","assets/Convert Google Protocol Buffer Timestamp to LocalDate.html-CGxvSvo-.js","assets/Convert InputStream to Stream in Java.html-Bbk3xs9C.js","assets/Convert Jackson JsonNode to Typed Collection.html-PkjDrUAV.js","assets/Convert a Queue to a List.html-YoizKBpA.js","assets/Convert an Optional to an ArrayList in Java.html-CI5Qs1h1.js","assets/Converting Float ArrayList to Primitive Array in Java.html-C_sgVYhb.js","assets/Converting Image to BufferedImage in Java.html-qBdL86-I.js","assets/Converting short to byte   in Java.html-DshjLmVn.js","assets/Create HashMap with Character Count of a String in Java.html-Cagxbgvw.js","assets/Create and Run Apache JMeter Test Scripts via Java Program.html-DTXldFwh.js","assets/Declare an Enum in an Inner Class in Java.html-xhu34kty.js","assets/Difference Between Casting to String and String.valueOf  .html-PNj2SK4u.js","assets/Difference Between Iterator.forEachRemaining   and Iterable.forEach  .html-DGuRVpoR.js","assets/Difference Between Lombok  AllArgsConstructor   RequiredArgsConstructor and  NoArgConstructor.html-rcoooDH5.js","assets/Difference Between Optional.of   and Optional.ofNullable   in Java.html-UB3UF0Sy.js","assets/Disable Logging From a Specific Class in Logback.html-D2VmoPmM.js","assets/Download File from S3 Given a URL.html-BGFSk84F.js","assets/Exploring Complex Number Arithmetic Operations in Java.html-EApIblKA.js","assets/Extract Text From a HTML Tag with Regex.html-BV286irp.js","assets/Extracting Text Between Parentheses in Java.html-DU16MdqW.js","assets/Fault Tolerance in Java Using Failsafe.html-hedjsGiV.js","assets/Find the Date of Easter Sunday for the Given Year.html-Dl5-b4yw.js","assets/Find the Length of the Longest Symmetric Substring.html-C7C2QB-g.js","assets/Finding Minimum and Maximum in a 2D Array.html-RVgQ1o6K.js","assets/Finding the Index of the Smallest Element in an Array.html-DqOfYHx4.js","assets/Finding the Next Higher Number With the Same Digits.html-CuuhBW3u.js","assets/Finding the Redirected URL of a URL in Java.html-CjX16d21.js","assets/Finding the Second Smallest Integer in an Array in Java.html-DkCV1ZRJ.js","assets/Finding the nth Last Occurrence of char in String.html-DAAutvjQ.js","assets/Fix Spring Boot H2 JdbcSQLSyntaxErrorException  Table not found .html-C_Nm8Zx-.js","assets/Full and Partial Text Search in MongoDB.html-B09JukBu.js","assets/Generate Java Classes From Avro Schemas Using Gradle.html-BkgqSi5g.js","assets/Get 2 s Complement of a Number in Java.html--Rf92grT.js","assets/Get JSON Content as Object Using MockMVC.html-DqQQ1bp8.js","assets/Get Nextval From Sequence With Spring JPA.html-CKogg8C3.js","assets/Get the First and the Last Elements From an Array in Java.html-ChbVyuiK.js","assets/Get the Indices of an Array After Sorting in Java.html-DUSoPqJs.js","assets/Get the Position of Key Value in LinkedHashMap Using Its Key.html-DGo-6K6b.js","assets/Get the Response Body in Spring Boot Filter.html-MkQ0DlxO.js","assets/Git Integration in IntelliJ IDEA.html-Bs1R-RAD.js","assets/Handling Nulls in ArrayList.addAll  .html-DmzpSBzv.js","assets/How to Check if Optional Contains Value Equal to T Object.html-CvFO7Y73.js","assets/How to Compile Java to WASM  Web Assembly .html-DUNAkBl4.js","assets/How to Convert Between java.sql.Timestamp and ZonedDateTime in Java.html-CeCgGrK9.js","assets/How to Convert XML to PDF.html-BGmRT7CQ.js","assets/How to Convert org.w3c.dom.Document to String in Java.html-CgAiZqCS.js","assets/How to Fix EOFException in Java.html-CxaSZmei.js","assets/How to Implement Elvis Operator in Java 8.html-BdgZKO-w.js","assets/How to Intercept a Request and Add Headers in WebFlux.html-CGsDSBK3.js","assets/How to Iterate a List of Maps in Java.html-DfiXjE0u.js","assets/How to Make Multiple REST Calls in CompletableFuture.html-B6YIalfD.js","assets/How to Set JVM Arguments in IntelliJ IDEA .html-DLcDuWZ_.js","assets/How to Specify the logback.xml Location.html-BTm18iLi.js","assets/How to Test a Spring AOP Aspect.html-BYKAniT2.js","assets/How to Unit Test an ExecutorService Without Using Thread.sleep  .html-DMkUDFt2.js","assets/How to Use Pair With Java PriorityQueue.html-BzVExmP4.js","assets/Implement Update Or Insert in Spring Data JPA.html-DxiJ-pc1.js","assets/Implement the Builder Pattern in Java 8.html-B1_4av99.js","assets/Inheritance vs. Composition in JPA.html-CCPQJ9Sr.js","assets/Install Java on macOS.html-CARh3p-u.js","assets/Intro to Apache Commons Configuration Project.html-1_FDLg5s.js","assets/Intro to the Apache Commons Compress Project.html-zUz3PgOu.js","assets/Introduction to Brave.html-DlfIKNTA.js","assets/Introduction to DuckDB.html-DmVKnW98.js","assets/Introduction to JFreeChart.html-DM1qF94d.js","assets/Introduction to Java 22.html-BmvP92UM.js","assets/Introduction to JavaParser.html-CLYR83do.js","assets/Introduction to SSHJ.html-BZ91NQBa.js","assets/Introduction to Simple Java Mail.html-Bstltqyt.js","assets/Java中不同数值类型的比较.html-Dobi9V8y.js","assets/Java中将int转换为无符号字节.html-BdpB2RdO.js","assets/Java中将字符串转换为OffsetDateTime.html-DIOnhter.js","assets/Join Two Tables Using jOOQ.html-Dzs3AKcq.js","assets/Logging SQL Queries to the Console in Mybatis.html-vfyVUae8.js","assets/Map LocalDateTime to Instant in MapStruct.html-IpnvfO_f.js","assets/Mapping Enum to String Using MapStruct.html-BKYK24xs.js","assets/Merge Multiple PDF Files Into a Single PDF Using Java.html-CZpv9ZLs.js","assets/Mocking Protected Method in Java.html-DGJwRIgA.js","assets/Monads in Java.html-Czncn0Zt.js","assets/Monitor a Spring Boot App Using Prometheus.html-CnzTegE1.js","assets/OpenAI API Client in Java.html-BMexPOkl.js","assets/Parallel Collection Processing with Parallel Collectors and Virtual Threads.html-DdRdfeFk.js","assets/Pass a Class as a Parameter in Java.html-Bvnldpp4.js","assets/Perform Action Only if All Optionals Are Available.html-BuHnNV91.js","assets/PersistenceUnit vs. PersistenceContext.html-t10vQTIp.js","assets/Polymorphism with Gson.html-DAqLImAZ.js","assets/Print Distinct Characters of a String in Java.html-C4G509rG.js","assets/Print the Default Value When Overriding toString   Method.html-BI9BEtXt.js","assets/PrintWriter write   vs print   Method in Java.html-DiXct-Zm.js","assets/Reading CSV Headers Into a List.html-Byb-T8Oe.js","assets/Remove All Characters Before a Specific Character in Java.html-_LrBNYNS.js","assets/Replacing Strings in Java Using Regex_ Back Reference vs. Lookaround.html-BJnLgEAo.js","assets/Resolving Security Exception  java.security.UnrecoverableKeyException  Cannot Recover Key.html-DYp-cqIM.js","assets/Return Non-null Elements From Java Map Operation.html-D93k-tP6.js","assets/Role Based Access Control in Quarkus.html-_iADhZVY.js","assets/Save Child Objects Automatically Using JPA.html-ZpcFrnQZ.js","assets/Set Matrix Elements to Zero in Java.html-0kzpx2g-.js","assets/Solving Spring Data JPA ConverterNotFoundException_ No converter found.html-BjziUmkn.js","assets/Spring WebClient exchange   vs retrieve  .html-DAbWTrKc.js","assets/Static Code Analysis Using Infer.html-B6CshORp.js","assets/Supply Enum Value to an Annotation From a Constant in Java.html-4aszG66q.js","assets/The Difference Between doAnswer   and thenReturn   in Mockito.html-CiDVtfAN.js","assets/Understanding Maven Dependency Graph or Tree.html-C8JuC8lr.js","assets/Unit Test for hashCode   in Java.html-Bny9bkoB.js","assets/Using @Autowired and @InjectMocks in Spring Boot Tests.html-CP_KUFuu.js","assets/Using Comparator.nullsLast() to Avoid NullPointerException When Sorting.html-CLXMl5jd.js","assets/Using Reactor Mono.cache   for Memoization.html-CWCPn6_3.js","assets/探索Java中将枚举值从常量传递到注解的可能性.html-CwuxBFUU.js","assets/404.html-CPlU3GWt.js","assets/index.html-By0t1aAf.js","assets/index.html-DsHgvoMv.js","assets/index.html-BKN4s9_N.js","assets/index.html-CI2CKRvI.js","assets/index.html-Clq8Qi4W.js","assets/index.html-C5BbQvJj.js","assets/index.html-CQqPltuc.js","assets/index.html-5c0Y1nJB.js","assets/index.html-NG1oyJtp.js","assets/index.html-DOvbrgNZ.js","assets/index.html-PfkqKkVe.js","assets/index.html-Ci9FgAC1.js","assets/index.html-C1ORIZer.js","assets/index.html-CB1xbKMf.js","assets/index.html-7Cl5DFIK.js","assets/index.html-DKP2eyMv.js","assets/index.html-apyGd4hy.js","assets/index.html-d31EvDQy.js","assets/index.html-D52NEUkF.js","assets/index.html-By1dmsqT.js","assets/index.html-BYOGc1jA.js","assets/index.html-BlcHNbz4.js","assets/index.html-_tVo0wmi.js","assets/index.html-DD3IIp0U.js","assets/index.html-DSsvE7Rp.js","assets/index.html-BUiebFHM.js","assets/index.html-DURV_AE1.js","assets/index.html-CuFF89vs.js","assets/index.html-C4M7U7SJ.js","assets/index.html-CpOzsKNY.js","assets/index.html-Dho83tix.js","assets/index.html-BRk3-mUZ.js","assets/index.html-hl6I-R6J.js","assets/index.html-DLmZXeDI.js","assets/index.html-eLSoMXHh.js","assets/index.html-CGnaK2O_.js","assets/index.html-DSSSk8TW.js","assets/index.html-BKegLolH.js","assets/index.html-DOOLB_HN.js","assets/index.html-Bd9Gdv8n.js","assets/index.html-D73PezI6.js","assets/index.html-B3F_XsUB.js","assets/index.html-Cuv_Sw4F.js","assets/index.html-Cau6ZJ9J.js","assets/index.html-BAf9ce-a.js","assets/index.html-BTQYIes8.js","assets/index.html-De2fo746.js","assets/index.html-D9yeQd6z.js","assets/index.html-DStZSNNA.js","assets/index.html-BXDNanoG.js","assets/index.html-BIsZGVQP.js","assets/index.html-BdxVr2D0.js","assets/index.html-Bl3EsGrS.js","assets/index.html-B2840JfR.js","assets/index.html-BzeQju68.js","assets/index.html-Cx4vgGqK.js","assets/index.html-Dm8fT1_L.js","assets/index.html-DLLVVRPM.js","assets/index.html-ygbdHgU_.js","assets/index.html-C7P3qhiG.js","assets/index.html-DE2G4vbi.js","assets/index.html-BkDVN7Jt.js","assets/index.html-JjkZ73rV.js","assets/index.html-DUaLkkTS.js","assets/index.html-X1XsMGkw.js","assets/index.html-C13ZeJC7.js","assets/index.html-CXUMHeHr.js","assets/index.html-BKW8C7MP.js","assets/index.html-urlsCHAn.js","assets/index.html-NXUF6BfV.js","assets/index.html-DZo592aq.js","assets/index.html-CLdVg_mR.js","assets/index.html-9Z1ePhLC.js","assets/index.html-BLVn6t5L.js","assets/index.html-VdCPygGR.js","assets/index.html-CvHsHR9n.js","assets/index.html-CF1mldoW.js","assets/index.html-wb7evuNX.js","assets/index.html-CAxCWQ3l.js","assets/index.html-CTXjFja2.js","assets/index.html-B3ZiaaTS.js","assets/index.html-NRwqF0PC.js","assets/index.html-C_U_9-5O.js","assets/index.html-CgUSjeNp.js","assets/index.html-BJHTGu-_.js","assets/index.html-CmMVfFo0.js","assets/index.html-DwpL-nHV.js","assets/index.html-B9K5Ycon.js","assets/index.html-Bk9aKD0I.js","assets/index.html-BUnGujPh.js","assets/index.html-BNXyFBw3.js","assets/index.html-DF-P09zZ.js","assets/index.html-CukMIVY_.js","assets/index.html-CTm500vu.js","assets/index.html-DcTX-wl9.js","assets/index.html-D15vwXPn.js","assets/index.html-BdcvDc3c.js","assets/index.html-mAcdxFeB.js","assets/index.html-C-_CAXNe.js","assets/index.html-DVtppUGs.js","assets/index.html-BX3qCJ7l.js","assets/index.html-DX0XBhL8.js","assets/index.html-B6gjL1aK.js","assets/index.html-CxByKahu.js","assets/index.html-nXxq6BbH.js","assets/index.html-DOO0PbkH.js","assets/index.html-wD-XL_Bm.js","assets/index.html-g-FLRT0v.js","assets/index.html-CqxVvMEr.js","assets/index.html-C65pCXm5.js","assets/index.html-CrA2gaMf.js","assets/index.html-CXlx3g5z.js","assets/index.html-ByH2UpyK.js","assets/index.html-D-F2D13e.js","assets/index.html-D3HL5LpB.js","assets/index.html-Seq98UYT.js","assets/index.html-DdrQ8D7l.js","assets/index.html-B0TYQ6PD.js","assets/index.html-BsR32rHJ.js","assets/index.html-KI8lfrY2.js","assets/index.html-DZzjDDAM.js","assets/index.html-DVxRMRQh.js","assets/index.html-BnRUODID.js","assets/index.html-DEMM2yFE.js","assets/index.html-BzZVdpXp.js","assets/index.html-C-9rB-TY.js","assets/index.html-DBCL0ORU.js","assets/index.html-CxdAwvOy.js","assets/index.html-BL_1KybB.js","assets/index.html-B-Zh4OQ3.js","assets/index.html-CefECoby.js","assets/index.html-CUocwsyZ.js","assets/index.html-DJiK5by_.js","assets/index.html-CC6oxghC.js","assets/index.html-s3rOZwkv.js","assets/index.html-DLrUGgLg.js","assets/index.html-DBvb0oXV.js","assets/index.html-CfchGKhl.js","assets/index.html-BlhenDdF.js","assets/index.html-CxuEDXoU.js","assets/index.html-DhA99ocF.js","assets/index.html-CLwCEyzQ.js","assets/index.html-DmheOorr.js","assets/index.html-DfwJnG9C.js","assets/index.html-DB2uar4U.js","assets/index.html-CQnx5FPI.js","assets/index.html-3Dm1RemT.js","assets/index.html-DVUFADNR.js","assets/index.html-BVipZjsG.js","assets/index.html-XqoV0C8Z.js","assets/index.html-CChKCBe9.js","assets/index.html-CuNK1ARP.js","assets/index.html-BsP1VYlZ.js","assets/index.html-KMNmdsu3.js","assets/index.html-CwfPXHBU.js","assets/index.html-DAFw8rTw.js","assets/index.html-B0fUVokw.js","assets/index.html-B9KUxd2r.js","assets/index.html-ASUlxaEP.js","assets/index.html-CRs0r-PU.js","assets/index.html-CR98v8OC.js","assets/index.html-BX91fVW8.js","assets/index.html-BHrQBSan.js","assets/index.html-COx06brv.js","assets/index.html-DbSYMkbG.js","assets/index.html-CjffBQ4u.js","assets/index.html-uaZDispL.js","assets/index.html-DIP-9ziQ.js","assets/index.html-CHuMhRLf.js","assets/index.html-CU-qYMe9.js","assets/index.html-C_AYZtpx.js","assets/index.html-DrkDmlOb.js","assets/index.html-BbdFNGTr.js","assets/index.html-CvMUWAIa.js","assets/index.html-aQULo8SA.js","assets/index.html-B25ygFJA.js","assets/index.html-DeI-A8Mi.js","assets/index.html-CdRr0yIe.js","assets/index.html-ju1dm-aq.js","assets/index.html-u9oJ4QXn.js","assets/index.html-DeDOpCEV.js","assets/index.html-DHZp7tUb.js","assets/index.html-DBtZ1rPv.js","assets/index.html-sKmrvRNI.js","assets/index.html-CPlbiNGq.js","assets/index.html-D5NfZTI8.js","assets/index.html-ThXLTxud.js","assets/index.html-CT6V_TGo.js","assets/index.html-HL5s8QZv.js","assets/index.html-Bjtpo3Q2.js","assets/index.html-DUa4vZne.js","assets/index.html-VrRjYfRK.js","assets/index.html-DxVlnhQ5.js","assets/index.html-CeB97A2p.js","assets/index.html-Boh-_IW_.js","assets/index.html-BZJxVVtd.js","assets/index.html-CpF26XCV.js","assets/index.html-BIaEcOie.js","assets/index.html-BG4LCPD1.js","assets/index.html-BjjWKzJn.js","assets/index.html-BVmotAir.js","assets/index.html-3Lkt3-bZ.js","assets/index.html-B_MWH4ji.js","assets/index.html-BRW15s6k.js","assets/index.html-D_MWvqHN.js","assets/index.html-CHpygLMx.js","assets/index.html-CI9p9ioX.js","assets/index.html-_s2Sie2E.js","assets/index.html-DExkRyOv.js","assets/index.html-DUDErxe-.js","assets/index.html-DsIQBeM1.js","assets/index.html-G71XxtWE.js","assets/index.html-Cutx-o4z.js","assets/index.html-DVvqJuks.js","assets/index.html-Bou-Tjgp.js","assets/index.html-BgjLCH_Z.js","assets/index.html-_ENtJgXZ.js","assets/index.html-n3LRC1J1.js","assets/index.html-Cw27L6pR.js","assets/index.html-BTAAutR8.js","assets/index.html-DqdvMP95.js","assets/index.html-mVwcJCTl.js","assets/index.html-CZIWXwsn.js","assets/index.html-CHC1gUHv.js","assets/index.html-y4q9Fpml.js","assets/index.html-CmUKY53n.js","assets/index.html-C0g0WLoJ.js","assets/index.html-7qZrde1o.js","assets/index.html-bUy9X1Cm.js","assets/index.html-DMBAa62p.js","assets/index.html-BSb_dGub.js","assets/index.html-CxB8V1F5.js","assets/index.html-BA0j2nBL.js","assets/index.html-ePYn_AWq.js","assets/index.html-bxIS2RIR.js","assets/index.html-BvhVpS-x.js","assets/index.html-L7mlFFOu.js","assets/index.html-DAWgH8f1.js","assets/index.html-Dk7_nXkR.js","assets/index.html-DWnoUEZz.js","assets/index.html-BuzI3MLX.js","assets/index.html-BTBxa0IW.js","assets/index.html-DrmIq9EQ.js","assets/index.html-DY8pWZ1z.js","assets/index.html-CQ3xU5o5.js","assets/index.html-D6VBgc06.js","assets/index.html-BeY4IDll.js","assets/index.html-DoXNXau6.js","assets/index.html-LfD3uVTr.js","assets/index.html-DVFYMA-G.js","assets/index.html-DKiWvDjx.js","assets/index.html-DGjktH41.js","assets/index.html-IdFH1oHl.js","assets/index.html-BIcywIYb.js","assets/index.html-Baxx-aK3.js","assets/index.html-DyGLb8rY.js","assets/index.html-CG7sgDox.js","assets/index.html-C-stBEBa.js","assets/index.html-kDTRFQMs.js","assets/index.html-eCBeYWsX.js","assets/index.html-EPDj93cp.js","assets/index.html-CvKilMM-.js","assets/index.html-BzrY8OtJ.js","assets/index.html-BZDhVsqM.js","assets/index.html-xziYIwvz.js","assets/index.html-rFPss2D8.js","assets/index.html-N4lf0nvS.js","assets/index.html-Cc6X9fGY.js","assets/index.html-D5xLS0uM.js","assets/index.html-tnLWk3KE.js","assets/index.html-DHox7PQL.js","assets/index.html-BiJpRTNR.js","assets/index.html-CETmyKIA.js","assets/index.html-BfHIAhVk.js","assets/index.html-D3u8V8IK.js","assets/index.html-CCH-E8NY.js","assets/index.html-DSMZYZo0.js","assets/index.html-Cd332jKe.js","assets/index.html-C9cchRX_.js","assets/index.html-Bpre7wpk.js","assets/index.html-BVXkxC8d.js","assets/index.html-CzoPwVcn.js","assets/index.html-g4skijJE.js","assets/index.html-Dh5WLDxF.js","assets/index.html-UT53XCLy.js","assets/index.html-DUi4POcj.js","assets/index.html-TdWeq1gz.js","assets/index.html-DaOGh0lq.js","assets/index.html-C1B7qOa3.js","assets/index.html-C0Ydybnw.js","assets/index.html-DvuUr_ff.js","assets/index.html-VQmmxxPQ.js","assets/index.html-8u1uZr-I.js","assets/index.html-Dj7MDVcY.js","assets/index.html-wQkxpQbZ.js","assets/index.html-QPQAjnto.js","assets/index.html-Bm0f5l0M.js","assets/index.html-CLEZJcd1.js","assets/index.html-Ctecdz2t.js","assets/index.html-BEWs1xBw.js","assets/index.html-CswVs0H0.js","assets/index.html-zUIqGH3i.js","assets/index.html-Bovrg-t5.js","assets/index.html-CsGCteER.js","assets/index.html-BS3KaKBR.js","assets/index.html-ouoGDyLl.js","assets/index.html-YeJ52xaF.js","assets/index.html-BmuQeHMF.js","assets/index.html-DyOoB0wL.js","assets/index.html-B7OOqKS_.js","assets/index.html-D46wwPPt.js","assets/index.html-C8V4pmst.js","assets/index.html-COfu3ibF.js","assets/index.html-B5h65vnt.js","assets/index.html-Oz8Zkw26.js","assets/index.html-BSUdXfaY.js","assets/index.html-BgFIY8u6.js","assets/index.html-C4VZ0IUO.js","assets/index.html-DLTYdhV9.js","assets/index.html-CKj3Nrt1.js","assets/index.html-BmHiaM8B.js","assets/index.html-Bjhlod2_.js","assets/index.html-DalztaoZ.js","assets/index.html-CGBAFsB9.js","assets/index.html-DykGs0cG.js","assets/index.html-Ve0eo3BL.js","assets/index.html-BXGQoifU.js","assets/index.html-DOj0FrWB.js","assets/index.html-CSJPUcjb.js","assets/index.html-BeFTdSW2.js","assets/index.html-BhZyiMh7.js","assets/index.html-DSoOTN7L.js","assets/index.html-BZECha-u.js","assets/index.html-DC7CU9Jf.js","assets/index.html-iHlcEPgK.js","assets/index.html-B5SaNd50.js","assets/index.html-DyZsweOs.js","assets/index.html-6OznejB4.js","assets/index.html-Dpm8iD4D.js","assets/index.html-Co6e1_3G.js","assets/index.html-JFo1uUFy.js","assets/index.html-B4L1gsO-.js","assets/index.html-BqapO4gk.js","assets/index.html-C0ex7a4o.js","assets/index.html-DfbPl4cT.js","assets/index.html-B0g3otth.js","assets/index.html-D9_ullFh.js","assets/index.html-Bjw9g4wG.js","assets/index.html-rm-llAA4.js","assets/index.html-GT5OqeFY.js","assets/index.html-C_-vOZm5.js","assets/index.html-CxR-C8ny.js","assets/index.html-BFsopebA.js","assets/index.html-Cxrwwm_y.js","assets/index.html-BjTQCzc5.js","assets/index.html-LEvTYY_f.js","assets/index.html-CFCBnJYg.js","assets/index.html-CKNz_Q8a.js","assets/index.html-viD4J9-u.js","assets/index.html-D9GLRQ-K.js","assets/index.html-BcyUxELr.js","assets/index.html-ow0_gt2s.js","assets/index.html-DiUN1n1Y.js","assets/index.html-DkEEej2e.js","assets/index.html-CjOaGWLG.js","assets/index.html-DBh0tqRB.js","assets/index.html-DOiRx_bo.js","assets/index.html-Bnf0x9Mu.js","assets/index.html-CPE6nOQM.js","assets/index.html-BOKl6Lb5.js","assets/index.html-CRS0c_ZH.js","assets/index.html-Dma_ddhw.js","assets/index.html-C_SCJ9Dg.js","assets/index.html-C-s_4wD2.js","assets/index.html-C_lT-vW3.js","assets/index.html-DaGl6K89.js","assets/index.html-ceUpGWGM.js","assets/index.html-Bq1nulUe.js","assets/index.html-DKLo8cZA.js","assets/index.html-Bq-BdFSm.js","assets/index.html-De1kmITr.js","assets/index.html-CF0rrBt2.js","assets/index.html-mDSjf2x5.js","assets/index.html-B3aApXVg.js","assets/index.html-DzyO2pEN.js","assets/index.html-BflPfUCo.js","assets/index.html-yyZQtwBX.js","assets/index.html-CgRqe1px.js","assets/index.html-B8GFG0_2.js","assets/index.html-CBujqjVI.js","assets/index.html-BfmjAVhf.js","assets/index.html-sVB6xXWe.js","assets/index.html-BHVXuKQc.js","assets/index.html-WY2ZZas2.js","assets/index.html-DDzda0lm.js","assets/index.html-bUAvIrP_.js","assets/index.html-CThF5jxn.js","assets/index.html-C0REUve1.js","assets/index.html-TZbxdky-.js","assets/index.html-BBr3fbNi.js","assets/index.html-Cxld4iN2.js","assets/index.html-CW30lPgq.js","assets/index.html-C2VBgMhn.js","assets/index.html-DDeh3pVI.js","assets/index.html-DmtrsZ59.js","assets/index.html-DwAKUFev.js","assets/index.html-BVvh57Pr.js","assets/index.html-THnvWDmF.js","assets/index.html-B0Sl8cR8.js","assets/index.html-BnTJu2Lb.js","assets/index.html-TbSiMHNz.js","assets/index.html-DzUA4bOZ.js","assets/index.html-C2g8LldD.js","assets/index.html-D26Dlskg.js","assets/index.html-CblQrt2_.js","assets/index.html-wDiG8S-G.js","assets/index.html-bSl0gov5.js","assets/index.html-D7gY-ZyG.js","assets/index.html-Cil27UNk.js","assets/index.html-DG7LZf8G.js","assets/index.html-CMGK6LaN.js","assets/index.html-1aT7J1Ft.js","assets/index.html-BntG8g2o.js","assets/index.html-Df87snr9.js","assets/index.html-Bwh7BIhI.js","assets/index.html-Dj9dPbWC.js","assets/index.html-CoU2n3Y4.js","assets/index.html-CFNdx1jE.js","assets/index.html-Bby_VZfR.js","assets/index.html-Dts4FTg0.js","assets/index.html-CFkjv8Fb.js","assets/index.html-uXyXP2Bk.js","assets/index.html-Btn8FjXt.js","assets/index.html-fqb6BxTY.js","assets/index.html-YScphjJc.js","assets/index.html-DiYQcVXW.js","assets/index.html-BBYwqjd8.js","assets/index.html-n2DXMpPG.js","assets/index.html-DUzY8FKr.js","assets/index.html-QWQlP8vE.js","assets/index.html-Xlz5ePvl.js","assets/index.html-CDSU4pKU.js","assets/index.html-CrfWqdwL.js","assets/index.html-IP4itrkE.js","assets/index.html-IRnCPc5A.js","assets/index.html-C4_iF7JC.js","assets/index.html-Bt_10ER2.js","assets/index.html-CiH61uJf.js","assets/index.html-DepRFA5d.js","assets/index.html-BffAQCgK.js","assets/index.html-CMvCvzWD.js","assets/index.html-BaMKOq_8.js","assets/index.html-Ox9QamJo.js","assets/index.html-01k7iatl.js","assets/index.html-CTxwTUKP.js","assets/index.html-WjwxHif7.js","assets/index.html-X991z9XX.js","assets/index.html-CHtZxDeP.js","assets/index.html-B6cCWkCf.js","assets/index.html-DlwnqI3Y.js","assets/index.html-DxSD6hxu.js","assets/index.html-BVAVVeX-.js","assets/index.html-CN3uUAXO.js","assets/index.html-Dui7J77k.js","assets/index.html-fm_X1dPN.js","assets/index.html-BEz00jJY.js","assets/index.html-BoX2lCl3.js","assets/index.html-nvyXdxeH.js","assets/index.html-DnMumI2Q.js","assets/index.html-BZuy3kXn.js","assets/index.html-34g1QAjN.js","assets/index.html-CXHCqdHa.js","assets/index.html-DrvBmKSP.js","assets/index.html-goczOae-.js","assets/index.html-BOwrL1pL.js","assets/index.html-DElsEkFY.js","assets/index.html-D3ybG5kx.js","assets/index.html-DuQmMwRV.js","assets/index.html-C-wflRkn.js","assets/index.html-C0xEPxsd.js","assets/index.html-CUuKytZv.js","assets/index.html-6023rs2A.js","assets/index.html-SoTH41st.js","assets/index.html-DHsdIdZL.js","assets/index.html-D3Z1i2uR.js","assets/index.html-w9YdhjVS.js","assets/index.html-XpxkIpuY.js","assets/index.html-BrpJqEK6.js","assets/index.html-Bca7WwpU.js","assets/index.html-CXIDL5wJ.js","assets/index.html-BPIpdmKw.js","assets/index.html-CvrttkSm.js","assets/index.html-9Y5pppxA.js","assets/index.html-BS5Vskm0.js","assets/index.html-CsgsN28Q.js","assets/index.html-HD1czc1t.js","assets/index.html-CCXM1wzw.js","assets/index.html-D3Y_I6gx.js","assets/index.html-DbN3onco.js","assets/index.html-DkuJa58_.js","assets/index.html-DJtmTDJr.js","assets/index.html-x4MYFP4g.js","assets/index.html-BhzhwRJ9.js","assets/index.html-DYkTkNQy.js","assets/index.html-B1MhumFS.js","assets/index.html-BAK-sZw6.js","assets/index.html-BOIKkXpt.js","assets/index.html-Ccd3Z3cJ.js","assets/index.html-CJZ1eIJG.js","assets/index.html-kLcYMYxi.js","assets/index.html-CFbCHueg.js","assets/index.html-at-3TEEm.js","assets/index.html-wKCMQRSy.js","assets/index.html-GMGFK-tI.js","assets/index.html-BGt9eXie.js","assets/index.html-BrDIIQZz.js","assets/index.html-Cqj5FgN7.js","assets/index.html-Bv2AnKUe.js","assets/index.html-6yz4N8Pn.js","assets/index.html-Ct5wvDHx.js","assets/index.html-CBJ5Z0GH.js","assets/index.html-BSXdUn1P.js","assets/index.html-COyE2Cef.js","assets/index.html-DJBzMwvJ.js","assets/index.html-lgoDsFAO.js","assets/index.html-CxvxIFkX.js","assets/index.html-BYvnT0Nw.js","assets/index.html-C1X2-yTH.js","assets/index.html-D0vY9il5.js","assets/index.html-BB5V40JG.js","assets/index.html-GSDk0LHT.js","assets/index.html-DhsvT-Zn.js","assets/index.html-B1nFmmRm.js","assets/index.html-CMbdctf7.js","assets/index.html-CZTwyIeH.js","assets/index.html-CDTFIwep.js","assets/index.html-BcTlZSJ_.js","assets/index.html-BBOhCFrL.js","assets/index.html-PeF_B-OQ.js","assets/index.html-D6AYeZYa.js","assets/index.html--5Tw7j3d.js","assets/index.html-D0NI9DP3.js","assets/index.html-C5eHTHNQ.js","assets/index.html-BDvQIBE3.js","assets/index.html-CdcBR3SA.js","assets/index.html-CIyyi8kh.js","assets/index.html-C1lenacp.js","assets/index.html-DONG5mMu.js","assets/index.html-DExCGBv-.js","assets/index.html-DjB8q-hJ.js","assets/index.html-CQGxQu4b.js","assets/index.html-CAaCwExR.js","assets/index.html-C-7T550V.js","assets/index.html-Du8KqSrz.js","assets/index.html-D0V-raBm.js","assets/index.html-DP9ImIq_.js","assets/index.html-C0r-E0ib.js","assets/index.html-DexHTwHx.js","assets/index.html-BAaZPSV-.js","assets/index.html-DZT569Wi.js","assets/index.html-DJgZKI7a.js","assets/index.html-BawNjcCF.js","assets/index.html-nsEPYmPr.js","assets/index.html-BeAEazdg.js","assets/index.html-CmVi9Ix2.js","assets/index.html-x4k7n02J.js","assets/index.html-pNVyWD0J.js","assets/index.html-CMOHAMi4.js","assets/index.html-Bmn7exhg.js","assets/index.html-Dnt409Q6.js","assets/index.html-B3J8vL2L.js","assets/index.html-SQV4XOMP.js","assets/index.html-Z0ZxDjZ5.js","assets/index.html-C4bmVi7X.js","assets/index.html-CIFdWKj8.js","assets/index.html-BiTAi7Lz.js","assets/index.html-Bvizo3so.js","assets/index.html-CmGuOEvO.js","assets/index.html-t4GLv8FN.js","assets/index.html-NGkeJzWB.js","assets/index.html-2Y8Kybwr.js","assets/index.html-CW-3RfeA.js","assets/index.html-BAQDfsti.js","assets/index.html-xFbSQV9p.js","assets/index.html-CFz0CAJd.js","assets/index.html-WlVBOo-w.js","assets/index.html-CeatZO6a.js","assets/index.html-DT9UW2tg.js","assets/index.html-Duurv6ng.js","assets/index.html-ga8D4nAF.js","assets/index.html-Bl-Xpmwu.js","assets/index.html-BtOnBkeq.js","assets/index.html-B9Mr6YVz.js","assets/index.html-D5s5J-zv.js","assets/index.html-BJHdSPPY.js","assets/index.html-BfY6jtiI.js","assets/index.html-ICAj9NrE.js","assets/index.html-Cf3mLcKf.js","assets/index.html-DvG086zl.js","assets/index.html-BjbgIN8D.js","assets/index.html-CV90rTuV.js","assets/index.html-UJL8Cwed.js","assets/index.html-CP3mqCBj.js","assets/index.html-CAMc_qeF.js","assets/index.html-B1XdeuZB.js","assets/index.html-D5xdNB_v.js","assets/index.html-DRG6FNGP.js","assets/index.html-CE6Dnho-.js","assets/index.html-Bw3OU7Nf.js","assets/index.html-BxAAiu73.js","assets/index.html-DguPuQvh.js","assets/index.html-AMJDz76V.js","assets/index.html-C5GBQSub.js","assets/index.html-SSoal-fk.js","assets/index.html-B8UEm8lo.js","assets/index.html-C_m1q1jT.js","assets/index.html-BEJ046Zo.js","assets/index.html-D-mIznHT.js","assets/index.html-DI5VDPCn.js","assets/index.html-DK1V_Ycx.js","assets/index.html-G_QKpTRo.js","assets/index.html-Du-qdrP6.js","assets/index.html-CItVPwtT.js","assets/index.html-civJXLC2.js","assets/index.html-CtWZKc9O.js","assets/index.html-BnZMhK86.js","assets/index.html-BWCmhZZ0.js","assets/index.html-CaJQeKhi.js","assets/index.html-fyTD3zGC.js","assets/index.html-CfrDZ9C-.js","assets/index.html-DPhWa1SF.js","assets/index.html-CSA4y00o.js","assets/index.html-BYKwnhUT.js","assets/index.html-DnIqTukA.js","assets/index.html-DzXR1lfY.js","assets/index.html-BZwbzuoY.js","assets/index.html-B5634G6v.js","assets/index.html-Uy3ZaalL.js","assets/index.html-D6O7DoD9.js","assets/index.html-PcZhskjv.js","assets/index.html-Cfh_rwIt.js","assets/index.html-BraEYQJH.js","assets/index.html-DS3m8EN2.js","assets/index.html-BfRCSkIR.js","assets/index.html-DMM8Q0DW.js","assets/index.html-BYVM1tBR.js","assets/index.html-AY2iQEPc.js","assets/index.html-CEPltMcd.js","assets/index.html-BpvD_tH_.js","assets/index.html-0paFqdOj.js","assets/index.html-xl1Ms11k.js","assets/index.html-CA8vE-gj.js","assets/index.html-BPMSncP8.js","assets/index.html-kycLOtX1.js","assets/index.html-CKjGFQtl.js","assets/index.html-KX64ucNl.js","assets/index.html-CavyT56w.js","assets/index.html-LLTlVwFF.js","assets/index.html-CC2T4uan.js","assets/index.html-ngAI203n.js","assets/index.html-BjSNqKse.js","assets/index.html-D_vxNvRK.js","assets/index.html-DC6ITt0T.js","assets/index.html-tXE1OR_d.js","assets/index.html-MFexZDai.js","assets/index.html-DLIjhdkI.js","assets/index.html-IKDwlhN4.js","assets/index.html-FJk7K80P.js","assets/index.html-BidFOj8M.js","assets/index.html-BC_SJW_2.js","assets/index.html-B_lank04.js","assets/index.html-BhAAAsvl.js","assets/index.html-CtXjtPZG.js","assets/index.html-Du-dhGAB.js","assets/index.html-8IAwrlEY.js","assets/index.html-I4RidxEe.js","assets/index.html-B_ojk2En.js","assets/index.html-gDKsn9Xv.js","assets/index.html-CvtyHtQA.js","assets/index.html-CLF-tbHA.js","assets/index.html-Cfhsfrut.js","assets/index.html-D5Dld7RA.js","assets/index.html-C6QKREYM.js","assets/index.html-DgNUEI_H.js","assets/index.html-BeXoLq3B.js","assets/index.html-BzKZZRU5.js","assets/index.html-Bdpin004.js","assets/index.html-DceVYhSc.js","assets/index.html-APDOFxNM.js","assets/index.html-gQ-UucfU.js","assets/index.html-BQLT9AoU.js","assets/index.html-DOZcMQaN.js","assets/index.html-CoUi_Jz4.js","assets/index.html-CpioN3Nl.js","assets/index.html-tjjL8YlY.js","assets/index.html-CKp4buaC.js","assets/index.html-BjwO64Wx.js","assets/index.html-BPRcL1J_.js","assets/index.html-DymNgfNu.js","assets/index.html-DysqOkuH.js","assets/index.html-ChcSaglM.js","assets/index.html-BMWUVoIy.js","assets/index.html-BqCKInE1.js","assets/index.html-BhASKYEg.js","assets/index.html-3lfuh38j.js","assets/index.html-DUKeCkYl.js","assets/index.html-rOR2fYdd.js","assets/index.html-CUQujr9R.js","assets/index.html-CRIPKjzs.js","assets/index.html-Bv3waq22.js","assets/index.html-X5SetKTn.js","assets/index.html-Eq5eR1Ex.js","assets/index.html-Bz2YqoQf.js","assets/index.html-BuudiPsZ.js","assets/index.html-DwcKIH4y.js","assets/index.html-Dnl8C9e2.js","assets/index.html-Cjpce9FL.js","assets/index.html-BR2S_ZP0.js","assets/index.html-BeL4yN8n.js","assets/index.html-CuHATx03.js","assets/index.html-DVgCqqCk.js","assets/index.html-BTOwJknX.js","assets/index.html-DWox-T5t.js","assets/index.html-DOlkCr06.js","assets/index.html-CYYqxWc9.js","assets/index.html-CpzGJAr_.js","assets/index.html-DAC325zt.js","assets/index.html-CxaZmbWw.js","assets/index.html-DSXF9G5d.js","assets/index.html-9DfhauZL.js","assets/index.html-DZaBC0ZO.js","assets/index.html-CX7hTb8K.js","assets/index.html-BY5m7EYQ.js","assets/index.html-BraLTNRl.js","assets/index.html-IuQWGY1g.js","assets/index.html-BxmwiK9m.js","assets/index.html-BRbLI0Hy.js","assets/index.html-DanVfWOc.js","assets/index.html-CBuhH-Vb.js","assets/index.html-B8_eGVpj.js","assets/index.html-CBqfh2Vf.js","assets/index.html-jFZs-Hwo.js","assets/index.html-BOipJJ8v.js","assets/index.html-Cuy85al9.js","assets/index.html-CRbObuLt.js","assets/index.html-9ck3VDGM.js","assets/index.html-Bkia-V4-.js","assets/index.html-BmCnIk8i.js","assets/index.html-9lG82C7o.js","assets/index.html-DHrIyvbT.js","assets/index.html-CE4aIwsh.js","assets/index.html-Ch9irjoH.js","assets/index.html-US03gFiL.js","assets/index.html-CnA1xJOK.js","assets/index.html-Ca2C4MgZ.js","assets/index.html-BXCcexDZ.js","assets/index.html-Bue4Jiwx.js","assets/index.html-sqxB7vxN.js","assets/index.html-CH1kOUDO.js","assets/index.html-CAmTgFpG.js","assets/index.html-BO5Cj5i5.js","assets/index.html-KKufWF7P.js","assets/index.html-Bnl6ZdOC.js","assets/index.html-fJ2aEFCb.js","assets/index.html-BjGxbORg.js","assets/index.html-BbrIzwD9.js","assets/index.html-BEHYQkwJ.js","assets/index.html-DQtycRi6.js","assets/index.html-CgfXO2wc.js","assets/index.html-DEK-gcCP.js","assets/index.html-BjBpCptW.js","assets/index.html-Crwnxoay.js","assets/index.html-CZySiLV0.js","assets/index.html-B4QAScXL.js","assets/index.html-DrArzeEV.js","assets/index.html-97NjievP.js","assets/index.html-D10dF-vD.js","assets/index.html-BVwgRAya.js","assets/index.html-Dxk8ArF6.js","assets/index.html-Chi2bEnZ.js","assets/index.html-C1b-Q0dl.js","assets/index.html-3flZkii6.js","assets/index.html-De1-NOBa.js","assets/index.html-BV1jfC9v.js","assets/index.html-CYiUruck.js","assets/index.html-DMkJgkOC.js","assets/index.html-CiXJwgU6.js","assets/index.html-BB7NPvTp.js","assets/index.html-BHYV8SP3.js","assets/index.html-D025IRyz.js","assets/index.html-Bb8AE0oC.js","assets/index.html-CMJf6HeT.js","assets/index.html-B0vi1LOS.js","assets/index.html-zYbeXHkq.js","assets/index.html-Cc_hTySE.js","assets/index.html-DHR4jvYr.js","assets/index.html-DRQbGM0R.js","assets/index.html-xNB9Rd8A.js","assets/index.html-DisUELmg.js","assets/index.html-GRqezYb6.js","assets/index.html-DREFpjtj.js","assets/index.html-AJFNnQJ9.js","assets/index.html-D6S4wCno.js","assets/index.html-CwB82Dgx.js","assets/index.html-D87w40rK.js","assets/index.html-DyOl-3d3.js","assets/index.html-BH3HI7np.js","assets/index.html-CSwGepRB.js","assets/index.html-CdMTudHH.js","assets/index.html-CJtA30zg.js","assets/index.html-oXb5ZhNK.js","assets/index.html-DG7SlOCq.js","assets/index.html-YyXDkQGW.js","assets/index.html-B5199Cw4.js","assets/index.html-0UA1Irbk.js","assets/index.html-Bca5MU7h.js","assets/index.html-Dk61wgZ3.js","assets/index.html-SYEGaaAE.js","assets/index.html-Bz7wbK7M.js","assets/index.html-DS5TnplL.js","assets/index.html-Bh0v4AtI.js","assets/index.html-BwOgWts8.js","assets/index.html-Cxf1rAQo.js","assets/index.html-bF-S-egp.js","assets/index.html-DdJcqwmR.js","assets/index.html-BJnki9O1.js","assets/index.html-qDZ-wJJ8.js","assets/index.html-DQ2e7wmU.js","assets/index.html-DnEVnv-H.js","assets/index.html-DvK2EGlq.js","assets/index.html-Dy-ac22l.js","assets/index.html-BIsmcG3m.js","assets/index.html-DTB01CZG.js","assets/index.html-DCm8aZ5f.js","assets/index.html-BeVs3dcH.js","assets/index.html-DWxS-BZ6.js","assets/index.html-Cfb1jfat.js","assets/index.html-Bm6s1m9A.js","assets/index.html-DMNr_pvq.js","assets/index.html-DwnYB1c4.js","assets/index.html-Dh2Ewgqv.js","assets/index.html-BSiATjMd.js","assets/index.html-DRAlCjM0.js","assets/index.html-CbBN41Ge.js","assets/index.html-BQ3Zc9K2.js","assets/index.html-BYagPt6_.js","assets/index.html-BKlkN3ey.js","assets/index.html-kABRsWzu.js","assets/index.html-BOtvGw6l.js","assets/index.html-QQvEtr3A.js","assets/index.html-CygMX_eN.js","assets/index.html-DF0P53H9.js","assets/index.html-BQCnzRqe.js","assets/index.html--ZgbkvYM.js","assets/index.html-BqOycafv.js","assets/index.html-fOLvTHnn.js","assets/index.html-B7CJsszW.js","assets/index.html-2P766N3p.js","assets/index.html-5FHttvku.js","assets/index.html-BUDKd9kX.js","assets/index.html-BrB8OHrC.js","assets/index.html-BgT6G8-b.js","assets/index.html-hNtHL7iH.js","assets/index.html-Bf6p4bKX.js","assets/index.html-C3yJ2egs.js","assets/index.html-BVtPHnt7.js","assets/index.html-D2DrsQTb.js","assets/index.html-Bdnwl4xV.js","assets/index.html-BwDzGRge.js","assets/index.html-Dg7UnI7c.js","assets/index.html-D0CrK8JU.js","assets/index.html-Btir3a81.js","assets/index.html-Bb_Tuw2l.js","assets/index.html-BhvV2lUt.js","assets/index.html-DiMGg574.js","assets/index.html-BvPUh7Db.js","assets/index.html-BFGMbhRE.js","assets/index.html-P9_REKE8.js","assets/index.html-BVMjGURP.js","assets/index.html-zjOEIOBJ.js","assets/index.html-Dpy9w0Wg.js","assets/index.html-WoMiORgm.js","assets/index.html-Cjd66fpd.js","assets/index.html-D4f0kCq5.js","assets/index.html-DPrGu-pz.js","assets/index.html-BxfGpb2D.js","assets/index.html-DP60yvPt.js","assets/index.html-B3gBAtaC.js","assets/index.html-BEi0004g.js","assets/index.html-BYTlwvWS.js","assets/index.html-BvJdMmKt.js","assets/index.html-Da9O9G7S.js","assets/index.html-CCsPt45w.js","assets/index.html-BoQ3Pnc4.js","assets/index.html-DBsJvYXS.js","assets/index.html-Cih3oCGz.js","assets/index.html-9NhIf7_z.js","assets/index.html-DSmoEZgh.js","assets/index.html-C7eU4E5l.js","assets/index.html-BluWckDk.js","assets/index.html-BzGG5QEB.js","assets/index.html-BYQtEyGQ.js","assets/index.html-DseknJDa.js","assets/index.html-DAQxhul4.js","assets/index.html-DqY_By7E.js","assets/index.html-CGKEVWLc.js","assets/index.html-CNMmWaFv.js","assets/index.html-BQVJy6d6.js","assets/index.html-CWucrevh.js","assets/index.html-inBp27l3.js","assets/index.html-FYi3eC_s.js","assets/index.html-CDNpsmZk.js","assets/index.html-CX1IMgHF.js","assets/index.html-BGeJU6AB.js","assets/index.html-CjiTb6G8.js","assets/index.html-DD8M2YqL.js","assets/index.html-B_yBdF-i.js","assets/index.html-DSKvdDmS.js","assets/index.html-BkKRDJkJ.js","assets/index.html-D9kVj6uu.js","assets/index.html-S2YvVFoK.js","assets/index.html-BHNA_GLE.js","assets/index.html-Bg2onfhf.js","assets/index.html-e4PAQQPp.js","assets/index.html-Dn_Z4pbh.js","assets/index.html-BIqjDo3M.js","assets/index.html-CpXREOyA.js","assets/index.html-Cz7kd5to.js","assets/index.html-DDUcJOR1.js","assets/index.html-Ikrusn8p.js","assets/index.html-DkAJOgMo.js","assets/index.html-CfKJAe-0.js","assets/index.html-BMxoQ4dM.js","assets/index.html-C9Aw-Blt.js","assets/index.html-cOdy381F.js","assets/index.html-zWC8gZ3c.js","assets/index.html-C-D-WKg2.js","assets/index.html-DUluk-dk.js","assets/index.html-D4zgoeME.js","assets/index.html-CD18j_-x.js","assets/index.html-fA0lfM7o.js","assets/index.html-BaN7o8Fq.js","assets/index.html-DrXsZhNg.js","assets/index.html-B4SOQdf0.js","assets/index.html-DA1ZKxos.js","assets/index.html-DdrGYCfy.js","assets/index.html-DThf3w-l.js","assets/index.html-Bz_Ya7bA.js","assets/index.html-9sVsaX4A.js","assets/index.html-rVvVsK_w.js","assets/index.html-XeIfqG5q.js","assets/index.html-BiiRnJ70.js","assets/index.html-DIuBoFId.js","assets/index.html-09cqAFre.js","assets/index.html-CdBxTaoc.js","assets/index.html-CDEererH.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
var k2=Object.defineProperty;var A2=(a,t,e)=>t in a?k2(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var Cs=(a,t,e)=>(A2(a,typeof t!="symbol"?t+"":t,e),e);/**
* @vue/shared v3.4.27
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function Vo(a,t){const e=new Set(a.split(","));return s=>e.has(s)}const ba={},Pe=[],rt=()=>{},y2=()=>!1,yn=a=>a.charCodeAt(0)===111&&a.charCodeAt(1)===110&&(a.charCodeAt(2)>122||a.charCodeAt(2)<97),Mo=a=>a.startsWith("onUpdate:"),La=Object.assign,Fo=(a,t)=>{const e=a.indexOf(t);e>-1&&a.splice(e,1)},I2=Object.prototype.hasOwnProperty,la=(a,t)=>I2.call(a,t),Y=Array.isArray,De=a=>fs(a)==="[object Map]",ep=a=>fs(a)==="[object Set]",na=a=>typeof a=="function",Ca=a=>typeof a=="string",he=a=>typeof a=="symbol",ka=a=>a!==null&&typeof a=="object",np=a=>(ka(a)||na(a))&&na(a.then)&&na(a.catch),sp=Object.prototype.toString,fs=a=>sp.call(a),b2=a=>fs(a).slice(8,-1),op=a=>fs(a)==="[object Object]",jo=a=>Ca(a)&&a!=="NaN"&&a[0]!=="-"&&""+parseInt(a,10)===a,Te=Vo(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Es=a=>{const t=Object.create(null);return e=>t[e]||(t[e]=a(e))},S2=/-(\w)/g,ct=Es(a=>a.replace(S2,(t,e)=>e?e.toUpperCase():"")),P2=/\B([A-Z])/g,Me=Es(a=>a.replace(P2,"-$1").toLowerCase()),In=Es(a=>a.charAt(0).toUpperCase()+a.slice(1)),Bs=Es(a=>a?`on${In(a)}`:""),Xt=(a,t)=>!Object.is(a,t),ws=(a,t)=>{for(let e=0;e<a.length;e++)a[e](t)},rp=(a,t,e,s=!1)=>{Object.defineProperty(a,t,{configurable:!0,enumerable:!1,writable:s,value:e})},D2=a=>{const t=parseFloat(a);return isNaN(t)?a:t},T2=a=>{const t=Ca(a)?Number(a):NaN;return isNaN(t)?a:t};let Rr;const ip=()=>Rr||(Rr=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function No(a){if(Y(a)){const t={};for(let e=0;e<a.length;e++){const s=a[e],o=Ca(s)?O2(s):No(s);if(o)for(const r in o)t[r]=o[r]}return t}else if(Ca(a)||ka(a))return a}const L2=/;(?![^(]*\))/g,x2=/:([^]+)/,R2=/\/\*[^]*?\*\//g;function O2(a){const t={};return a.replace(R2,"").split(L2).forEach(e=>{if(e){const s=e.split(x2);s.length>1&&(t[s[0].trim()]=s[1].trim())}}),t}function Ho(a){let t="";if(Ca(a))t=a;else if(Y(a))for(let e=0;e<a.length;e++){const s=Ho(a[e]);s&&(t+=s+" ")}else if(ka(a))for(const e in a)a[e]&&(t+=e+" ");return t.trim()}const J2="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",C2=Vo(J2);function pp(a){return!!a||a===""}const Yh=a=>Ca(a)?a:a==null?"":Y(a)||ka(a)&&(a.toString===sp||!na(a.toString))?JSON.stringify(a,lp,2):String(a),lp=(a,t)=>t&&t.__v_isRef?lp(a,t.value):De(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((e,[s,o],r)=>(e[Vs(s,r)+" =>"]=o,e),{})}:ep(t)?{[`Set(${t.size})`]:[...t.values()].map(e=>Vs(e))}:he(t)?Vs(t):ka(t)&&!Y(t)&&!op(t)?String(t):t,Vs=(a,t="")=>{var e;return he(a)?`Symbol(${(e=a.description)!=null?e:t})`:a};/**
* @vue/reactivity v3.4.27
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Za;class B2{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Za,!t&&Za&&(this.index=(Za.scopes||(Za.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const e=Za;try{return Za=this,t()}finally{Za=e}}}on(){Za=this}off(){Za=this.parent}stop(t){if(this._active){let e,s;for(e=0,s=this.effects.length;e<s;e++)this.effects[e].stop();for(e=0,s=this.cleanups.length;e<s;e++)this.cleanups[e]();if(this.scopes)for(e=0,s=this.scopes.length;e<s;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!t){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this._active=!1}}}function w2(a,t=Za){t&&t.active&&t.effects.push(a)}function cp(){return Za}function V2(a){Za&&Za.cleanups.push(a)}let de;class Uo{constructor(t,e,s,o){this.fn=t,this.trigger=e,this.scheduler=s,this.active=!0,this.deps=[],this._dirtyLevel=4,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,w2(this,o)}get dirty(){if(this._dirtyLevel===2||this._dirtyLevel===3){this._dirtyLevel=1,ae();for(let t=0;t<this._depsLength;t++){const e=this.deps[t];if(e.computed&&(M2(e.computed),this._dirtyLevel>=4))break}this._dirtyLevel===1&&(this._dirtyLevel=0),te()}return this._dirtyLevel>=4}set dirty(t){this._dirtyLevel=t?4:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let t=qt,e=de;try{return qt=!0,de=this,this._runnings++,Or(this),this.fn()}finally{Jr(this),this._runnings--,de=e,qt=t}}stop(){this.active&&(Or(this),Jr(this),this.onStop&&this.onStop(),this.active=!1)}}function M2(a){return a.value}function Or(a){a._trackId++,a._depsLength=0}function Jr(a){if(a.deps.length>a._depsLength){for(let t=a._depsLength;t<a.deps.length;t++)up(a.deps[t],a);a.deps.length=a._depsLength}}function up(a,t){const e=a.get(t);e!==void 0&&t._trackId!==e&&(a.delete(t),a.size===0&&a.cleanup())}let qt=!0,io=0;const dp=[];function ae(){dp.push(qt),qt=!1}function te(){const a=dp.pop();qt=a===void 0?!0:a}function Ko(){io++}function Go(){for(io--;!io&&po.length;)po.shift()()}function gp(a,t,e){if(t.get(a)!==a._trackId){t.set(a,a._trackId);const s=a.deps[a._depsLength];s!==t?(s&&up(s,a),a.deps[a._depsLength++]=t):a._depsLength++}}const po=[];function mp(a,t,e){Ko();for(const s of a.keys()){let o;s._dirtyLevel<t&&(o??(o=a.get(s)===s._trackId))&&(s._shouldSchedule||(s._shouldSchedule=s._dirtyLevel===0),s._dirtyLevel=t),s._shouldSchedule&&(o??(o=a.get(s)===s._trackId))&&(s.trigger(),(!s._runnings||s.allowRecurse)&&s._dirtyLevel!==2&&(s._shouldSchedule=!1,s.scheduler&&po.push(s.scheduler)))}Go()}const _p=(a,t)=>{const e=new Map;return e.cleanup=a,e.computed=t,e},cs=new WeakMap,ge=Symbol(""),lo=Symbol("");function qa(a,t,e){if(qt&&de){let s=cs.get(a);s||cs.set(a,s=new Map);let o=s.get(e);o||s.set(e,o=_p(()=>s.delete(e))),gp(de,o)}}function Jt(a,t,e,s,o,r){const i=cs.get(a);if(!i)return;let l=[];if(t==="clear")l=[...i.values()];else if(e==="length"&&Y(a)){const c=Number(s);i.forEach((u,d)=>{(d==="length"||!he(d)&&d>=c)&&l.push(u)})}else switch(e!==void 0&&l.push(i.get(e)),t){case"add":Y(a)?jo(e)&&l.push(i.get("length")):(l.push(i.get(ge)),De(a)&&l.push(i.get(lo)));break;case"delete":Y(a)||(l.push(i.get(ge)),De(a)&&l.push(i.get(lo)));break;case"set":De(a)&&l.push(i.get(ge));break}Ko();for(const c of l)c&&mp(c,4);Go()}function F2(a,t){const e=cs.get(a);return e&&e.get(t)}const j2=Vo("__proto__,__v_isRef,__isVue"),hp=new Set(Object.getOwnPropertyNames(Symbol).filter(a=>a!=="arguments"&&a!=="caller").map(a=>Symbol[a]).filter(he)),Cr=N2();function N2(){const a={};return["includes","indexOf","lastIndexOf"].forEach(t=>{a[t]=function(...e){const s=ca(this);for(let r=0,i=this.length;r<i;r++)qa(s,"get",r+"");const o=s[t](...e);return o===-1||o===!1?s[t](...e.map(ca)):o}}),["push","pop","shift","unshift","splice"].forEach(t=>{a[t]=function(...e){ae(),Ko();const s=ca(this)[t].apply(this,e);return Go(),te(),s}}),a}function H2(a){he(a)||(a=String(a));const t=ca(this);return qa(t,"has",a),t.hasOwnProperty(a)}class vp{constructor(t=!1,e=!1){this._isReadonly=t,this._isShallow=e}get(t,e,s){const o=this._isReadonly,r=this._isShallow;if(e==="__v_isReactive")return!o;if(e==="__v_isReadonly")return o;if(e==="__v_isShallow")return r;if(e==="__v_raw")return s===(o?r?t0:Ap:r?kp:Ep).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(s)?t:void 0;const i=Y(t);if(!o){if(i&&la(Cr,e))return Reflect.get(Cr,e,s);if(e==="hasOwnProperty")return H2}const l=Reflect.get(t,e,s);return(he(e)?hp.has(e):j2(e))||(o||qa(t,"get",e),r)?l:Fa(l)?i&&jo(e)?l:l.value:ka(l)?o?ve(l):bn(l):l}}class fp extends vp{constructor(t=!1){super(!1,t)}set(t,e,s,o){let r=t[e];if(!this._isShallow){const c=rn(r);if(!us(s)&&!rn(s)&&(r=ca(r),s=ca(s)),!Y(t)&&Fa(r)&&!Fa(s))return c?!1:(r.value=s,!0)}const i=Y(t)&&jo(e)?Number(e)<t.length:la(t,e),l=Reflect.set(t,e,s,o);return t===ca(o)&&(i?Xt(s,r)&&Jt(t,"set",e,s):Jt(t,"add",e,s)),l}deleteProperty(t,e){const s=la(t,e);t[e];const o=Reflect.deleteProperty(t,e);return o&&s&&Jt(t,"delete",e,void 0),o}has(t,e){const s=Reflect.has(t,e);return(!he(e)||!hp.has(e))&&qa(t,"has",e),s}ownKeys(t){return qa(t,"iterate",Y(t)?"length":ge),Reflect.ownKeys(t)}}class U2 extends vp{constructor(t=!1){super(!0,t)}set(t,e){return!0}deleteProperty(t,e){return!0}}const K2=new fp,G2=new U2,W2=new fp(!0);const Wo=a=>a,ks=a=>Reflect.getPrototypeOf(a);function Gn(a,t,e=!1,s=!1){a=a.__v_raw;const o=ca(a),r=ca(t);e||(Xt(t,r)&&qa(o,"get",t),qa(o,"get",r));const{has:i}=ks(o),l=s?Wo:e?qo:pn;if(i.call(o,t))return l(a.get(t));if(i.call(o,r))return l(a.get(r));a!==o&&a.get(t)}function Wn(a,t=!1){const e=this.__v_raw,s=ca(e),o=ca(a);return t||(Xt(a,o)&&qa(s,"has",a),qa(s,"has",o)),a===o?e.has(a):e.has(a)||e.has(o)}function zn(a,t=!1){return a=a.__v_raw,!t&&qa(ca(a),"iterate",ge),Reflect.get(a,"size",a)}function Br(a){a=ca(a);const t=ca(this);return ks(t).has.call(t,a)||(t.add(a),Jt(t,"add",a,a)),this}function wr(a,t){t=ca(t);const e=ca(this),{has:s,get:o}=ks(e);let r=s.call(e,a);r||(a=ca(a),r=s.call(e,a));const i=o.call(e,a);return e.set(a,t),r?Xt(t,i)&&Jt(e,"set",a,t):Jt(e,"add",a,t),this}function Vr(a){const t=ca(this),{has:e,get:s}=ks(t);let o=e.call(t,a);o||(a=ca(a),o=e.call(t,a)),s&&s.call(t,a);const r=t.delete(a);return o&&Jt(t,"delete",a,void 0),r}function Mr(){const a=ca(this),t=a.size!==0,e=a.clear();return t&&Jt(a,"clear",void 0,void 0),e}function $n(a,t){return function(s,o){const r=this,i=r.__v_raw,l=ca(i),c=t?Wo:a?qo:pn;return!a&&qa(l,"iterate",ge),i.forEach((u,d)=>s.call(o,c(u),c(d),r))}}function qn(a,t,e){return function(...s){const o=this.__v_raw,r=ca(o),i=De(r),l=a==="entries"||a===Symbol.iterator&&i,c=a==="keys"&&i,u=o[a](...s),d=e?Wo:t?qo:pn;return!t&&qa(r,"iterate",c?lo:ge),{next(){const{value:g,done:m}=u.next();return m?{value:g,done:m}:{value:l?[d(g[0]),d(g[1])]:d(g),done:m}},[Symbol.iterator](){return this}}}}function Mt(a){return function(...t){return a==="delete"?!1:a==="clear"?void 0:this}}function z2(){const a={get(r){return Gn(this,r)},get size(){return zn(this)},has:Wn,add:Br,set:wr,delete:Vr,clear:Mr,forEach:$n(!1,!1)},t={get(r){return Gn(this,r,!1,!0)},get size(){return zn(this)},has:Wn,add:Br,set:wr,delete:Vr,clear:Mr,forEach:$n(!1,!0)},e={get(r){return Gn(this,r,!0)},get size(){return zn(this,!0)},has(r){return Wn.call(this,r,!0)},add:Mt("add"),set:Mt("set"),delete:Mt("delete"),clear:Mt("clear"),forEach:$n(!0,!1)},s={get(r){return Gn(this,r,!0,!0)},get size(){return zn(this,!0)},has(r){return Wn.call(this,r,!0)},add:Mt("add"),set:Mt("set"),delete:Mt("delete"),clear:Mt("clear"),forEach:$n(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(r=>{a[r]=qn(r,!1,!1),e[r]=qn(r,!0,!1),t[r]=qn(r,!1,!0),s[r]=qn(r,!0,!0)}),[a,e,t,s]}const[$2,q2,Q2,X2]=z2();function zo(a,t){const e=t?a?X2:Q2:a?q2:$2;return(s,o,r)=>o==="__v_isReactive"?!a:o==="__v_isReadonly"?a:o==="__v_raw"?s:Reflect.get(la(e,o)&&o in s?e:s,o,r)}const Z2={get:zo(!1,!1)},Y2={get:zo(!1,!0)},a0={get:zo(!0,!1)};const Ep=new WeakMap,kp=new WeakMap,Ap=new WeakMap,t0=new WeakMap;function e0(a){switch(a){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function n0(a){return a.__v_skip||!Object.isExtensible(a)?0:e0(b2(a))}function bn(a){return rn(a)?a:$o(a,!1,K2,Z2,Ep)}function yp(a){return $o(a,!1,W2,Y2,kp)}function ve(a){return $o(a,!0,G2,a0,Ap)}function $o(a,t,e,s,o){if(!ka(a)||a.__v_raw&&!(t&&a.__v_isReactive))return a;const r=o.get(a);if(r)return r;const i=n0(a);if(i===0)return a;const l=new Proxy(a,i===2?s:e);return o.set(a,l),l}function Qe(a){return rn(a)?Qe(a.__v_raw):!!(a&&a.__v_isReactive)}function rn(a){return!!(a&&a.__v_isReadonly)}function us(a){return!!(a&&a.__v_isShallow)}function Ip(a){return a?!!a.__v_raw:!1}function ca(a){const t=a&&a.__v_raw;return t?ca(t):a}function s0(a){return Object.isExtensible(a)&&rp(a,"__v_skip",!0),a}const pn=a=>ka(a)?bn(a):a,qo=a=>ka(a)?ve(a):a;class bp{constructor(t,e,s,o){this.getter=t,this._setter=e,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new Uo(()=>t(this._value),()=>Xe(this,this.effect._dirtyLevel===2?2:3)),this.effect.computed=this,this.effect.active=this._cacheable=!o,this.__v_isReadonly=s}get value(){const t=ca(this);return(!t._cacheable||t.effect.dirty)&&Xt(t._value,t._value=t.effect.run())&&Xe(t,4),Qo(t),t.effect._dirtyLevel>=2&&Xe(t,2),t._value}set value(t){this._setter(t)}get _dirty(){return this.effect.dirty}set _dirty(t){this.effect.dirty=t}}function o0(a,t,e=!1){let s,o;const r=na(a);return r?(s=a,o=rt):(s=a.get,o=a.set),new bp(s,o,r||!o,e)}function Qo(a){var t;qt&&de&&(a=ca(a),gp(de,(t=a.dep)!=null?t:a.dep=_p(()=>a.dep=void 0,a instanceof bp?a:void 0)))}function Xe(a,t=4,e){a=ca(a);const s=a.dep;s&&mp(s,t)}function Fa(a){return!!(a&&a.__v_isRef===!0)}function X(a){return Sp(a,!1)}function xa(a){return Sp(a,!0)}function Sp(a,t){return Fa(a)?a:new r0(a,t)}class r0{constructor(t,e){this.__v_isShallow=e,this.dep=void 0,this.__v_isRef=!0,this._rawValue=e?t:ca(t),this._value=e?t:pn(t)}get value(){return Qo(this),this._value}set value(t){const e=this.__v_isShallow||us(t)||rn(t);t=e?t:ca(t),Xt(t,this._rawValue)&&(this._rawValue=t,this._value=e?t:pn(t),Xe(this,4))}}function me(a){return Fa(a)?a.value:a}const i0={get:(a,t,e)=>me(Reflect.get(a,t,e)),set:(a,t,e,s)=>{const o=a[t];return Fa(o)&&!Fa(e)?(o.value=e,!0):Reflect.set(a,t,e,s)}};function Pp(a){return Qe(a)?a:new Proxy(a,i0)}class p0{constructor(t){this.dep=void 0,this.__v_isRef=!0;const{get:e,set:s}=t(()=>Qo(this),()=>Xe(this));this._get=e,this._set=s}get value(){return this._get()}set value(t){this._set(t)}}function Dp(a){return new p0(a)}class l0{constructor(t,e,s){this._object=t,this._key=e,this._defaultValue=s,this.__v_isRef=!0}get value(){const t=this._object[this._key];return t===void 0?this._defaultValue:t}set value(t){this._object[this._key]=t}get dep(){return F2(ca(this._object),this._key)}}class c0{constructor(t){this._getter=t,this.__v_isRef=!0,this.__v_isReadonly=!0}get value(){return this._getter()}}function Fe(a,t,e){return Fa(a)?a:na(a)?new c0(a):ka(a)&&arguments.length>1?u0(a,t,e):X(a)}function u0(a,t,e){const s=a[t];return Fa(s)?s:new l0(a,t,e)}/**
* @vue/runtime-core v3.4.27
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Qt(a,t,e,s){try{return s?a(...s):a()}catch(o){Sn(o,t,e)}}function pt(a,t,e,s){if(na(a)){const o=Qt(a,t,e,s);return o&&np(o)&&o.catch(r=>{Sn(r,t,e)}),o}if(Y(a)){const o=[];for(let r=0;r<a.length;r++)o.push(pt(a[r],t,e,s));return o}}function Sn(a,t,e,s=!0){const o=t?t.vnode:null;if(t){let r=t.parent;const i=t.proxy,l=`https://vuejs.org/error-reference/#runtime-${e}`;for(;r;){const u=r.ec;if(u){for(let d=0;d<u.length;d++)if(u[d](a,i,l)===!1)return}r=r.parent}const c=t.appContext.config.errorHandler;if(c){ae(),Qt(c,null,10,[a,i,l]),te();return}}d0(a,e,o,s)}function d0(a,t,e,s=!0){console.error(a)}let ln=!1,co=!1;const Ha=[];let St=0;const Le=[];let Kt=null,le=0;const Tp=Promise.resolve();let Xo=null;function Bt(a){const t=Xo||Tp;return a?t.then(this?a.bind(this):a):t}function g0(a){let t=St+1,e=Ha.length;for(;t<e;){const s=t+e>>>1,o=Ha[s],r=cn(o);r<a||r===a&&o.pre?t=s+1:e=s}return t}function As(a){(!Ha.length||!Ha.includes(a,ln&&a.allowRecurse?St+1:St))&&(a.id==null?Ha.push(a):Ha.splice(g0(a.id),0,a),Lp())}function Lp(){!ln&&!co&&(co=!0,Xo=Tp.then(xp))}function m0(a){const t=Ha.indexOf(a);t>St&&Ha.splice(t,1)}function _0(a){Y(a)?Le.push(...a):(!Kt||!Kt.includes(a,a.allowRecurse?le+1:le))&&Le.push(a),Lp()}function Fr(a,t,e=ln?St+1:0){for(;e<Ha.length;e++){const s=Ha[e];if(s&&s.pre){if(a&&s.id!==a.uid)continue;Ha.splice(e,1),e--,s()}}}function ds(a){if(Le.length){const t=[...new Set(Le)].sort((e,s)=>cn(e)-cn(s));if(Le.length=0,Kt){Kt.push(...t);return}for(Kt=t,le=0;le<Kt.length;le++)Kt[le]();Kt=null,le=0}}const cn=a=>a.id==null?1/0:a.id,h0=(a,t)=>{const e=cn(a)-cn(t);if(e===0){if(a.pre&&!t.pre)return-1;if(t.pre&&!a.pre)return 1}return e};function xp(a){co=!1,ln=!0,Ha.sort(h0);try{for(St=0;St<Ha.length;St++){const t=Ha[St];t&&t.active!==!1&&Qt(t,null,14)}}finally{St=0,Ha.length=0,ds(),ln=!1,Xo=null,(Ha.length||Le.length)&&xp()}}function v0(a,t,...e){if(a.isUnmounted)return;const s=a.vnode.props||ba;let o=e;const r=t.startsWith("update:"),i=r&&t.slice(7);if(i&&i in s){const d=`${i==="modelValue"?"model":i}Modifiers`,{number:g,trim:m}=s[d]||ba;m&&(o=e.map(_=>Ca(_)?_.trim():_)),g&&(o=e.map(D2))}let l,c=s[l=Bs(t)]||s[l=Bs(ct(t))];!c&&r&&(c=s[l=Bs(Me(t))]),c&&pt(c,a,6,o);const u=s[l+"Once"];if(u){if(!a.emitted)a.emitted={};else if(a.emitted[l])return;a.emitted[l]=!0,pt(u,a,6,o)}}function Rp(a,t,e=!1){const s=t.emitsCache,o=s.get(a);if(o!==void 0)return o;const r=a.emits;let i={},l=!1;if(!na(a)){const c=u=>{const d=Rp(u,t,!0);d&&(l=!0,La(i,d))};!e&&t.mixins.length&&t.mixins.forEach(c),a.extends&&c(a.extends),a.mixins&&a.mixins.forEach(c)}return!r&&!l?(ka(a)&&s.set(a,null),null):(Y(r)?r.forEach(c=>i[c]=null):La(i,r),ka(a)&&s.set(a,i),i)}function ys(a,t){return!a||!yn(t)?!1:(t=t.slice(2).replace(/Once$/,""),la(a,t[0].toLowerCase()+t.slice(1))||la(a,Me(t))||la(a,t))}let it=null,Op=null;function gs(a){const t=it;return it=a,Op=a&&a.type.__scopeId||null,t}function f0(a,t=it,e){if(!t||a._n)return a;const s=(...o)=>{s._d&&Xr(-1);const r=gs(t);let i;try{i=a(...o)}finally{gs(r),s._d&&Xr(1)}return i};return s._n=!0,s._c=!0,s._d=!0,s}function Ms(a){const{type:t,vnode:e,proxy:s,withProxy:o,propsOptions:[r],slots:i,attrs:l,emit:c,render:u,renderCache:d,props:g,data:m,setupState:_,ctx:v,inheritAttrs:k}=a,b=gs(a);let A,I;try{if(e.shapeFlag&4){const P=o||s,M=P;A=mt(u.call(M,P,d,g,_,m,v)),I=l}else{const P=t;A=mt(P.length>1?P(g,{attrs:l,slots:i,emit:c}):P(g,null)),I=t.props?l:E0(l)}}catch(P){en.length=0,Sn(P,a,1),A=Ja(_t)}let E=A;if(I&&k!==!1){const P=Object.keys(I),{shapeFlag:M}=E;P.length&&M&7&&(r&&P.some(Mo)&&(I=k0(I,r)),E=Zt(E,I,!1,!0))}return e.dirs&&(E=Zt(E,null,!1,!0),E.dirs=E.dirs?E.dirs.concat(e.dirs):e.dirs),e.transition&&(E.transition=e.transition),A=E,gs(b),A}const E0=a=>{let t;for(const e in a)(e==="class"||e==="style"||yn(e))&&((t||(t={}))[e]=a[e]);return t},k0=(a,t)=>{const e={};for(const s in a)(!Mo(s)||!(s.slice(9)in t))&&(e[s]=a[s]);return e};function A0(a,t,e){const{props:s,children:o,component:r}=a,{props:i,children:l,patchFlag:c}=t,u=r.emitsOptions;if(t.dirs||t.transition)return!0;if(e&&c>=0){if(c&1024)return!0;if(c&16)return s?jr(s,i,u):!!i;if(c&8){const d=t.dynamicProps;for(let g=0;g<d.length;g++){const m=d[g];if(i[m]!==s[m]&&!ys(u,m))return!0}}}else return(o||l)&&(!l||!l.$stable)?!0:s===i?!1:s?i?jr(s,i,u):!0:!!i;return!1}function jr(a,t,e){const s=Object.keys(t);if(s.length!==Object.keys(a).length)return!0;for(let o=0;o<s.length;o++){const r=s[o];if(t[r]!==a[r]&&!ys(e,r))return!0}return!1}function y0({vnode:a,parent:t},e){for(;t;){const s=t.subTree;if(s.suspense&&s.suspense.activeBranch===a&&(s.el=a.el),s===a)(a=t.vnode).el=e,t=t.parent;else break}}const Jp="components";function lt(a,t){return b0(Jp,a,!0,t)||a}const I0=Symbol.for("v-ndc");function b0(a,t,e=!0,s=!1){const o=it||Ma;if(o){const r=o.type;if(a===Jp){const l=Eu(r,!1);if(l&&(l===t||l===ct(t)||l===In(ct(t))))return r}const i=Nr(o[a]||r[a],t)||Nr(o.appContext[a],t);return!i&&s?r:i}}function Nr(a,t){return a&&(a[t]||a[ct(t)]||a[In(ct(t))])}const S0=a=>a.__isSuspense;function Cp(a,t){t&&t.pendingBranch?Y(a)?t.effects.push(...a):t.effects.push(a):_0(a)}const P0=Symbol.for("v-scx"),D0=()=>Sa(P0);function Bp(a,t){return Zo(a,null,t)}const Qn={};function ua(a,t,e){return Zo(a,t,e)}function Zo(a,t,{immediate:e,deep:s,flush:o,once:r,onTrack:i,onTrigger:l}=ba){if(t&&r){const C=t;t=(...x)=>{C(...x),M()}}const c=Ma,u=C=>s===!0?C:be(C,s===!1?1:void 0);let d,g=!1,m=!1;if(Fa(a)?(d=()=>a.value,g=us(a)):Qe(a)?(d=()=>u(a),g=!0):Y(a)?(m=!0,g=a.some(C=>Qe(C)||us(C)),d=()=>a.map(C=>{if(Fa(C))return C.value;if(Qe(C))return u(C);if(na(C))return Qt(C,c,2)})):na(a)?t?d=()=>Qt(a,c,2):d=()=>(_&&_(),pt(a,c,3,[v])):d=rt,t&&s){const C=d;d=()=>be(C())}let _,v=C=>{_=E.onStop=()=>{Qt(C,c,4),_=E.onStop=void 0}},k;if(Ln)if(v=rt,t?e&&pt(t,c,3,[d(),m?[]:void 0,v]):d(),o==="sync"){const C=D0();k=C.__watcherHandles||(C.__watcherHandles=[])}else return rt;let b=m?new Array(a.length).fill(Qn):Qn;const A=()=>{if(!(!E.active||!E.dirty))if(t){const C=E.run();(s||g||(m?C.some((x,O)=>Xt(x,b[O])):Xt(C,b)))&&(_&&_(),pt(t,c,3,[C,b===Qn?void 0:m&&b[0]===Qn?[]:b,v]),b=C)}else E.run()};A.allowRecurse=!!t;let I;o==="sync"?I=A:o==="post"?I=()=>Wa(A,c&&c.suspense):(A.pre=!0,c&&(A.id=c.uid),I=()=>As(A));const E=new Uo(d,rt,I),P=cp(),M=()=>{E.stop(),P&&Fo(P.effects,E)};return t?e?A():b=E.run():o==="post"?Wa(E.run.bind(E),c&&c.suspense):E.run(),k&&k.push(M),M}function T0(a,t,e){const s=this.proxy,o=Ca(a)?a.includes(".")?wp(s,a):()=>s[a]:a.bind(s,s);let r;na(t)?r=t:(r=t.handler,e=t);const i=Tn(this),l=Zo(o,r.bind(s),e);return i(),l}function wp(a,t){const e=t.split(".");return()=>{let s=a;for(let o=0;o<e.length&&s;o++)s=s[e[o]];return s}}function be(a,t=1/0,e){if(t<=0||!ka(a)||a.__v_skip||(e=e||new Set,e.has(a)))return a;if(e.add(a),t--,Fa(a))be(a.value,t,e);else if(Y(a))for(let s=0;s<a.length;s++)be(a[s],t,e);else if(ep(a)||De(a))a.forEach(s=>{be(s,t,e)});else if(op(a))for(const s in a)be(a[s],t,e);return a}function bt(a,t,e,s){const o=a.dirs,r=t&&t.dirs;for(let i=0;i<o.length;i++){const l=o[i];r&&(l.oldValue=r[i].value);let c=l.dir[s];c&&(ae(),pt(c,e,8,[a.el,l,a,t]),te())}}const Gt=Symbol("_leaveCb"),Xn=Symbol("_enterCb");function Vp(){const a={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return fa(()=>{a.isMounted=!0}),Hp(()=>{a.isUnmounting=!0}),a}const nt=[Function,Array],Mp={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:nt,onEnter:nt,onAfterEnter:nt,onEnterCancelled:nt,onBeforeLeave:nt,onLeave:nt,onAfterLeave:nt,onLeaveCancelled:nt,onBeforeAppear:nt,onAppear:nt,onAfterAppear:nt,onAppearCancelled:nt},L0={name:"BaseTransition",props:Mp,setup(a,{slots:t}){const e=Dn(),s=Vp();return()=>{const o=t.default&&Yo(t.default(),!0);if(!o||!o.length)return;let r=o[0];if(o.length>1){for(const m of o)if(m.type!==_t){r=m;break}}const i=ca(a),{mode:l}=i;if(s.isLeaving)return Fs(r);const c=Hr(r);if(!c)return Fs(r);const u=un(c,i,s,e);dn(c,u);const d=e.subTree,g=d&&Hr(d);if(g&&g.type!==_t&&!ce(c,g)){const m=un(g,i,s,e);if(dn(g,m),l==="out-in"&&c.type!==_t)return s.isLeaving=!0,m.afterLeave=()=>{s.isLeaving=!1,e.update.active!==!1&&(e.effect.dirty=!0,e.update())},Fs(r);l==="in-out"&&c.type!==_t&&(m.delayLeave=(_,v,k)=>{const b=Fp(s,g);b[String(g.key)]=g,_[Gt]=()=>{v(),_[Gt]=void 0,delete u.delayedLeave},u.delayedLeave=k})}return r}}},x0=L0;function Fp(a,t){const{leavingVNodes:e}=a;let s=e.get(t.type);return s||(s=Object.create(null),e.set(t.type,s)),s}function un(a,t,e,s){const{appear:o,mode:r,persisted:i=!1,onBeforeEnter:l,onEnter:c,onAfterEnter:u,onEnterCancelled:d,onBeforeLeave:g,onLeave:m,onAfterLeave:_,onLeaveCancelled:v,onBeforeAppear:k,onAppear:b,onAfterAppear:A,onAppearCancelled:I}=t,E=String(a.key),P=Fp(e,a),M=(O,W)=>{O&&pt(O,s,9,W)},C=(O,W)=>{const J=W[1];M(O,W),Y(O)?O.every(G=>G.length<=1)&&J():O.length<=1&&J()},x={mode:r,persisted:i,beforeEnter(O){let W=l;if(!e.isMounted)if(o)W=k||l;else return;O[Gt]&&O[Gt](!0);const J=P[E];J&&ce(a,J)&&J.el[Gt]&&J.el[Gt](),M(W,[O])},enter(O){let W=c,J=u,G=d;if(!e.isMounted)if(o)W=b||c,J=A||u,G=I||d;else return;let B=!1;const aa=O[Xn]=Da=>{B||(B=!0,Da?M(G,[O]):M(J,[O]),x.delayedLeave&&x.delayedLeave(),O[Xn]=void 0)};W?C(W,[O,aa]):aa()},leave(O,W){const J=String(a.key);if(O[Xn]&&O[Xn](!0),e.isUnmounting)return W();M(g,[O]);let G=!1;const B=O[Gt]=aa=>{G||(G=!0,W(),aa?M(v,[O]):M(_,[O]),O[Gt]=void 0,P[J]===a&&delete P[J])};P[J]=a,m?C(m,[O,B]):B()},clone(O){return un(O,t,e,s)}};return x}function Fs(a){if(Pn(a))return a=Zt(a),a.children=null,a}function Hr(a){if(!Pn(a))return a;const{shapeFlag:t,children:e}=a;if(e){if(t&16)return e[0];if(t&32&&na(e.default))return e.default()}}function dn(a,t){a.shapeFlag&6&&a.component?dn(a.component.subTree,t):a.shapeFlag&128?(a.ssContent.transition=t.clone(a.ssContent),a.ssFallback.transition=t.clone(a.ssFallback)):a.transition=t}function Yo(a,t=!1,e){let s=[],o=0;for(let r=0;r<a.length;r++){let i=a[r];const l=e==null?i.key:String(e)+String(i.key!=null?i.key:r);i.type===Ya?(i.patchFlag&128&&o++,s=s.concat(Yo(i.children,t,l))):(t||i.type!==_t)&&s.push(l!=null?Zt(i,{key:l}):i)}if(o>1)for(let r=0;r<s.length;r++)s[r].patchFlag=-2;return s}/*! #__NO_SIDE_EFFECTS__ */function j(a,t){return na(a)?La({name:a.name},t,{setup:a}):a}const Ze=a=>!!a.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function R0(a){na(a)&&(a={loader:a});const{loader:t,loadingComponent:e,errorComponent:s,delay:o=200,timeout:r,suspensible:i=!0,onError:l}=a;let c=null,u,d=0;const g=()=>(d++,c=null,m()),m=()=>{let _;return c||(_=c=t().catch(v=>{if(v=v instanceof Error?v:new Error(String(v)),l)return new Promise((k,b)=>{l(v,()=>k(g()),()=>b(v),d+1)});throw v}).then(v=>_!==c&&c?c:(v&&(v.__esModule||v[Symbol.toStringTag]==="Module")&&(v=v.default),u=v,v)))};return j({name:"AsyncComponentWrapper",__asyncLoader:m,get __asyncResolved(){return u},setup(){const _=Ma;if(u)return()=>js(u,_);const v=I=>{c=null,Sn(I,_,13,!s)};if(i&&_.suspense||Ln)return m().then(I=>()=>js(I,_)).catch(I=>(v(I),()=>s?Ja(s,{error:I}):null));const k=X(!1),b=X(),A=X(!!o);return o&&setTimeout(()=>{A.value=!1},o),r!=null&&setTimeout(()=>{if(!k.value&&!b.value){const I=new Error(`Async component timed out after ${r}ms.`);v(I),b.value=I}},r),m().then(()=>{k.value=!0,_.parent&&Pn(_.parent.vnode)&&(_.parent.effect.dirty=!0,As(_.parent.update))}).catch(I=>{v(I),b.value=I}),()=>{if(k.value&&u)return js(u,_);if(b.value&&s)return Ja(s,{error:b.value});if(e&&!A.value)return Ja(e)}}})}function js(a,t){const{ref:e,props:s,children:o,ce:r}=t.vnode,i=Ja(a,s,o);return i.ref=e,i.ce=r,delete t.vnode.ce,i}const Pn=a=>a.type.__isKeepAlive;function O0(a,t){jp(a,"a",t)}function J0(a,t){jp(a,"da",t)}function jp(a,t,e=Ma){const s=a.__wdc||(a.__wdc=()=>{let o=e;for(;o;){if(o.isDeactivated)return;o=o.parent}return a()});if(Is(t,s,e),e){let o=e.parent;for(;o&&o.parent;)Pn(o.parent.vnode)&&C0(s,t,e,o),o=o.parent}}function C0(a,t,e,s){const o=Is(t,a,s,!0);je(()=>{Fo(s[t],o)},e)}function Is(a,t,e=Ma,s=!1){if(e){const o=e[a]||(e[a]=[]),r=t.__weh||(t.__weh=(...i)=>{if(e.isUnmounted)return;ae();const l=Tn(e),c=pt(t,e,a,i);return l(),te(),c});return s?o.unshift(r):o.push(r),r}}const wt=a=>(t,e=Ma)=>(!Ln||a==="sp")&&Is(a,(...s)=>t(...s),e),B0=wt("bm"),fa=wt("m"),w0=wt("bu"),Np=wt("u"),Hp=wt("bum"),je=wt("um"),V0=wt("sp"),M0=wt("rtg"),F0=wt("rtc");function j0(a,t=Ma){Is("ec",a,t)}const uo=a=>a?ol(a)?nr(a)||a.proxy:uo(a.parent):null,Ye=La(Object.create(null),{$:a=>a,$el:a=>a.vnode.el,$data:a=>a.data,$props:a=>a.props,$attrs:a=>a.attrs,$slots:a=>a.slots,$refs:a=>a.refs,$parent:a=>uo(a.parent),$root:a=>uo(a.root),$emit:a=>a.emit,$options:a=>ar(a),$forceUpdate:a=>a.f||(a.f=()=>{a.effect.dirty=!0,As(a.update)}),$nextTick:a=>a.n||(a.n=Bt.bind(a.proxy)),$watch:a=>T0.bind(a)}),Ns=(a,t)=>a!==ba&&!a.__isScriptSetup&&la(a,t),N0={get({_:a},t){if(t==="__v_skip")return!0;const{ctx:e,setupState:s,data:o,props:r,accessCache:i,type:l,appContext:c}=a;let u;if(t[0]!=="$"){const _=i[t];if(_!==void 0)switch(_){case 1:return s[t];case 2:return o[t];case 4:return e[t];case 3:return r[t]}else{if(Ns(s,t))return i[t]=1,s[t];if(o!==ba&&la(o,t))return i[t]=2,o[t];if((u=a.propsOptions[0])&&la(u,t))return i[t]=3,r[t];if(e!==ba&&la(e,t))return i[t]=4,e[t];go&&(i[t]=0)}}const d=Ye[t];let g,m;if(d)return t==="$attrs"&&qa(a.attrs,"get",""),d(a);if((g=l.__cssModules)&&(g=g[t]))return g;if(e!==ba&&la(e,t))return i[t]=4,e[t];if(m=c.config.globalProperties,la(m,t))return m[t]},set({_:a},t,e){const{data:s,setupState:o,ctx:r}=a;return Ns(o,t)?(o[t]=e,!0):s!==ba&&la(s,t)?(s[t]=e,!0):la(a.props,t)||t[0]==="$"&&t.slice(1)in a?!1:(r[t]=e,!0)},has({_:{data:a,setupState:t,accessCache:e,ctx:s,appContext:o,propsOptions:r}},i){let l;return!!e[i]||a!==ba&&la(a,i)||Ns(t,i)||(l=r[0])&&la(l,i)||la(s,i)||la(Ye,i)||la(o.config.globalProperties,i)},defineProperty(a,t,e){return e.get!=null?a._.accessCache[t]=0:la(e,"value")&&this.set(a,t,e.value,null),Reflect.defineProperty(a,t,e)}};function Ur(a){return Y(a)?a.reduce((t,e)=>(t[e]=null,t),{}):a}let go=!0;function H0(a){const t=ar(a),e=a.proxy,s=a.ctx;go=!1,t.beforeCreate&&Kr(t.beforeCreate,a,"bc");const{data:o,computed:r,methods:i,watch:l,provide:c,inject:u,created:d,beforeMount:g,mounted:m,beforeUpdate:_,updated:v,activated:k,deactivated:b,beforeDestroy:A,beforeUnmount:I,destroyed:E,unmounted:P,render:M,renderTracked:C,renderTriggered:x,errorCaptured:O,serverPrefetch:W,expose:J,inheritAttrs:G,components:B,directives:aa,filters:Da}=t;if(u&&U0(u,s,null),i)for(const ta in i){const $=i[ta];na($)&&(s[ta]=$.bind(e))}if(o){const ta=o.call(e,e);ka(ta)&&(a.data=bn(ta))}if(go=!0,r)for(const ta in r){const $=r[ta],Ra=na($)?$.bind(e,e):na($.get)?$.get.bind(e,e):rt,At=!na($)&&na($.set)?$.set.bind(e):rt,et=y({get:Ra,set:At});Object.defineProperty(s,ta,{enumerable:!0,configurable:!0,get:()=>et.value,set:wa=>et.value=wa})}if(l)for(const ta in l)Up(l[ta],s,e,ta);if(c){const ta=na(c)?c.call(e):c;Reflect.ownKeys(ta).forEach($=>{vt($,ta[$])})}d&&Kr(d,a,"c");function z(ta,$){Y($)?$.forEach(Ra=>ta(Ra.bind(e))):$&&ta($.bind(e))}if(z(B0,g),z(fa,m),z(w0,_),z(Np,v),z(O0,k),z(J0,b),z(j0,O),z(F0,C),z(M0,x),z(Hp,I),z(je,P),z(V0,W),Y(J))if(J.length){const ta=a.exposed||(a.exposed={});J.forEach($=>{Object.defineProperty(ta,$,{get:()=>e[$],set:Ra=>e[$]=Ra})})}else a.exposed||(a.exposed={});M&&a.render===rt&&(a.render=M),G!=null&&(a.inheritAttrs=G),B&&(a.components=B),aa&&(a.directives=aa)}function U0(a,t,e=rt){Y(a)&&(a=mo(a));for(const s in a){const o=a[s];let r;ka(o)?"default"in o?r=Sa(o.from||s,o.default,!0):r=Sa(o.from||s):r=Sa(o),Fa(r)?Object.defineProperty(t,s,{enumerable:!0,configurable:!0,get:()=>r.value,set:i=>r.value=i}):t[s]=r}}function Kr(a,t,e){pt(Y(a)?a.map(s=>s.bind(t.proxy)):a.bind(t.proxy),t,e)}function Up(a,t,e,s){const o=s.includes(".")?wp(e,s):()=>e[s];if(Ca(a)){const r=t[a];na(r)&&ua(o,r)}else if(na(a))ua(o,a.bind(e));else if(ka(a))if(Y(a))a.forEach(r=>Up(r,t,e,s));else{const r=na(a.handler)?a.handler.bind(e):t[a.handler];na(r)&&ua(o,r,a)}}function ar(a){const t=a.type,{mixins:e,extends:s}=t,{mixins:o,optionsCache:r,config:{optionMergeStrategies:i}}=a.appContext,l=r.get(t);let c;return l?c=l:!o.length&&!e&&!s?c=t:(c={},o.length&&o.forEach(u=>ms(c,u,i,!0)),ms(c,t,i)),ka(t)&&r.set(t,c),c}function ms(a,t,e,s=!1){const{mixins:o,extends:r}=t;r&&ms(a,r,e,!0),o&&o.forEach(i=>ms(a,i,e,!0));for(const i in t)if(!(s&&i==="expose")){const l=K0[i]||e&&e[i];a[i]=l?l(a[i],t[i]):t[i]}return a}const K0={data:Gr,props:Wr,emits:Wr,methods:$e,computed:$e,beforeCreate:Ka,created:Ka,beforeMount:Ka,mounted:Ka,beforeUpdate:Ka,updated:Ka,beforeDestroy:Ka,beforeUnmount:Ka,destroyed:Ka,unmounted:Ka,activated:Ka,deactivated:Ka,errorCaptured:Ka,serverPrefetch:Ka,components:$e,directives:$e,watch:W0,provide:Gr,inject:G0};function Gr(a,t){return t?a?function(){return La(na(a)?a.call(this,this):a,na(t)?t.call(this,this):t)}:t:a}function G0(a,t){return $e(mo(a),mo(t))}function mo(a){if(Y(a)){const t={};for(let e=0;e<a.length;e++)t[a[e]]=a[e];return t}return a}function Ka(a,t){return a?[...new Set([].concat(a,t))]:t}function $e(a,t){return a?La(Object.create(null),a,t):t}function Wr(a,t){return a?Y(a)&&Y(t)?[...new Set([...a,...t])]:La(Object.create(null),Ur(a),Ur(t??{})):t}function W0(a,t){if(!a)return t;if(!t)return a;const e=La(Object.create(null),a);for(const s in t)e[s]=Ka(a[s],t[s]);return e}function Kp(){return{app:null,config:{isNativeTag:y2,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let z0=0;function $0(a,t){return function(s,o=null){na(s)||(s=La({},s)),o!=null&&!ka(o)&&(o=null);const r=Kp(),i=new WeakSet;let l=!1;const c=r.app={_uid:z0++,_component:s,_props:o,_container:null,_context:r,_instance:null,version:Au,get config(){return r.config},set config(u){},use(u,...d){return i.has(u)||(u&&na(u.install)?(i.add(u),u.install(c,...d)):na(u)&&(i.add(u),u(c,...d))),c},mixin(u){return r.mixins.includes(u)||r.mixins.push(u),c},component(u,d){return d?(r.components[u]=d,c):r.components[u]},directive(u,d){return d?(r.directives[u]=d,c):r.directives[u]},mount(u,d,g){if(!l){const m=Ja(s,o);return m.appContext=r,g===!0?g="svg":g===!1&&(g=void 0),d&&t?t(m,u):a(m,u,g),l=!0,c._container=u,u.__vue_app__=c,nr(m.component)||m.component.proxy}},unmount(){l&&(a(null,c._container),delete c._container.__vue_app__)},provide(u,d){return r.provides[u]=d,c},runWithContext(u){const d=an;an=c;try{return u()}finally{an=d}}};return c}}let an=null;function vt(a,t){if(Ma){let e=Ma.provides;const s=Ma.parent&&Ma.parent.provides;s===e&&(e=Ma.provides=Object.create(s)),e[a]=t}}function Sa(a,t,e=!1){const s=Ma||it;if(s||an){const o=s?s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides:an._context.provides;if(o&&a in o)return o[a];if(arguments.length>1)return e&&na(t)?t.call(s&&s.proxy):t}}const Gp={},Wp=()=>Object.create(Gp),zp=a=>Object.getPrototypeOf(a)===Gp;function q0(a,t,e,s=!1){const o={},r=Wp();a.propsDefaults=Object.create(null),$p(a,t,o,r);for(const i in a.propsOptions[0])i in o||(o[i]=void 0);e?a.props=s?o:yp(o):a.type.props?a.props=o:a.props=r,a.attrs=r}function Q0(a,t,e,s){const{props:o,attrs:r,vnode:{patchFlag:i}}=a,l=ca(o),[c]=a.propsOptions;let u=!1;if((s||i>0)&&!(i&16)){if(i&8){const d=a.vnode.dynamicProps;for(let g=0;g<d.length;g++){let m=d[g];if(ys(a.emitsOptions,m))continue;const _=t[m];if(c)if(la(r,m))_!==r[m]&&(r[m]=_,u=!0);else{const v=ct(m);o[v]=_o(c,l,v,_,a,!1)}else _!==r[m]&&(r[m]=_,u=!0)}}}else{$p(a,t,o,r)&&(u=!0);let d;for(const g in l)(!t||!la(t,g)&&((d=Me(g))===g||!la(t,d)))&&(c?e&&(e[g]!==void 0||e[d]!==void 0)&&(o[g]=_o(c,l,g,void 0,a,!0)):delete o[g]);if(r!==l)for(const g in r)(!t||!la(t,g))&&(delete r[g],u=!0)}u&&Jt(a.attrs,"set","")}function $p(a,t,e,s){const[o,r]=a.propsOptions;let i=!1,l;if(t)for(let c in t){if(Te(c))continue;const u=t[c];let d;o&&la(o,d=ct(c))?!r||!r.includes(d)?e[d]=u:(l||(l={}))[d]=u:ys(a.emitsOptions,c)||(!(c in s)||u!==s[c])&&(s[c]=u,i=!0)}if(r){const c=ca(e),u=l||ba;for(let d=0;d<r.length;d++){const g=r[d];e[g]=_o(o,c,g,u[g],a,!la(u,g))}}return i}function _o(a,t,e,s,o,r){const i=a[e];if(i!=null){const l=la(i,"default");if(l&&s===void 0){const c=i.default;if(i.type!==Function&&!i.skipFactory&&na(c)){const{propsDefaults:u}=o;if(e in u)s=u[e];else{const d=Tn(o);s=u[e]=c.call(null,t),d()}}else s=c}i[0]&&(r&&!l?s=!1:i[1]&&(s===""||s===Me(e))&&(s=!0))}return s}function qp(a,t,e=!1){const s=t.propsCache,o=s.get(a);if(o)return o;const r=a.props,i={},l=[];let c=!1;if(!na(a)){const d=g=>{c=!0;const[m,_]=qp(g,t,!0);La(i,m),_&&l.push(..._)};!e&&t.mixins.length&&t.mixins.forEach(d),a.extends&&d(a.extends),a.mixins&&a.mixins.forEach(d)}if(!r&&!c)return ka(a)&&s.set(a,Pe),Pe;if(Y(r))for(let d=0;d<r.length;d++){const g=ct(r[d]);zr(g)&&(i[g]=ba)}else if(r)for(const d in r){const g=ct(d);if(zr(g)){const m=r[d],_=i[g]=Y(m)||na(m)?{type:m}:La({},m);if(_){const v=Qr(Boolean,_.type),k=Qr(String,_.type);_[0]=v>-1,_[1]=k<0||v<k,(v>-1||la(_,"default"))&&l.push(g)}}}const u=[i,l];return ka(a)&&s.set(a,u),u}function zr(a){return a[0]!=="$"&&!Te(a)}function $r(a){return a===null?"null":typeof a=="function"?a.name||"":typeof a=="object"&&a.constructor&&a.constructor.name||""}function qr(a,t){return $r(a)===$r(t)}function Qr(a,t){return Y(t)?t.findIndex(e=>qr(e,a)):na(t)&&qr(t,a)?0:-1}const Qp=a=>a[0]==="_"||a==="$stable",tr=a=>Y(a)?a.map(mt):[mt(a)],X0=(a,t,e)=>{if(t._n)return t;const s=f0((...o)=>tr(t(...o)),e);return s._c=!1,s},Xp=(a,t,e)=>{const s=a._ctx;for(const o in a){if(Qp(o))continue;const r=a[o];if(na(r))t[o]=X0(o,r,s);else if(r!=null){const i=tr(r);t[o]=()=>i}}},Zp=(a,t)=>{const e=tr(t);a.slots.default=()=>e},Z0=(a,t)=>{const e=a.slots=Wp();if(a.vnode.shapeFlag&32){const s=t._;s?(La(e,t),rp(e,"_",s,!0)):Xp(t,e)}else t&&Zp(a,t)},Y0=(a,t,e)=>{const{vnode:s,slots:o}=a;let r=!0,i=ba;if(s.shapeFlag&32){const l=t._;l?e&&l===1?r=!1:(La(o,t),!e&&l===1&&delete o._):(r=!t.$stable,Xp(t,o)),i=t}else t&&(Zp(a,t),i={default:1});if(r)for(const l in o)!Qp(l)&&i[l]==null&&delete o[l]};function _s(a,t,e,s,o=!1){if(Y(a)){a.forEach((m,_)=>_s(m,t&&(Y(t)?t[_]:t),e,s,o));return}if(Ze(s)&&!o)return;const r=s.shapeFlag&4?nr(s.component)||s.component.proxy:s.el,i=o?null:r,{i:l,r:c}=a,u=t&&t.r,d=l.refs===ba?l.refs={}:l.refs,g=l.setupState;if(u!=null&&u!==c&&(Ca(u)?(d[u]=null,la(g,u)&&(g[u]=null)):Fa(u)&&(u.value=null)),na(c))Qt(c,l,12,[i,d]);else{const m=Ca(c),_=Fa(c);if(m||_){const v=()=>{if(a.f){const k=m?la(g,c)?g[c]:d[c]:c.value;o?Y(k)&&Fo(k,r):Y(k)?k.includes(r)||k.push(r):m?(d[c]=[r],la(g,c)&&(g[c]=d[c])):(c.value=[r],a.k&&(d[a.k]=c.value))}else m?(d[c]=i,la(g,c)&&(g[c]=i)):_&&(c.value=i,a.k&&(d[a.k]=i))};i?(v.id=-1,Wa(v,e)):v()}}}let Ft=!1;const au=a=>a.namespaceURI.includes("svg")&&a.tagName!=="foreignObject",tu=a=>a.namespaceURI.includes("MathML"),Zn=a=>{if(au(a))return"svg";if(tu(a))return"mathml"},Yn=a=>a.nodeType===8;function eu(a){const{mt:t,p:e,o:{patchProp:s,createText:o,nextSibling:r,parentNode:i,remove:l,insert:c,createComment:u}}=a,d=(E,P)=>{if(!P.hasChildNodes()){e(null,E,P),ds(),P._vnode=E;return}Ft=!1,g(P.firstChild,E,null,null,null),ds(),P._vnode=E,Ft&&console.error("Hydration completed but contains mismatches.")},g=(E,P,M,C,x,O=!1)=>{O=O||!!P.dynamicChildren;const W=Yn(E)&&E.data==="[",J=()=>k(E,P,M,C,x,W),{type:G,ref:B,shapeFlag:aa,patchFlag:Da}=P;let ya=E.nodeType;P.el=E,Da===-2&&(O=!1,P.dynamicChildren=null);let z=null;switch(G){case Oe:ya!==3?P.children===""?(c(P.el=o(""),i(E),E),z=E):z=J():(E.data!==P.children&&(Ft=!0,E.data=P.children),z=r(E));break;case _t:I(E)?(z=r(E),A(P.el=E.content.firstChild,E,M)):ya!==8||W?z=J():z=r(E);break;case tn:if(W&&(E=r(E),ya=E.nodeType),ya===1||ya===3){z=E;const ta=!P.children.length;for(let $=0;$<P.staticCount;$++)ta&&(P.children+=z.nodeType===1?z.outerHTML:z.data),$===P.staticCount-1&&(P.anchor=z),z=r(z);return W?r(z):z}else J();break;case Ya:W?z=v(E,P,M,C,x,O):z=J();break;default:if(aa&1)(ya!==1||P.type.toLowerCase()!==E.tagName.toLowerCase())&&!I(E)?z=J():z=m(E,P,M,C,x,O);else if(aa&6){P.slotScopeIds=x;const ta=i(E);if(W?z=b(E):Yn(E)&&E.data==="teleport start"?z=b(E,E.data,"teleport end"):z=r(E),t(P,ta,null,M,C,Zn(ta),O),Ze(P)){let $;W?($=Ja(Ya),$.anchor=z?z.previousSibling:ta.lastChild):$=E.nodeType===3?sl(""):Ja("div"),$.el=E,P.component.subTree=$}}else aa&64?ya!==8?z=J():z=P.type.hydrate(E,P,M,C,x,O,a,_):aa&128&&(z=P.type.hydrate(E,P,M,C,Zn(i(E)),x,O,a,g))}return B!=null&&_s(B,null,C,P),z},m=(E,P,M,C,x,O)=>{O=O||!!P.dynamicChildren;const{type:W,props:J,patchFlag:G,shapeFlag:B,dirs:aa,transition:Da}=P,ya=W==="input"||W==="option";if(ya||G!==-1){aa&&bt(P,null,M,"created");let z=!1;if(I(E)){z=Yp(C,Da)&&M&&M.vnode.props&&M.vnode.props.appear;const $=E.content.firstChild;z&&Da.beforeEnter($),A($,E,M),P.el=E=$}if(B&16&&!(J&&(J.innerHTML||J.textContent))){let $=_(E.firstChild,P,E,M,C,x,O);for(;$;){Ft=!0;const Ra=$;$=$.nextSibling,l(Ra)}}else B&8&&E.textContent!==P.children&&(Ft=!0,E.textContent=P.children);if(J)if(ya||!O||G&48)for(const $ in J)(ya&&($.endsWith("value")||$==="indeterminate")||yn($)&&!Te($)||$[0]===".")&&s(E,$,null,J[$],void 0,void 0,M);else J.onClick&&s(E,"onClick",null,J.onClick,void 0,void 0,M);let ta;(ta=J&&J.onVnodeBeforeMount)&&st(ta,M,P),aa&&bt(P,null,M,"beforeMount"),((ta=J&&J.onVnodeMounted)||aa||z)&&Cp(()=>{ta&&st(ta,M,P),z&&Da.enter(E),aa&&bt(P,null,M,"mounted")},C)}return E.nextSibling},_=(E,P,M,C,x,O,W)=>{W=W||!!P.dynamicChildren;const J=P.children,G=J.length;for(let B=0;B<G;B++){const aa=W?J[B]:J[B]=mt(J[B]);if(E)E=g(E,aa,C,x,O,W);else{if(aa.type===Oe&&!aa.children)continue;Ft=!0,e(null,aa,M,null,C,x,Zn(M),O)}}return E},v=(E,P,M,C,x,O)=>{const{slotScopeIds:W}=P;W&&(x=x?x.concat(W):W);const J=i(E),G=_(r(E),P,J,M,C,x,O);return G&&Yn(G)&&G.data==="]"?r(P.anchor=G):(Ft=!0,c(P.anchor=u("]"),J,G),G)},k=(E,P,M,C,x,O)=>{if(Ft=!0,P.el=null,O){const G=b(E);for(;;){const B=r(E);if(B&&B!==G)l(B);else break}}const W=r(E),J=i(E);return l(E),e(null,P,J,W,M,C,Zn(J),x),W},b=(E,P="[",M="]")=>{let C=0;for(;E;)if(E=r(E),E&&Yn(E)&&(E.data===P&&C++,E.data===M)){if(C===0)return r(E);C--}return E},A=(E,P,M)=>{const C=P.parentNode;C&&C.replaceChild(E,P);let x=M;for(;x;)x.vnode.el===P&&(x.vnode.el=x.subTree.el=E),x=x.parent},I=E=>E.nodeType===1&&E.tagName.toLowerCase()==="template";return[d,g]}const Wa=Cp;function nu(a){return su(a,eu)}function su(a,t){const e=ip();e.__VUE__=!0;const{insert:s,remove:o,patchProp:r,createElement:i,createText:l,createComment:c,setText:u,setElementText:d,parentNode:g,nextSibling:m,setScopeId:_=rt,insertStaticContent:v}=a,k=(h,f,S,L=null,T=null,V=null,H=void 0,w=null,F=!!f.dynamicChildren)=>{if(h===f)return;h&&!ce(h,f)&&(L=D(h),wa(h,T,V,!0),h=null),f.patchFlag===-2&&(F=!1,f.dynamicChildren=null);const{type:R,ref:K,shapeFlag:Z}=f;switch(R){case Oe:b(h,f,S,L);break;case _t:A(h,f,S,L);break;case tn:h==null&&I(f,S,L,H);break;case Ya:B(h,f,S,L,T,V,H,w,F);break;default:Z&1?M(h,f,S,L,T,V,H,w,F):Z&6?aa(h,f,S,L,T,V,H,w,F):(Z&64||Z&128)&&R.process(h,f,S,L,T,V,H,w,F,q)}K!=null&&T&&_s(K,h&&h.ref,V,f||h,!f)},b=(h,f,S,L)=>{if(h==null)s(f.el=l(f.children),S,L);else{const T=f.el=h.el;f.children!==h.children&&u(T,f.children)}},A=(h,f,S,L)=>{h==null?s(f.el=c(f.children||""),S,L):f.el=h.el},I=(h,f,S,L)=>{[h.el,h.anchor]=v(h.children,f,S,L,h.el,h.anchor)},E=({el:h,anchor:f},S,L)=>{let T;for(;h&&h!==f;)T=m(h),s(h,S,L),h=T;s(f,S,L)},P=({el:h,anchor:f})=>{let S;for(;h&&h!==f;)S=m(h),o(h),h=S;o(f)},M=(h,f,S,L,T,V,H,w,F)=>{f.type==="svg"?H="svg":f.type==="math"&&(H="mathml"),h==null?C(f,S,L,T,V,H,w,F):W(h,f,T,V,H,w,F)},C=(h,f,S,L,T,V,H,w)=>{let F,R;const{props:K,shapeFlag:Z,transition:Q,dirs:ea}=h;if(F=h.el=i(h.type,V,K&&K.is,K),Z&8?d(F,h.children):Z&16&&O(h.children,F,null,L,T,Hs(h,V),H,w),ea&&bt(h,null,L,"created"),x(F,h,h.scopeId,H,L),K){for(const _a in K)_a!=="value"&&!Te(_a)&&r(F,_a,null,K[_a],V,h.children,L,T,Oa);"value"in K&&r(F,"value",null,K.value,V),(R=K.onVnodeBeforeMount)&&st(R,L,h)}ea&&bt(h,null,L,"beforeMount");const oa=Yp(T,Q);oa&&Q.beforeEnter(F),s(F,f,S),((R=K&&K.onVnodeMounted)||oa||ea)&&Wa(()=>{R&&st(R,L,h),oa&&Q.enter(F),ea&&bt(h,null,L,"mounted")},T)},x=(h,f,S,L,T)=>{if(S&&_(h,S),L)for(let V=0;V<L.length;V++)_(h,L[V]);if(T){let V=T.subTree;if(f===V){const H=T.vnode;x(h,H,H.scopeId,H.slotScopeIds,T.parent)}}},O=(h,f,S,L,T,V,H,w,F=0)=>{for(let R=F;R<h.length;R++){const K=h[R]=w?Wt(h[R]):mt(h[R]);k(null,K,f,S,L,T,V,H,w)}},W=(h,f,S,L,T,V,H)=>{const w=f.el=h.el;let{patchFlag:F,dynamicChildren:R,dirs:K}=f;F|=h.patchFlag&16;const Z=h.props||ba,Q=f.props||ba;let ea;if(S&&re(S,!1),(ea=Q.onVnodeBeforeUpdate)&&st(ea,S,f,h),K&&bt(f,h,S,"beforeUpdate"),S&&re(S,!0),R?J(h.dynamicChildren,R,w,S,L,Hs(f,T),V):H||$(h,f,w,null,S,L,Hs(f,T),V,!1),F>0){if(F&16)G(w,f,Z,Q,S,L,T);else if(F&2&&Z.class!==Q.class&&r(w,"class",null,Q.class,T),F&4&&r(w,"style",Z.style,Q.style,T),F&8){const oa=f.dynamicProps;for(let _a=0;_a<oa.length;_a++){const Ia=oa[_a],Va=Z[Ia],dt=Q[Ia];(dt!==Va||Ia==="value")&&r(w,Ia,Va,dt,T,h.children,S,L,Oa)}}F&1&&h.children!==f.children&&d(w,f.children)}else!H&&R==null&&G(w,f,Z,Q,S,L,T);((ea=Q.onVnodeUpdated)||K)&&Wa(()=>{ea&&st(ea,S,f,h),K&&bt(f,h,S,"updated")},L)},J=(h,f,S,L,T,V,H)=>{for(let w=0;w<f.length;w++){const F=h[w],R=f[w],K=F.el&&(F.type===Ya||!ce(F,R)||F.shapeFlag&70)?g(F.el):S;k(F,R,K,null,L,T,V,H,!0)}},G=(h,f,S,L,T,V,H)=>{if(S!==L){if(S!==ba)for(const w in S)!Te(w)&&!(w in L)&&r(h,w,S[w],null,H,f.children,T,V,Oa);for(const w in L){if(Te(w))continue;const F=L[w],R=S[w];F!==R&&w!=="value"&&r(h,w,R,F,H,f.children,T,V,Oa)}"value"in L&&r(h,"value",S.value,L.value,H)}},B=(h,f,S,L,T,V,H,w,F)=>{const R=f.el=h?h.el:l(""),K=f.anchor=h?h.anchor:l("");let{patchFlag:Z,dynamicChildren:Q,slotScopeIds:ea}=f;ea&&(w=w?w.concat(ea):ea),h==null?(s(R,S,L),s(K,S,L),O(f.children||[],S,K,T,V,H,w,F)):Z>0&&Z&64&&Q&&h.dynamicChildren?(J(h.dynamicChildren,Q,S,T,V,H,w),(f.key!=null||T&&f===T.subTree)&&al(h,f,!0)):$(h,f,S,K,T,V,H,w,F)},aa=(h,f,S,L,T,V,H,w,F)=>{f.slotScopeIds=w,h==null?f.shapeFlag&512?T.ctx.activate(f,S,L,H,F):Da(f,S,L,T,V,H,F):ya(h,f,F)},Da=(h,f,S,L,T,V,H)=>{const w=h.component=mu(h,L,T);if(Pn(h)&&(w.ctx.renderer=q),_u(w),w.asyncDep){if(T&&T.registerDep(w,z),!h.el){const F=w.subTree=Ja(_t);A(null,F,f,S)}}else z(w,h,f,S,T,V,H)},ya=(h,f,S)=>{const L=f.component=h.component;if(A0(h,f,S))if(L.asyncDep&&!L.asyncResolved){ta(L,f,S);return}else L.next=f,m0(L.update),L.effect.dirty=!0,L.update();else f.el=h.el,L.vnode=f},z=(h,f,S,L,T,V,H)=>{const w=()=>{if(h.isMounted){let{next:K,bu:Z,u:Q,parent:ea,vnode:oa}=h;{const ke=tl(h);if(ke){K&&(K.el=oa.el,ta(h,K,H)),ke.asyncDep.then(()=>{h.isUnmounted||w()});return}}let _a=K,Ia;re(h,!1),K?(K.el=oa.el,ta(h,K,H)):K=oa,Z&&ws(Z),(Ia=K.props&&K.props.onVnodeBeforeUpdate)&&st(Ia,ea,K,oa),re(h,!0);const Va=Ms(h),dt=h.subTree;h.subTree=Va,k(dt,Va,g(dt.el),D(dt),h,T,V),K.el=Va.el,_a===null&&y0(h,Va.el),Q&&Wa(Q,T),(Ia=K.props&&K.props.onVnodeUpdated)&&Wa(()=>st(Ia,ea,K,oa),T)}else{let K;const{el:Z,props:Q}=f,{bm:ea,m:oa,parent:_a}=h,Ia=Ze(f);if(re(h,!1),ea&&ws(ea),!Ia&&(K=Q&&Q.onVnodeBeforeMount)&&st(K,_a,f),re(h,!0),Z&&va){const Va=()=>{h.subTree=Ms(h),va(Z,h.subTree,h,T,null)};Ia?f.type.__asyncLoader().then(()=>!h.isUnmounted&&Va()):Va()}else{const Va=h.subTree=Ms(h);k(null,Va,S,L,h,T,V),f.el=Va.el}if(oa&&Wa(oa,T),!Ia&&(K=Q&&Q.onVnodeMounted)){const Va=f;Wa(()=>st(K,_a,Va),T)}(f.shapeFlag&256||_a&&Ze(_a.vnode)&&_a.vnode.shapeFlag&256)&&h.a&&Wa(h.a,T),h.isMounted=!0,f=S=L=null}},F=h.effect=new Uo(w,rt,()=>As(R),h.scope),R=h.update=()=>{F.dirty&&F.run()};R.id=h.uid,re(h,!0),R()},ta=(h,f,S)=>{f.component=h;const L=h.vnode.props;h.vnode=f,h.next=null,Q0(h,f.props,L,S),Y0(h,f.children,S),ae(),Fr(h),te()},$=(h,f,S,L,T,V,H,w,F=!1)=>{const R=h&&h.children,K=h?h.shapeFlag:0,Z=f.children,{patchFlag:Q,shapeFlag:ea}=f;if(Q>0){if(Q&128){At(R,Z,S,L,T,V,H,w,F);return}else if(Q&256){Ra(R,Z,S,L,T,V,H,w,F);return}}ea&8?(K&16&&Oa(R,T,V),Z!==R&&d(S,Z)):K&16?ea&16?At(R,Z,S,L,T,V,H,w,F):Oa(R,T,V,!0):(K&8&&d(S,""),ea&16&&O(Z,S,L,T,V,H,w,F))},Ra=(h,f,S,L,T,V,H,w,F)=>{h=h||Pe,f=f||Pe;const R=h.length,K=f.length,Z=Math.min(R,K);let Q;for(Q=0;Q<Z;Q++){const ea=f[Q]=F?Wt(f[Q]):mt(f[Q]);k(h[Q],ea,S,null,T,V,H,w,F)}R>K?Oa(h,T,V,!0,!1,Z):O(f,S,L,T,V,H,w,F,Z)},At=(h,f,S,L,T,V,H,w,F)=>{let R=0;const K=f.length;let Z=h.length-1,Q=K-1;for(;R<=Z&&R<=Q;){const ea=h[R],oa=f[R]=F?Wt(f[R]):mt(f[R]);if(ce(ea,oa))k(ea,oa,S,null,T,V,H,w,F);else break;R++}for(;R<=Z&&R<=Q;){const ea=h[Z],oa=f[Q]=F?Wt(f[Q]):mt(f[Q]);if(ce(ea,oa))k(ea,oa,S,null,T,V,H,w,F);else break;Z--,Q--}if(R>Z){if(R<=Q){const ea=Q+1,oa=ea<K?f[ea].el:L;for(;R<=Q;)k(null,f[R]=F?Wt(f[R]):mt(f[R]),S,oa,T,V,H,w,F),R++}}else if(R>Q)for(;R<=Z;)wa(h[R],T,V,!0),R++;else{const ea=R,oa=R,_a=new Map;for(R=oa;R<=Q;R++){const Xa=f[R]=F?Wt(f[R]):mt(f[R]);Xa.key!=null&&_a.set(Xa.key,R)}let Ia,Va=0;const dt=Q-oa+1;let ke=!1,Tr=0;const Ke=new Array(dt);for(R=0;R<dt;R++)Ke[R]=0;for(R=ea;R<=Z;R++){const Xa=h[R];if(Va>=dt){wa(Xa,T,V,!0);continue}let It;if(Xa.key!=null)It=_a.get(Xa.key);else for(Ia=oa;Ia<=Q;Ia++)if(Ke[Ia-oa]===0&&ce(Xa,f[Ia])){It=Ia;break}It===void 0?wa(Xa,T,V,!0):(Ke[It-oa]=R+1,It>=Tr?Tr=It:ke=!0,k(Xa,f[It],S,null,T,V,H,w,F),Va++)}const Lr=ke?ou(Ke):Pe;for(Ia=Lr.length-1,R=dt-1;R>=0;R--){const Xa=oa+R,It=f[Xa],xr=Xa+1<K?f[Xa+1].el:L;Ke[R]===0?k(null,It,S,xr,T,V,H,w,F):ke&&(Ia<0||R!==Lr[Ia]?et(It,S,xr,2):Ia--)}}},et=(h,f,S,L,T=null)=>{const{el:V,type:H,transition:w,children:F,shapeFlag:R}=h;if(R&6){et(h.component.subTree,f,S,L);return}if(R&128){h.suspense.move(f,S,L);return}if(R&64){H.move(h,f,S,q);return}if(H===Ya){s(V,f,S);for(let Z=0;Z<F.length;Z++)et(F[Z],f,S,L);s(h.anchor,f,S);return}if(H===tn){E(h,f,S);return}if(L!==2&&R&1&&w)if(L===0)w.beforeEnter(V),s(V,f,S),Wa(()=>w.enter(V),T);else{const{leave:Z,delayLeave:Q,afterLeave:ea}=w,oa=()=>s(V,f,S),_a=()=>{Z(V,()=>{oa(),ea&&ea()})};Q?Q(V,oa,_a):_a()}else s(V,f,S)},wa=(h,f,S,L=!1,T=!1)=>{const{type:V,props:H,ref:w,children:F,dynamicChildren:R,shapeFlag:K,patchFlag:Z,dirs:Q}=h;if(w!=null&&_s(w,null,S,h,!0),K&256){f.ctx.deactivate(h);return}const ea=K&1&&Q,oa=!Ze(h);let _a;if(oa&&(_a=H&&H.onVnodeBeforeUnmount)&&st(_a,f,h),K&6)yt(h.component,S,L);else{if(K&128){h.suspense.unmount(S,L);return}ea&&bt(h,null,f,"beforeUnmount"),K&64?h.type.remove(h,f,S,T,q,L):R&&(V!==Ya||Z>0&&Z&64)?Oa(R,f,S,!1,!0):(V===Ya&&Z&384||!T&&K&16)&&Oa(F,f,S),L&&Qa(h)}(oa&&(_a=H&&H.onVnodeUnmounted)||ea)&&Wa(()=>{_a&&st(_a,f,h),ea&&bt(h,null,f,"unmounted")},S)},Qa=h=>{const{type:f,el:S,anchor:L,transition:T}=h;if(f===Ya){Tt(S,L);return}if(f===tn){P(h);return}const V=()=>{o(S),T&&!T.persisted&&T.afterLeave&&T.afterLeave()};if(h.shapeFlag&1&&T&&!T.persisted){const{leave:H,delayLeave:w}=T,F=()=>H(S,V);w?w(h.el,V,F):F()}else V()},Tt=(h,f)=>{let S;for(;h!==f;)S=m(h),o(h),h=S;o(f)},yt=(h,f,S)=>{const{bum:L,scope:T,update:V,subTree:H,um:w}=h;L&&ws(L),T.stop(),V&&(V.active=!1,wa(H,h,f,S)),w&&Wa(w,f),Wa(()=>{h.isUnmounted=!0},f),f&&f.pendingBranch&&!f.isUnmounted&&h.asyncDep&&!h.asyncResolved&&h.suspenseId===f.pendingId&&(f.deps--,f.deps===0&&f.resolve())},Oa=(h,f,S,L=!1,T=!1,V=0)=>{for(let H=V;H<h.length;H++)wa(h[H],f,S,L,T)},D=h=>h.shapeFlag&6?D(h.component.subTree):h.shapeFlag&128?h.suspense.next():m(h.anchor||h.el);let U=!1;const N=(h,f,S)=>{h==null?f._vnode&&wa(f._vnode,null,null,!0):k(f._vnode||null,h,f,null,null,null,S),U||(U=!0,Fr(),ds(),U=!1),f._vnode=h},q={p:k,um:wa,m:et,r:Qa,mt:Da,mc:O,pc:$,pbc:J,n:D,o:a};let ia,va;return t&&([ia,va]=t(q)),{render:N,hydrate:ia,createApp:$0(N,ia)}}function Hs({type:a,props:t},e){return e==="svg"&&a==="foreignObject"||e==="mathml"&&a==="annotation-xml"&&t&&t.encoding&&t.encoding.includes("html")?void 0:e}function re({effect:a,update:t},e){a.allowRecurse=t.allowRecurse=e}function Yp(a,t){return(!a||a&&!a.pendingBranch)&&t&&!t.persisted}function al(a,t,e=!1){const s=a.children,o=t.children;if(Y(s)&&Y(o))for(let r=0;r<s.length;r++){const i=s[r];let l=o[r];l.shapeFlag&1&&!l.dynamicChildren&&((l.patchFlag<=0||l.patchFlag===32)&&(l=o[r]=Wt(o[r]),l.el=i.el),e||al(i,l)),l.type===Oe&&(l.el=i.el)}}function ou(a){const t=a.slice(),e=[0];let s,o,r,i,l;const c=a.length;for(s=0;s<c;s++){const u=a[s];if(u!==0){if(o=e[e.length-1],a[o]<u){t[s]=o,e.push(s);continue}for(r=0,i=e.length-1;r<i;)l=r+i>>1,a[e[l]]<u?r=l+1:i=l;u<a[e[r]]&&(r>0&&(t[s]=e[r-1]),e[r]=s)}}for(r=e.length,i=e[r-1];r-- >0;)e[r]=i,i=t[i];return e}function tl(a){const t=a.subTree.component;if(t)return t.asyncDep&&!t.asyncResolved?t:tl(t)}const ru=a=>a.__isTeleport,Ya=Symbol.for("v-fgt"),Oe=Symbol.for("v-txt"),_t=Symbol.for("v-cmt"),tn=Symbol.for("v-stc"),en=[];let ht=null;function av(a=!1){en.push(ht=a?null:[])}function iu(){en.pop(),ht=en[en.length-1]||null}let gn=1;function Xr(a){gn+=a}function pu(a){return a.dynamicChildren=gn>0?ht||Pe:null,iu(),gn>0&&ht&&ht.push(a),a}function tv(a,t,e,s,o,r){return pu(nl(a,t,e,s,o,r,!0))}function ho(a){return a?a.__v_isVNode===!0:!1}function ce(a,t){return a.type===t.type&&a.key===t.key}const el=({key:a})=>a??null,is=({ref:a,ref_key:t,ref_for:e})=>(typeof a=="number"&&(a=""+a),a!=null?Ca(a)||Fa(a)||na(a)?{i:it,r:a,k:t,f:!!e}:a:null);function nl(a,t=null,e=null,s=0,o=null,r=a===Ya?0:1,i=!1,l=!1){const c={__v_isVNode:!0,__v_skip:!0,type:a,props:t,key:t&&el(t),ref:t&&is(t),scopeId:Op,slotScopeIds:null,children:e,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:s,dynamicProps:o,dynamicChildren:null,appContext:null,ctx:it};return l?(er(c,e),r&128&&a.normalize(c)):e&&(c.shapeFlag|=Ca(e)?8:16),gn>0&&!i&&ht&&(c.patchFlag>0||r&6)&&c.patchFlag!==32&&ht.push(c),c}const Ja=lu;function lu(a,t=null,e=null,s=0,o=null,r=!1){if((!a||a===I0)&&(a=_t),ho(a)){const l=Zt(a,t,!0);return e&&er(l,e),gn>0&&!r&&ht&&(l.shapeFlag&6?ht[ht.indexOf(a)]=l:ht.push(l)),l.patchFlag|=-2,l}if(ku(a)&&(a=a.__vccOpts),t){t=cu(t);let{class:l,style:c}=t;l&&!Ca(l)&&(t.class=Ho(l)),ka(c)&&(Ip(c)&&!Y(c)&&(c=La({},c)),t.style=No(c))}const i=Ca(a)?1:S0(a)?128:ru(a)?64:ka(a)?4:na(a)?2:0;return nl(a,t,e,s,o,i,r,!0)}function cu(a){return a?Ip(a)||zp(a)?La({},a):a:null}function Zt(a,t,e=!1,s=!1){const{props:o,ref:r,patchFlag:i,children:l,transition:c}=a,u=t?uu(o||{},t):o,d={__v_isVNode:!0,__v_skip:!0,type:a.type,props:u,key:u&&el(u),ref:t&&t.ref?e&&r?Y(r)?r.concat(is(t)):[r,is(t)]:is(t):r,scopeId:a.scopeId,slotScopeIds:a.slotScopeIds,children:l,target:a.target,targetAnchor:a.targetAnchor,staticCount:a.staticCount,shapeFlag:a.shapeFlag,patchFlag:t&&a.type!==Ya?i===-1?16:i|16:i,dynamicProps:a.dynamicProps,dynamicChildren:a.dynamicChildren,appContext:a.appContext,dirs:a.dirs,transition:c,component:a.component,suspense:a.suspense,ssContent:a.ssContent&&Zt(a.ssContent),ssFallback:a.ssFallback&&Zt(a.ssFallback),el:a.el,anchor:a.anchor,ctx:a.ctx,ce:a.ce};return c&&s&&(d.transition=c.clone(d)),d}function sl(a=" ",t=0){return Ja(Oe,null,a,t)}function ev(a,t){const e=Ja(tn,null,a);return e.staticCount=t,e}function mt(a){return a==null||typeof a=="boolean"?Ja(_t):Y(a)?Ja(Ya,null,a.slice()):typeof a=="object"?Wt(a):Ja(Oe,null,String(a))}function Wt(a){return a.el===null&&a.patchFlag!==-1||a.memo?a:Zt(a)}function er(a,t){let e=0;const{shapeFlag:s}=a;if(t==null)t=null;else if(Y(t))e=16;else if(typeof t=="object")if(s&65){const o=t.default;o&&(o._c&&(o._d=!1),er(a,o()),o._c&&(o._d=!0));return}else{e=32;const o=t._;!o&&!zp(t)?t._ctx=it:o===3&&it&&(it.slots._===1?t._=1:(t._=2,a.patchFlag|=1024))}else na(t)?(t={default:t,_ctx:it},e=32):(t=String(t),s&64?(e=16,t=[sl(t)]):e=8);a.children=t,a.shapeFlag|=e}function uu(...a){const t={};for(let e=0;e<a.length;e++){const s=a[e];for(const o in s)if(o==="class")t.class!==s.class&&(t.class=Ho([t.class,s.class]));else if(o==="style")t.style=No([t.style,s.style]);else if(yn(o)){const r=t[o],i=s[o];i&&r!==i&&!(Y(r)&&r.includes(i))&&(t[o]=r?[].concat(r,i):i)}else o!==""&&(t[o]=s[o])}return t}function st(a,t,e,s=null){pt(a,t,7,[e,s])}const du=Kp();let gu=0;function mu(a,t,e){const s=a.type,o=(t?t.appContext:a.appContext)||du,r={uid:gu++,vnode:a,type:s,parent:t,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new B2(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:qp(s,o),emitsOptions:Rp(s,o),emit:null,emitted:null,propsDefaults:ba,inheritAttrs:s.inheritAttrs,ctx:ba,data:ba,props:ba,attrs:ba,slots:ba,refs:ba,setupState:ba,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:e,suspenseId:e?e.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=t?t.root:r,r.emit=v0.bind(null,r),a.ce&&a.ce(r),r}let Ma=null;const Dn=()=>Ma||it;let hs,vo;{const a=ip(),t=(e,s)=>{let o;return(o=a[e])||(o=a[e]=[]),o.push(s),r=>{o.length>1?o.forEach(i=>i(r)):o[0](r)}};hs=t("__VUE_INSTANCE_SETTERS__",e=>Ma=e),vo=t("__VUE_SSR_SETTERS__",e=>Ln=e)}const Tn=a=>{const t=Ma;return hs(a),a.scope.on(),()=>{a.scope.off(),hs(t)}},Zr=()=>{Ma&&Ma.scope.off(),hs(null)};function ol(a){return a.vnode.shapeFlag&4}let Ln=!1;function _u(a,t=!1){t&&vo(t);const{props:e,children:s}=a.vnode,o=ol(a);q0(a,e,o,t),Z0(a,s);const r=o?hu(a,t):void 0;return t&&vo(!1),r}function hu(a,t){const e=a.type;a.accessCache=Object.create(null),a.proxy=new Proxy(a.ctx,N0);const{setup:s}=e;if(s){const o=a.setupContext=s.length>1?fu(a):null,r=Tn(a);ae();const i=Qt(s,a,0,[a.props,o]);if(te(),r(),np(i)){if(i.then(Zr,Zr),t)return i.then(l=>{Yr(a,l,t)}).catch(l=>{Sn(l,a,0)});a.asyncDep=i}else Yr(a,i,t)}else rl(a,t)}function Yr(a,t,e){na(t)?a.type.__ssrInlineRender?a.ssrRender=t:a.render=t:ka(t)&&(a.setupState=Pp(t)),rl(a,e)}let ai;function rl(a,t,e){const s=a.type;if(!a.render){if(!t&&ai&&!s.render){const o=s.template||ar(a).template;if(o){const{isCustomElement:r,compilerOptions:i}=a.appContext.config,{delimiters:l,compilerOptions:c}=s,u=La(La({isCustomElement:r,delimiters:l},i),c);s.render=ai(o,u)}}a.render=s.render||rt}{const o=Tn(a);ae();try{H0(a)}finally{te(),o()}}}const vu={get(a,t){return qa(a,"get",""),a[t]}};function fu(a){const t=e=>{a.exposed=e||{}};return{attrs:new Proxy(a.attrs,vu),slots:a.slots,emit:a.emit,expose:t}}function nr(a){if(a.exposed)return a.exposeProxy||(a.exposeProxy=new Proxy(Pp(s0(a.exposed)),{get(t,e){if(e in t)return t[e];if(e in Ye)return Ye[e](a)},has(t,e){return e in t||e in Ye}}))}function Eu(a,t=!0){return na(a)?a.displayName||a.name:a.name||t&&a.__name}function ku(a){return na(a)&&"__vccOpts"in a}const y=(a,t)=>o0(a,t,Ln);function p(a,t,e){const s=arguments.length;return s===2?ka(t)&&!Y(t)?ho(t)?Ja(a,null,[t]):Ja(a,t):Ja(a,null,t):(s>3?e=Array.prototype.slice.call(arguments,2):s===3&&ho(e)&&(e=[e]),Ja(a,t,e))}const Au="3.4.27";/**
* @vue/runtime-dom v3.4.27
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const yu="http://www.w3.org/2000/svg",Iu="http://www.w3.org/1998/Math/MathML",zt=typeof document<"u"?document:null,ti=zt&&zt.createElement("template"),bu={insert:(a,t,e)=>{t.insertBefore(a,e||null)},remove:a=>{const t=a.parentNode;t&&t.removeChild(a)},createElement:(a,t,e,s)=>{const o=t==="svg"?zt.createElementNS(yu,a):t==="mathml"?zt.createElementNS(Iu,a):zt.createElement(a,e?{is:e}:void 0);return a==="select"&&s&&s.multiple!=null&&o.setAttribute("multiple",s.multiple),o},createText:a=>zt.createTextNode(a),createComment:a=>zt.createComment(a),setText:(a,t)=>{a.nodeValue=t},setElementText:(a,t)=>{a.textContent=t},parentNode:a=>a.parentNode,nextSibling:a=>a.nextSibling,querySelector:a=>zt.querySelector(a),setScopeId(a,t){a.setAttribute(t,"")},insertStaticContent(a,t,e,s,o,r){const i=e?e.previousSibling:t.lastChild;if(o&&(o===r||o.nextSibling))for(;t.insertBefore(o.cloneNode(!0),e),!(o===r||!(o=o.nextSibling)););else{ti.innerHTML=s==="svg"?`<svg>${a}</svg>`:s==="mathml"?`<math>${a}</math>`:a;const l=ti.content;if(s==="svg"||s==="mathml"){const c=l.firstChild;for(;c.firstChild;)l.appendChild(c.firstChild);l.removeChild(c)}t.insertBefore(l,e)}return[i?i.nextSibling:t.firstChild,e?e.previousSibling:t.lastChild]}},jt="transition",Ge="animation",Je=Symbol("_vtc"),Yt=(a,{slots:t})=>p(x0,pl(a),t);Yt.displayName="Transition";const il={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Su=Yt.props=La({},Mp,il),ie=(a,t=[])=>{Y(a)?a.forEach(e=>e(...t)):a&&a(...t)},ei=a=>a?Y(a)?a.some(t=>t.length>1):a.length>1:!1;function pl(a){const t={};for(const B in a)B in il||(t[B]=a[B]);if(a.css===!1)return t;const{name:e="v",type:s,duration:o,enterFromClass:r=`${e}-enter-from`,enterActiveClass:i=`${e}-enter-active`,enterToClass:l=`${e}-enter-to`,appearFromClass:c=r,appearActiveClass:u=i,appearToClass:d=l,leaveFromClass:g=`${e}-leave-from`,leaveActiveClass:m=`${e}-leave-active`,leaveToClass:_=`${e}-leave-to`}=a,v=Pu(o),k=v&&v[0],b=v&&v[1],{onBeforeEnter:A,onEnter:I,onEnterCancelled:E,onLeave:P,onLeaveCancelled:M,onBeforeAppear:C=A,onAppear:x=I,onAppearCancelled:O=E}=t,W=(B,aa,Da)=>{Ut(B,aa?d:l),Ut(B,aa?u:i),Da&&Da()},J=(B,aa)=>{B._isLeaving=!1,Ut(B,g),Ut(B,_),Ut(B,m),aa&&aa()},G=B=>(aa,Da)=>{const ya=B?x:I,z=()=>W(aa,B,Da);ie(ya,[aa,z]),ni(()=>{Ut(aa,B?c:r),xt(aa,B?d:l),ei(ya)||si(aa,s,k,z)})};return La(t,{onBeforeEnter(B){ie(A,[B]),xt(B,r),xt(B,i)},onBeforeAppear(B){ie(C,[B]),xt(B,c),xt(B,u)},onEnter:G(!1),onAppear:G(!0),onLeave(B,aa){B._isLeaving=!0;const Da=()=>J(B,aa);xt(B,g),xt(B,m),cl(),ni(()=>{B._isLeaving&&(Ut(B,g),xt(B,_),ei(P)||si(B,s,b,Da))}),ie(P,[B,Da])},onEnterCancelled(B){W(B,!1),ie(E,[B])},onAppearCancelled(B){W(B,!0),ie(O,[B])},onLeaveCancelled(B){J(B),ie(M,[B])}})}function Pu(a){if(a==null)return null;if(ka(a))return[Us(a.enter),Us(a.leave)];{const t=Us(a);return[t,t]}}function Us(a){return T2(a)}function xt(a,t){t.split(/\s+/).forEach(e=>e&&a.classList.add(e)),(a[Je]||(a[Je]=new Set)).add(t)}function Ut(a,t){t.split(/\s+/).forEach(s=>s&&a.classList.remove(s));const e=a[Je];e&&(e.delete(t),e.size||(a[Je]=void 0))}function ni(a){requestAnimationFrame(()=>{requestAnimationFrame(a)})}let Du=0;function si(a,t,e,s){const o=a._endId=++Du,r=()=>{o===a._endId&&s()};if(e)return setTimeout(r,e);const{type:i,timeout:l,propCount:c}=ll(a,t);if(!i)return s();const u=i+"end";let d=0;const g=()=>{a.removeEventListener(u,m),r()},m=_=>{_.target===a&&++d>=c&&g()};setTimeout(()=>{d<c&&g()},l+1),a.addEventListener(u,m)}function ll(a,t){const e=window.getComputedStyle(a),s=v=>(e[v]||"").split(", "),o=s(`${jt}Delay`),r=s(`${jt}Duration`),i=oi(o,r),l=s(`${Ge}Delay`),c=s(`${Ge}Duration`),u=oi(l,c);let d=null,g=0,m=0;t===jt?i>0&&(d=jt,g=i,m=r.length):t===Ge?u>0&&(d=Ge,g=u,m=c.length):(g=Math.max(i,u),d=g>0?i>u?jt:Ge:null,m=d?d===jt?r.length:c.length:0);const _=d===jt&&/\b(transform|all)(,|$)/.test(s(`${jt}Property`).toString());return{type:d,timeout:g,propCount:m,hasTransform:_}}function oi(a,t){for(;a.length<t.length;)a=a.concat(a);return Math.max(...t.map((e,s)=>ri(e)+ri(a[s])))}function ri(a){return a==="auto"?0:Number(a.slice(0,-1).replace(",","."))*1e3}function cl(){return document.body.offsetHeight}function Tu(a,t,e){const s=a[Je];s&&(t=(t?[t,...s]:[...s]).join(" ")),t==null?a.removeAttribute("class"):e?a.setAttribute("class",t):a.className=t}const ii=Symbol("_vod"),Lu=Symbol("_vsh"),xu=Symbol(""),Ru=/(^|;)\s*display\s*:/;function Ou(a,t,e){const s=a.style,o=Ca(e);let r=!1;if(e&&!o){if(t)if(Ca(t))for(const i of t.split(";")){const l=i.slice(0,i.indexOf(":")).trim();e[l]==null&&ps(s,l,"")}else for(const i in t)e[i]==null&&ps(s,i,"");for(const i in e)i==="display"&&(r=!0),ps(s,i,e[i])}else if(o){if(t!==e){const i=s[xu];i&&(e+=";"+i),s.cssText=e,r=Ru.test(e)}}else t&&a.removeAttribute("style");ii in a&&(a[ii]=r?s.display:"",a[Lu]&&(s.display="none"))}const pi=/\s*!important$/;function ps(a,t,e){if(Y(e))e.forEach(s=>ps(a,t,s));else if(e==null&&(e=""),t.startsWith("--"))a.setProperty(t,e);else{const s=Ju(a,t);pi.test(e)?a.setProperty(Me(s),e.replace(pi,""),"important"):a[s]=e}}const li=["Webkit","Moz","ms"],Ks={};function Ju(a,t){const e=Ks[t];if(e)return e;let s=ct(t);if(s!=="filter"&&s in a)return Ks[t]=s;s=In(s);for(let o=0;o<li.length;o++){const r=li[o]+s;if(r in a)return Ks[t]=r}return t}const ci="http://www.w3.org/1999/xlink";function Cu(a,t,e,s,o){if(s&&t.startsWith("xlink:"))e==null?a.removeAttributeNS(ci,t.slice(6,t.length)):a.setAttributeNS(ci,t,e);else{const r=C2(t);e==null||r&&!pp(e)?a.removeAttribute(t):a.setAttribute(t,r?"":e)}}function Bu(a,t,e,s,o,r,i){if(t==="innerHTML"||t==="textContent"){s&&i(s,o,r),a[t]=e??"";return}const l=a.tagName;if(t==="value"&&l!=="PROGRESS"&&!l.includes("-")){const u=l==="OPTION"?a.getAttribute("value")||"":a.value,d=e??"";(u!==d||!("_value"in a))&&(a.value=d),e==null&&a.removeAttribute(t),a._value=e;return}let c=!1;if(e===""||e==null){const u=typeof a[t];u==="boolean"?e=pp(e):e==null&&u==="string"?(e="",c=!0):u==="number"&&(e=0,c=!0)}try{a[t]=e}catch{}c&&a.removeAttribute(t)}function wu(a,t,e,s){a.addEventListener(t,e,s)}function Vu(a,t,e,s){a.removeEventListener(t,e,s)}const ui=Symbol("_vei");function Mu(a,t,e,s,o=null){const r=a[ui]||(a[ui]={}),i=r[t];if(s&&i)i.value=s;else{const[l,c]=Fu(t);if(s){const u=r[t]=Hu(s,o);wu(a,l,u,c)}else i&&(Vu(a,l,i,c),r[t]=void 0)}}const di=/(?:Once|Passive|Capture)$/;function Fu(a){let t;if(di.test(a)){t={};let s;for(;s=a.match(di);)a=a.slice(0,a.length-s[0].length),t[s[0].toLowerCase()]=!0}return[a[2]===":"?a.slice(3):Me(a.slice(2)),t]}let Gs=0;const ju=Promise.resolve(),Nu=()=>Gs||(ju.then(()=>Gs=0),Gs=Date.now());function Hu(a,t){const e=s=>{if(!s._vts)s._vts=Date.now();else if(s._vts<=e.attached)return;pt(Uu(s,e.value),t,5,[s])};return e.value=a,e.attached=Nu(),e}function Uu(a,t){if(Y(t)){const e=a.stopImmediatePropagation;return a.stopImmediatePropagation=()=>{e.call(a),a._stopped=!0},t.map(s=>o=>!o._stopped&&s&&s(o))}else return t}const gi=a=>a.charCodeAt(0)===111&&a.charCodeAt(1)===110&&a.charCodeAt(2)>96&&a.charCodeAt(2)<123,Ku=(a,t,e,s,o,r,i,l,c)=>{const u=o==="svg";t==="class"?Tu(a,s,u):t==="style"?Ou(a,e,s):yn(t)?Mo(t)||Mu(a,t,e,s,i):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):Gu(a,t,s,u))?Bu(a,t,s,r,i,l,c):(t==="true-value"?a._trueValue=s:t==="false-value"&&(a._falseValue=s),Cu(a,t,s,u))};function Gu(a,t,e,s){if(s)return!!(t==="innerHTML"||t==="textContent"||t in a&&gi(t)&&na(e));if(t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&a.tagName==="INPUT"||t==="type"&&a.tagName==="TEXTAREA")return!1;if(t==="width"||t==="height"){const o=a.tagName;if(o==="IMG"||o==="VIDEO"||o==="CANVAS"||o==="SOURCE")return!1}return gi(t)&&Ca(e)?!1:t in a}const ul=new WeakMap,dl=new WeakMap,vs=Symbol("_moveCb"),mi=Symbol("_enterCb"),gl={name:"TransitionGroup",props:La({},Su,{tag:String,moveClass:String}),setup(a,{slots:t}){const e=Dn(),s=Vp();let o,r;return Np(()=>{if(!o.length)return;const i=a.moveClass||`${a.name||"v"}-move`;if(!Xu(o[0].el,e.vnode.el,i))return;o.forEach($u),o.forEach(qu);const l=o.filter(Qu);cl(),l.forEach(c=>{const u=c.el,d=u.style;xt(u,i),d.transform=d.webkitTransform=d.transitionDuration="";const g=u[vs]=m=>{m&&m.target!==u||(!m||/transform$/.test(m.propertyName))&&(u.removeEventListener("transitionend",g),u[vs]=null,Ut(u,i))};u.addEventListener("transitionend",g)})}),()=>{const i=ca(a),l=pl(i);let c=i.tag||Ya;if(o=[],r)for(let u=0;u<r.length;u++){const d=r[u];d.el&&d.el instanceof Element&&(o.push(d),dn(d,un(d,l,s,e)),ul.set(d,d.el.getBoundingClientRect()))}r=t.default?Yo(t.default()):[];for(let u=0;u<r.length;u++){const d=r[u];d.key!=null&&dn(d,un(d,l,s,e))}return Ja(c,null,r)}}},Wu=a=>delete a.mode;gl.props;const zu=gl;function $u(a){const t=a.el;t[vs]&&t[vs](),t[mi]&&t[mi]()}function qu(a){dl.set(a,a.el.getBoundingClientRect())}function Qu(a){const t=ul.get(a),e=dl.get(a),s=t.left-e.left,o=t.top-e.top;if(s||o){const r=a.el.style;return r.transform=r.webkitTransform=`translate(${s}px,${o}px)`,r.transitionDuration="0s",a}}function Xu(a,t,e){const s=a.cloneNode(),o=a[Je];o&&o.forEach(l=>{l.split(/\s+/).forEach(c=>c&&s.classList.remove(c))}),e.split(/\s+/).forEach(l=>l&&s.classList.add(l)),s.style.display="none";const r=t.nodeType===1?t:t.parentNode;r.appendChild(s);const{hasTransform:i}=ll(s);return r.removeChild(s),i}const Zu=La({patchProp:Ku},bu);let Ws,_i=!1;function Yu(){return Ws=_i?Ws:nu(Zu),_i=!0,Ws}const ad=(...a)=>{const t=Yu().createApp(...a),{mount:e}=t;return t.mount=s=>{const o=ed(s);if(o)return e(o,!0,td(o))},t};function td(a){if(a instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&a instanceof MathMLElement)return"mathml"}function ed(a){return Ca(a)?document.querySelector(a):a}var nd=["link","meta","script","style","noscript","template"],sd=["title","base"],od=([a,t,e])=>sd.includes(a)?a:nd.includes(a)?a==="meta"&&t.name?`${a}.${t.name}`:a==="template"&&t.id?`${a}.${t.id}`:JSON.stringify([a,Object.entries(t).map(([s,o])=>typeof o=="boolean"?o?[s,""]:null:[s,o]).filter(s=>s!=null).sort(([s],[o])=>s.localeCompare(o)),e]):null,rd=a=>{const t=new Set,e=[];return a.forEach(s=>{const o=od(s);o&&!t.has(o)&&(t.add(o),e.push(s))}),e},id=a=>a[0]==="/"?a:`/${a}`,ml=a=>a[a.length-1]==="/"||a.endsWith(".html")?a:`${a}/`,ee=a=>/^(https?:)?\/\//.test(a),pd=/.md((\?|#).*)?$/,bs=(a,t="/")=>!!(ee(a)||a.startsWith("/")&&!a.startsWith(t)&&!pd.test(a)),Ss=a=>/^[a-z][a-z0-9+.-]*:/.test(a),Ne=a=>Object.prototype.toString.call(a)==="[object Object]",ld=a=>{const[t,...e]=a.split(/(\?|#)/);if(!t||t.endsWith("/"))return a;let s=t.replace(/(^|\/)README.md$/i,"$1index.html");return s.endsWith(".md")?s=s.substring(0,s.length-3)+".html":s.endsWith(".html")||(s=s+".html"),s.endsWith("/index.html")&&(s=s.substring(0,s.length-10)),s+e.join("")},sr=a=>a[a.length-1]==="/"?a.slice(0,-1):a,_l=a=>a[0]==="/"?a.slice(1):a,cd=(a,t)=>{const e=Object.keys(a).sort((s,o)=>{const r=o.split("/").length-s.split("/").length;return r!==0?r:o.length-s.length});for(const s of e)if(t.startsWith(s))return s;return"/"},Pa=a=>typeof a=="string";const ud="modulepreload",dd=function(a){return"/"+a},hi={},n=function(t,e,s){let o=Promise.resolve();if(e&&e.length>0){document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),i=(r==null?void 0:r.nonce)||(r==null?void 0:r.getAttribute("nonce"));o=Promise.all(e.map(l=>{if(l=dd(l),l in hi)return;hi[l]=!0;const c=l.endsWith(".css"),u=c?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${l}"]${u}`))return;const d=document.createElement("link");if(d.rel=c?"stylesheet":ud,c||(d.as="script",d.crossOrigin=""),d.href=l,i&&d.setAttribute("nonce",i),document.head.appendChild(d),c)return new Promise((g,m)=>{d.addEventListener("load",g),d.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${l}`)))})}))}return o.then(()=>t()).catch(r=>{const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=r,window.dispatchEvent(i),!i.defaultPrevented)throw r})},gd=JSON.parse('{"/posts/baeldung/Archive/Replacing%20Strings%20in%20Java%20Using%20Regex:%20Back%20Reference%20vs.%20Lookaround.html":"/posts/baeldung/Archive/Replacing%20Strings%20in%20Java%20Using%20Regex_%20Back%20Reference%20vs.%20Lookaround.html","/posts/baeldung/Archive/Solving%20Spring%20Data%20JPA%20ConverterNotFoundException:%20No%20converter%20found.html":"/posts/baeldung/Archive/Solving%20Spring%20Data%20JPA%20ConverterNotFoundException_%20No%20converter%20found.html"}'),md=Object.fromEntries([["/",{loader:()=>n(()=>import("./index.html-WEX6JsbD.js"),__vite__mapDeps([0,1])),meta:{t:"Baeldung 中文网",i:"home"}}],["/posts/articles/gRPC%20Authentication%20in%20Java%20Using%20Application%20Layer%20Transport%20Security%20(ALTS).html",{loader:()=>n(()=>import("./gRPC Authentication in Java Using Application Layer Transport Security (ALTS).html-DqmoYz-1.js"),__vite__mapDeps([2,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Java","gRPC"],g:["ALTS","安全"],e:`
<p>在本教程中，我们将探讨 ALTS（应用层传输安全）在 gRPC 应用程序中的作用。众所周知，在分布式架构中确保认证和数据安全是困难但至关重要的。</p>
<p>ALTS 是 Google 专为其云基础设施定制构建的内置双向认证和传输加密解决方案。ALTS 简化了 gRPC 服务之间的认证和数据加密，并且可以通过最小的代码更改启用。因此，它在开发者中很受欢迎，因为他们可以更多地专注于编写业务逻辑。</p>
<p>ALTS 与 TLS 类似，但具有针对 Google 基础设施优化的不同信任模型。让我们快速看一下它们之间的主要区别：</p>
<table>
<thead>
<tr>
<th>特性</th>
<th>ALTS</th>
<th>TLS</th>
</tr>
</thead>
<tbody>
<tr>
<td>信任模型</td>
<td>基于身份，依赖于 GCP IAM 服务账户</td>
<td>基于证书，需要证书管理，包括续订和撤销</td>
</tr>
<tr>
<td>设计</td>
<td>更简单</td>
<td>更复杂</td>
</tr>
<tr>
<td>使用上下文</td>
<td>用于保护在 Google 数据中心运行的 gRPC 服务</td>
<td>用于保护 Web 浏览（HTTPS）、电子邮件、即时消息、VoIP 等</td>
</tr>
<tr>
<td>消息序列化</td>
<td>使用 Protocol Buffers</td>
<td>使用用 ASN.1 编码的 X.509 证书</td>
</tr>
<tr>
<td>性能</td>
<td>为通用用途设计</td>
<td>针对 Google 数据中心中的低延迟、高吞吐量通信进行优化</td>
</tr>
</tbody>
</table>`,r:{minutes:6,words:1801},t:"gRPC 在 Java 中使用应用层传输安全（ALTS）进行认证",y:"a"}}],["/posts/articles/mongo-share.html",{loader:()=>n(()=>import("./mongo-share.html-DhZWxh7h.js"),__vite__mapDeps([3,1])),meta:{d:1718246262e3,e:`
<h2>MongoDB 基础</h2>
<h3>MongoDB 是什么？</h3>
<p>MongoDB 是一个基于 <strong>分布式文件存储</strong> 的开源 NoSQL 数据库系统，由 <strong>C++</strong> 编写的。MongoDB 提供了 <strong>面向文档</strong> 的存储方式，操作起来比较简单和容易，支持“<strong>无模式</strong>”的数据建模，可以存储比较复杂的数据类型，是一款非常流行的 <strong>文档类型数据库</strong> 。</p>
<p>在高负载的情况下，MongoDB 天然支持水平扩展和高可用，可以很方便地添加更多的节点/实例，以保证服务性能和可用性。在许多场景下，MongoDB 可以用于代替传统的关系型数据库或键/值存储方式，皆在为 Web 应用提供可扩展的高可用高性能数据存储解决方案。</p>`,r:{minutes:7.2,words:2159},t:"Mongo 经验总结分享",y:"a"}}],["/posts/articles/postgresql/%E5%9C%A8Mac%E8%AF%B4%E5%AE%89%E8%A3%85postgresql%E5%B9%B6%E4%B8%94%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8D%95%E7%8B%AC%E7%BB%99%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E8%B5%8B%E4%BA%88%E6%9D%83%E9%99%90.html",{loader:()=>n(()=>import("./在Mac说安装postgresql并且创建一个数据库单独给一个用户赋予权限.html-DchQJkWF.js"),__vite__mapDeps([4,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["PostgreSQL","MacOS"],g:["PostgreSQL","MacOS","Homebrew","Database"],e:`
<h2>1. 安装PostgreSQL</h2>
<h3>先决条件：您的计算机上已安装 Homebrew。如果没有，您可以随时访问 https://brew.sh/zh-cn/ 获取安装说明。</h3>
<p>使用以下命令安装 PostgreSQL：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> postgresql@16
</code></pre></div>`,r:{minutes:3.94,words:1182},t:"在MacOS使用Homebrew安装postgresql并且创建新用户和数据库，并将数据库的所有权分配给新用户。",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-%20DataJpaTest%20and%20Repository%20Class%20in%20JUnit.html",{loader:()=>n(()=>import("./2024-06-21- DataJpaTest and Repository Class in JUnit.html-CC8ow63-.js"),__vite__mapDeps([5,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Spring Boot","JUnit"],g:["DataJpaTest","Repository"],e:`
<ol>
<li>引言</li>
</ol>
<p>在使用 Spring Boot 应用程序和 Spring Data JPA 进行数据持久化时，测试与数据库交互的仓库至关重要。本教程将探讨如何使用 Spring Boot 提供的 @DataJpaTest 注解以及 JUnit 来有效测试 Spring Data JPA 仓库。</p>
<ol start="2">
<li>理解 @DataJpaTest 和 Repository 类</li>
</ol>
<p>在本节中，我们将深入了解 @DataJpaTest 和 Spring Boot 应用程序中类仓库之间的交互。</p>
<p>2.1. @DataJpaTest</p>`,r:{minutes:6.89,words:2067},t:"@DataJpaTest 和 JUnit 中的 Repository 类",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Count%20the%20Number%20of%20Unique%20Digits%20in%20an%20Integer%20using%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Count the Number of Unique Digits in an Integer using Java.html-CUzQMziO.js"),__vite__mapDeps([6,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","数字处理"],g:["数字唯一性","集合","流API","位操作"],e:`
<h2>1. 概述</h2>
<p>在这个简短的教程中，我们将探讨如何使用Java来计算一个整数中包含的唯一数字的数量。</p>
<h2>2. 理解问题</h2>
<p>给定一个整数，我们的目标是计算它包含多少个不同的数字。例如，整数567890有六个不同的数字，而115577只有三个不同的数字（1、5和7）。</p>
<h2>3. 使用集合</h2>
<p>找到整数中唯一数字数量的最直接方式是使用集合。集合本质上可以消除重复项，这使得它们非常适合我们的需求：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">countWithSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    number <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span>\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span>\` uniqueDigits <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> numberStr <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> digit <span class="token operator">:</span> numberStr<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        uniqueDigits<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>digit<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> uniqueDigits<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.53,words:760},t:"使用Java计算整数中唯一数字的数量",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Create%20JavaType%20From%20Class%20with%20Jackson.html",{loader:()=>n(()=>import("./2024-06-21-Create JavaType From Class with Jackson.html-C0RlcB0j.js"),__vite__mapDeps([7,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","Jackson"],g:["JavaType","Class"],e:`
<h2>1. 引言</h2>
<p>在使用Jackson时，我们可能会遇到需要从给定的类对象生成JavaType的情况。</p>
<p><strong>在本教程中，我们将看到如何利用Jackson库从类创建JavaType。</strong></p>
<h2>2. JavaType和Class简介</h2>
<p>在深入细节之前，让我们先看看JavaType和Class。</p>
<h3>2.1 Java中的JavaType</h3>
<p>在Jackson中，JavaType类代表Java类型。它是一种机制，可以让我们处理泛型类型，例如参数化类型和数组。</p>
<p><strong>创建JavaType实例非常重要，特别是当我们在处理JSON时处理泛型结构。</strong></p>`,r:{minutes:2.12,words:637},t:"使用Jackson从类创建JavaType",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Custom%20Event%20Handlers%20and%20Listeners%20in%20Netty.html",{loader:()=>n(()=>import("./2024-06-21-Custom Event Handlers and Listeners in Netty.html-CYCqc0RJ.js"),__vite__mapDeps([8,1])),meta:{d:17050176e5,l:"2024年1月12日",c:["Netty","编程"],g:["Netty","事件处理器","监听器"],e:`
<p>在本教程中，我们将使用Netty来创建一个聊天室应用程序。在网络编程中，Netty以其强大的框架脱颖而出，简化了异步I/O操作的复杂性。我们将探索如何构建一个基本的聊天服务器，允许多个客户端连接并进行实时对话。</p>
<h2>场景</h2>
<p>发送到服务器的消息将被转发给所有连接的客户端。它还将保留最后几条消息的列表，以便新客户端在连接时可以从当前对话中获得上下文。为此，我们只需要几个事件处理器来维护通道之间的通信：</p>
<p>在Netty中，通信是通过通道完成的，这抽象了任何协议上的异步I/O操作。这使我们能够专注于应用逻辑而不是网络代码。我们的应用程序将通过命令行工作。我们将编写服务器和客户端应用程序。</p>`,r:{minutes:8.23,words:2468},t:"Netty中自定义事件处理器和监听器",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Difference%20Between%20GroupId%20and%20ConsumerId%20in%20Apache%20Kafka.html",{loader:()=>n(()=>import("./2024-06-21-Difference Between GroupId and ConsumerId in Apache Kafka.html-BMV3uugx.js"),__vite__mapDeps([9,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Apache Kafka","GroupId vs ConsumerId"],g:["GroupId","ConsumerId"],e:`
<h2>1. 引言</h2>
<p>在本教程中，我们将阐明Apache Kafka中GroupId和ConsumerId的区别，这对于正确设置消费者至关重要。此外，我们还将讨论ClientId与ConsumerId的区别以及它们之间的关联。</p>
<h2>2. 消费者组</h2>
<p>在探讨Apache Kafka中标识符类型的区别之前，让我们先了解消费者组。</p>
<p><strong>消费者组由多个协同工作以从一个或多个主题中消费消息的消费者组成</strong>，实现并行消息处理。它们在分布式Kafka环境中实现了可扩展性、容错性和高效的消息并行处理。</p>
<p>关键的是，<strong>组内的每个消费者只负责处理其主题的一个子集</strong>，即分区。</p>`,r:{minutes:4.9,words:1470},t:"Apache Kafka中GroupId和ConsumerId的区别 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Document%20Query%20Parameters%20with%20Spring%20REST%20Docs.html",{loader:()=>n(()=>import("./2024-06-21-Document Query Parameters with Spring REST Docs.html-P7brfOHE.js"),__vite__mapDeps([10,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Spring","REST Docs"],g:["API文档","Spring Boot"],e:`
<p>现在，新版本的《REST With Spring - "REST With Spring Boot"》终于发布了，当前价格将在本周五之前有效，之后将永久上涨50美元。</p>
<p><strong>&gt;获取访问权限</strong></p>
<p><strong>现在</strong></p>
<h2>1. 概述</h2>
<p>文档对于我们打算与世界分享的任何代码都是至关重要的，特别是当这段代码相对复杂时。良好的API文档不仅吸引开发者使用它，还展示了产品的质量。一个文档编写草率的公司可能也有一个编写草率的API。</p>
<p>然而，开发者喜欢为机器编写代码，而不是为人编写文本。</p>`,r:{minutes:6,words:1800},t:"使用Spring REST Docs记录REST API查询参数",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Find%20an%20Unique%20Email%20Address%20in%20a%20List.html",{loader:()=>n(()=>import("./2024-06-21-Find an Unique Email Address in a List.html-BXYhi4qH.js"),__vite__mapDeps([11,1])),meta:{d:1719013699e3,e:`<p>由于提供的网页内容无法解析，因此无法获取到具体的category、tag、date、keywords和SEO content等信息。根据您提供的要求，以下是翻译后的格式示例：</p>
<hr>
<p>date: {具体日期}
category:</p>
<ul>
<li 类别1=""></li>
<li>{类别2}
tag:</li>
<li 标签1=""></li>
<li>{标签2}
head:</li>
<li>
<ul>
<li>meta</li>
<li seo内容="">name: {关键词}
content:</li>
</ul>
</li>
</ul>
<hr>
<h1>在Java中查找唯一的电子邮件地址</h1>`,r:{minutes:.54,words:161},t:"在Java中查找唯一的电子邮件地址",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Finding%20the%20Parent%20of%20a%20Node%20in%20a%20Binary%20Search%20Tree%20with%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Finding the Parent of a Node in a Binary Search Tree with Java.html-Bb3CNgfc.js"),__vite__mapDeps([12,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","数据结构"],g:["二叉搜索树","算法"],e:`
<h2>1. 引言</h2>
<p>二叉搜索树（BST）是一种数据结构，它帮助我们高效地解决现实世界的问题。</p>
<p>在这篇文章中，我们将探讨如何在二叉搜索树中找到节点的父节点的问题。</p>
<h2>2. 什么是二叉搜索树？</h2>
<p><strong>二叉搜索树是一种树状数据结构，其中每个节点最多指向两个节点，通常称为左孩子和右孩子。此外，每个节点的值都大于其左孩子并且小于其右孩子。</strong></p>
<p>例如，让我们想象三个节点，A=2，B=1和C=4。因此，一个可能的BST以A作为根节点，B作为其左孩子，C作为其右孩子。</p>
<p>在接下来的部分中，我们将使用一个具有默认_insert()_方法的BST结构来练习查找节点父节点的问题。</p>`,r:{minutes:7.76,words:2327},t:"在Java中使用二叉搜索树查找节点的父节点 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Generate%20Juggler%20Sequence%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Generate Juggler Sequence in Java.html-B7Ph0Gfk.js"),__vite__mapDeps([13,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","算法"],g:["序列","递归"],e:`
<p>杂耍序列以其迷人的行为和优雅的简单性而脱颖而出。</p>
<p>在本教程中，我们将理解杂耍序列，并探索如何使用Java中的给定初始数字生成序列。</p>
<h3>2. 理解杂耍序列</h3>
<p>在我们深入到生成杂耍序列的代码之前，让我们快速了解一下杂耍序列是什么。</p>
<p>在数论中，杂耍序列是一个整数序列，定义为递归如下：​​</p>
<ul>
<li>以正整数( n )作为序列的第一项。</li>
<li>如果 ( n ) 是偶数，下一项是 ( n ) 的平方根，向下取整到最近的整数。</li>
<li>如果 ( n ) 是奇数，则下一项是 ( n \\times \\sqrt{n} )，向下取整到最近的整数。</li>
</ul>`,r:{minutes:3.85,words:1156},t:"Java中生成杂耍序列",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Get%20First%20n%20Characters%20in%20a%20String%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Get First n Characters in a String in Java.html-DTIKFUh7.js"),__vite__mapDeps([14,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","String Manipulation"],g:["Java","String","substring","Apache Commons Lang","Guava"],e:`
<p>在这篇简短的教程中，我们将探讨在Java中获取字符串前n个字符的不同方法。</p>
<p>首先，我们将学习如何使用Java核心开发工具包（JDK）的方法和类来实现这一目标。然后，我们将看到如何使用如Apache Commons Lang和Guava等外部库来达到相同的结果。</p>
<h3>使用Java核心开发工具包（JDK）</h3>
<p>JDK提供了几种我们可以用于获取给定字符串的前n个字符的方法。让我们仔细看看每个选项。</p>
<h4>2.1 使用String#substring方法</h4>
<p>String类的substring()方法提供了一个简单的解决方案来回答我们的中心问题。顾名思义，这个方法返回给定字符串的一个子集作为一个新的字符串。</p>`,r:{minutes:3.9,words:1169},t:"Java中获取字符串前n个字符的不同方法",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Get%20the%20Initials%20of%20a%20Name%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Get the Initials of a Name in Java.html-DxWOf2z4.js"),__vite__mapDeps([15,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","编程"],g:["缩写","姓名缩写"],e:`
<h2>1. 引言</h2>
<p>在处理姓名时，将它们缩短为使用每个单词的第一个字符组成的缩写字符串可能会很有帮助。在本教程中，们来看看在Java中实现这一功能的几种不同方法。</p>
<h2>2. 假设</h2>
<p><strong>在创建缩写时，我们只考虑以字母开头的单词。</strong> 任何其他单词都从过程中排除。此外，缩写可能最终是一个空字符串，没有有效的单词。此外，我们将整个字符串转换为大写。</p>
<h2>3. 使用循环</h2>
<p><strong>我们可以通过空格分割文本，并使用for循环来遍历每个单词。</strong> 随后，我们可以取每个有效单词的第一个字符并构建缩写：</p>`,r:{minutes:3.09,words:926},t:"在Java中获取姓名的首字母缩写",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Gson%20TypeToken%20With%20Dynamic%20List%20Item%20Type.html",{loader:()=>n(()=>import("./2024-06-21-Gson TypeToken With Dynamic List Item Type.html-BhR0eRlT.js"),__vite__mapDeps([16,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","Gson"],g:["JSON","Java List","TypeToken"],e:`
<p>在本教程中，我们将讨论如何将 JSON 数组转换为等价的 java.util.List 对象。Gson 是 Google 提供的一个 Java 库，它帮助将 JSON 字符串转换为 Java 对象，反之亦然。</p>
<p>这个库中的 Gson 类有一个 fromJson() 方法，它接受两个参数，第一个参数是 JSON 字符串，第二个参数是 java.lang.reflect.Type 类型。该方法将 JSON 字符串转换为由其第二个参数表示类型的等价 Java 对象。</p>
<p>我们将创建一个通用方法，比如 convertJsonArrayToListOfAnyType(String jsonArray, T elementType)，它可以将 JSON 数组转换为 List<code>&lt;T&gt;</code>，其中 T 是 List 中元素的类型。</p>`,r:{minutes:5.31,words:1593},t:"Gson 使用 TypeToken 处理动态列表项类型",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-How%20to%20Mock%20Amazon%20S3%20for%20Integration%20Test.html",{loader:()=>n(()=>import("./2024-06-21-How to Mock Amazon S3 for Integration Test.html-CygNyXn_.js"),__vite__mapDeps([17,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","AWS"],g:["S3","Mock","Testing"],e:`
<h2>1. 引言</h2>
<p>在本文中，我们将学习如何模拟Amazon S3（简单存储服务）以运行Java应用程序的集成测试。</p>
<p>为了演示它的工作原理，我们将创建一个使用AWS SDK与S3交互的CRUD（创建、读取、更新、删除）服务。然后，我们将使用模拟的S3服务为每个操作编写集成测试。</p>
<h2>2. S3概述</h2>
<p>Amazon Simple Storage Service（S3）是由Amazon Web Services（AWS）提供的高可扩展性和安全的云存储服务。它使用<strong>对象存储模型，允许用户从网络上的任何地方存储和检索数据</strong>。</p>`,r:{minutes:4.54,words:1363},t:"如何为集成测试模拟Amazon S3 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-How%20to%20Pretty%20Print%20a%20Map%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-21-How to Pretty Print a Map in Java.html-DTJtPgHA.js"),__vite__mapDeps([18,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","教程"],g:["Java","地图","格式化输出"],e:`
<p>漂亮打印Java中的<code>Map</code>涉及到以一种视觉上吸引人且易于阅读的方式格式化和显示Map中的键值对。尽管Java没有提供内置的漂亮打印Map的方法，我们必须实现自定义解决方案。</p>
<p>在本教程中，我们将学习如何实现这一目标。根据我们的偏好和详细程度，我们将探索使用标准JDK和外部库的多种方法。</p>
<h2>2. 创建一个<code>Map</code></h2>
<p>在我们继续之前，让我们创建一个Map来操作：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Map</span>\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span>\` map <span class="token operator">=</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
  <span class="token string">"one"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token string">"two"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token string">"inner"</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
    <span class="token string">"ten"</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token string">"eleven"</span><span class="token punctuation">,</span> <span class="token number">11</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:5.7,words:1709},t:"Java中漂亮打印Map的方法",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Implementing%20GraphQL%20Mutation%20Without%20Returning%20Data.html",{loader:()=>n(()=>import("./2024-06-21-Implementing GraphQL Mutation Without Returning Data.html-L42cEor9.js"),__vite__mapDeps([19,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["GraphQL","Java"],g:["GraphQL Mutation","Spring Boot"],e:`
<h2>1. 引言</h2>
<p><strong>GraphQL 是一种强大的 API 查询语言，为我们与数据的交互提供了灵活而高效的方式。</strong> 当处理 mutation（变更）时，我们通常会在服务器上执行数据的更新或添加。然而，在某些场景中，我们可能需要进行变更而不返回任何数据。</p>
<p>在 GraphQL 中，默认行为是强制字段在模式中为非空性，这意味着除非明确标记为可空，否则字段必须始终返回一个值，不能为 null。虽然这种严格性有助于 API 的清晰度和可预测性，但有时返回 null 可能是必要的。然而，通常认为避免返回 null 值是一个最佳实践。</p>
<p>在本文中，我们将探讨实现不检索或返回特定信息的 GraphQL mutation 的技术。</p>`,r:{minutes:6.03,words:1810},t:"在不返回数据的情况下实现GraphQL Mutation",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Increase%20the%20Memory%20Size%20Limit%20on%20IntelliJ%20IDEA.html",{loader:()=>n(()=>import("./2024-06-21-Increase the Memory Size Limit on IntelliJ IDEA.html-DxE04Ut6.js"),__vite__mapDeps([20,1])),meta:{d:1719010108e3,c:["REST with Spring Boot","Learn Spring Security"],g:["Spring","Spring Security","Spring Data JPA"],e:`<hr>
<h1>在 IntelliJ IDEA 中增加内存大小限制</h1>
<ul>
<li>
<p>从这里开始</p>
</li>
<li>
<p>课程▼▲</p>
</li>
<li>
<p><strong>使用 Spring Boot 构建 REST</strong><br>
构建生产级 API 的标准参考 Spring <strong>（周末价格将上涨 $50）</strong></p>
</li>
<li>
<p><strong>学习 Spring Security▼▲</strong><br>
如果你是今天使用 Java 的工作者，这是唯一的 Spring Security 教育</p>
</li>
<li>
<p><strong>学习 Spring Security 核心▼▲</strong><br>
专注于 Spring Security 6 的核心</p>
</li>
<li>
<p><strong>学习 Spring Security OAuth▼▲</strong><br>
专注于 Spring Security 6 中新的 OAuth2 栈</p>
</li>
<li>
<p><strong>学习 Spring▼▲</strong><br>
从无经验到实际构建东西</p>
</li>
<li>
<p><strong>学习 Spring Data JPA▼▲</strong><br>
使用 Spring Data JPA 的完整持久性指南</p>
</li>
<li>
<p>指南▼▲</p>
</li>
<li>
<p><strong>持久性</strong><br>
使用 Spring 的持久性指南</p>
</li>
<li>
<p><strong>REST</strong><br>
使用 Spring 构建 REST API 的指南</p>
</li>
<li>
<p><strong>安全</strong><br>
Spring Security 指南</p>
</li>
<li>
<p>关于▼▲</p>
</li>
<li>
<p><strong>完整存档</strong><br>
网站上所有文章的高级概述。</p>
</li>
<li>
<p><strong>Baeldung 电子书</strong><br>
发现我们所有的电子书</p>
</li>
<li>
<p><strong>关于 Baeldung</strong><br>
关于 Baeldung 的信息。</p>
</li>
<li>
<p><strong>为 Baeldung 写作</strong><br>
成为网站上的作者。</p>
</li>
<li>
<p>RSS</p>
</li>
<li>
<p>搜索在 IntelliJ IDEA 中增加内存大小限制</p>
</li>
</ul>`,r:{minutes:.98,words:293},t:"在 IntelliJ IDEA 中增加内存大小限制",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Iterating%20All%20Fields%20of%20a%20Data%20Class%20Without%20Reflection%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-21-Iterating All Fields of a Data Class Without Reflection in Kotlin.html-DUTXUv8k.js"),__vite__mapDeps([21,1])),meta:{d:1718977697e3,e:`<p>由于我无法访问外部链接，因此无法获取网页的具体内容，包括标题、日期、类别、标签和元数据。但是，我可以为您提供一个示例格式，您可以根据网页内容填充相关信息：</p>
<hr>
<p>date: {yyyy-MM-DD}
category:</p>
<ul>
<li category=""></li>
<li>{category2}
tag:</li>
<li tag1=""></li>
<li>{tag2}
head:</li>
<li>
<ul>
<li>meta</li>
<li seo="" content="">name: {keywords}
content:</li>
</ul>
</li>
</ul>`,r:{minutes:.52,words:156},t:"",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Migrate%20Application%20from%20Spring%20Security%205%20to%20Spring%20Security%206%20Spring%20Boot%203.html",{loader:()=>n(()=>import("./2024-06-21-Migrate Application from Spring Security 5 to Spring Security 6 Spring Boot 3.html-a15TBi4Y.js"),__vite__mapDeps([22,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Spring Security","Spring Boot"],g:["迁移","安全"],e:`
<p>Spring Security 6带来了几个重大变化，包括移除类、弃用方法以及引入新方法。</p>
<p>从Spring Security 5迁移到Spring Security 6可以逐步进行，不会破坏现有的代码库。此外，我们可以使用第三方插件如OpenRewrite来促进迁移到最新版本。</p>
<p>在本教程中，我们将学习如何将使用Spring Security 5的现有应用程序迁移到Spring Security 6。我们将替换弃用的方法，并利用lambda DSL简化配置。此外，我们将利用OpenRewrite使迁移更快。</p>
<p>Spring Boot基于Spring框架，Spring Boot的版本使用Spring框架的最新版本。Spring Boot 2默认使用Spring Security 5，而Spring Boot 3使用Spring Security 6。</p>`,r:{minutes:5.85,words:1755},t:"将应用程序从Spring Security 5迁移到Spring Security 6/Spring Boot 3 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Modify%20and%20Print%20List%20Items%20With%20Java%20Streams.html",{loader:()=>n(()=>import("./2024-06-21-Modify and Print List Items With Java Streams.html-CyMwsGCo.js"),__vite__mapDeps([23,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","编程"],g:["Java","流","列表","打印"],e:'\n<h2>1. 概述</h2>\n<p>在使用Java时，操作列表是一项基本技能。</p>\n<p>在这个快速教程中，我们将探索不同的方法来修改或转换列表，然后打印其元素。</p>\n<h2>2. 修改和打印列表</h2>\n<p>打印列表中的元素对我们来说不是挑战。例如，我们可以在<code>forEach()</code>方法中调用打印操作：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span>``````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>`````` theList <span class="token operator">=</span> <span class="token class-name">Lists</span><span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token string">"Kai"</span><span class="token punctuation">,</span> <span class="token string">"Liam"</span><span class="token punctuation">,</span> <span class="token string">"Eric"</span><span class="token punctuation">,</span> <span class="token string">"Kevin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ntheList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>element <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',r:{minutes:3.65,words:1095},t:"使用Java流修改和打印列表项",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Query%20Hints%20in%20Spring%20Data%20JPA.html",{loader:()=>n(()=>import("./2024-06-21-Query Hints in Spring Data JPA.html-s27W8itA.js"),__vite__mapDeps([24,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Spring Data JPA","Query Optimization"],g:["Query Hints","Performance"],e:`
<p>在本教程中，我们将探讨Spring Data JPA中查询提示的基础知识。这些提示有助于优化数据库查询，并通过影响优化器的决策过程来潜在地提高应用程序性能。我们还将讨论它们的功能以及如何有效地应用它们。</p>
<h2>2. 理解查询提示</h2>
<p>Spring Data JPA中的查询提示是一个强大的工具，可以帮助优化数据库查询并提高应用程序性能。与直接控制执行不同，它们影响优化器的决策过程。</p>
<p>在Spring Data JPA中，我们可以在<code>org.hibernate.annotations</code>包中找到这些提示，以及与Hibernate相关的各种注释和类，Hibernate是一种普遍的持久性提供者。<strong>值得注意的是，这些提示的解释和执行通常取决于底层的持久性提供者，如Hibernate或EclipseLink，使它们成为特定于供应商的。</strong></p>`,r:{minutes:5.16,words:1548},t:"Spring Data JPA中的查询提示",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Railway%20Oriented%20Programming%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-21-Railway Oriented Programming in Kotlin.html-8_YvLmdT.js"),__vite__mapDeps([25,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Kotlin","编程"],g:["函数式编程","Railway Oriented Programming"],e:`
<p>在本教程中，我们将实现 Scott Wlaschin 创造的铁路导向编程（ROP），ROP 帮助我们使用函数式编程（FP）编写带有验证、日志记录、网络和服务错误以及其他副作用的代码。</p>
<p>ROP 中的“快乐路径”指的是代码在没有异常和错误的情况下运行的路径。“不快乐或失败路径”是当一些异常和错误由开发人员处理时。我们将解释如何在 FP 中使用 ROP 来处理成功和失败的路径。</p>
<p>假设我们有一个函数，它从用户那里接收客户详细信息，如姓名和电子邮件地址。然后它创建 <em>Customer</em> 对象以保存到数据库中。</p>
<p>让我们看看快乐路径是什么样子的：</p>`,r:{minutes:3.61,words:1084},t:"用 Kotlin 实现铁路导向编程",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Remove%20Only%20Trailing%20Spaces%20or%20Whitespace%20From%20a%20String%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Remove Only Trailing Spaces or Whitespace From a String in Java.html-usRc4cd4.js"),__vite__mapDeps([26,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","String Manipulation"],g:["trailing spaces","whitespace","regex","stripTrailing"],e:`
<p>字符串操作是Java编程中的一项常见任务。有时，尾部的空白字符可能会导致不一致性，增加存储大小，甚至引起意外的bug。</p>
<p>在这个快速教程中，我们将探索有效的技术来从给定的字符串中仅移除尾部的空格或空白字符。</p>
<h2>2. 问题介绍</h2>
<p>首先，我们创建一个输入字符串作为示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">INPUT</span> <span class="token operator">=</span> <span class="token string">"  a b c d e \\t  "</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:2.86,words:858},t:"在Java中仅移除字符串尾部的空格或空白字符",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Serialization%20with%20FlatBuffers%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Serialization with FlatBuffers in Java.html-3bDo9jBD.js"),__vite__mapDeps([27,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Serialization"],g:["FlatBuffers","Tutorial"],e:`
<p>在这个教程中，我们将探索Java中的FlatBuffers，并使用它进行序列化和反序列化操作。</p>
<p>序列化是将Java对象转换为可以在网络上传输或在文件中持久化的字节流的过程。Java通过_java.io.Serializable_接口以及_java.io.ObjectOutputStream_和_java.io.ObjectInputStream_类提供了内置的对象序列化机制。</p>
<p>然而，由于它在处理复杂对象图和依赖类时的方法复杂，以及一些其他缺点，Java中有几种库可用于序列化和反序列化。</p>
<p>一些广泛使用的Java序列化库包括Jackson和Gson。一个较新的Java对象序列化格式标准是Protocol Buffers。Protocol Buffers是由Google开发的一种与语言无关的二进制序列化格式。它们在高性能环境和分布式系统中使用，其中效率和互操作性至关重要。</p>`,r:{minutes:7.11,words:2132},t:"Java中使用FlatBuffers进行序列化",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Simplified%20Array%20Operations%20on%20JsonNode%20Without%20Typecasting%20in%20Jackson.html",{loader:()=>n(()=>import("./2024-06-21-Simplified Array Operations on JsonNode Without Typecasting in Jackson.html-BOw_ce_A.js"),__vite__mapDeps([28,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Jackson"],g:["JsonNode","ArrayNode"],e:`
<p>在Java中使用JSON（JavaScript对象标记）通常涉及到使用像Jackson这样的库，它提供了多种类来表示这种类型的数据，比如_JsonNode, ObjectNode,_ 和 <em>ArrayNode</em>。</p>
<p><strong>在本教程中，我们将</strong> <strong>探索不同的方法来简化对_JsonNode_的数组操作，而无需在Java中显式地将其转换为_ArrayNode_。</strong> 这在我们直接在代码中操作数据时是必要的。</p>
<p><em>JsonNode</em> 是Jackson库中的一个抽象类，它表示JSON树中的一个节点。它是所有节点的基类，并且能够存储不同类型的数据，包括对象、数组、字符串、数字、布尔值和null值。<strong><em>JsonNode</em> 实例是不可变的，这意味着我们不能在它们上面设置属性。</strong></p>`,r:{minutes:3.22,words:965},t:"Jackson中无需类型转换简化JsonNode数组操作",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Skip%20Select%20Before%20Insert%20in%20Spring%20Data%20JPA.html",{loader:()=>n(()=>import("./2024-06-21-Skip Select Before Insert in Spring Data JPA.html-Bg_RB0eq.js"),__vite__mapDeps([29,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Spring Data JPA","JPA"],g:["Hibernate","Performance"],e:`<hr>
<h1>Spring Data JPA 中跳过插入前的 SELECT 查询</h1>
<h2>1. 概述</h2>
<p>在使用 Spring Data JPA Repository 保存实体时，我们可能会在日志中遇到额外的 <em>SELECT</em> 查询。这可能会导致由于大量额外调用而引起的性能问题。</p>
<p><strong>在本教程中，我们将探讨一些跳过日志中 <em>SELECT</em> 的方法并提高性能。</strong></p>
<h2>2. 配置</h2>
<p>在深入研究 Spring Data JPA 并进行测试之前，我们需要采取一些准备步骤。</p>
`,r:{minutes:6.62,words:1986},t:"Spring Data JPA 中跳过插入前的 SELECT 查询",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Spring%20Data%20JPA%20Repository%20for%20Database%20View.html",{loader:()=>n(()=>import("./2024-06-21-Spring Data JPA Repository for Database View.html-CwEdpld3.js"),__vite__mapDeps([30,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Spring Data JPA","数据库视图"],g:["Spring Boot","REST API","Spring Security"],e:`
<ul>
<li>
<p>开始这里</p>
</li>
<li>
<p>课程▼▲</p>
</li>
<li>
<p><strong>Spring Boot REST</strong><br>
\\ 构建生产级API的标准参考与Spring <strong>(几天后价格将上涨50美元)</strong></p>
</li>
<li>
<p><strong>学习Spring Security ▶</strong><br>
\\ 今天Java工作中唯一的Spring Security教育</p>
</li>
<li>
<p><strong>学习Spring Security Core</strong><br>
\\ 专注于Spring Security 6的核心</p>
</li>
<li>
<p><strong>学习Spring Security OAuth</strong><br>
\\ 专注于Spring Security 6中的新OAuth2堆栈</p>
</li>
<li>
<p><strong>学习Spring</strong><br>
\\ 从无经验到实际构建东西</p>
</li>
<li>
<p><strong>学习Spring Data JPA</strong><br>
\\ 完整的Spring Data JPA持久性指南</p>
</li>
<li>
<p>指南▼▲</p>
</li>
<li>
<p><strong>持久性</strong><br>
\\ Spring持久性的指南</p>
</li>
<li>
<p><strong>REST</strong><br>
\\ 构建Spring REST API的指南</p>
</li>
<li>
<p><strong>安全性</strong><br>
\\ Spring Security指南</p>
</li>
<li>
<p>关于▼▲</p>
</li>
<li>
<p><strong>完整存档</strong><br>
\\ 网站上所有文章的高层次概述。</p>
</li>
<li>
<p><strong>Baeldung电子书</strong><br>
\\ 发现我们所有的电子书</p>
</li>
<li>
<p><strong>关于Baeldung</strong><br>
\\ 关于Baeldung。</p>
</li>
<li>
<p><strong>为Baeldung写作</strong><br>
\\ 成为网站上的作者。</p>
</li>
<li>
<p>RSS</p>
</li>
<li>
<p>搜索</p>
</li>
</ul>`,r:{minutes:.8,words:241},t:"Spring Data JPA Repository 用于数据库视图 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-21/2024-06-21-Testcontainers%20Desktop.html",{loader:()=>n(()=>import("./2024-06-21-Testcontainers Desktop.html-BF8xEyjs.js"),__vite__mapDeps([31,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Software Engineering","Testing"],g:["Testcontainers","Docker","Testing Tools"],e:`
<p>在本教程中，我们将探索 Testcontainers 桌面应用程序，这是一个简单但功能强大的工具，用于运行 Testcontainers。我们将学习如何使用它来配置我们的 Docker 环境，管理容器生命周期，并了解我们开发和测试模式的见解。</p>
<p>Testcontainers 桌面提供了一个最小化的 UI 设计，旨在简化 Testcontainer 配置和调试。我们可以从官方网站免费下载 Testcontainers 桌面。要开始使用它，我们将通过创建账户或通过第三方如 Google、GitHub 或 Docker 进行注册。</p>
<p>就是这样！一旦我们安装了应用程序并登录，我们就可以在开发工作流程中开始使用 Testcontainers 桌面：</p>`,r:{minutes:7.94,words:2381},t:"Testcontainers 桌面应用 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-A%20Guide%20to%20etcd.html",{loader:()=>n(()=>import("./2024-06-22-A Guide to etcd.html-D-TEonBd.js"),__vite__mapDeps([32,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","etcd"],g:["分布式系统","键值存储"],e:`
<p>在分布式系统的复杂世界中，确保高效的数据管理至关重要。分布式可靠的键值存储在维护分布式环境中的数据一致性和可扩展性方面发挥着关键作用。</p>
<p>在这篇全面的教程中，我们将深入探讨 etcd，这是一个开源的分布式键值存储。我们将探索它的基本概念、特性和用例，并提供一个实践快速入门指南。最后，我们将比较 etcd 与其他几种分布式键值存储，以了解它的优势和独特之处。</p>
<h2>2. 分布式键值存储是什么？</h2>
<p><strong>分布式键值存储是一种 NoSQL 数据库，它将数据存储为跨多个物理或虚拟机的键值对。</strong></p>
<p>这种分布本质上增强了可扩展性、容错性和性能。此外，每个数据片段（值）都与一个唯一的标识符（键）相关联。这种模型对于某些用例非常高效，例如缓存、配置管理和快速数据检索。</p>`,r:{minutes:12.89,words:3866},t:"etcd 指南",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-A%20Guide%20to%20the%20%20SoftDelete%20Annotation%20in%20Hibernate.html",{loader:()=>n(()=>import("./2024-06-22-A Guide to the  SoftDelete Annotation in Hibernate.html-lk8iTsSU.js"),__vite__mapDeps([33,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Hibernate","SoftDelete"],g:["Java","Annotation","SoftDelete"],e:`
<h2>1. 概述</h2>
<p>在应用程序中使用数据库时，我们通常需要处理不再有用的记录的删除。然而，由于业务或法规要求，例如数据恢复、审计追踪或引用完整性目的，我们可能需要隐藏这些记录而不是删除它们。</p>
<p>在本教程中，我们将了解Hibernate的@SoftDelete注解并学习如何实现它。</p>
<h2>2. 理解@SoftDelete注解</h2>
<p>**@SoftDelete注解提供了一种方便的机制来标记任何记录为活动状态或已删除状态。**它有三个不同的配置部分：</p>
<ul>
<li>**策略配置是跟踪活动行还是已删除行。**我们可以通过将_strategy_设置为_ACTIVE_或_DELETED_来配置它。</li>
<li>**指示器列确定将使用哪个列来跟踪行。**如果没有指定列，则策略使用默认列（<em>active_或_deleted</em>）。</li>
<li>**转换器定义了指示器列在数据库中的设置方式。**领域类型是一个布尔值，指示记录是活动状态还是已删除状态。然而，通过实现_AttributeConverter_，我们可以将关系类型设置为转换器定义的任何类型。可用的转换器有_NumericBooleanConverter_、<em>YesNoConverter_和_TrueFalseConverter</em>。</li>
</ul>`,r:{minutes:3.69,words:1107},t:"Hibernate中的@SoftDelete注解指南",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Add%20Camel%20Route%20at%20Runtime%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Add Camel Route at Runtime in Java.html-BS-VKkyG.js"),__vite__mapDeps([34,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","Apache Camel"],g:["动态路由","企业集成模式"],e:`<hr>
<h1>在Java中动态添加Camel路由</h1>
<p>Apache Camel是一个Java框架，它简化了各种企业集成模式（EIPs）的实现，为企业提供解决方案。</p>
<p>在集成模式中，一个常见的任务是根据特定规则和条件在运行时确定消息路由。Apache Camel通过提供实现动态路由器EIP的方法简化了这一过程。</p>
<p>在本教程中，我们将深入了解如何在Apache Camel中实现动态路由，并演示一个示例。</p>
<h3>2. 理解动态路由器</h3>
<p>有时，我们希望根据运行时的特定规则和条件将消息发送到不同的路由。像路由滑片EIP这样的解决方案可以帮助解决问题，但由于它使用试错法，效率较低。</p>`,r:{minutes:5.7,words:1711},t:"在Java中动态添加Camel路由",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Calculate%20Weighted%20Mean%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Calculate Weighted Mean in Java.html-DrGMkWR0.js"),__vite__mapDeps([35,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","编程"],g:["权重平均数","计算"],e:`
<h2><strong>1. 引言</strong></h2>
<p>在本文中，我们将探讨几种不同的方法来解决同一个问题——计算一组数值的加权平均数。</p>
<h2><strong>2. 什么是加权平均数？</strong></h2>
<p>我们通过将一组数字全部相加，然后除以数字的个数来计算标准平均数。例如，数字1、3、5、7、9的平均数将是(1 + 3 + 5 + 7 + 9) / 5，等于5。</p>
<p><strong>当我们计算加权平均数时，我们有一组每个数字都有权重的数字：</strong></p>
<table>
<thead>
<tr>
<th>数字</th>
<th>权重</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>10</td>
</tr>
<tr>
<td>3</td>
<td>20</td>
</tr>
<tr>
<td>5</td>
<td>30</td>
</tr>
<tr>
<td>7</td>
<td>50</td>
</tr>
<tr>
<td>9</td>
<td>40</td>
</tr>
</tbody>
</table>`,r:{minutes:7.89,words:2367},t:"在Java中计算加权平均数",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Check%20if%20String%20is%20Base64%20Encoded.html",{loader:()=>n(()=>import("./2024-06-22-Check if String is Base64 Encoded.html-Cv1b9Hra.js"),__vite__mapDeps([36,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","Base64"],g:["Base64编码","数据编码"],e:`
<p>在Java编程中，我们经常需要处理数据编码和解码。此外，Base64编码因其流行而被广泛用于将二进制数据转换为ASCII文本格式。</p>
<h2>1. 引言</h2>
<p>本文将探讨在Java中可用于验证给定字符串是否为Base64编码的技术。</p>
<h2>2. 理解Base64编码</h2>
<p>Base64是一种将二进制数据编码为ASCII字符串格式的二进制到文本的编码方案。</p>
<p>每3个字节对应四个字符，这使得通信过程更加安全，因为数据将通过文本协议发送。</p>
<h2>3. 使用 <em>Base64.getDecoder().decode()</em></h2>`,r:{minutes:2.29,words:687},t:"如何在Java中检查字符串是否为Base64编码",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Check%20if%20Two%20Strings%20Are%20Rotations%20of%20Each%20Other.html",{loader:()=>n(()=>import("./2024-06-22-Check if Two Strings Are Rotations of Each Other.html-CPG-cA2I.js"),__vite__mapDeps([37,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","String Algorithms"],g:["String Rotation","Java"],e:`<hr>
<h1>如何检查两个字符串是否是彼此的旋转</h1>
<p>在本教程中，我们将学习如何检查一个字符串是否是另一个字符串的旋转。</p>
<p>我们将简要讨论什么是字符串旋转。然后，我们将查看一些算法来解决这个问题，并进行代码洞察和复杂度分析。</p>
<h2>2. 字符串旋转简介</h2>
<p>在深入一些解决方案之前，让我们讨论一下字符串旋转以及我们应该为算法测试什么。</p>
<h3>2.1. 字符串和字符串旋转</h3>
<p>字符串是原始字符的序列，在Java中，它被包装在_String_类中。尽管两个字符串可能是不同的对象，我们可以比较它们的内部字符，并检查，例如，它们是否相等或包含共同的模式。</p>`,r:{minutes:7.61,words:2283},t:"如何检查两个字符串是否是彼此的旋转",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Check%20if%20a%20String%20Is%20Equal%20to%20Its%20Mirror%20Reflection.html",{loader:()=>n(()=>import("./2024-06-22-Check if a String Is Equal to Its Mirror Reflection.html-DGA8X_79.js"),__vite__mapDeps([38,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","字符串"],g:["字符串反转","镜像测试"],e:`
<p>当我们在Java中工作时，字符串操作和比较是日常任务。</p>
<p>在这个快速教程中，我们将深入探讨一个有趣的问题：检查字符串是否等于其镜像反射。</p>
<h2>2. 问题介绍</h2>
<p>一个常见的误解是，获取字符串的镜像反射仅仅涉及反转其顺序。以字符串“ALL”为例。直观上，人们可能会期望它的镜像反射是“LLA”。然而，通过实际使用镜子仔细检查，我们发现“LLA”并不符合“ALL”的镜像版本。</p>
<p>关键的误解在于，字符串中的<strong>每个单独字符在其镜像反射中都会发生反转</strong>。因此，“ALL”的镜像反射实际上看起来像“⅃⅃A”。</p>
<p>字符可以根据其反转行为被归类为对称或不对称。<strong>对称字符是指在反转时保持不变的字符</strong>，例如‘A’、‘O’、‘o’、‘V’、‘v’、‘M’、‘8’、‘+’、‘-’等。相反，不对称字符与其反转形式不同，例如‘L’、‘S’、‘p’、‘h’、‘/’、‘3’等。</p>`,r:{minutes:3.26,words:977},t:"检查字符串是否等于其镜像反射",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Collect%20Stream%20of%20entrySet%20%20%20to%20a%20LinkedHashMap.html",{loader:()=>n(()=>import("./2024-06-22-Collect Stream of entrySet   to a LinkedHashMap.html-CPYWxd3n.js"),__vite__mapDeps([39,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","Tutorial"],g:["LinkedHashMap","Stream","Java 8"],e:`
<p>在本教程中，我们将探讨将 Map.Entry 对象的流以不同方式收集到 LinkedHashMap 中。LinkedHashMap 与 HashMap 类似，但不同之处在于它保持插入顺序。</p>
<h2>2. 理解问题</h2>
<p>我们可以通过调用 entrySet() 方法后跟 stream() 方法来获取地图条目的流。这个流使我们能够处理每个条目。</p>
<p>处理是通过中间操作实现的，可以涉及使用 filter() 方法进行过滤或使用 map() 方法进行转换。<strong>最终，我们必须通过适当的终端操作来决定如何处理我们的流。</strong> 在我们的情况下，我们面临的挑战是将流收集到 LinkedHashMap 中。</p>`,r:{minutes:3.89,words:1166},t:"将 entrySet() 流收集到 LinkedHashMap",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-CompletableFuture%20runAsync%20%20%20vs.%20supplyAsync%20%20%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-CompletableFuture runAsync   vs. supplyAsync   in Java.html-D6Aiu0JO.js"),__vite__mapDeps([40,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","CompletableFuture"],g:["CompletableFuture","runAsync","supplyAsync"],e:`
<p>Java的_CompletableFuture_框架提供了强大的异步编程能力，方便了任务的并发执行。</p>
<p>在本教程中，我们将深入探讨_CompletableFuture_提供的两个基本方法——runAsync()和supplyAsync()。我们将探索它们的区别、使用场景以及何时选择其中一个。</p>
<h3>2. CompletableFuture, runAsync() 和 supplyAsync() 的理解</h3>
<p>CompletableFuture是Java中一个强大的框架，它支持异步编程，允许任务并发执行而不会阻塞主线程。runAsync()和supplyAsync()是由CompletableFuture类提供的方法。</p>`,r:{minutes:8.51,words:2554},t:"Java中CompletableFuture的runAsync()与supplyAsync()对比 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Convert%20Date%20to%20Unix%20Timestamp%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Convert Date to Unix Timestamp in Java.html-CJJeVVV2.js"),__vite__mapDeps([41,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","Date-Time"],g:["Unix Timestamp","Java 8"],e:`
<p>在计算机科学中，Unix时间戳，也称为纪元时间，是一种标准的表示特定时间点的方式。它表示自1970年1月1日以来经过的秒数。</p>
<p>本教程将介绍如何将传统日期转换为Unix时间戳。首先，我们将探讨如何使用内置的JDK方法来实现这一点。然后，我们将展示如何使用Joda-Time等外部库来达到相同的目标。</p>
<h2>2. 使用Java 8+日期时间API</h2>
<p>Java 8引入了一个新的日期时间API，我们可以使用它来回答我们的核心问题。这个新API带有几种方法和类来操作日期。那么，让我们仔细看看每个选项。</p>
<h3>2.1. 使用Instant类</h3>
`,r:{minutes:3.73,words:1120},t:"Java中将日期转换为Unix时间戳",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Convert%20Infix%20to%20Postfix%20Expressions%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Convert Infix to Postfix Expressions in Java.html-Cot3-G4v.js"),__vite__mapDeps([42,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","算法"],g:["表达式转换","逆波兰表示法"],e:`
<p>在本教程中，我们将讨论将数学表达式的中缀表示法转换为后缀表示法的算法和代码。像Java这样的编程语言允许我们定义和使用不同的数学表达式。表达式可以通过变量、常量和运算符的组合来书写。</p>
<h3>2.1. 算术表达式</h3>
<p>算术表达式包括加法(+)、减法(-)、乘法(*)、除法(/)和取模(%)等运算符。这些运算符与变量或常量一起使用，会产生算术评估：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> sum <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token keyword">int</span> prod <span class="token operator">=</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>

<span class="token keyword">int</span> remainder <span class="token operator">=</span> x <span class="token operator">%</span> y<span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:8.94,words:2683},t:"Java中将中缀表达式转换为后缀表达式",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Count%20Uppercase%20and%20Lowercase%20Letters%20in%20a%20String.html",{loader:()=>n(()=>import("./2024-06-22-Count Uppercase and Lowercase Letters in a String.html-CLQkiOSm.js"),__vite__mapDeps([43,1])),meta:{d:1719056965e3,c:["Java","String Manipulation"],g:["uppercase","lowercase","count"],e:`
<p>当在Java中使用字符串类型时，经常需要分析其中的字符组成。一个常见的任务是计算给定字符串中的大写字母和小写字母的数量。</p>
<p>在本教程中，我们将探索使用Java实现这一任务的几种简单实用的方法。</p>
<h2>2. 问题介绍</h2>
<p>在深入代码之前，我们首先明确手头的问题。我们想要创建一个Java方法，它接受一个字符串作为输入，并同时计算大写字母和小写字母的数量。换句话说，<strong>解决方案将产生包含两个计数器的结果</strong>。</p>
<p>例如，我们将以下面的字符串作为输入：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>static final String MY_STRING = "Hi, Welcome to Baeldung! Let's count letters!";
</code></pre></div>`,r:{minutes:3.83,words:1150},t:"在Java中统计字符串中的大写和小写字母",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-CountDownLatch%20vs.%20Semaphore.html",{loader:()=>n(()=>import("./2024-06-22-CountDownLatch vs. Semaphore.html-CtO4ggHB.js"),__vite__mapDeps([44,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","Concurrency"],g:["CountDownLatch","Semaphore"],e:`
<p>在Java多线程编程中，线程间的有效协调对于确保适当的同步和防止数据损坏至关重要。两种常用的线程协调机制是_CountDownLatch_和_Semaphore_。在本教程中，我们将探讨_CountDownLatch_和_Semaphore_之间的区别，并讨论何时使用它们。</p>
<h3>2.1. <em>CountDownLatch</em></h3>
<p>**_CountDownLatch_允许一个或多个线程在指定的任务集完成之前优雅地暂停。**它通过将计数器递减，直到它达到零，这表明所有先决任务都已完成。</p>
<h3>2.2. <em>Semaphore</em></h3>`,r:{minutes:5.78,words:1735},t:"CountDownLatch与Semaphore的对比",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Creating%20a%20Custom%20URL%20Connection.html",{loader:()=>n(()=>import("./2024-06-22-Creating a Custom URL Connection.html-BPDZ5xYL.js"),__vite__mapDeps([45,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","网络编程"],g:["URLConnection","自定义连接"],e:`
<p>在Java中，_URLConnection_类为通过_URL_指定的资源提供本的连接功能。然而，在某些情况下，开发者可能需要自定义实现以适应特定的需求。本教程将探讨创建自定义URL连接的过程。</p>
<h3>为什么创建自定义URL连接</h3>
<p>由于与默认_URLConnection_类相关联的各种限制，创建自定义URL连接变得迫切。在这一部分中，我们将讨论这些限制并概述需要定制的场景。</p>
<h4>2.1. <strong>解决协议限制</strong></h4>
<p>默认的_URLConnection_类为通过URL连接资源提供了基本机制。**它主要设计用于HTTP和HTTPS协议。**在应用程序需要使用组织内或特定应用程序开发的自定义协议与资源交互的情况下，自定义连接是必要的。例如，我们可能需要连接到公司内部网络协议或自定义数据库协议。</p>`,r:{minutes:6.23,words:1869},t:"创建自定义URL连接",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Difference%20Between%20thenApply%20%20%20and%20thenApplyAsync%20%20%20in%20CompletableFuture.html",{loader:()=>n(()=>import("./2024-06-22-Difference Between thenApply   and thenApplyAsync   in CompletableFuture.html-DWOjD0Ln.js"),__vite__mapDeps([46,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","CompletableFuture"],g:["thenApply","thenApplyAsync"],e:`
<p>在 CompletableFuture 框架中，thenApply() 和 thenApplyAsync() 是支持异步编程的关键方法。</p>
<p>在本教程中，我们将深入探讨 CompletableFuture 中 thenApply() 和 thenApplyAsync() 之间的差异。我们将探索它们的功能、使用案例，以及何时选择其中一个而不是另一个。</p>
<p>CompletableFuture 提供了 thenApply() 和 thenApplyAsync() 方法，用于对计算结果应用转换。这两种方法都允许在 CompletableFuture 的结果上执行操作链。</p>`,r:{minutes:6.88,words:2065},t:"CompletableFuture 中的 thenApply() 和 thenApplyAsync() 之间的区别",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Find%20The%20Largest%20Number%20in%20a%20String.html",{loader:()=>n(()=>import("./2024-06-22-Find The Largest Number in a String.html-B6Tx7ydq.js"),__vite__mapDeps([47,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","编程技巧"],g:["字符串处理","数字提取"],e:`<hr>
<h1>在字符串中找到最大数字</h1>
<h2>1. 引言</h2>
<p>在处理多种编程场景时，经常会遇到包含数字的字符串，可能需要找到这些值中的最大值。</p>
<p><strong>本教程将深入探讨不同的方法和Java代码示例，以正确识别并提取给定字符串中的最大数值。</strong></p>
<h2>2. 使用比较的字符串解析</h2>
<p>最简单的方法包括读取字符串并识别数字子字符串。我们可以通过比较前缀来检测最大数字。让我们来看一个例子：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> inputString <span class="token operator">=</span> <span class="token string">"The numbers are 10, 20, and 5"</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> expectedLargestNumber <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">givenInputString_whenUsingBasicApproach_thenFindingLargestNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers <span class="token operator">=</span> inputString<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"[^0-9]+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> largestNumber <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> number <span class="token operator">:</span> numbers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>number<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> currentNumber <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>currentNumber <span class="token operator">&gt;</span> largestNumber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                largestNumber <span class="token operator">=</span> currentNumber<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">assertEquals</span><span class="token punctuation">(</span>expectedLargestNumber<span class="token punctuation">,</span> largestNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:6.18,words:1853},t:"在字符串中找到最大数字",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Find%20the%20Equilibrium%20Indexes%20of%20an%20Array%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Find the Equilibrium Indexes of an Array in Java.html-Cdvf887d.js"),__vite__mapDeps([48,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","Algorithm"],g:["Equilibrium Index","Array"],e:`
<h2>1. 概述</h2>
<p>在本教程中，我们首先学习数组平衡索引的定义。随后，我们将编写一个方法来识别和定位它们。</p>
<h2>2. 问题陈述</h2>
<p><strong>给定一个大小为N的零索引数组_A_，如果索引_i_满足左侧元素之和等于右侧元素之和，则该索引是平衡索引。</strong> 也就是说：A[0] + A[1] + … + A[i-1] = A[i+1] + A[i+2] + … + A[N-1]。特别是，对于数组的第一个和最后一个索引，其他元素的和应该是0。例如，考虑数组_{1, -3, 0, 4, -5, 4, 0, 1, -2, -1}_：</p>
<ul>
<li>1是一个平衡索引，因为A[0] = 1且A[2] + A[3] + A[4] + A[5] + A[6] + A[7] + A[8] + A[9] = 0 + 4 + (-5) + 4 + 0 + 1 + (-2) + (-1) = 1</li>
<li>4也是一个平衡索引，因为A[0] + A[1] + A[2] + A[3] = 1 + (-3) + 0 + 4 = 2且A[5] + A[6] + A[7] + A[8] + A[9] = 4 + 0 + 1 + (-2) + (-1) = 2</li>
<li>A[0] + A[1] + A[2] + A[3] + A[4] + A[5] + A[6] + A[7] + A[8] = 1 + (-3) + 0 + 4 + (-5) + 4 + 0 + 1 + (-2) = 0且没有索引大于9的元素，所以9也是这个数组的平衡索引</li>
<li>另一方面，5不是平衡索引，因为A[0] + A[1] + A[2] + A[3] + A[4] = 1 + (-3) + 0 + 4 + (-5) = -3，而A[6] + A[7] + A[8] + A[9] = 0 + 1 + (-2) + (-1) = -2</li>
</ul>`,r:{minutes:3.93,words:1178},t:"在Java中查找数组的平衡索引",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Find%20the%20First%20Non%20repeating%20Element%20of%20a%20List.html",{loader:()=>n(()=>import("./2024-06-22-Find the First Non repeating Element of a List.html-C8Nj-n7m.js"),__vite__mapDeps([49,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","算法"],g:["非重复元素","列表处理"],e:`
<h2>1. 引言</h2>
<p>在本教程中，我们将探讨在列表中找到第一个不重复元素的问题。我们首先理解问题陈述，然后实现几种方法来达到期望的结果。</p>
<h2>2. 问题陈述</h2>
<p>给定一个元素列表，任务是找到列表中不重复的第一个元素。换句话说，**我们需要识别列表中只出现一次的第一个元素。**如果没有不重复的元素，我们则返回一个适当的指示，例如，<em>null</em>。</p>
<h2>3. 使用 <em>for</em> 循环</h2>
<p>这种方法使用嵌套的 <em>for</em> 循环来遍历列表并检查重复元素。它很直接但效率较低。</p>
<h3>3.1. 实现</h3>`,r:{minutes:7.76,words:2327},t:"寻找列表中第一个不重复的元素",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Get%20All%20Results%20at%20Once%20in%20a%20Spring%20Boot%20Paged%20Query%20Method.html",{loader:()=>n(()=>import("./2024-06-22-Get All Results at Once in a Spring Boot Paged Query Method.html-BlsmT3nT.js"),__vite__mapDeps([50,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Spring Boot","Pagination"],g:["Spring Data","JPA"],e:`<hr>
<h1>在Spring Boot分页查询方法中一次性获取所有结果</h1>
<p>在Spring Boot应用程序中，我们经常需要将表格数据以每次20行或50行的块呈现给客户端。分页是返回大型数据集中一部分数据的常见做法。然而，在某些场景下，我们需要一次性获取所有结果。</p>
<p>在本教程中，我们首先回顾了如何在Spring Boot中使用分页来检索数据。接下来，我们将探讨如何一次性从数据库表中检索所有结果。最后，我们将深入到一个更复杂的情景，即检索具有关系的数据显示。</p>
<h2>2. 仓库（Repository）</h2>
<p>仓库是Spring Data接口，提供了数据访问抽象。根据我们选择的仓库子接口，抽象提供了一组预定义的数据库操作。我们不需要为标准数据库操作如选择、保存和删除编写代码。我们所需做的只是为我们的实体创建一个接口，并将其扩展到所选的仓库子接口。</p>`,r:{minutes:8.46,words:2539},t:"在Spring Boot分页查询方法中一次性获取所有结果",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Get%20a%20Range%20of%20Items%20from%20a%20Stream%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Get a Range of Items from a Stream in Java.html-BBiNch_-.js"),__vite__mapDeps([51,1])),meta:{d:1719031697e3,c:["REST with Spring Boot"],g:["Learn Spring Security","Learn Spring Security Core","Learn Spring Security OAuth","Learn Spring","Learn Spring Data JPA"],e:`
<ul>
<li>
<p><strong>REST与Spring Boot</strong><br>
即将提高价格的权威参考，用于构建Spring的商业级API（周末价格将上涨50美元）</p>
</li>
<li>
<p><strong>学习Spring Security</strong><br>
如果您今天使用Java工作，这是唯一的Spring Security教育</p>
</li>
<li>
<p><strong>学习Spring Security核心</strong><br>
专注于Spring Security 6的核心</p>
</li>
<li>
<p><strong>学习Spring Security OAuth</strong><br>
专注于Spring Security 6中的新OAuth2堆栈</p>
</li>
<li>
<p><strong>学习Spring</strong><br>
从无经验到实际构建东西</p>
</li>
<li>
<p><strong>学习Spring Data JPA</strong><br>
关于使用Spring Data JPA进行持久化的完整指南---
date: {页面未提供具体日期，无法确定}
category:</p>
<ul>
<li>REST with Spring Boot
tag:</li>
<li>Learn Spring Security</li>
<li>Learn Spring Security Core</li>
<li>Learn Spring Security OAuth</li>
<li>Learn Spring</li>
<li>Learn Spring Data JPA
head:</li>
<li>
<ul>
<li>meta</li>
<li>name: keywords
content: Java Stream, Range, Spring Boot, Spring Security, Spring Data JPA</li>
</ul>
</li>
</ul>
</li>
</ul>`,r:{minutes:1.29,words:387},t:"在Java流中获取一系列项目的教程 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Guide%20to%20System.in.read%20%20.html",{loader:()=>n(()=>import("./2024-06-22-Guide to System.in.read  .html-8zNqJk_b.js"),__vite__mapDeps([52,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","编程"],g:["System.in.read()","用户输入"],e:`
<p>Java提供了多种工具和函数来处理用户输入。<em>System.in.read()</em> 是Java中用于从控制台读取输入的常用方法之一。在本文中，我们将探讨它的功能以及如何在Java中使用它。</p>
<h2>2. System.in.read()是什么？</h2>
<p>Java方法_System.in.read()_ 从标准输入流中读取一个字节，通常与键盘或其他来源相关联。它是_System_类的一部分，提供了一种低级别的机制来读取基于字节的输入：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span>
</code></pre></div>`,r:{minutes:4.34,words:1301},t:"Java中System.in.read()方法指南",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-How%20To%20Use%20findBy%20%20%20With%20Multiple%20Columns%20in%20JPA.html",{loader:()=>n(()=>import("./2024-06-22-How To Use findBy   With Multiple Columns in JPA.html-BW6lnZE_.js"),__vite__mapDeps([53,1])),meta:{d:17074368e5,l:"2024年2月9日",c:["Spring Data JPA","JPA"],g:["findBy","多列查询"],e:`<hr>
<h1>如何在JPA中使用findBy()与多列查询</h1>
<p>Spring Data JPA提供了一个查询派生特性，通过遵循方法命名约定，我们可以自动派生查询。</p>
<p>在本文中，我们将使用查询派生特性通过一个或多个列来查找实体。</p>
<h2>2. 示例设置</h2>
<p>为了示例目的，我们将使用一个包含与用户账户相关的属性的_Account_实体：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"ACCOUNTS"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Account</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span><span class="token constant">SEQUENCE</span><span class="token punctuation">,</span> generator <span class="token operator">=</span> <span class="token string">"accounts_seq"</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@SequenceGenerator</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"accounts_seq"</span><span class="token punctuation">,</span> sequenceName <span class="token operator">=</span> <span class="token string">"accounts_seq"</span><span class="token punctuation">,</span> allocationSize <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"user_id"</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> userId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Timestamp</span> createdOn<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Timestamp</span> lastLogin<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@OneToOne</span>
    <span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"permissions_id"</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Permission</span> permission<span class="token punctuation">;</span>

    <span class="token comment">// getters and setters</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.01,words:904},t:"如何在JPA中使用findBy()与多列查询",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-How%20to%20Check%20if%20a%20Variable%20Is%20Defined%20in%20Thymeleaf.html",{loader:()=>n(()=>import("./2024-06-22-How to Check if a Variable Is Defined in Thymeleaf.html-B1cbOw7N.js"),__vite__mapDeps([54,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Spring","Thymeleaf"],g:["Thymeleaf","Spring MVC"],e:'<hr>\n<h1>如何在Thymeleaf中检查变量是否已定义</h1>\n<p>在这个教程中，我们将学习使用三种不同的方法来检查Thymeleaf中的变量是否已定义。为此，我们将使用Spring MVC和Thymeleaf构建一个简单的Web应用程序，该程序在设置给定变量的情况下显示服务器的日期和时间。</p>\n<h2>2. 设置</h2>\n<p>在深入研究这些方法之前，我们需要进行一些初始设置。让我们从Thymeleaf依赖项开始：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```org.thymeleaf```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```thymeleaf```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```3.1.2.RELEASE```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```\n```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```org.thymeleaf```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```thymeleaf-spring5```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```3.1.2.RELEASE```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```\n```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```org.thymeleaf.extras```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```thymeleaf-extras-java8time```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```3.0.4.RELEASE```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```\n```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n</code></pre></div>',r:{minutes:4.24,words:1271},t:"如何在Thymeleaf中检查变量是否已定义",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Injecting%20%20Mock%20and%20%20Captor%20in%20JUnit%205%20Method%20Parameters.html",{loader:()=>n(()=>import("./2024-06-22-Injecting  Mock and  Captor in JUnit 5 Method Parameters.html-B5_eHzOH.js"),__vite__mapDeps([55,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["JUnit 5","Mockito"],g:["JUnit 5","Mockito","测试"],e:'\n<h2>1. 概述</h2>\n<p>在本教程中，我们将了解如何在单元测试方法参数中注入 @Mock 和 @Captor 注解。</p>\n<p>我们可以使用 @Mock 在单元测试中创建模拟对象。另一方面，我们可以使用 @Captor 捕获并存储传递给模拟方法的参数，以便稍后进行断言。JUnit 5 的引入使得将参数注入测试方法变得非常容易，从而实现了这一新特性。</p>\n<h2>2. 示例设置</h2>\n<p>要使用此功能，我们需要使用 JUnit 5。库的最新版本可以在 Maven Central Repository 中找到。让我们将依赖项添加到我们的 pom.xml 中：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```org.junit.jupiter```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```junit-jupiter-engine```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```5.10.2```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>```test```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>```\n```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n</code></pre></div>',r:{minutes:4.05,words:1216},t:"JUnit 5 方法参数注入 @Mock 和 @Captor",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Install%20OpenJDK%20on%20Windows.html",{loader:()=>n(()=>import("./2024-06-22-Install OpenJDK on Windows.html-DVEq5wPJ.js"),__vite__mapDeps([56,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["OpenJDK","Windows"],g:["Java","JDK","安装"],e:`
<p>Java在现代软件开发中扮演着关键角色，为许多应用程序和系统提供支持。为了在我们的机器上利用Java的力量，我们需要安装Java开发工具包（JDK）。虽然Oracle JDK是一个流行的选择，但OpenJDK提供了一个具有相似功能的开源替代品。</p>
<p>在本文中，我们将探讨在Windows环境中安装OpenJDK的各种方法，以满足不同的偏好和需求。</p>
<h2>2. 手动安装</h2>
<p>这种方法涉及直接从官方网站或受信任的存储库（如AdoptOpenJDK）下载OpenJDK发行版。</p>
<p>下载后，将归档的内容解压到我们机器上的首选位置。配置环境变量，如_PATH_和_JAVA_HOME_，指向OpenJDK安装的目录至关重要。让我们通过访问控制面板并导航到_系统设置_来继续操作：</p>`,r:{minutes:3.04,words:913},t:"在Windows上安装OpenJDK",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Instantiate%20an%20Inner%20Class%20With%20Reflection%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Instantiate an Inner Class With Reflection in Java.html-CGLCsBwt.js"),__vite__mapDeps([57,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","编程"],g:["Java反射","内嵌类实例化"],e:`
<p>在本教程中，我们将讨论如何使用Java反射API来实例化内部类或嵌套类。</p>
<p>反射API在需要读取Java类的构造并动态实例化类的场合中尤为重要。特定场景包括扫描注解、查找并使用bean名称实例化Java bean等。Spring和Hibernate等流行库以及代码分析工具广泛使用它。</p>
<p>与普通类相比，实例化内部类存在挑战。让我们进一步探索。</p>
<h2>2. 内部类编译</h2>
<p>要使用Java反射API对内部类进行操作，我们必须了解编译器如何处理它。首先，我们定义一个_Person_类，我们将使用它来演示实例化内部类：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token class-name">Address</span> address<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Address</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> zip<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">Address</span><span class="token punctuation">(</span><span class="token class-name">String</span> zip<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>zip <span class="token operator">=</span> zip<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Builder</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.61,words:1083},t:"使用Java反射API实例化内部类",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Introduction%20to%20OpenGrok.html",{loader:()=>n(()=>import("./2024-06-22-Introduction to OpenGrok.html-CcY1HNJW.js"),__vite__mapDeps([58,1])),meta:{d:1719074051e3,c:["OpenGrok","代码搜索"],g:["源代码搜索引擎","跨引用","安装指南"],e:`<hr>
<h1>OpenGrok简介</h1>
<ol>
<li>概述</li>
</ol>
<p>OpenGrok是一个开源且功能强大的源代码搜索和交叉引用引擎，它允许我们高效地探索、搜索和浏览各种项目的源代码。</p>
<p>在本文中，我们将探索OpenGrok的特性和优势，并了解如何利用其能力进行有效的代码浏览。</p>
<ol start="2">
<li>什么是OpenGrok？</li>
</ol>
<p><strong>OpenGrok是一个快速且可扩展的源代码搜索和交叉引用引擎，它提供了一个用户友好的Web界面，用于探索代码库。</strong> 它使用Java开发，支持多种编程语言，使其多功能且适用于各种项目。</p>`,r:{minutes:3.66,words:1098},t:"OpenGrok简介",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Logging%20With%20AOP%20in%20Spring.html",{loader:()=>n(()=>import("./2024-06-22-Logging With AOP in Spring.html-DyCHxiJH.js"),__vite__mapDeps([59,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Spring","AOP"],g:["Logging","Aspect-Oriented Programming"],e:`
<p>我们经常使用日志记录来记录程序执行过程中有意义的步骤和有价值的信息。它允许我们记录以后可用于调试和分析代码的数据。</p>
<p>此外，面向切面编程（简称AOP）是一种范式，它让我们能够在不扰乱业务逻辑的情况下，将事务管理或日志记录等跨领域关注点分离到整个应用程序中。</p>
<p>在本教程中，我们将学习如何使用AOP和Spring框架实现日志记录。</p>
<h2>2. 无AOP的日志记录</h2>
<p>在日志记录方面，我们通常在方法的开始和结束处放置日志。这样，我们可以轻松地跟踪应用程序的执行流程。此外，我们可以捕获传递给特定方法的值以及它们返回的值。</p>
<p>为了演示，让我们创建一个带有<code>greet()</code>方法的<code>GreetingService</code>类：</p>`,r:{minutes:12.94,words:3883},t:"使用Spring AOP进行日志记录",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Mask%20an%20Email%20Address%20and%20Phone%20Number%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Mask an Email Address and Phone Number in Java.html-DzoX_Vna.js"),__vite__mapDeps([60,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","编程"],g:["邮箱地址","电话号码","脱敏","正则表达式"],e:`<hr>
<h1>在Java中遮罩电子邮件地址和电话号码</h1>
<p>隐私和数据安全是软件开发的重要组成部分。遮罩敏感细节，如用户的电子邮件地址和电话号码，通常是保护用户信息和防止其泄露的程序之一。</p>
<p><strong>在本教程中，我们将探讨如何在Java中遮罩电子邮件地址和电话号码。</strong></p>
<h3>2.1 使用字符串操作遮罩电子邮件地址</h3>
<p>字符串操作是隐藏电子邮件的一种方式，通过编辑字符并将其中一些替换为星号。以下是一个简单的Java代码片段，演示了这种方法：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> email <span class="token operator">=</span> <span class="token string">"testemailaddress@example.com"</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> expectedMaskedEmail <span class="token operator">=</span> <span class="token string">"te**************@example.com"</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenEmailAddress_whenUsingStringManipulation_thenMaskEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> atIndex <span class="token operator">=</span> email<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">'@'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> repeatedString <span class="token operator">=</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> atIndex <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToObj</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> maskedPart <span class="token operator">=</span> email<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> atIndex <span class="token operator">-</span> repeatedString<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> repeatedString<span class="token punctuation">;</span>
    <span class="token class-name">String</span> maskedEmail <span class="token operator">=</span> maskedPart <span class="token operator">+</span> email<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>atIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">assertEquals</span><span class="token punctuation">(</span>expectedMaskedEmail<span class="token punctuation">,</span> maskedEmail<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.39,words:1018},t:"在Java中遮罩电子邮件地址和电话号码",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Moves%20Zeros%20to%20the%20End%20of%20an%20Array%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Moves Zeros to the End of an Array in Java.html-D3otKZ8K.js"),__vite__mapDeps([61,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","Arrays"],g:["Algorithm","Tutorial"],e:`
<h2>1. 概述</h2>
<p>在Java中使用数组时，一个常见的任务是重新排列数组以优化它们的结构。其中一种场景涉及将零移动到数组的末尾。</p>
<p>在本教程中，我们将探索使用Java实现此任务的不同方法。</p>
<h2>2. 问题介绍</h2>
<p>在我们深入实现之前，首先让我们理解这个问题的要求。</p>
<p>我们的输入是一个整数数组。我们的目标是重新排列整数，以便<strong>所有零都被移动到数组的末尾</strong>。此外，<strong>非零元素的顺序必须保持不变</strong>。</p>
<p>一个例子可以帮助我们快速理解问题。假设我们给定一个整数数组：</p>`,r:{minutes:4.07,words:1220},t:"Java中将数组中的零移动到末尾的方法 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Mutable%20vs.%20Immutable%20Objects%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Mutable vs. Immutable Objects in Java.html-DBKJ9sA4.js"),__vite__mapDeps([62,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","编程"],g:["可变对象","不可变对象"],e:`
<ol>
<li>引言</li>
</ol>
<p>在Java中使用对象时，理解可变对象（mutable objects）和不可变对象（immutable objects）之间的区别至关重要。这些概念影响您的Java代码的行为和设计。</p>
<p>在本教程中，我们将探讨可变和不可变对象的定义、示例、优势和考虑因素。</p>
<p>不可变对象是指一旦创建后其状态就无法改变的对象。一旦不可变对象被实例化，其值和属性在其生命周期内保持不变。</p>
<p>让我们探索Java中一些内置的不可变类的示例。</p>
<p>2.1. String类</p>
<p>Java中String的不可变性确保了线程安全性，增强了安全性，并通过String Pool机制帮助高效使用内存。</p>`,r:{minutes:6.35,words:1904},t:"Java中的可变对象与不可变对象",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-OAuth2%20Backend%20for%20Frontend%20With%20Spring%20Cloud%20Gateway.html",{loader:()=>n(()=>import("./2024-06-22-OAuth2 Backend for Frontend With Spring Cloud Gateway.html-DS7YH7X8.js"),__vite__mapDeps([63,1])),meta:{d:1696896e6,l:"2023年10月10日",c:["Spring Cloud","OAuth2"],g:["Spring Security","Backend for Frontend"],e:`
<p>如果您正在研究Spring Security（特别是OAuth）的实现，一定要看看《Learn Spring Security》课程。</p>
<p><strong>&gt;&gt; 点击这里学习 Spring</strong>
<strong>安全</strong></p>
<h2>1. 概述</h2>
<p>在本教程中，我们将使用Spring Cloud Gateway和spring-addons实现OAuth2后端前端分离（BFF）模式，以从三个不同的单页应用程序（Angular、React和Vue）消费无状态REST API。</p>
<p>使用调试工具检查时，我们不会在以使用OAuth2而闻名的任何主要网站上找到任何_Bearer_令牌（例如Google、Facebook、Github或LinkedIn）。为什么会这样？</p>`,r:{minutes:7.01,words:2102},t:"使用Spring Cloud Gateway和OAuth2实现后端前端分离模式",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Pagination%20With%20JDBC.html",{loader:()=>n(()=>import("./2024-06-22-Pagination With JDBC.html-CYhFpLg9.js"),__vite__mapDeps([64,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","JDBC"],g:["Pagination","JDBC"],e:'\n<h2>1. 引言</h2>\n<p>大量表格读取可能会导致应用程序内存不足。它们还会给数据库增加额外的负载，并需要更多的带宽来执行。在读取大型表格时推荐的方法是使用分页查询。本质上，我们读取数据的一个子集（页面），处理数据，然后移动到下一页。</p>\n<p>在本文中，我们将讨论并实现使用JDBC进行分页的不同策略。</p>\n<h2>2. 设置</h2>\n<p>首先，我们需要根据我们的数据库在_pom.xml_文件中添加适当的JDBC依赖项，以便我们可以连接到我们的数据库。例如，如果我们的数据库是PostgreSQL，我们需要添加PostgreSQL依赖项：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`org.postgresql`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`postgresql`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`42.6.0`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n</code></pre></div>',r:{minutes:5.2,words:1561},t:"JDBC分页查询",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Parse%20String%20With%20Thousands%20Separator%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-22-Parse String With Thousands Separator in Kotlin.html-Ci_0C6ww.js"),__vite__mapDeps([65,1])),meta:{d:1719091621e3,c:["Kotlin","Programming"],g:["Kotlin","String Parsing","Number Format"],e:`<hr>
<h1>Kotlin中解析带有千位分隔符的字符串</h1>
<h2>1. 引言</h2>
<p>当处理以字符串形式表示的数字时，通常需要将它们转换为数值以进行后续计算。当表示较大数值的字符串使用逗号（“，”）或点（“.”）作为千位分隔符时，情况就变得复杂了。Kotlin提供了几种方法将这些字符串解析为数值。</p>
<p>在本教程中，我们将探索将这些字符串解析为数值的几种方法。</p>
<h2>2. DecimalFormatSymbols 类</h2>
<p>DecimalFormatSymbols 类在我们的解析技术中起着至关重要的作用。<strong>它允许我们获取特定于区域设置的格式符号，例如千位分隔符</strong>。我们可以使用 groupingSeparator 获取这个符号：</p>`,r:{minutes:3.21,words:964},t:"Kotlin中解析带有千位分隔符的字符串",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Preventing%20Gson%20from%20Expressing%20Integers%20as%20Floats.html",{loader:()=>n(()=>import("./2024-06-22-Preventing Gson from Expressing Integers as Floats.html-CXHIyyX6.js"),__vite__mapDeps([66,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","Gson"],g:["Serialization","Deserialization"],e:`
<p>Gson是由Google开发的库，非常适合将Java对象序列化和反序列化到JSON格式。除此之外，我们通常会碰到Gson在序列化对象时将整数显示为浮点数的问题。</p>
<h2>1. 引言</h2>
<p><strong>在本教程中，我们将了解为什么整数被视为浮点数。此外，我们将提供一个解决方案来防止Gson这样做。</strong></p>
<h2>2. 问题定义</h2>
<p>Gson将Java对象序列化为JSON。默认情况下，Gson将整数序列化为浮点数，以更准确地表示。这里有一个简单的例子：</p>
<p>现在，我们将使用Gson库将JSON字符串反序列化为<code>Hashtable</code>&lt;String, Object&gt;\`\`对象列表。</p>`,r:{minutes:2.21,words:664},t:"防止Gson将整数表示为浮点数",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Quarkus%20and%20Virtual%20Threads.html",{loader:()=>n(()=>import("./2024-06-22-Quarkus and Virtual Threads.html-CauASmVI.js"),__vite__mapDeps([67,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","Quarkus"],g:["Java虚拟线程","并发"],e:`
<p>在Java开发领域不断发展的今天，Java 21引入了一个革命性的特性——虚拟线程。这些由Java虚拟机(JVM)管理的轻量级线程，承诺将重塑开发者在Java应用程序中处理并发的方式。长期以来，并发应用程序的开发一直充满挑战，管理传统的操作系统(OS)管理线程时常常遇到复杂性。</p>
<p>Quarkus框架的核心是一个现代的、以开发者为中心的工具包，专为云原生时代设计。它拥有极快的启动时间和低内存消耗，同时为开发者提供了一套广泛的工具，用于构建微服务和云原生应用程序。</p>
<p>在本教程中，我们将探索Quarkus如何利用Java的虚拟线程，转变Java应用程序中并发的管理方式。</p>`,r:{minutes:6.85,words:2055},t:"Quarkus和虚拟线程",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Run%20Maven%20From%20Java%20Code.html",{loader:()=>n(()=>import("./2024-06-22-Run Maven From Java Code.html-UC2W3W0p.js"),__vite__mapDeps([68,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","Maven"],g:["Maven","Java"],e:`<hr>
<h1>从Java代码运行Maven</h1>
<p>Maven 是大多数Java项目中不可或缺的工具。它提供了一种方便的方式来运行和配置构建。<strong>然而，在某些情况下，我们需要对过程有更多的控制。</strong> 从Java运行Maven构建使其更加可配置，因为我们可以实时做出许多决策。</p>
<p>在本教程中，我们将学习如何与Maven交互，并直接从代码中运行构建。</p>
<h2>2. 学习平台</h2>
<p>让我们考虑以下示例，以更好地理解直接从Java使用Maven的目标和有用性：想象一个Java学习平台，学生可以从各种主题中选择并从事作业。</p>
<p><strong>因为我们的平台主要针对初学者，我们希望尽可能简化整个体验。</strong> 这样，学生就可以选择他们想要的任何主题，甚至可以组合它们。我们在服务器上生成项目，学生可以在线完成。</p>`,r:{minutes:4.74,words:1421},t:"从Java代码运行Maven",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Simple%20Web%20Server%20in%20Java%2018.html",{loader:()=>n(()=>import("./2024-06-22-Simple Web Server in Java 18.html-UK7_K00x.js"),__vite__mapDeps([69,1])),meta:{d:17074368e5,l:"2024年2月9日",c:["Java","Web Server"],g:["Java 18","Simple Web Server"],e:`
<p>从Java 18开始，我们可以使用JEP 408中引入的简单Web服务器。我们可以通过命令行工具和API访问其功能。</p>
<p>简单Web服务器提供了一个基础的Web服务器，用于服务静态文件。它被描述为对测试、原型设计和教育非常有用。服务器故意设置得非常简单，并且不打算与Apache Tomcat或Jetty等更完全功能的选项竞争或取代。</p>
<p>引入该工具的目标之一是让开发人员尽可能少地设置障碍，快速开始Web开发。</p>
<p>在本教程中，我们将了解简单Web服务器及其工作原理。</p>
<p>启动服务器最简单和最直接的方法是使用提供的命令行工具。</p>
<h3>2.1. 启动</h3>`,r:{minutes:6.55,words:1964},t:"Java 18中的简单Web服务器教程",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Solving%20Rod%20Cutting%20Problem%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Solving Rod Cutting Problem in Java.html-BSxp2KOF.js"),__vite__mapDeps([70,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","算法"],g:["动态规划","递归"],e:`
<p>切割杆问题是一个经典的优化问题，它涉及到找到切割杆成段的最佳方式以最大化总收入。</p>
<p>在本教程中，我们将理解切割杆问题，并探索在Java中解决它的各种方法。</p>
<h3>2. 理解问题</h3>
<p>想象我们有一根长度为_n_的杆。我们可以将这根杆切割成不同长度的段，并将这些切割后的段出售。此外，我们拥有不同长度切割杆的价格表。我们的目标是最大化总收入。</p>
<p>例如，考虑一根长度为_n_=4的杆，价格_Pi_ = [1,5,8,9]。_Pi_数组表示长度为_i_的杆段的价格。这意味着：</p>
<p>P1 = 1 表示长度为1的杆段的价格是1单位。</p>
<p>P2 = 5 表示长度为2的杆段的价格是5单位。</p>`,r:{minutes:7.09,words:2128},t:"Java中解决切割杆问题",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Storing%20UUID%20as%20Base64%20String%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Storing UUID as Base64 String in Java.html-D7CnQW6X.js"),__vite__mapDeps([71,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","UUID"],g:["Base64","Encoding"],e:`
<p>使用Base64编码的字符串是存储通用唯一识别码（UUID）的广泛采用方法。与标准的UUID字符串表示相比，这提供了更紧凑的结果。在本文中，我们将探讨将UUID编码为Base64字符串的不同方法。</p>
<h2>2. 使用_byte[]_和_Base64.Encoder_进行编码</h2>
<p>我们将从使用_byte[]_和_Base64.Encoder_的最直接方法开始编码。</p>
<h3>2.1. 编码</h3>
<p>我们将从我们的UUID位创建一个字节数组。为此，我们将取UUID的最高有效位和最低有效位，并将它们分别放在数组的0-7和8-15位置：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">convertToByteArray</span><span class="token punctuation">(</span><span class="token class-name">UUID</span> uuid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">long</span> mostSignificantBits <span class="token operator">=</span> uuid<span class="token punctuation">.</span><span class="token function">getMostSignificantBits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">fillByteArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> result<span class="token punctuation">,</span> mostSignificantBits<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">long</span> leastSignificantBits <span class="token operator">=</span> uuid<span class="token punctuation">.</span><span class="token function">getLeastSignificantBits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">fillByteArray</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> result<span class="token punctuation">,</span> leastSignificantBits<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4.35,words:1305},t:"在Java中将UUID存储为Base64字符串",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Translating%20Space%20Characters%20in%20URLEncoder.html",{loader:()=>n(()=>import("./2024-06-22-Translating Space Characters in URLEncoder.html-CtqGpkVO.js"),__vite__mapDeps([72,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","URL编码"],g:["URLEncoder","编码","特殊字符"],e:`
<p>当在Java中使用URL时，确保它们被正确编码以避免错误并保持数据传输的准确性是至关重要的。URL可能包含特殊字符，包括空格，这些字符需要编码以实现在不同系统间的统一解释。</p>
<p>在本教程中，我们将探讨如何使用_URLEncoder_类在URL中处理空格。</p>
<h3>2. <strong>理解URL编码</strong></h3>
<p>URL不能直接包含空格。要包含它们，我们需要使用URL编码。</p>
<p>URL编码，也称为百分号编码，是一种将特殊字符和非ASCII字符转换为适合通过URL传输的格式的标准机制。</p>
<p>**在URL编码中，我们用百分号‘%’替换每个字符，然后是它的十六进制表示。**例如，空格表示为_%20_。这种做法确保了Web服务器和浏览器能够正确解析和解释URL，防止在数据传输过程中出现歧义和错误。</p>`,r:{minutes:3.1,words:930},t:"Java中URLEncoder转换空格字符",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Understanding%20%20Raw%20type.%20References%20to%20generic%20types%20should%20be%20parameterized%20%20Error.html",{loader:()=>n(()=>import("./2024-06-22-Understanding  Raw type. References to generic types should be parameterized  Error.html-B1Sgmfae.js"),__vite__mapDeps([73,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","编程"],g:["Raw Type","Java Generics"],e:`
<p>原始类型是Java中的一个高级主题。它需要对参数化类有良好的理解，但可能仍然令人困惑。幸运的是，IDE可以在我们出错时帮助我们。特别是Eclipse IDE会在我们出错时发出警告。</p>
<p>在本教程中，我们将检查这个警告以及缓解问题的步骤。</p>
<p>考虑以下代码：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>List strings = new ArrayList();
</code></pre></div><p>_List_和随后的_ArrayList_是参数化类型。我们可以在类声明中看到这一点：</p>`,r:{minutes:1.96,words:588},t:"理解“原始类型：应参数化引用泛型类型”错误 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-Understanding%20Kafka%20InstanceAlreadyExistsException%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-Understanding Kafka InstanceAlreadyExistsException in Java.html-CDu8ewY4.js"),__vite__mapDeps([74,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","Kafka"],g:["InstanceAlreadyExistsException","Kafka producer","Kafka consumer"],e:`
<p>Apache Kafka是一个功能强大的分布式流处理平台，广泛用于构建实时数据管道和流处理应用程序。然而，在操作过程中，Kafka可能会遇到各种异常和错误。其中一种常见的异常是_InstanceAlreadyExistsException_。</p>
<p>在本教程中，我们将探讨Kafka中这种异常的重要性，深入了解其根本原因以及Java应用程序的有效处理技术。</p>
<p>_InstanceAlreadyExistsException_是_java.lang.RuntimeException_类的子类。<strong>在Kafka的上下文中，这种异常通常在尝试使用与现有生产者或消费者相同的客户端ID创建Kafka生产者或消费者时出现。</strong></p>`,r:{minutes:7.2,words:2160},t:"Apache Kafka中InstanceAlreadyExistsException的解析",y:"a"}}],["/posts/baeldung/2024-06-22/2024-06-22-View%20Kafka%20Headers%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-22-View Kafka Headers in Java.html-Cj__siIQ.js"),__vite__mapDeps([75,1])),meta:{d:17190144e5,l:"2024年6月22日",c:["Java","Kafka"],g:["Apache Kafka","Kafka Headers","Java"],e:`
<p>Apache Kafka是一个分布式流处理平台，允许我们发布和订阅记录流，通常被称为消息。此外，Kafka消息头提供了一种将元数据附加到Kafka消息的方式，使得在消息处理中增加了额外的上下文和灵活性。</p>
<p>在本教程中，我们将深入探讨常用的Kafka消息头，并学习如何使用Java查看和提取它们。</p>
<p>Kafka消息头表示附加到Kafka消息的键值对，提供了一种在主要消息内容旁边包含补充元数据的方式。</p>
<p>例如，Kafka消息头通过提供数据来促进消息路由，将消息定向到特定的处理管道或消费者。此外，消息头在携带定制的应用程序元数据方面非常灵活，这些元数据适合应用程序的处理逻辑。</p>`,r:{minutes:4.01,words:1203},t:"Kafka消息头在Java中的查看",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Access%20Job%20Parameters%20From%20ItemReader%20in%20Spring%20Batch.html",{loader:()=>n(()=>import("./2024-06-23-Access Job Parameters From ItemReader in Spring Batch.html-CsvWmzQG.js"),__vite__mapDeps([76,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Spring Batch","Java"],g:["JobParameters","ItemReader"],e:`
<p>Spring Batch是一个功能强大的Java批处理框架，因此成为数据处理活动和计划作业运行的热门选择。根据业务逻辑的复杂性，作业可能依赖不同的配置值和动态参数。</p>
<p>在本文中，我们将探讨如何使用_JobParameters_以及如何从关键的批处理组件中访问它们。</p>
<h3>2.1. 依赖项</h3>
<p>要开始演示应用程序，<strong>我们需要添加Spring Batch和H2依赖项：</strong></p>
<h3>2.2. 准备测试数据</h3>
<p>让我们通过定义_schema-all.sql_中的模式开始：</p>
<h3>2.3. <em>Medicine</em> 领域类</h3>`,r:{minutes:3.01,words:903},t:"Spring Batch中从ItemReader访问作业参数",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Apply%20Bold%20Text%20Style%20for%20an%20Entire%20Row%20Using%20Apache%20POI.html",{loader:()=>n(()=>import("./2024-06-23-Apply Bold Text Style for an Entire Row Using Apache POI.html-I5xusa4X.js"),__vite__mapDeps([77,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Apache POI","Excel"],g:["教程","Java"],e:'\n<p>在这个快速教程中，我们将探索使用Apache POI库在Excel工作表中为整行应用粗体字体样式的有效方法。通过简单的例子和有价值的见解，我们将了解每种方法的细微差别。</p>\n<h2>2. 依赖性</h2>\n<p>让我们从编写和加载Excel文件所需的依赖性开始，poi：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`org.apache.poi`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`poi`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`5.2.5`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n</code></pre></div>',r:{minutes:4.37,words:1310},t:"使用Apache POI为整个行应用粗体文本样式",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Builder%20Pattern%20and%20Inheritance.html",{loader:()=>n(()=>import("./2024-06-23-Builder Pattern and Inheritance.html-B2A-yzyO.js"),__vite__mapDeps([78,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Software Engineering"],g:["Java","Design Pattern","Builder Pattern"],e:`
<p>在这个教程中，我们将学习在处理层次继承时实现建造者设计模式所面临的挑战。层次继承的一个例子可能是电动汽车、汽车和车辆之间的继承关系。</p>
<p>建造者模式是一种创建型设计模式，它通过方法链的帮助，以逐步过程简化了构建具有许多属性的复杂对象。虽然继承有助于简化设计，但它也导致了在建造者模式中实现方法链以创建对象时的复杂性。</p>
<p>此外，我们将通过Java泛型API的帮助，找到一个高效的实现方法。</p>
<h2>2. 问题描述</h2>
<p>让我们以在创建_Vehicle_、_Car_和_ElectricCar_类型对象时应用建造者模式为例：</p>
<p>在对象层次结构的顶部，有_Vehicle_类。<strong>类_Car_扩展了_Vehicle_，然后_ElectricCar_扩展了_Car_。类似于这些对象，它们的建造者在它们之间也有层次关系。</strong></p>`,r:{minutes:5.07,words:1520},t:"建造者模式与继承",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Calculate%20Number%20of%20Weekdays%20Between%20Two%20Dates%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Calculate Number of Weekdays Between Two Dates in Java.html-EIZKls07.js"),__vite__mapDeps([79,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","教程"],g:["工作日计算","Java日期操作"],e:`
<h2>1. 概述</h2>
<p>在本教程中，我们将探讨Java中计算两个日期之间工作日数量的两种不同方法。我们将看到一种使用_流_的可读版本，以及一种不那么易读但更高效的选项，它根本不进行循环。</p>
<h2>2. 使用_流_的全搜索</h2>
<p>首先，让我们看看如何使用_流_来实现。<strong>计划是循环遍历我们两个日期之间的每一天，并计算工作日</strong>：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>long getWorkingDaysWithStream(LocalDate start, LocalDate end){
    return start.datesUntil(end)
      .map(LocalDate::getDayOfWeek)
      .filter(day -&gt; !Arrays.asList(DayOfWeek.SATURDAY, DayOfWeek.SUNDAY).contains(day))
      .count();
}
</code></pre></div>`,r:{minutes:4.33,words:1299},t:"Java中计算两个日期之间工作日的数量 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Calculating%20the%20Power%20of%20Any%20Number%20in%20Java%20Without%20Using%20Math%20pow%20%20%20Method.html",{loader:()=>n(()=>import("./2024-06-23-Calculating the Power of Any Number in Java Without Using Math pow   Method.html-D-OLCAAH.js"),__vite__mapDeps([80,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","编程技巧"],g:["数学运算","递归","算法"],e:`
<h2>1. 引言</h2>
<p>计算一个数的幂是数学中的基本操作。虽然Java提供了方便的_Math.pow()_方法，但有时我们可能更倾向于实现自己的幂运算计算。</p>
<p><strong>在本教程中，我们将探索几种在Java中计算数的幂的方法，而不是依赖内置的方法。</strong></p>
<h2>2. 迭代方法</h2>
<p>通过迭代来计算一个数的幂是一种直接的方法。在这里，我们将指定次数地将基数乘以自身。一个简单的例子：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>double result = 1;
double base = 2;
int exponent = 3;

@Test
void givenBaseAndExponentNumbers_whenUtilizingIterativeApproach_thenReturnThePower() {
    for (int i = 0; i &lt; exponent; i++) {
        result *= base;
    }
    assertEquals(8, result);
}
</code></pre></div>`,r:{minutes:2.56,words:767},t:"Java中不使用Math.pow()方法计算任何数的幂",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Check%20if%20Two%20Date%20Ranges%20Overlap.html",{loader:()=>n(()=>import("./2024-06-23-Check if Two Date Ranges Overlap.html-CseC8H6s.js"),__vite__mapDeps([81,1])),meta:{d:1719168562e3,c:["REST with Spring Boot","Learn Spring Security"],g:["Persistence","REST","Security"],e:`<hr>
<h1>检查两个日期范围是否重叠 | Baeldung---</h1>
<p>date: {待获取页面更新日期}
category:</p>
<ul>
<li>与Spring Boot一起使用REST</li>
<li>学习Spring Security
tag:</li>
<li>持久性</li>
<li>REST</li>
<li>安全性
head:</li>
<li>
<ul>
<li>meta</li>
<li>name: keywords
content: Java, 日期范围, 重叠</li>
</ul>
</li>
</ul>
<hr>
<h1>检查两个日期范围是否重叠 | Baeldung</h1>`,r:{minutes:.34,words:101},t:"检查两个日期范围是否重叠 | Baeldung---",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Convert%20Gregorian%20to%20Hijri%20Date%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Convert Gregorian to Hijri Date in Java.html-3uH5NCqz.js"),__vite__mapDeps([82,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","日期转换"],g:["Gregorian","Hijri"],e:`<hr>
<h1>Java中将公历转换为回历日期</h1>
<h2>1. 概述</h2>
<p>公历和回历代表了两种不同的时间测量系统。</p>
<p>在本教程中，我们将探讨将公历日期转换为回历日期的各种方法。</p>
<h2>2. 公历与回历日历的区别</h2>
<p>让我们了解公历和回历日历之间的区别。公历遵循太阳年，由12个长度固定的月份组成。回历遵循月亮年，有12个月，每个月交替为29天和30天。</p>
<p>在回历中，每个月的长度取决于月亮绕地球完整旋转的周期。<strong>公历年包含365天或366天，而回历年有354天或355天。这意味着回历年比公历年大约短11天。</strong></p>`,r:{minutes:2.71,words:812},t:"Java中将公历转换为回历日期",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Convert%20Long%20to%20Date%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Convert Long to Date in Java.html-CnBjNldr.js"),__vite__mapDeps([83,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","日期时间"],g:["Java","日期转换","Instant","LocalDate","Joda-Time"],e:`
<p>在Java中处理日期时，我们经常看到日期/时间值以_long_值的形式表示，它表示自纪元（1970年1月1日，00:00:00 GMT）以来的天数、秒数或毫秒数。</p>
<p>在这个简短的教程中，我们将探索将_long_值转换为Java中的日期的不同方法。首先，我们将解释如何使用核心JDK类来完成这项操作。然后，我们将展示如何使用第三方Joda-Time库来实现相同的目标。</p>
<h2>2. 使用Java 8+的日期时间API</h2>
<p>Java 8因其引入的新的日期时间API而受到赞誉。这个API主要是为了覆盖旧日期API的缺点。那么，让我们仔细看看这个API为我们的中心问题提供了什么。</p>`,r:{minutes:3.57,words:1071},t:"Java中将long值转换为日期",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Convert%20String%20Date%20to%20XMLGregorianCalendar%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Convert String Date to XMLGregorianCalendar in Java.html-BlAmUKN_.js"),__vite__mapDeps([84,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","XMLGregorianCalendar"],g:["String Date Conversion","XML Schema"],e:`<hr>
<h1>Java中将字符串日期转换为XMLGregorianCalendar</h1>
<p>在本教程中，我们将探讨将字符串日期转换为XMLGregorianCalendar的各种方法。</p>
<p>XML Schema标准为在XML格式中指定日期定义了明确的规则。为了使用这种格式，Java类XMLGregorianCalendar在Java 1.5中引入，代表W3C XML Schema 1.0日期/时间数据类型。</p>
<p>javax.xml.datatype包中的DatatypeFactory类提供了创建各种XML模式内置类型的工厂方法。我们将使用这个类来生成XMLGregorianCalendar的新实例。</p>`,r:{minutes:2.96,words:888},t:"Java中将字符串日期转换为XMLGregorianCalendar",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Convert%20byte%20to%20int%20Type%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Convert byte to int Type in Java.html-Vd4ZcEXj.js"),__vite__mapDeps([85,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","编程"],g:["byte","int","转换"],e:`
<p>将byte转换为int是一个常见的操作，尤其是在处理低级数据操作、文件I/O或网络通信时。在本文中，我们将探索实现byte到int转换的各种方法。</p>
<p>在Java中，byte和int是基本数据类型，它们在表示数值时具有不同的目的。<strong>byte是一个8位的有符号数据类型，其值范围从-128到127。</strong> <strong>int数据类型是一个32位的有符号整数，比byte提供更宽的范围，从-2<sup>31到2</sup>31-1（-2,147,483,648到2,147,483,647）。</strong></p>
<h3>使用类型转换</h3>
<p>执行转换的最直接和常见的方法是简单地将byte变量类型转换为int变量：</p>`,r:{minutes:2.83,words:848},t:"Java中byte到int类型的转换",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Creating%20Unicode%20Character%20From%20Its%20Code%20Point%20Hex%20String.html",{loader:()=>n(()=>import("./2024-06-23-Creating Unicode Character From Its Code Point Hex String.html-DCy4UudV.js"),__vite__mapDeps([86,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","Unicode"],g:["Unicode","Java"],e:`
<p>Java对Unicode的支持使其能够轻松处理来自不同语言和脚本的字符。</p>
<p>在本教程中，我们将探索并学习如何在Java中从它们的编码点获取Unicode字符。</p>
<h3>2. 问题介绍</h3>
<p>Java的Unicode支持使我们能够快速构建国际化应用程序。让我们看几个例子：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">U_CHECK</span> <span class="token operator">=</span> <span class="token string">"✅"</span><span class="token punctuation">;</span> <span class="token comment">// U+2705</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">U_STRONG</span> <span class="token operator">=</span> <span class="token string">"强"</span><span class="token punctuation">;</span> <span class="token comment">// U+5F3A</span>
</code></pre></div>`,r:{minutes:3.58,words:1074},t:"从十六进制编码点字符串创建Unicode字符 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Custom%20JSON%20Deserialization%20Using%20Spring%20WebClient.html",{loader:()=>n(()=>import("./2024-06-23-Custom JSON Deserialization Using Spring WebClient.html-6HNsmVA6.js"),__vite__mapDeps([87,1])),meta:{d:17057088e5,l:"2024年1月20日",c:["Spring","WebFlux"],g:["Spring WebClient","JSON","Custom Deserialization"],e:`
<p>在本文中，我们将探讨自定义反序列化的需求以及如何使用Spring WebClient实现它。</p>
<h2>2. 为什么我们需要自定义反序列化？</h2>
<p>Spring WebFlux模块中的Spring WebClient通过_Encoder_和_Decoder_组件处理序列化和反序列化。<em>Encoder_和_Decoder_作为接口存在，代表读取和写入内容的合同。默认情况下，spring-core模块提供了_byte</em>[]、<em>ByteBuffer</em>、<em>DataBuffer</em>、_Resource_和_String_编码器和解码器实现。</p>`,r:{minutes:4.91,words:1472},t:"使用Spring WebClient自定义JSON反序列化",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Difference%20Between%20%20mvn%20verify%20%20and%20%20mvn%20test%20.html",{loader:()=>n(()=>import("./2024-06-23-Difference Between  mvn verify  and  mvn test .html-Dq-CeE28.js"),__vite__mapDeps([88,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","Maven"],g:["mvn verify","mvn test"],e:`
<p>Maven是Java开发的构建工具，理解其命令，特别是mvn verify和mvn test，对开发者至关重要。</p>
<p>在本教程中，我们将深入探讨这些命令，包括它们的区别和常见用例。</p>
<h2><strong>2. Maven理解</strong></h2>
<p>Maven是Java构建工具的基础，对简化开发过程至关重要。</p>
<p>它的主要职责包括：</p>
<ul>
<li>依赖管理，确保所有必要的组件自动获取并集成到项目中</li>
<li>执行测试，这是维护代码质量的关键步骤</li>
<li>高效地打包Java应用程序，准备分发</li>
<li>发布最终构件，这有助于部署步骤</li>
</ul>`,r:{minutes:4.91,words:1472},t:"Maven中的“mvn verify”与“mvn test”的区别",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Difference%20Between%20mvn%20install%20and%20mvn%20verify.html",{loader:()=>n(()=>import("./2024-06-23-Difference Between mvn install and mvn verify.html-DWYNk_hF.js"),__vite__mapDeps([89,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Maven","构建工具"],g:["mvn install","mvn verify"],e:`<hr>
<h1>Apache Maven 中 mvn install 与 mvn verify 的区别</h1>
<p>Apache Maven 是一个强大的构建管理工具，它为项目构建生命周期提供了结构化的方式。Maven 构建由生命周期组成，这些生命周期明确定义了项目的构建和分发方式。</p>
<p>在构建过程中，两个非常有用的命令是 <em>mvn install</em> 和 <em>mvn verify</em>。在本教程中，我们将比较和对比这两个命令，理解它们之间的区别。</p>
<h2>2. Maven 生命周期</h2>
<p>Maven 定义了三个标准生命周期 — 清洁（clean）、默认（default）和站点（site） — 每个都有不同的目的：</p>`,r:{minutes:4.47,words:1342},t:"Apache Maven 中 mvn install 与 mvn verify 的区别",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Difference%20between%20ZoneOffset.UTC%20and%20ZoneId.of%20%20UTC%20%20.html",{loader:()=>n(()=>import("./2024-06-23-Difference between ZoneOffset.UTC and ZoneId.of  UTC  .html-BrUpR2WJ.js"),__vite__mapDeps([90,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","编程"],g:["时间","时区"],e:`
<p>时间日期信息在Java中必须准确处理，这涉及到时区的管理。ZoneOffset.UTC和ZoneId.of("UTC")是两种标准方法，我们可以用它们来表示协调世界时（UTC）。尽管两者看起来都像是UTC，但它们有一些不同。</p>
<p>在本教程中，我们将概述这两种方法、它们之间的主要差异以及使用场景。</p>
<h3>2. ZoneOffset.UTC</h3>
<p>自Java 8引入的java.time包提供了诸如ZoneId和ZoneOffset这样的类，我们可以用它们来表示时区。ZoneOffset.UTC是ZoneOffset类的一个常量成员。它表示UTC的固定偏移量，始终是+00:00。这意味着无论季节如何变化，UTC都是相同的。</p>`,r:{minutes:2.13,words:638},t:'Java中的ZoneOffset.UTC与ZoneId.of("UTC")的区别',y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Enable%20Java%20SSL%20Debug%20Logging.html",{loader:()=>n(()=>import("./2024-06-23-Enable Java SSL Debug Logging.html-NYF8nLWs.js"),__vite__mapDeps([91,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","SSL"],g:["SSL Debug","Java Secure Socket Layer"],e:`
<p>Java安全套接字层（SSL）调试对于开发者和管理员来说至关重要，它有助于诊断和解决应用程序中与建立安全连接相关的问题。启用SSL调试可以提供关于握手过程、密码套件协商以及其他安全相关活动的洞察。</p>
<p>在本教程中，我们将通过一系列实践示例探索启用Java SSL调试的各种方法。</p>
<p>SSL/TLS协议是保护互联网上数据传输的基础。</p>
<p>在应用程序中使用这些协议时，我们可以使用SSL调试来增强我们系统中SSL保护通信的安全性和效率。它可以帮助我们的方式包括：</p>
<ul>
<li>识别异常，如证书不匹配和连接失败</li>
<li>监控恶意活动</li>
<li>确保我们使用适当的加密算法实现</li>
<li>优化性能</li>
</ul>`,r:{minutes:3.99,words:1198},t:"启用Java SSL调试日志",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Event%20Driven%20Microservices%20With%20Orkes%20Conductor.html",{loader:()=>n(()=>import("./2024-06-23-Event Driven Microservices With Orkes Conductor.html-Bnh_wbgP.js"),__vite__mapDeps([92,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Microservices","Event-Driven Architecture"],g:["Orkes Conductor","Spring"],e:`
<p>在这个教程中，我们将探讨如何使用Orkes Conductor和Spring构建事件驱动的微服务。我们将使用Conductor来使用HTTP端点和服务工作器编排微服务。</p>
<p>微服务提供了一种很好的方式，可以创建一个可以独立扩展和管理的模块化架构。开发人员通常将微服务设计为单一责任服务，这些服务在执行一件事情上表现得非常出色。然而，应用程序流程通常需要跨多个微服务进行协调以实现业务目标。</p>
<p>事件驱动架构通过事件系统在微服务之间进行通信，确保流程的可扩展性和持久性。由于这些原因，事件驱动的微服务最近变得非常流行，特别是在实现异步流程时特别有用。</p>
<h3>2.1. 事件驱动系统的不足</h3>`,r:{minutes:6.82,words:2045},t:"使用Orkes Conductor构建事件驱动的微服务",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Event%20Externalization%20with%20Spring%20Modulith.html",{loader:()=>n(()=>import("./2024-06-23-Event Externalization with Spring Modulith.html-ukTj3iFq.js"),__vite__mapDeps([93,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Spring Modulith","Event Externalization"],g:["Spring","Kafka","Event-Driven"],e:`
<p>在本文中，我们将讨论在 <code>@Transactional</code> 块内发布消息的需求以及相关的性能挑战，例如延长的数据库连接时间。为了解决这个问题，我们将利用 Spring Modulith 的特性来监听 Spring 应用程序事件，并自动将它们发布到 Kafka 主题。</p>
<h2>2. 事务性操作和消息代理</h2>
<p>对于本文的代码示例，我们假设我们正在编写负责在 Baeldung 上保存 <code>Article</code> 的功能：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">class</span> <span class="token class-name">Baeldung</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ArticleRepository</span> articleRepository<span class="token punctuation">;</span>

    <span class="token comment">// 构造函数</span>

    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createArticle</span><span class="token punctuation">(</span><span class="token class-name">Article</span> article<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">validateArticle</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span><span class="token punctuation">;</span>
        article <span class="token operator">=</span> <span class="token function">addArticleTags</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// ...其他业务逻辑</span>

        articleRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:9.25,words:2774},t:"Spring Modulith中的事件外部化",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Generating%20Unique%20Positive%20Long%20Using%20SecureRandom%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Generating Unique Positive Long Using SecureRandom in Java.html-3ipqAq5I.js"),__vite__mapDeps([94,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","SecureRandom"],g:["SecureRandom","随机数生成"],e:`
<h2>1. 概述</h2>
<p>在<code>java.security</code>包中的<code>SecureRandom</code>类是专门为密码学目的和关键安全场景设计的，使用算法确保高度不可预测性。</p>
<p>在本教程中，我们将讨论如何使用<code>SecureRandom</code>生成一个唯一的正<code>long</code>值，并探讨在生成多个值时碰撞的安全性。</p>
<h2>2. 使用<code>nextLong()</code>方法</h2>
<p><code>SecureRandom</code>的<code>nextLong()</code>方法返回一个<code>long</code>类型的值，这是一个随机的64位数字。这些值在极其广泛的范围内随机分布，从<code>Long.MIN_VALUE</code>（-2<sup>63）到\`Long.MAX_VALUE\`（2</sup>63 - 1）。</p>`,r:{minutes:2.2,words:661},t:"使用Java SecureRandom生成唯一的正Long值",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-How%20to%20Catch%20Deserialization%20Errors%20in%20Spring%20Kafka%20.html",{loader:()=>n(()=>import("./2024-06-23-How to Catch Deserialization Errors in Spring Kafka .html-CPydBUFa.js"),__vite__mapDeps([95,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Spring Boot","Kafka"],g:["Spring-Kafka","Deserialization"],e:`
<p>无论你是刚开始学习还是拥有多年的经验，Spring Boot显然是构建Web应用程序的绝佳选择。Jmix建立在这个功能强大且成熟的Boot堆栈之上，允许开发人员构建并交付全栈Web应用程序，而无需编写前端代码。非常灵活，从简单的Web GUI CRUD应用程序到复杂的企业解决方案。</p>
<p>具体来说，Jmix平台包括一个构建在Spring Boot、JPA和Vaadin之上的框架，并附带Jmix Studio，这是一个IntelliJ IDEA插件，配备了一套开发人员生产力工具。</p>
<p>平台提供了相互连接的即用型插件，用于报告生成、BPM、地图、从数据库即时生成Web应用程序等：</p>`,r:{minutes:7.4,words:2221},t:"如何在Spring-Kafka中捕获反序列化错误？",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-How%20to%20Determine%20if%20a%20String%20Contains%20Invalid%20Encoded%20Characters.html",{loader:()=>n(()=>import("./2024-06-23-How to Determine if a String Contains Invalid Encoded Characters.html-Dgrh4TOb.js"),__vite__mapDeps([96,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","编码"],g:["字符串","UTF-8","ISO-8859-1"],e:`
<p>无效编码的字符可能会导致各种问题，包括数据损坏和安全漏洞。因此，在处理字符串时确保数据正确编码至关重要。特别是当处理如UTF-8或ISO-8859-1这样的字符编码时。</p>
<p>在本教程中，我们将介绍如何确定Java字符串是否包含无效编码字符。我们将任何非ASCII字符视为无效。</p>
<h2>2. Java中的字符编码</h2>
<p>Java支持多种字符编码。此外，《Charset》类提供了处理它们的方法——最常见的编码是UTF-8和ISO-8859-1。</p>
<p>让我们举一个例子：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> input <span class="token operator">=</span> <span class="token string">"Hеllo, World!"</span><span class="token punctuation">;</span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> utf8Bytes <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> utf8String <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>utf8Bytes<span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:2.44,words:733},t:"如何确定字符串是否包含无效编码字符",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-How%20to%20Find%20the%20URL%20of%20a%20Service%20in%20Kubernetes.html",{loader:()=>n(()=>import("./2024-06-23-How to Find the URL of a Service in Kubernetes.html-DDS_oSbx.js"),__vite__mapDeps([97,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Kubernetes","Networking"],g:["Service URL","ClusterIP","NodePort","LoadBalancer"],e:`<hr>
<h1>如何在Kubernetes中找到服务的URL</h1>
<p>网络是Kubernetes不可或缺的一部分，而"Service"是其基础网络对象之一。Kubernetes "Service"允许我们将网络应用程序暴露给外部世界。然而，为了访问它，我们必须知道它的URL。</p>
<p>在本实践教程中，我们将讨论如何找到并使用Kubernetes服务的URL作为可靠的网络端点。</p>
<h2>2. 设置示例</h2>
<p>我们需要创建一些Kubernetes对象作为示例。首先，让我们创建"Namespace"对象。</p>
<h3>2.1. 创建Kubernetes命名空间</h3>`,r:{minutes:7.08,words:2124},t:"如何在Kubernetes中找到服务的URL",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Improving%20Test%20Coverage%20and%20Readability%20With%20Spock%20s%20Data%20Pipes%20and%20Tables.html",{loader:()=>n(()=>import("./2024-06-23-Improving Test Coverage and Readability With Spock s Data Pipes and Tables.html-_ScfX4uf.js"),__vite__mapDeps([98,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","Spock"],g:["测试覆盖率","数据管道"],e:`
<p>Spock是编写测试的一个很好的框架，特别是在提高测试覆盖率方面。</p>
<p>在本教程中，我们将探讨Spock的数据管道以及如何通过向数据管道添加额外数据来提高我们的行和分支代码覆盖率。我们还将看看当数据变得太大时该怎么办。</p>
<h2>2. 我们测试的主题</h2>
<p>让我们从一个添加两个数字的方法开始，但有一个转折。如果第一个或第二个数字是42，则返回42：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataPipesSubject</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token function">addWithATwist</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token keyword">int</span> first<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">int</span> second<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">==</span> <span class="token number">42</span> <span class="token operator">||</span> second <span class="token operator">==</span> <span class="token number">42</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">42</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> first <span class="token operator">+</span> second<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:10.17,words:3050},t:"使用Spock的数据管道和表格提高测试覆盖率和可读性",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Introduction%20to%20KotlinPoet.html",{loader:()=>n(()=>import("./2024-06-23-Introduction to KotlinPoet.html-dfP794df.js"),__vite__mapDeps([99,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Kotlin","Programming"],g:["KotlinPoet","Code Generation"],e:`
<p>在本文中，我们将深入了解 KotlinPoet。我们将了解它是什么，我们可以用它做什么，以及如何使用它。</p>
<h2>2. KotlinPoet 是什么？</h2>
<p><strong>KotlinPoet 是一个开源库，用于生成 Kotlin 源代码。</strong> 由 Square 维护，它是 JavaPoet 库的 Kotlin 版本。</p>
<p>与 Asm 等工具不同，KotlinPoet 生成的是原始的、未编译的源代码。这需要在直接执行之前进行编译。然而，根据我们的需求，这可能更有用和强大——例如，在构建过程中或在 IDE 内部进行代码生成。</p>
<p>KotlinPoet 生成了 Kotlin 程序中的大部分主要结构——类、字段、方法、注解等。因此，我们可以程序性地生成从单行代码到整个源文件的任何内容。</p>`,r:{minutes:6.16,words:1849},t:"KotlinPoet 简介",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Introduction%20to%20gRPC%20with%20Spring%20Boot.html",{loader:()=>n(()=>import("./2024-06-23-Introduction to gRPC with Spring Boot.html-BQAF2Hp9.js"),__vite__mapDeps([100,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Spring Boot","gRPC"],g:["Baeldung","教程"],e:`
<p>无论你是刚开始学习还是拥有多年经验，<strong>Spring Boot</strong> 显然是构建一个web应用程序的极佳选择。</p>
<p>Jmix基于这个功能强大且成熟的Boot堆栈，允许开发者在不需要编写前端代码的情况下构建和交付<strong>全栈web应用程序</strong>。非常灵活，从简单的web GUI CRUD应用程序到复杂的企业解决方案。</p>
<p>具体来说，<strong>Jmix平台</strong>包括一个构建在<strong>Spring Boot、JPA和Vaadin</strong>之上的框架，并附带Jmix Studio，这是一个配备了一系列开发者生产力工具的<strong>IntelliJ IDEA插件</strong>。</p>`,r:{minutes:6.22,words:1867},t:"gRPC与Spring Boot入门指南",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-JFR%20View%20Command%20in%20Java%2021.html",{loader:()=>n(()=>import("./2024-06-23-JFR View Command in Java 21.html-Dpjd_FYE.js"),__vite__mapDeps([101,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","编程"],g:["Java Flight Recorder","JFR","Java 21"],e:`
<h2>1. 引言</h2>
<p>Java Flight Recorder（JFR）是一个监控 JVM 及其上运行程序的性能分析和诊断工具。这是一个开发者用来监控其应用程序状态和性能的实用工具。</p>
<p>本教程将重点介绍 Java 21 中为 JFR 新引入的 <em>view</em> 命令。</p>
<h2>2. Java Flight Recorder (JFR)</h2>
<p>Java Flight Recorder（JFR）是一个在 Java 7 中引入的低开销应用程序分析框架，作为实验性特性。它允许我们分析和理解我们程序的重要指标，例如垃圾收集模式、IO 操作、内存分配等。</p>`,r:{minutes:5.69,words:1707},t:"Java Flight Recorder (JFR) 视图命令在 Java 21 中的使用 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-List%20vs.%20Set%20in%20%20OneToMany%20JPA.html",{loader:()=>n(()=>import("./2024-06-23-List vs. Set in  OneToMany JPA.html-9CT1sH5X.js"),__vite__mapDeps([102,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Spring JPA","Hibernate"],g:["List vs. Set","OneToMany"],e:`
<p>Spring JPA和Hibernate为与数据库的无缝通信提供了强大的工具。然而，随着客户端将更多的控制权委托给框架，包括查询生成，结果可能远非我们所期望的。</p>
<p>通常在to-many关系中使用_Lists_还是_Sets_存在混淆。<strong>这种混淆通常因为Hibernate为其bags、lists和sets使用相似的名称，但背后的含义略有不同而被放大。</strong></p>
<p>在大多数情况下，_Sets_更适合_one-to-many_或_many-to-many_关系。<strong>然而，它们有特定的性能影响，我们应该意识到这一点。</strong></p>`,r:{minutes:9.31,words:2794},t:"Spring JPA中@OneToMany关系中的List与Set对比 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Looking%20for%20a%20Backend%20Java%20Spring%20Team%20Lead%20with%20Integration%20Experience%20%20Remote%20%20%20Part%20Time%20%20%20%20not%20open.html",{loader:()=>n(()=>import("./2024-06-23-Looking for a Backend Java Spring Team Lead with Integration Experience  Remote   Part Time    not open.html-WjmlfRq-.js"),__vite__mapDeps([103,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Backend Java/Spring Team Lead","Remote Job"],g:["Part Time","Integration Experience"],e:`
<p><strong>此职位目前不开放。</strong></p>
<h3>关于我们</h3>
<p>Baeldung 是一家专注于编程领域的学习和媒体公司。我们是一支灵活的、完全远程的团队。</p>
<h3>职位描述</h3>
<p>我们正在寻找一位<strong>高级Java开发人员</strong>，理想情况下具有第三方应用程序/API集成的经验，加入并帮助指导团队，同时管理基于核心Java、Spring和Spring Boot的现有代码。</p>
<p>该职位包括处理需求分析、审查开发团队的工作、在开发团队内提供技术指导以及改进代码库。在非技术方面，良好的英语水平也很重要。</p>
`,r:{minutes:2.57,words:771},t:"寻找具有集成经验的后端Java/Spring团队领导（远程）（兼职）- 职位已关闭 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Monkey%20Patching%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Monkey Patching in Java.html-D2CcTnFq.js"),__vite__mapDeps([104,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","编程"],g:["动态代理","AOP","装饰者模式","反射"],e:`
<p>在软件开发中，我们经常需要调整和增强系统的现有功能。有时候，修改现有代码库可能不可行，或者不是最实际的解决方案。解决这个问题的一个方法是<strong>猴子补丁</strong>。这种技术允许我们在不改变原始源代码的情况下，在运行时修改一个类或模块。</p>
<p>本文将探讨如何在Java中使用猴子补丁，我们何时应该使用它，以及它的弊端。</p>
<p>猴子补丁这个术语起源于早期的术语“游击补丁”，指的是在没有任何规则的情况下在运行时偷偷地更改代码。由于动态编程语言的灵活性，如Java、Python和Ruby，它变得流行起来。</p>
<p>猴子补丁使我们能够在运行时修改或扩展类或模块。这允许我们在不需要直接修改源代码的情况下调整或增加现有代码。当调整是必要的，但由于各种限制，直接修改是不可行或不可取的时候，它特别有用。</p>`,r:{minutes:8.09,words:2426},t:"Java中的猴子补丁",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-N%201%20Problem%20in%20Hibernate%20and%20Spring%20Data%20JPA.html",{loader:()=>n(()=>import("./2024-06-23-N 1 Problem in Hibernate and Spring Data JPA.html-BCHPVO_S.js"),__vite__mapDeps([105,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Hibernate","Spring Data JPA"],g:["N+1 Problem","数据库优化"],e:`
<p>Spring JPA和Hibernate提供了一个强大的工具，用于与数据库无缝通信。然而，由于客户端将更多的控制权委托给框架，生成的查询可能远非最优。</p>
<p>在本教程中，我们将回顾在使用Spring JPA和Hibernate时常见的N+1问题，并检查可能导致问题的不同情况。</p>
<p>为了更好地可视化这个问题，我们需要概述实体之间的关系。让我们以一个简单的社交网络平台为例，其中只有用户和帖子：</p>
<p>我们在使用图表中的_Iterable_，并为每个示例提供具体实现：<em>List_或_Set</em>。</p>
<p>为了测试请求的数量，我们将使用专用库而不是检查日志。然而，我们将参考日志以更好地理解请求的结构。</p>`,r:{minutes:5.51,words:1653},t:"Hibernate和Spring Data JPA中的N+1问题",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Normalize%20a%20URL%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Normalize a URL in Java.html-D7tBXRYX.js"),__vite__mapDeps([106,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","Web开发"],g:["URL规范化","Java","Apache Commons Validator","URI类","正则表达式"],e:`
<h2>1. 引言</h2>
<p>统一资源定位符（URLs）是Web开发的重要组成部分，它们帮助定位和获取互联网上的资源。然而，URLs可能存在不一致或格式错误，这可能导致处理和获取所需材料时出现问题。</p>
<p>URL规范化是将给定的数据转换为规范形式，确保一致性并促进操作性。</p>
<h2>2. 手动规范化</h2>
<p>执行手动规范化涉及应用自定义逻辑来标准化URLs。这个过程包括删除不必要的元素，如不必要的查询参数和片段标识符，将URLs蒸馏到其核心本质。假设我们有以下URL：</p>
<p><em>https://www.example.com:8080/path/to/resource?param1=value1&amp;param2=value2#fragment</em></p>`,r:{minutes:3.23,words:968},t:"Java中URL规范化",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Print%20a%20Java%202D%20Array.html",{loader:()=>n(()=>import("./2024-06-23-Print a Java 2D Array.html-CED8VJsn.js"),__vite__mapDeps([107,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","编程"],g:["2D数组","打印"],e:`
<h2>1. 概述</h2>
<p>在本教程中，我们将熟悉一些打印2D数组的方法，以及它们的时间和空间复杂度。</p>
<h2>2. 打印2D数组的常见方式</h2>
<p>Java，作为一种多功能的编程语言，提供了多种处理和操作数组的方法。特别是2D数组，为数据提供了一种方便的网格化组织和存储方式。打印2D数组是一个常见的操作，Java提供了几种方法来完成这项任务。</p>
<h3>2.1. <strong>使用嵌套循环</strong></h3>
<p><strong>最直接的方法涉及使用嵌套循环来遍历2D数组的行和列</strong>。这种方法简单直观，是基本数组打印的不错选择。让我们看看实现方式：</p>`,r:{minutes:4.02,words:1205},t:"Java 2D 数组打印方法",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Read%20and%20Write%20Files%20in%20Java%20Using%20Separate%20Threads.html",{loader:()=>n(()=>import("./2024-06-23-Read and Write Files in Java Using Separate Threads.html-B1_QZujp.js"),__vite__mapDeps([108,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","多线程"],g:["Java","多线程","文件读写"],e:`
<ol>
<li>引言</li>
</ol>
<p>在Java中处理文件时，如果不引起性能问题地管理大文件可能会是一个挑战。这正是使用单独线程的概念发挥作用的地方。<strong>通过使用单独的线程，我们可以有效地读写文件而不阻塞主线程。</strong> 在本教程中，我们将探讨如何使用单独的线程来读写文件。</p>
<ol start="2">
<li>为什么使用单独的线程</li>
</ol>
<p>使用单独的线程进行文件操作可以通过允许任务的并发执行来提高性能。在单线程程序中，文件操作是顺序执行的。例如，我们首先读取整个文件，然后写入另一个文件。这可能特别耗时，尤其是对于大文件。</p>`,r:{minutes:7.01,words:2104},t:"Java中使用不同线程读写文件",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Regular%20Expression%20for%20Password%20Validation%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Regular Expression for Password Validation in Java.html-BWnUs-10.js"),__vite__mapDeps([109,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","正则表达式"],g:["密码验证","正则表达式"],e:`
<h2>1. 引言</h2>
<p>在网络安全方面，密码验证对于保护用户账户至关重要。此外，Java中的正则表达式（regex）提供了一种强大且灵活的方式来强制实施特定的密码复杂性标准。</p>
<p><strong>在本教程中，我们将深入探讨如何利用正则表达式进行基于Java的密码验证过程。</strong></p>
<h2>2. 强密码的标准</h2>
<p>在我们进入代码之前，我们将确定什么构成了一个强密码。理想的密码应该：</p>
<ul>
<li>至少有八个字符</li>
<li>包含一个大写字母</li>
<li>使用至少一个小写字母</li>
<li>至少包含一个数字</li>
<li>需要有一个特殊符号（即@, #, $, %等）</li>
<li>不包含空格、制表符等</li>
</ul>`,r:{minutes:4.19,words:1257},t:"Java中使用正则表达式进行密码验证",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Reset%20ListIterator%20to%20First%20Element%20of%20the%20List%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Reset ListIterator to First Element of the List in Java.html-DJmLLddZ.js"),__vite__mapDeps([110,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","ListIterator"],g:["Java","ListIterator","编程"],e:`
<p>当我们使用Java进行编程时，高效地遍历集合是一个常见的需求。在处理列表时，_ListIterator_接口提供了一个强大的工具，用于双向遍历。然而，在某些情况下，将_ListIterator_重置到列表的第一个元素变得必要。</p>
<p>在本教程中，我们将探讨在Java中将_ListIterator_重置到列表开头的各种方法。</p>
<h2>2. 问题介绍</h2>
<p>像往常一样，我们通过一个例子来理解问题。</p>
<p>假设我们有一个字符串列表：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span>\`\`\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>\`\`\` <span class="token constant">MY_LIST</span> <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">,</span> <span class="token string">"E"</span><span class="token punctuation">,</span> <span class="token string">"F"</span><span class="token punctuation">,</span> <span class="token string">"G"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:2.85,words:856},t:"Java中重置ListIterator到列表的第一个元素",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Rotate%20a%20Vertex%20Around%20a%20Certain%20Point%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Rotate a Vertex Around a Certain Point in Java.html-BDI1tR9v.js"),__vite__mapDeps([111,1])),meta:{d:1719161353e3,c:["REST with Spring Boot","Learn Spring Security"],g:["Persistence","REST","Security"],e:`
<p>date: 2024-06-24
category:</p>
<ul>
<li>REST with Spring Boot</li>
<li>Learn Spring Security
tag:</li>
<li>Persistence</li>
<li>REST</li>
<li>Security
head:</li>
<li>
<ul>
<li>meta</li>
<li>name: keywords
content: Java, 旋转顶点, 特定点, 算法</li>
</ul>
</li>
</ul>
<hr>
<h1>在Java中围绕特定点旋转顶点</h1>
<p>开始这里</p>`,r:{minutes:.95,words:285},t:"在Java中围绕特定点旋转顶点---",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Run%20Length%20Encoding%20and%20Decoding%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Run Length Encoding and Decoding in Java.html-7hjH05JU.js"),__vite__mapDeps([112,1])),meta:{d:1719107178e3,c:["Java","数据压缩"],g:["Run-Length Encoding","Java"],e:`
<h2>1. 概述</h2>
<p>在计算机科学中，数据压缩技术在优化存储和传输效率方面扮演着重要角色。其中一种历经时间考验的技术是游程编码（Run-length Encoding，简称RLE）。</p>
<p>在本教程中，我们将理解RLE，并探索如何在Java中实现编码和解码。</p>
<h2>2. 理解游程编码</h2>
<p>游程编码是一种简单但有效的无损数据压缩形式。RLE的基本思想是<strong>通过单个值及其计数来表示数据流中连续相同的元素，即“游程”</strong>，而不是按原始游程表示。</p>
<p>这在处理重复序列时特别有用，因为它显著减少了存储或传输数据所需的空间量。</p>`,r:{minutes:6.46,words:1939},t:"Java中的游程编码及其解码",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Set%20an%20Environment%20Variable%20at%20Runtime%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Set an Environment Variable at Runtime in Java.html-6M3hKj-I.js"),__vite__mapDeps([113,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","Environment Variables"],g:["Java","Environment Variables","Runtime","Testing"],e:`
<p>Java提供了一种简单的与环境变量交互的方式。我们可以访问它们，但不容易改变它们。然而，在某些情况下，我们需要更多地控制环境变量，特别是在测试场景中。</p>
<p>在本教程中，我们将学习如何解决这个问题，并以编程方式设置或更改环境变量。<strong>我们只会讨论在测试上下文中使用它。</strong> 使用动态环境变量进行领域逻辑应该被劝阻，因为它容易出现问题。</p>
<h2>2. 访问环境变量</h2>
<p>访问环境变量的过程非常简单。_System_类为我们提供了这样的功能：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">givenOS_whenGetPath_thenVariableIsPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> classPath <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"PATH"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assertThat</span><span class="token punctuation">(</span>classPath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:5.75,words:1726},t:"在Java中在运行时设置环境变量",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Setting%20up%20and%20Using%20Spock%20With%20Gradle.html",{loader:()=>n(()=>import("./2024-06-23-Setting up and Using Spock With Gradle.html-BzQAg_9p.js"),__vite__mapDeps([114,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","Spock"],g:["Spock","Gradle"],e:`
<h2>1. 概述</h2>
<p>Spock 框架是用于 Java 和 Groovy 应用程序的测试和规范框架。Gradle 是一个流行的构建工具，是 Maven 的替代品。</p>
<p>在本教程中，我们将展示如何使用 Gradle 设置项目并添加 Spock 测试依赖项。我们还将快速查看并逐步完全集成 Spock 与 Spring，同时仍使用 Gradle 构建过程。</p>
<p>我们需要创建一个 Gradle 项目并添加 Spock 依赖项。</p>
<h3>2.1. 设置 Gradle 项目</h3>
<p>首先，让我们在系统上安装 Gradle。然后可以使用 <em>gradle init</em> 命令初始化 Gradle 项目。创建应用程序或库的不同选项，例如使用 Java 或 Kotlin。</p>`,r:{minutes:5.07,words:1521},t:"Spock 与 Gradle 的设置和使用",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Shutting%20Down%20on%20OutOfMemoryError%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Shutting Down on OutOfMemoryError in Java.html-D0t2a0FI.js"),__vite__mapDeps([115,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","内存管理"],g:["OutOfMemoryError","多线程"],e:`
<p>维护应用程序的一致性状态比保持其运行更为重要，这在大多数情况下都是正确的。</p>
<p>在本教程中，我们将学习如何在出现_OutOfMemoryError_时显式停止应用程序。在某些情况下，如果没有正确的处理，我们可能会继续使用应用程序处于不正确的状态。</p>
<p>_OutOfMemoryError_是应用程序外部的错误，并且在大多数情况下是无法恢复的。错误的名字暗示应用程序没有足够的RAM，这并不完全正确。<strong>更准确地说，应用程序无法分配请求的内存量。</strong></p>
<p>在单线程应用程序中，情况相当简单。**如果我们遵循指南并且不捕获_OutOfMemoryError_，应用程序将终止。**这是处理此错误的预期方式。</p>`,r:{minutes:4.66,words:1398},t:"在Java中遇到OutOfMemoryError时的关闭操作",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Simple%20Morse%20Code%20Translation%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Simple Morse Code Translation in Java.html-CSXsU9cF.js"),__vite__mapDeps([116,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","Morse Code"],g:["Morse Code","Translation","Java"],e:`
<h2>1. 概述</h2>
<p>摩斯电码使用点和划的序列来表示字母、数字和标点符号。Samuel Morse 和 Alfred Vail 在 19 世纪 30 年代初为电报使用而开发了它。</p>
<p>在本教程中，我们将编写一个方法，将英文翻译成摩斯电码。然后，我们将编写一个相反的方法。</p>
<h2>2. 编写摩斯电码</h2>
<p>让我们了解摩斯电码及其字母表。</p>
<h3>2.1. 什么是摩斯电码？</h3>
<p><strong>在摩斯电码中，每个字母由独特的短信号（点）和长信号（划）组合表示</strong>，允许通过一系列开关信号进行通信。根据常见用法，我们将用“ <em>.</em>”表示点，用“ <em>–</em>”表示划。这两个字符足以写出整个摩斯字母表。</p>`,r:{minutes:5.43,words:1629},t:"简单的摩斯电码翻译在Java中 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Structured%20Logging%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Structured Logging in Java.html-D-CwJ5yR.js"),__vite__mapDeps([117,1])),meta:{d:17191008e5,l:"2024年6月23日",c:["Java","编程"],g:["日志记录","结构化日志"],e:`
<p>应用程序日志是排查问题、测量性能或仅仅是检查软件应用程序行为的重要资源。</p>
<p>在本教程中，我们将学习如何在Java中实现结构化日志记录以及这种技术相对于非结构化日志记录的优势。</p>
<h2>2. 结构化日志与非结构化日志的比较</h2>
<p>在深入代码之前，让我们了解非结构化和结构化日志之间的主要区别。</p>
<p>非结构化日志是打印出的信息，具有一致的格式但没有结构。它只是一段文本，其中一些变量被连接和格式化。</p>
<p>让我们看一个来自演示Spring应用程序的非结构化日志示例：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>22:25:48.111 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 1 JPA repository interfaces.
</code></pre></div>`,r:{minutes:6.9,words:2070},t:"Java中的结构化日志记录",y:"a"}}],["/posts/baeldung/2024-06-23/2024-06-23-Using%20Current%20Time%20as%20Filename%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-23-Using Current Time as Filename in Java.html-BvkoIpp1.js"),__vite__mapDeps([118,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","编程"],g:["Java","文件名","当前时间"],e:`
<p>在本教程中，我们将探讨Java中获取当前时间戳值的几种方法，并将其用作文件名。为了实现我们的目标，我们将利用Java DateTime API中的几个类以及第三方库如Joda-Time。</p>
<h2>2. 初始设置</h2>
<p>在后续部分，我们将构建几个测试用例，展示每种获取当前时间戳并将其用作文件名的方法。</p>
<p>然而，为了将时间戳值转换为指定的字符串格式，我们首先需要指定时间戳格式，然后使用它来定义格式化器类：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">TIMESTAMP_FORMAT</span> <span class="token operator">=</span> <span class="token string">"yyyyMMddHHmmss"</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">DateTimeFormatter</span> <span class="token constant">DATETIME_FORMATTER</span> <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token constant">TIMESTAMP_FORMAT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">SimpleDateFormat</span> <span class="token constant">SIMPLEDATE_FORMAT</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token constant">TIMESTAMP_FORMAT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:4.91,words:1472},t:"使用Java中的当前时间作为文件名",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Accessing%20Private%20Java%20Fields%20via%20Kotlin%20Extension%20Functions.html",{loader:()=>n(()=>import("./2024-06-24-Accessing Private Java Fields via Kotlin Extension Functions.html-D5f6joim.js"),__vite__mapDeps([119,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Kotlin","Java"],g:["Extension Functions","Private Fields"],e:`
<hr>
<p>当使用 Kotlin 时，我们有时需要从 Kotlin 扩展函数中访问私有的 Java 字段。</p>
<p>在本教程中，我们将探讨如何从 Kotlin 扩展函数访问私有属性。我们还将看到这所涉及的挑战，以及我们有哪些变通方法来解决这个问题。</p>
<p>在深入之前，我们需要简要回顾一下 Kotlin 的扩展函数 API 以及 Kotlin 如何实现它们。</p>
<h3>2.1 扩展函数 – API</h3>
<p><strong>扩展函数允许我们给定类或接口添加功能，而无需修改原始实现</strong>。当我们处理外部依赖项中的类时，这些功能特别有用。例如，在 Java 中，如果我们想给 <code>String</code> 添加一个 <code>containsIgnoreCase()</code> 方法，我们不能直接做到：</p>`,r:{minutes:3.83,words:1149},t:"通过 Kotlin 扩展函数访问私有 Java 字段",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Add%20Authorities%20as%20Custom%20Claims%20in%20JWT%20Access%20Tokens%20in%20Spring%20Authorization%20Server.html",{loader:()=>n(()=>import("./2024-06-24-Add Authorities as Custom Claims in JWT Access Tokens in Spring Authorization Server.html-Bxqapzqn.js"),__vite__mapDeps([120,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Spring Security","OAuth"],g:["JWT","Custom Claims","Spring Authorization Server"],e:`
<p>如果您正在处理Spring Security（特别是OAuth）实现，一定要看看《Learn Spring Security》课程。</p>
<h3>1. 概述</h3>
<p>将自定义声明添加到JSON Web Token（JWT）访问令牌在许多场景中至关重要。自定义声明允许我们在令牌负载中包含额外的信息。</p>
<p>在本教程中，我们将学习如何在Spring授权服务器中将资源所有者的权限添加到JWT访问令牌。</p>
<p>Spring授权务器是Spring生态系统中的一个新项目，旨在为Spring应用程序提供授权服务器支持。它旨在简化使用熟悉且灵活的Spring编程模型实现OAuth 2.0和OpenID Connect（OIDC）授权服务器的过程。</p>`,r:{minutes:7.45,words:2235},t:"在Spring授权服务器中将权限作为自定义声明添加到JWT访问令牌",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Call%20a%20Method%20on%20Each%20Element%20of%20a%20List%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-Call a Method on Each Element of a List in Java.html-O_AgxyhZ.js"),__vite__mapDeps([121,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","编程"],g:["Java 8","流式API","列表操作"],e:`<hr>
<h1>在Java中对列表的每个元素调用方法</h1>
<p>当我们在Java中工作时，无论是处理Java 8之前的代码还是采用Java 8及更高版本中的Stream API的功能性优雅，对列表中的每个元素调用方法是一项基本操作。</p>
<p>在本教程中，我们将探索可用于对列表元素调用方法的方法和技术。</p>
<h3>2. 问题介绍</h3>
<p>像往常一样，让我们通过一个例子快速理解问题。假设我们有一个_玩家_类：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Player</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> score<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> score<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>score <span class="token operator">=</span> score<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

   <span class="token comment">// getter和setter方法省略</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4.83,words:1450},t:"在Java中对列表的每个元素调用方法",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Check%20if%20List%20Contains%20at%20Least%20One%20Enum.html",{loader:()=>n(()=>import("./2024-06-24-Check if List Contains at Least One Enum.html-Cgb6LciZ.js"),__vite__mapDeps([122,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","编程"],g:["Java","枚举","集合"],e:`
<p>在Java中，枚举（enums）是一种强大且类型安全的方式来表示一组固定的常量。此外，当我们使用像列表（Lists）这样的集合时，我们可能会遇到需要检查列表是否至少包含一个特定枚举类型元素的场景。</p>
<p>在本文中，我们将探索在Java中实现这一点的各种方法，并提供代码示例。</p>
<h2>问题陈述</h2>
<p>在深入主题之前，让我们简要回顾一下Java中的枚举基础。枚举是一种特殊数据类型，允许我们定义一组命名常量，这些常量代表一组固定、预定义的值。此外，枚举提供了比使用原始常量或整数更好的类型安全性和可读性。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Position</span> <span class="token punctuation">{</span>
    <span class="token constant">DEVELOPER</span><span class="token punctuation">,</span> <span class="token constant">MANAGER</span><span class="token punctuation">,</span> <span class="token constant">ANALYST</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.21,words:962},t:"Java中检查列表是否至少包含一个枚举值",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Check%20if%20a%20Float%20Value%20is%20Equivalent%20to%20an%20Integer%20Value%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-Check if a Float Value is Equivalent to an Integer Value in Java.html-BcfvhHzN.js"),__vite__mapDeps([123,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","编程"],g:["float","integer","比较"],e:`
<p>浮点数通常使用Java的<code>float</code>或<code>double</code>数据类型来表示。然而，由于精度的限制，它们使用二进制表示这些值，当它们直接与整数值比较时，结果可能是出乎意料的。</p>
<p><strong>在本教程中，我们将讨论在Java中检查<code>float</code>值是否等同于<code>integer</code>值的各种方法。</strong></p>
<h2>2. 使用类型转换</h2>
<p>一种简单的方法是使用类型转换将浮点值转换为整数，然后进行比较。</p>
<p>以下是示例代码：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">float</span> floatValue <span class="token operator">=</span> <span class="token number">10.0f</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenFloatAndIntValues_whenCastingToInt_thenCheckIfFloatValueIsEquivalentToIntegerValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> intValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> floatValue<span class="token punctuation">;</span>
    <span class="token function">assertEquals</span><span class="token punctuation">(</span>floatValue<span class="token punctuation">,</span> intValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.54,words:763},t:"Java中检查浮点数是否等同于整数值",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Check%20if%20a%20Point%20Is%20Between%20Two%20Points%20Drawn%20on%20a%20Straight%20Line%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-Check if a Point Is Between Two Points Drawn on a Straight Line in Java.html-4ruDZxpS.js"),__vite__mapDeps([124,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","2D Geometry"],g:["Point","Straight Line","Check"],e:`<hr>
<h1>在Java中检查一个点是否在直线上的两点之间</h1>
<h2>1. 概述</h2>
<p>在使用二维几何时，一个常见的问题是确定一个点是否在直线上的另外两个点之间。</p>
<p>在这个快速教程中，我们将探讨在Java中进行这种判断的不同方法。</p>
<h2>2. 理解问题陈述</h2>
<p>假设我们在平面上有两个点：第一个点A的坐标是(x1, y1)，第二个点B的坐标是(x2, y2)。我们想要检查给定的点C，其坐标为(x3, y3)，是否在A和B之间：</p>
<p>在上面的图表中，点C位于点A和B之间，而点D不位于点A和B之间。</p>
<h2>3. 使用距离公式</h2>`,r:{minutes:3.43,words:1029},t:"在Java中检查一个点是否在直线上的两点之间",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Convert%20Joda%20Time%20DateTime%20to%20Date%20and%20Vice%20Versa.html",{loader:()=>n(()=>import("./2024-06-24-Convert Joda Time DateTime to Date and Vice Versa.html-dR6zzhUF.js"),__vite__mapDeps([125,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","Joda-Time"],g:["Joda-Time","DateTime","Date"],e:'\n<h2>1. 引言</h2>\n<p>Joda-Time 是一个非常流行的 Java 日期和时间操作库。它提供了比标准 <em>DateTime</em> 类通常提供的更直观、更灵活的 API。</p>\n<h3>在本教程中，我们将探讨如何将 Joda-Time <em>DateTime</em> 对象转换为标准的 Java <em>Date</em> 对象，反之亦然。</h3>\n<h2>2. 设置 Joda-Time</h2>\n<p>首先，我们应该确保我们的项目包含了 <em>joda-time</em> 库：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`joda-time`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`joda-time`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`2.12.6`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n</code></pre></div>',r:{minutes:1.96,words:588},t:"Joda-Time DateTime 与 Java Date 互转",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Convert%20Null%20Value%20to%20a%20Default%20Value%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-Convert Null Value to a Default Value in Java.html-Cch_34Ow.js"),__vite__mapDeps([126,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","Programming"],e:`
<p>在1965年，托尼·霍尔（Tony Hoare）引入了空引用的概念。从那时起，无数小时被用于阅读日志并尝试找到NullPointerExceptions的来源。这种异常如此普遍，以至于我们通常称之为NPE。</p>
<p>在本教程中，我们将学习如何缓解这个问题。我们将回顾几种简化将null转换为默认值的技术。</p>
<h2>2. 简单的if语句</h2>
<p>处理转换的最简单方法是使用if语句。它们是基本的语言结构，并且由于对不同经验和水平的开发人员都很清晰，因此具有优势。这种方法最好的地方在于它很冗长，这同时也是最坏的地方：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@ParameterizedTest</span>
<span class="token annotation punctuation">@ArgumentsSource</span><span class="token punctuation">(</span><span class="token class-name">ObjectsProvider</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">givenIfWhenNotNullThenReturnsDefault</span><span class="token punctuation">(</span><span class="token class-name">String</span> givenValue<span class="token punctuation">,</span> <span class="token class-name">String</span> defaultValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> actual <span class="token operator">=</span> defaultValue<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>givenValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        actual <span class="token operator">=</span> givenValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">assertDefaultConversion</span><span class="token punctuation">(</span>givenValue<span class="token punctuation">,</span> defaultValue<span class="token punctuation">,</span> actual<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:5.09,words:1527},t:"Java中将空值转换为默认值",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Converting%20BigDecimal%20to%20Integer%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-Converting BigDecimal to Integer in Java.html-DHhZbfgQ.js"),__vite__mapDeps([127,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","BigDecimal"],g:["BigDecimal","Integer","Conversion"],e:`
<h2>1. 概述</h2>
<p><em>BigDecimal</em> 旨在处理浮点数。它提供了一种便捷的方式来管理精度，并且最重要的是，它处理了舍入误差。</p>
<p>然而，在某些情况下，我们需要将其作为简单的整数来处理，并且将其转换为_Integer_或_int_。在本教程中，我们将学习如何正确进行转换，并理解转换背后的一些问题。</p>
<h2>2. 缩小转换</h2>
<p><em>BigDecimal</em> 可以存储比_Integer_或_int_更广泛的数字范围。这通常可能导致在转换过程中丢失精度。</p>
<h3>2.1. 截断</h3>
<p><em>BigDecimal</em> 提供了_intValue()<em>方法，可以将BigDecimal转换为_int</em>：</p>`,r:{minutes:4.49,words:1347},t:"Java中将BigDecimal转换为Integer",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Converting%20Integer%20to%20BigDecimal%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-Converting Integer to BigDecimal in Java.html-Bogt6mnm.js"),__vite__mapDeps([128,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","BigDecimal"],g:["Integer","BigDecimal","Java"],e:`
<p><em>BigDecimal</em> 旨在处理大的浮点数。<strong>它解决了浮点算术的问题，并提供了控制精度的方式。</strong> 此外，它还拥有许多用于数字运算的常规方法。</p>
<p>我们可以通过将_Integer_转换来利用_BigDecimal_的特性。在本教程中，我们将学习几种不同的转换方法，并讨论它们的优缺点。</p>
<h2>2. 构造函数转换</h2>
<p>最直接的一种方式是使用构造函数转换。<strong><em>BigDecimal</em> 提供了可以从多种输入转换的构造函数。</strong> 因此，我们可以将给定的_Integer_传递给_BigDecimal_构造函数：</p>`,r:{minutes:2.69,words:808},t:"Java中将Integer转换为BigDecimal",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Create%20Kubernetes%20Operators%20with%20the%20Java%20Operator%20SDK.html",{loader:()=>n(()=>import("./2024-06-24-Create Kubernetes Operators with the Java Operator SDK.html-DqAzLtkk.js"),__vite__mapDeps([129,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Kubernetes","Java"],g:["Kubernetes Operator","Java Operator SDK"],e:`
<h2>1. 引言</h2>
<p>在本教程中，我们将介绍Kubernetes Operators的概念以及如何使用Java Operator SDK来实现它们。为了说明这一点，我们将实现一个Operators，它简化了在集群中部署OWASP的Dependency-Track应用程序实例的任务。</p>
<h2>2. Kubernetes Operators是什么？</h2>
<p>在Kubernetes术语中，<strong>Operators是一个通常部署在集群中的软件组件，它管理一组资源的生命周期</strong>。它扩展了原生控制器集合，例如副本集和作业控制器，以管理复杂或相互关联的组件作为一个单一管理单元。</p>`,r:{minutes:11.96,words:3587},t:"使用Java Operator SDK创建Kubernetes Operators | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Creating%20Reactive%20APIs%20With%20Micronaut%20and%20MongoDB.html",{loader:()=>n(()=>import("./2024-06-24-Creating Reactive APIs With Micronaut and MongoDB.html-DtvB5d2X.js"),__vite__mapDeps([130,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Reactive APIs","Micronaut","MongoDB"],g:["Micronaut","MongoDB","Reactive Programming","REST API"],e:`<hr>
<h1>使用Micronaut和MongoDB创建响应式API</h1>
<p>在本教程中，我们将探讨如何使用Micronaut和MongoDB创建响应式REST API。</p>
<p>Micronaut是一个用于在Java虚拟机(JVM)上构建微服务和无服务器应用程序的框架。</p>
<p>我们将看看如何使用Micronaut创建实体、仓库、服务和控制器。</p>
<h2>2. 项目设置</h2>
<p>对于我们的代码示例，我们将创建一个CRUD应用程序，用于存储和检索MongoDB数据库中的书籍。首先，让我们使用Micronaut Launch创建一个Maven项目，设置依赖项并配置数据库。</p>`,r:{minutes:10.38,words:3113},t:"使用Micronaut和MongoDB创建响应式API",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Difference%20Between%20Xmx%20and%20MaxRAM%20JVM%20Parameters.html",{loader:()=>n(()=>import("./2024-06-24-Difference Between Xmx and MaxRAM JVM Parameters.html-BuodX79a.js"),__vite__mapDeps([131,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","JVM"],g:["Xmx","MaxRAM"],e:`<hr>
<h1>Java中Xmx与MaxRAM JVM参数的区别</h1>
<h2>1. 概述</h2>
<p>堆大小是Java应用程序的一个关键参数。它直接影响我们可以使用多少内存，并间接影响应用程序的性能。例如，使用压缩指针、垃圾回收周期的数量和持续时间等。</p>
<p>在本教程中，我们将学习如何使用<code>-XX:MaxRAM</code>标志来提供更多的堆大小计算调整机会。这在容器内运行应用程序或在不同主机上运行时尤其重要。</p>
<h2>2. 堆大小计算</h2>
<p>配置堆的标记可以一起工作，也可以相互覆盖。理解它们之间的关系对于更深入地了解它们的用途非常重要。</p>`,r:{minutes:4.59,words:1378},t:"Java中Xmx与MaxRAM JVM参数的区别",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Difference%20Between%20a%20Future%20and%20a%20Promise%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-Difference Between a Future and a Promise in Java.html-BagIDCwr.js"),__vite__mapDeps([132,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","编程"],g:["Future","Promise"],e:`
<h2>1. 引言</h2>
<p>Future 和 Promise 是用于处理异步任务的工具，它们允许在不等待每一步完成的情况下执行操作。尽管它们的目的相同，但它们之间存在关键差异。在本教程中，我们将探讨 Future 和 Promise 之间的差异，仔细研究它们的关键特性、用例和独特特点。</p>
<h2>2. 理解 Future</h2>
<p>Future 充当一个容器，等待正在进行的操作的结果。开发者通常使用 Future 来检查计算的状态，在结果准备好时检索结果，或者优雅地等待操作结束。Future 经常与 Executor 框架集成，提供了一种简单高效的处理异步任务的方法。</p>`,r:{minutes:5.55,words:1664},t:"Java 中 Future 和 Promise 的区别",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Generational%20ZGC%20in%20Java%2021.html",{loader:()=>n(()=>import("./2024-06-24-Generational ZGC in Java 21.html-DkHO8SfO.js"),__vite__mapDeps([133,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","垃圾收集器"],g:["Java 21","Generational ZGC"],e:`
<h2>1. 概述</h2>
<p><strong>Java 21 在 2023 年 9 月首次亮相，同时引入了代际 ZGC（Generational Z Garbage Collector）。</strong> 在 Z 垃圾收集器的效率基础上，此更新通过为年轻和老年对象引入不同的代来优化内存管理。</p>
<p>在本文中，我们将仔细检查这一新增功能，探讨其潜在的好处、工作原理以及如何使用它。</p>
<h2>2. 垃圾收集</h2>
<p>开始我们的探索之前，让我们深入了解内存管理领域。<strong>垃圾收集是程序尝试释放不再被对象使用的分配内存的过程。</strong> 如果程序的某个部分仍然保持对它的指针，则对象被认为是“在使用中”或“被引用”的。相反，如果程序的任何部分都不再访问的“未使用”或“未被引用”的对象，则可以回收它所占用的内存。</p>`,r:{minutes:7,words:2099},t:"Java 21 中的代际 ZGC | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Getting%20Query%20String%20Parameters%20from%20HttpServletRequest.html",{loader:()=>n(()=>import("./2024-06-24-Getting Query String Parameters from HttpServletRequest.html-BQTBosc1.js"),__vite__mapDeps([134,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","Spring MVC"],g:["HttpServletRequest","Query String"],e:`<hr>
<h1>从HttpServletRequest获取查询字符串参数</h1>
<h2>1. 引言</h2>
<p>后端HTTP API开发中最重要的能力之一是解析前端传递的请求查询参数。</p>
<p>在本教程中，我们将介绍几种直接从_HttpServletRequest_获取查询参数的方法，以及Spring MVC提供的一些简洁方式。</p>
<h2>2. _HttpServletRequest_中的方法</h2>
<p>首先，我们来看看_HttpServletRequest_提供的与参数相关的方法。</p>
<h3>2.1. <em>HttpServletRequest#getQueryString()</em></h3>`,r:{minutes:4.07,words:1222},t:"从HttpServletRequest获取查询字符串参数",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Introduction%20to%20Apache%20Calcite.html",{loader:()=>n(()=>import("./2024-06-24-Introduction to Apache Calcite.html-cXh2rB04.js"),__vite__mapDeps([135,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Tutorial","Apache Calcite"],g:["Data Management","Query Optimization"],e:`
<p>在本教程中，我们将学习Apache Calcite。它是一个功能强大的数据管理框架，可以用于各种与数据访问有关的场景。Calcite专注于从任何来源检索数据，而不是存储数据。此外，它的查询优化能力可以加快数据检索的速度并提高效率。</p>
<p>让我们更详细地了解Apache Calcite的相关用例。</p>
<p>由于其能力，Apache Calcite可以在多个用例中发挥作用：</p>
<p>构建新数据库的查询引擎需要数年时间。然而，Calcite通过提供现成的可扩展SQL解析器、验证器和优化器，帮助我们立即开始。Calcite已经被用于构建数据库，例如HerdDB、Apache Druid、MapD等。</p>`,r:{minutes:8.85,words:2655},t:"Apache Calcite 简介",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Introduction%20to%20Postman.html",{loader:()=>n(()=>import("./2024-06-24-Introduction to Postman.html-ClbQhMqR.js"),__vite__mapDeps([136,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","Postman"],g:["REST","Spring Boot"],e:`
<p>Postman是一个流行的API开发工具，它简化了设计、测试、修改和记录API的过程。它提供了一个用户友好的界面，允许用户发送和接收HTTP请求，使用环境和集合管理工作流，执行自动化测试，创建模拟服务器进行测试，并生成API文档。</p>
<p>由于其多功能性，它受到从事API中心工作流的开发人员、测试人员和其他IT专业人员的高度评价。</p>
<p>在本教程中，我们将讨论如何安装、设置和使用Postman的最重要功能。</p>
<h2>2. 安装和设置</h2>
<p>Postman可以作为Windows、Mac或Linux操作系统的桌面应用程序下载。它也可作为网络应用程序提供。然而，并非所有功能都可用。</p>`,r:{minutes:10.5,words:3151},t:"Postman入门指南",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Introduction%20to%20Spring%20AI.html",{loader:()=>n(()=>import("./2024-06-24-Introduction to Spring AI.html-CO9XcDAH.js"),__vite__mapDeps([137,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Spring AI","Baeldung"],g:["Spring Framework","AI Generative Prompts"],e:`
<h2>1. 概览</h2>
<p>Spring 框架通过 Spring AI 项目正式启用了 AI 生成式提示的强大能力。在本教程中，我们将提供 Spring Boot 应用程序中生成式 AI 集成的全面介绍，并熟悉基本的 AI 概念。</p>
<p>我们还将了解 Spring AI 如何与模型交互，并创建一个应用程序来展示其能力。</p>
<h2>2. Spring AI 的主要概念</h2>
<p>在我们开始之前，让我们回顾一些关键的领域术语和概念。</p>
<p>Spring AI 最初专注于设计用于处理语言输入并生成语言输出的模型。项目背后的理念是为开发人员提供一个抽象接口，这是将生成式 AI API 作为独立组件集成到应用程序中的基础。</p>`,r:{minutes:7.35,words:2204},t:"Spring AI 简介 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Introduction%20to%20Spring%20Cloud%20AWS%203.0%20%20%20SQS%20Integration.html",{loader:()=>n(()=>import("./2024-06-24-Introduction to Spring Cloud AWS 3.0   SQS Integration.html-x3ET0dbm.js"),__vite__mapDeps([138,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Spring Cloud AWS","SQS Integration"],g:["Spring Cloud AWS 3.0","SQS","Integration Test","Testcontainers","LocalStack"],e:`<hr>
<h1>Spring Cloud AWS 3.0 与 SQS 集成介绍</h1>
<p>Spring Cloud AWS 是一个旨在简化与 AWS 服务交互的项目。Simple Queue Service（SQS）是 AWS 的一个解决方案，用于以可扩展的方式发送和接收异步消息。</p>
<p>在本教程中，我们将重新介绍 Spring Cloud AWS SQS 集成，该集成已为 Spring Cloud AWS 3.0 完全重写。</p>
<p>该框架提供了熟悉的 Spring 抽象来处理 SQS 队列，例如 SqsTemplate 和 @SqsListener 注解。</p>
<p>我们将通过事件驱动的场景，展示发送和接收消息的示例，并展示使用 Testcontainers（一种管理一次性 Docker 容器的工具）和 LocalStack（本地模拟类似 AWS 环境的工具）来设置集成测试的策略。</p>`,r:{minutes:5.31,words:1594},t:"Spring Cloud AWS 3.0 与 SQS 集成介绍",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Java%208%20Stream%20Operation%20on%20the%20Empty%20List.html",{loader:()=>n(()=>import("./2024-06-24-Java 8 Stream Operation on the Empty List.html-DM3MW5l_.js"),__vite__mapDeps([139,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","Stream API"],g:["Java 8","Stream操作"],e:'\n<h2>1. 引言</h2>\n<p>Java 8 通过引入 Stream API，改变了我们处理集合和数据操作的方式，带来了范式的转变。Stream API 提供了一种简洁而富有表现力的方式来对数据执行操作，使开发者能够编写更易读、更健壮、更高效的代码。</p>\n<p>在本教程中，我们将深入探讨 Stream 操作的有趣世界，重点关注空列表。虽然使用空列表工作可能看起来微不足道，但它揭示了 Stream API 的一些强大方面。</p>\n<h2>2. 将空列表转换为 Stream</h2>\n<p>我们可以很容易地使用 stream() 方法从空列表中获得 Stream：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span>```````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>``````` emptyList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Stream</span>```````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>``````` emptyStream <span class="token operator">=</span> emptyList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',r:{minutes:3.43,words:1030},t:"Java 8 空列表上的 Stream 操作 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Maven%20Dependencies%20Failing%20With%20a%20501%20Error%20%20HTTPS%20Required%20.html",{loader:()=>n(()=>import("./2024-06-24-Maven Dependencies Failing With a 501 Error  HTTPS Required .html-D8wNF9Nd.js"),__vite__mapDeps([140,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Maven","HTTPS"],g:["Maven","HTTPS","501错误"],e:`
<h2>1. 概述</h2>
<p>在本教程中，我们将了解错误“返回代码是：501，原因短语：HTTPS Required”。我们将首先理解这个错误的含义，然后探索解决此错误的步骤。</p>
<h2>2. Maven转向HTTPS</h2>
<p>Maven确保从Maven中央仓库自动下载外部库。然而，通过HTTP下载引发安全问题，例如中间人攻击（MITM）的风险。在这种攻击中，恶意代码可能在构建阶段被注入，这可能会感染下游组件及其最终用户。</p>
<p><strong>为了保持数据完整性和加密，从2020年1月15日起，Maven中央仓库已停止通过HTTP通信。这意味着任何使用HTTP访问中央仓库的尝试都将导致出现错误“返回代码是：501，原因短语：HTTPS Required”。要修复此错误，我们需要确保依赖项是通过HTTPS而不是HTTP获取的。</strong></p>`,r:{minutes:2.72,words:815},t:"Maven依赖项因501错误“HTTPS Required”失败 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Printing%20Message%20on%20Console%20without%20Using%20main%20%20%20Method%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-Printing Message on Console without Using main   Method in Java.html-DP_Qv3-v.js"),__vite__mapDeps([141,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","Programming"],g:["Java","main method","static block"],e:`
<h2>1. 引言</h2>
<p>Java程序的执行始于_main()_方法。然而，在某些场景中，我们可能希望在不使用_main()_方法的情况下显示消息。</p>
<p><strong>在本教程中，我们将探讨完成此任务的一些方法。</strong></p>
<h2>2. 使用静态代码块</h2>
<p>静态代码块在类被加载到内存中时执行，这使得在不使用_main()_方法的情况下显示消息成为可能。</p>
<p>让我们看一个例子：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">PrintMessageWithoutMainMethod</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.34,words:703},t:"在Java中不使用main()方法在控制台打印消息",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-PriorityQueue%20iterator%20%20%20Method%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-PriorityQueue iterator   Method in Java.html-DLNhhGLk.js"),__vite__mapDeps([142,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","PriorityQueue"],g:["PriorityQueue","iterator","Java"],e:`
<ol>
<li>引言</li>
</ol>
<p>在 PriorityQueue 中，一个关键的方法是 iterator() 方法。这个方法允许我们无缝地遍历存储在队列中的元素。在本教程中，我们将探索 iterator() 方法的功能，并展示其在不同场景中的有效使用。</p>
<ol start="2">
<li>PriorityQueue 概述</li>
</ol>
<p>Java 中的 PriorityQueue 类作为一个数据结构，允许我们根据元素的优先级将元素存储在队列中。</p>
<p>PriorityQueue 内部使用二叉堆，这是一种树状结构，元素根据优先级进行排列。最高优先级的元素位于根节点，子节点继承其父节点的优先级。<strong>这种排列确保了最高优先级的元素位于队列的最前面，而最低优先级的元素则位于队列的最后。</strong></p>`,r:{minutes:5.06,words:1519},t:"Java 中 PriorityQueue 的 iterator() 方法",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Read%20Input%20Character%20by%20Character%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-Read Input Character by Character in Java.html-D7huu4vn.js"),__vite__mapDeps([143,1])),meta:{d:1719222647e3,c:["Java","输入处理"],g:["Java","BufferedReader","FileReader","Scanner"],e:`
<h2>1. 引言</h2>
<p>在许多Java应用程序中，我们需要逐字符地读取输入数据，这通常是一个常见的任务，尤其是在处理来自流源的大量数据时。</p>
<p><strong>在本教程中，我们将探讨Java中逐字符读取数据的不同方法。</strong></p>
<h2>2. 使用BufferedReader进行控制台输入</h2>
<p>我们可以利用BufferedReader从控制台逐字符地执行读取。<strong>请注意，如果我们要交互式地读取字符，这种方法很有帮助。</strong></p>
<p>让我们来看一个例子：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenInputFromConsole_whenUsingBufferedStream_thenReadCharByChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">ByteArrayInputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span><span class="token string">"TestInput"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setIn</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">BufferedReader</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> c<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> c<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">assertArrayEquals</span><span class="token punctuation">(</span><span class="token string">"TestInput"</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.37,words:711},t:"Java中逐字符读取输入的方法",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Remove%20Characters%20From%20a%20String%20That%20Are%20in%20the%20Other%20String.html",{loader:()=>n(()=>import("./2024-06-24-Remove Characters From a String That Are in the Other String.html-CnFLaZXn.js"),__vite__mapDeps([144,1])),meta:{d:1719264356e3,c:["Java","字符串操作"],g:["Java","字符串","性能分析"],e:`<hr>
<h1>从字符串中移除另一个字符串中存在的字符</h1>
<p>当我们使用Java时，经常会遇到需要精确度和元素间协作的任务。基于另一个字符串中的存在来移除字符串中的字符就是这样一个问题。</p>
<p>在本教程中，我们将探索实现此任务的各种技术。</p>
<h2>2. 问题介绍</h2>
<p>像往常一样，一个例子可以帮助我们快速理解问题。假设我们有两个字符串：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token constant">STRING</span> <span class="token operator">=</span> <span class="token string">"a b c d e f g h i j"</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> <span class="token constant">OTHER</span> <span class="token operator">=</span> <span class="token string">"bdfhj"</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:4.32,words:1297},t:"从字符串中移除另一个字符串中存在的字符",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Removing%20the%20Last%20Node%20in%20a%20Linked%20List.html",{loader:()=>n(()=>import("./2024-06-24-Removing the Last Node in a Linked List.html-CXENK9Cm.js"),__vite__mapDeps([145,1])),meta:{d:1719260827e3,c:["数据结构","Java"],g:["链表","删除操作"],e:`<hr>
<h1>从链表中移除最后一个节点</h1>
<p>数据结构是任何编程语言的重要组成部分。Java在_Collection<code>&lt;T&gt;</code>_接口下提供了大多数数据结构。映射（Maps）也被认为是Java集合的一部分，但它们不实现这个接口。</p>
<p>在本教程中，我们将集中讨论链表数据结构。特别是，我们将讨论如何在单向链表中移除最后一个元素。</p>
<h3>单向链表与双向链表</h3>
<p>首先，我们定义一下单向链表和双向链表之间的区别。幸运的是，它们的名字非常具有描述性。双向链表中的每个节点都有指向下一个和前一个节点的引用，除了显而易见的头和尾：</p>`,r:{minutes:3.36,words:1008},t:"从链表中移除最后一个节点",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Replace%20Non%20Printable%20Unicode%20Characters%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-24-Replace Non Printable Unicode Characters in Java.html-DURpF64a.js"),__vite__mapDeps([146,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","Unicode"],g:["非打印字符","正则表达式","文本处理"],e:`
<h2>1. 引言</h2>
<p>非打印Unicode字符包括控制字符、样式标记和其他在文本中可见但并非用于显示的不可见符号。此外，这些字符可能会在文本处理、显示和保存时引起问题。因此，根据需要找到替换或消除这些字符的方法非常重要。</p>
<h3>在本教程中，我们将探讨不同的替换方法。</h3>
<h2>2. 使用正则表达式</h2>
<p>Java的_String_类有强大的文本处理功能，正则表达式提供了一种简短的方式来匹配和替换字符串中的模式。我们可以使用简单的模式来查找和更改非打印的Unicode字母，如下所示：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenTextWithNonPrintableChars_whenUsingRegularExpression_thenGetSanitizedText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> originalText <span class="token operator">=</span> <span class="token string">"\\n\\nWelcome \\n\\n\\nto Baeldung!\\n\\t"</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> expected <span class="token operator">=</span> <span class="token string">"Welcome to Baeldung!"</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> regex <span class="token operator">=</span> <span class="token string">"[\\\\p{C}]"</span><span class="token punctuation">;</span>
    
    <span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Matcher</span> matcher <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>originalText<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> sanitizedText <span class="token operator">=</span> matcher<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token function">assertEquals</span><span class="token punctuation">(</span>expected<span class="token punctuation">,</span> sanitizedText<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.26,words:679},t:"Java中替换非打印Unicode字符",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Solving%20the%20ParameterResolutionException%20in%20JUnit%205.html",{loader:()=>n(()=>import("./2024-06-24-Solving the ParameterResolutionException in JUnit 5.html-wBMB2KQJ.js"),__vite__mapDeps([147,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","JUnit"],g:["JUnit 5","ParameterResolutionException"],e:`<hr>
<h1>解决JUnit 5中的ParameterResolutionException问题</h1>
<p>JUnit 5引入了一些强大的功能，包括对参数化测试的支持。编写参数化测试可以节省大量时间，在许多情况下，它们可以通过简单的注解组合来启用。</p>
<p>然而，<strong>配置不正确可能导致难以调试的异常，因为JUnit在后台管理了许多测试执行的方面</strong>。</p>
<p>其中一种异常是_ParameterResolutionException_：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter ...
</code></pre></div>`,r:{minutes:4.73,words:1419},t:"解决JUnit 5中的ParameterResolutionException问题",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Upload%20Multiple%20Files%20Using%20WebFlux.html",{loader:()=>n(()=>import("./2024-06-24-Upload Multiple Files Using WebFlux.html-B8KN7V97.js"),__vite__mapDeps([148,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Spring WebFlux","文件上传"],g:["Spring WebFlux","文件上传","异步I/O","非阻塞"],e:`<hr>
<h1>Spring WebFlux 多文件上传指南</h1>
<h2>1. 概述</h2>
<p>Spring WebFlux 是一个响应式的 Web 框架，它提供了一个非阻塞事件循环来异步处理 I/O 操作。此外，它使用 <em>Mono</em> 和 <em>Flux</em> 反应式流发布者在订阅时发出数据。</p>
<p>这种响应式方法有助于应用程序在不分配大量资源的情况下处理大量请求和数据。</p>
<p>在本教程中，我们将学习如何通过 Spring WebFlux 逐步将多个文件上传到目录。此外，我们将把文件名映射到实体类，以便于检索。</p>
<h2>2. 项目设置</h2>`,r:{minutes:6.31,words:1893},t:"Spring WebFlux 多文件上传指南",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-Using%20Static%20Methods%20Instead%20of%20Deprecated%20JsonParser.html",{loader:()=>n(()=>import("./2024-06-24-Using Static Methods Instead of Deprecated JsonParser.html-CZjZB6Ol.js"),__vite__mapDeps([149,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","JSON"],g:["Gson","JsonParser"],e:`
<p>高效地解析JSON是Java编程中数据操作和通信的最重要任务之一。Gson库提供了多功能的_JsonParser_类来简化转换过程。此外，值得注意的是这个类已经被弃用，消除了实例化的需求。相反，我们可以利用提供的静态方法来进行转换过程。</p>
<p>在本教程中，我们将深入探讨如何使用静态方法代替已弃用的_JsonParser_进行高效的Java JSON解析。</p>
<p>以下是使用已弃用的_JsonParser_解析JSON字符串的示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> jsonString <span class="token operator">=</span> <span class="token string">"{\\"name\\": \\"John\\", \\"age\\":30, \\"city\\":\\"New York\\"}"</span><span class="token punctuation">;</span>
<span class="token class-name">JsonObject</span> jsonObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JsonParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsJsonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:2.47,words:740},t:"使用静态方法代替已弃用的JsonParser进行Java JSON解析",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-What%20Happens%20When%20the%20JVM%20Runs%20Out%20of%20Memory%20to%20Allocate%20During%20Runtime%20.html",{loader:()=>n(()=>import("./2024-06-24-What Happens When the JVM Runs Out of Memory to Allocate During Runtime .html-a56ByJBs.js"),__vite__mapDeps([150,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["JVM","内存管理"],g:["OutOfMemoryError","堆大小"],e:`
<p>定义一个适当的JVM应用程序堆大小是关键步骤。这可能有助于我们的应用程序进行内存分配和处理高负载。然而，<strong>堆大小配置不当，无论是太小还是太大，都可能影响其性能。</strong></p>
<p>在本教程中，我们将了解_OutOfMemoryErrors_的原因及其与堆大小的联系。我们还将检查我们可以对这种错误做什么以及如何调查根本原因。</p>
<h2>2. -Xmx 和 -Xms</h2>
<p>**我们可以使用两个专用的JVM标志来控制堆分配。**第一个，-Xms，帮助我们设置堆的初始和最小大小。另一个，-Xmx，设置最大堆大小。还有其他的标志可以帮助更动态地分配，但总体上它们做类似的工作。</p>`,r:{minutes:6.74,words:2021},t:"JVM运行时内存耗尽会发生什么？",y:"a"}}],["/posts/baeldung/2024-06-24/2024-06-24-What%20Is%20the%20Error%20%20%20Non%20static%20method%20cannot%20be%20referenced%20from%20a%20static%20context%20%20.html",{loader:()=>n(()=>import("./2024-06-24-What Is the Error   Non static method cannot be referenced from a static context  .html-C4lNaUUh.js"),__vite__mapDeps([151,1])),meta:{d:17191872e5,l:"2024年6月24日",c:["Java","Programming"],g:["Java","Static Context","Non-Static Method"],e:`<hr>
<h1>Java中的错误：“非静态方法不能从静态上下文中引用”是什么？</h1>
<p>当我们使用Java时，经常会遇到需要更深入理解语言细节的问题。一个常见的难题是错误消息：“非静态方法...不能从静态上下文中引用。”这个错误对于初学者来说可能看起来很吓人，甚至可能会让经验丰富的程序员感到困惑。</p>
<p>在本教程中，我们将深入探讨这个错误背后的原因，并探索解决它的方法。</p>
<h2>2. 问题介绍</h2>
<p>像往常一样，让我们通过一个例子快速理解问题。假设我们有一个_ToolBox_类：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">ToolBox</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">String</span> str1<span class="token punctuation">,</span> <span class="token class-name">String</span> str2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> str1 <span class="token operator">+</span> str2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">joinTwoStrings</span><span class="token punctuation">(</span><span class="token class-name">String</span> str1<span class="token punctuation">,</span> <span class="token class-name">String</span> str2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">concat</span><span class="token punctuation">(</span>str1<span class="token punctuation">,</span> str2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;-- 编译错误</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4.84,words:1452},t:"Java中的错误：“非静态方法不能从静态上下文中引用”是什么？",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-%20Query%20Definitions%20With%20SpEL%20Support%20in%20Spring%20Data%20JPA.html",{loader:()=>n(()=>import("./2024-06-25- Query Definitions With SpEL Support in Spring Data JPA.html-DUL7xBeT.js"),__vite__mapDeps([152,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Spring Data JPA","SpEL"],g:["Spring","JPA","Query","SpEL"],e:`
<p>SpEL 是 Spring 表达式语言（Spring Expression Language）的缩写，它是一个强大的工具，可以显著增强我们与 Spring 的交互，并在配置、属性设置和查询操作中提供额外的抽象。</p>
<p>在本教程中，我们将学习如何使用这个工具使我们的自定义查询更加动态，并在存储库层隐藏数据库特定的操作。我们将使用 <em>@Query</em> 注解，它允许我们使用 JPQL 或原生 SQL 来定制与数据库的交互。</p>
<h2>1. 概述</h2>
<h2>2. 访问参数</h2>
<h3>2.1. 按索引访问</h3>
<p>按索引访问参数不是最佳选择，因为它可能会给代码带来难以调试的问题。特别是当参数类型相同时。</p>`,r:{minutes:9.14,words:2741},t:"Spring Data JPA 中使用 SpEL 支持的查询定义 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-BigDecimal.ZERO%20vs.%20new%20BigDecimal%200%20.html",{loader:()=>n(()=>import("./2024-06-25-BigDecimal.ZERO vs. new BigDecimal 0 .html-BqKRg2GZ.js"),__vite__mapDeps([153,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","BigDecimal"],g:["Java","BigDecimal","ZERO","性能"],e:`<hr>
<h1>BigDecimal.ZERO 与 new BigDecimal(0) | Baeldung</h1>
<p>当我们使用 BigDecimal 处理数值零时，我们通常面临两种类似的方法：使用 BigDecimal.ZERO 或者创建一个新的 BigDecimal 对象 new BigDecimal(0)。本文将探讨这两种方法之间微妙但重要的差异，并讨论何时选择其中一种。</p>
<p>首先，让我们快速了解如何比较两个 BigDecimal 对象。BigDecimal 类实现了 Comparable 接口，提供了使用 equals() 方法或 compareTo() 方法比较两个 BigDecimal 的灵活性。但是，重要的是要认识到这两种方法在比较两个 BigDecimal 实例时进行的是不同的比较。</p>`,r:{minutes:3.36,words:1009},t:"BigDecimal.ZERO 与 new BigDecimal(0) | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Calculate%20Months%20Between%20Two%20Dates%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Calculate Months Between Two Dates in Java.html-BzHvcIBf.js"),__vite__mapDeps([154,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","日期时间计算"],g:["Java","日期","月份间隔"],e:`
<p>在Java中计算两个日期之间的月份间隔是一个常见的编程任务。Java标准库和第三方库提供了类和方法来计算两个日期之间的月份间隔。</p>
<p>本文教程将深入探讨如何使用传统的日期API、日期时间API和Joda-Time库来计算Java中两个日期之间的月份间隔。</p>
<h2>2. 日期值的影响</h2>
<p>在计算两个日期之间的月份间隔时，日期的天数值会影响结果。</p>
<p>默认情况下，Java标准库和Joda-Time库会考虑天数值。<strong>如果结束日期的天数值小于开始日期的天数值，则最后一个月份不被视为完整的月份，并且不包括在月份间隔中</strong>：</p>`,r:{minutes:6.6,words:1979},t:"Java中计算两个日期之间月份差异的教程",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Callbacks%20in%20ListenableFuture%20and%20CompletableFuture.html",{loader:()=>n(()=>import("./2024-06-25-Callbacks in ListenableFuture and CompletableFuture.html-CgSnTK0a.js"),__vite__mapDeps([155,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","Concurrency"],g:["ListenableFuture","CompletableFuture"],e:`<hr>
<h1>Java中ListenableFuture和CompletableFuture的回调机制</h1>
<h2>1. 概述</h2>
<p><em>ListenableFuture</em> 和 <em>CompletableFuture</em> 都是基于 Java 的 <em>Future</em> 接口构建的。前者是 Google 的 Guava 库的一部分，而后者则是 Java 8 的一部分。</p>
<p>众所周知，<strong><em>Future</em> 接口不提供回调功能</strong>。<strong><em>ListenableFuture</em> 和 <em>CompletableFuture</em> 都填补了这一空白</strong>。在本教程中，我们将学习如何使用它们进行回调机制。</p>`,r:{minutes:3.12,words:936},t:"Java中ListenableFuture和CompletableFuture的回调机制",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Check%20If%20a%20Java%20StringBuilder%20Object%20Contains%20a%20Character.html",{loader:()=>n(()=>import("./2024-06-25-Check If a Java StringBuilder Object Contains a Character.html-BeLxCJlJ.js"),__vite__mapDeps([156,1])),meta:{d:1719309054e3,c:["Java","StringBuilder"],g:["Java","StringBuilder","contains","indexOf"],e:`
<h2>1. 引言</h2>
<p>Java中的<strong>StringBuilder</strong>类提供了一种灵活且高效的方式来操作字符串。在某些情况下，我们需要检查一个<strong>StringBuilder</strong>对象是否包含特定的字符。</p>
<p><strong>在本教程中，我们将探索几种实现此任务的方法。</strong></p>
<h2>2. <strong>StringBuilder</strong>概览</h2>
<p>Java中的<strong>StringBuilder</strong>类是<strong>java.lang</strong>包的一部分，用于创建可变的字符序列。</p>`,r:{minutes:2.57,words:770},t:"检查Java StringBuilder对象是否包含特定字符",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Comparing%20One%20String%20With%20Multiple%20Values%20in%20One%20Expression%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Comparing One String With Multiple Values in One Expression in Java.html-CwOqAxkE.js"),__vite__mapDeps([157,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","Programming"],g:["Java","String Comparison","Set","List","Stream"],e:`<hr>
<h1>在Java中使用单一表达式比较一个字符串与多个值</h1>
<p>在本教程中，我们将讨论使用单一表达式在一组字符串中查找一个字符串的各种方法。</p>
<p>假设我们有一个水果"Apple"和一组水果"Mango"、"Papaya"、"Apple"、"Pineapple"等。现在我们将探索各种方法，以查看字符串"Apple"是否在这些水果组中。</p>
<h3>2. 问题介绍</h3>
<p>在我们进入涵盖单一表达式解决方案的下一节之前，让我们看看使用_if_条件的实现方式：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">boolean</span> <span class="token function">compareWithMultipleStringsUsingIf</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">,</span> <span class="token class-name">String</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:7.3,words:2191},t:"在Java中使用单一表达式比较一个字符串与多个值",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Comparison%20of%20for%20Loops%20and%20Iterators.html",{loader:()=>n(()=>import("./2024-06-25-Comparison of for Loops and Iterators.html-CaTddOz2.js"),__vite__mapDeps([158,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","编程"],g:["for循环","迭代器","性能"],e:'\n<p>_for_循环和_迭代器_都提供了遍历元素集合的机制。尽管两者都用于迭代集合，但它们在语法、功能和适用性上有所不同。</p>\n<p>在本教程中，我们将详细比较_for_循环和_迭代器_，突出它们在几个关键方面的主要区别。</p>\n<p>我们将使用以下字符串列表进行演示：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span>````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>```` names <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"Alice"</span><span class="token punctuation">,</span> <span class="token string">"Bob"</span><span class="token punctuation">,</span> <span class="token string">"Charlie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',r:{minutes:5.66,words:1699},t:"Java中for循环与迭代器的比较",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Convert%20Byte%20Array%20to%20JSON%20and%20Vice%20Versa%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Convert Byte Array to JSON and Vice Versa in Java.html-D_jlWUKv.js"),__vite__mapDeps([159,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","JSON"],g:["byte array","JSON conversion"],e:`
<p>在大多数编程语言中，不同数据格式之间的操作和转换是常见的任务。其中一种场景是将数据在字节数组和JSON格式之间转换。</p>
<p>在本教程中，我们将探讨如何在Java中将字节数组转换为JSON格式，以及反向转换。</p>
<h3>2. 问题陈述</h3>
<p>我们的目标是将JSON字符串转换为字节数组，其中数组的每个元素代表字符串中相应字符的ASCII值。反之，我们还希望将ASCII值的字节数组转换回原始的JSON字符串。</p>
<p>假设我们有以下字节数组：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span>
    <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span>
    <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span>
    <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span>
    <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span>
    <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span>
    <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span>
    <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">122</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">34</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:3.45,words:1035},t:"Java中将字节数组转换为JSON以及反向转换",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Convert%20Excel%20Files%20to%20PDF%20Using%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Convert Excel Files to PDF Using Java.html-uBkXKMpL.js"),__vite__mapDeps([160,1])),meta:{d:1719341427e3,c:["Java","编程"],g:["Excel","PDF","转换"],e:`
<p>请注意，由于提供的网页内容不包含具体的日期、分类(category)和标签(tag)信息，我已根据网页标题和内容自行添加了合理的假设值。如果需要更准确的信息，请提供完整的网页内容或指定具体的日期、分类和标签。由于提供的网页内容不包含具体的日期、分类(category)和标签(tag)信息，我已根据网页标题和内容自行添加了合理的假设值。以下是翻译的标题和内容的开始部分：</p>
<hr>
<p>date: 2024-06-26
category:</p>
<ul>
<li>Java</li>
<li>编程
tag:</li>
<li>Excel</li>
<li>PDF</li>
<li>转换
head:</li>
<li>
<ul>
<li>meta</li>
<li>name: keywords
content: Java, Excel, PDF, 转换, 编程</li>
</ul>
</li>
</ul>`,r:{minutes:.85,words:256},t:"使用Java将Excel文件转换为PDF",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Convert%20String%20to%20long%20or%20Long%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Convert String to long or Long in Java.html-EPNORJDp.js"),__vite__mapDeps([161,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","编程"],g:["String","Long","转换"],e:`
<p>在本教程中，我们将探讨如何将一个字符串转换为long基本类型或Long对象。</p>
<p>假设我们有一个字符串，其值反映了一个数字，这个数字刚好超出了有符号int的范围。我们以Integer.MAX_VALUE + 1为例，即2,147,483,648。</p>
<h3>2. 使用Long的构造函数</h3>
<p>给定我们的字符串，我们可以<strong>使用接受字符串作为参数的重载Long构造函数</strong>：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Long</span> l <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">(</span><span class="token string">"2147483648"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:3.35,words:1006},t:"Java中将字符串转换为long或Long类型",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Convert%20a%20String%20to%20a%20List%20of%20Characters%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Convert a String to a List of Characters in Java.html-C80KXGzJ.js"),__vite__mapDeps([162,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","编程"],g:["Java字符串","字符串转字符列表"],e:`
<h2>1. 引言</h2>
<p>Java提供了多种操作字符串的方法。</p>
<p><strong>在本教程中，我们将探索一个常见的需求，即将字符串转换为字符列表。</strong></p>
<h2>2. 使用 toCharArray()</h2>
<p>toCharArray() 是将字符串转换为字符数组的直接方式。</p>
<p>让我们看看以下代码示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenString_whenUsingToCharArray_thenConvertToCharList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> charArray <span class="token operator">=</span> inputString<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">List</span>\`\`\`\`\`\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span>\`\`\`\`\`\` charList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> charArray<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        charList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">assertEquals</span><span class="token punctuation">(</span>inputString<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> charList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.79,words:837},t:"Java中将字符串转换为字符列表的方法",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Convert%20an%20OutputStream%20to%20a%20Byte%20Array%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Convert an OutputStream to a Byte Array in Java.html-Bvj_gNrb.js"),__vite__mapDeps([163,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","IO"],g:["OutputStream","Byte Array"],e:`
<h2><strong>1. 引言</strong></h2>
<p>处理流是常见的任务，尤其是在进行输入和输出操作时。偶尔，我们需要将<code>OutputStream</code>转换为字节数组。这在网络编程、文件处理或数据操作等多种场景中都非常有用。</p>
<p>在本教程中，我们将探讨两种实现这种转换的方法。</p>
<h2><strong>2. 使用Apache Commons IO库中的FileUtils</strong></h2>
<p>Apache Commons IO库提供了<code>FileUtils</code>类，其中包含了<code>readFileToByteArray()</code>方法，可以间接地将<code>FileOutputStream</code>转换为字节数组。这是通过首先写入文件，然后从文件系统中读取生成的字节来实现的。</p>`,r:{minutes:3.77,words:1130},t:"在Java中将OutputStream转换为字节数组",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Detect%20the%20Last%20Iteration%20in%20for%20Loops%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Detect the Last Iteration in for Loops in Java.html-vRD9BqB5.js"),__vite__mapDeps([164,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","编程"],g:["for循环","迭代器","Java"],e:`
<h2>1. 概述</h2>
<p>for-each循环是一个在迭代List时优雅且简单的工具。有时，我们需要根据当前迭代是否是最后一次来执行特定操作或做出决策。</p>
<p>在本教程中，我们将讨论这种情况，并探索在for循环中确定当前迭代是否是最后一次的不同方法。</p>
<h2>2. 问题介绍</h2>
<p>首先，让我们创建一个电影标题的List作为我们的输入示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span>\`\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>\`\` <span class="token constant">MOVIES</span> <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
  <span class="token string">"Titanic"</span><span class="token punctuation">,</span>
  <span class="token string">"The Deer Hunter"</span><span class="token punctuation">,</span>
  <span class="token string">"Lord of the Rings"</span><span class="token punctuation">,</span>
  <span class="token string">"One Flew Over the Cuckoo's Nest"</span><span class="token punctuation">,</span>
  <span class="token string">"No Country For Old Men"</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:3.68,words:1105},t:"Java中检测for循环的最后一次迭代",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Difference%20Between%201L%20and%20%20long%20%201.html",{loader:()=>n(()=>import("./2024-06-25-Difference Between 1L and  long  1.html-CUHUlUlv.js"),__vite__mapDeps([165,1])),meta:{d:171929461e4,c:["REST with Spring Boot","Learn Spring Security"],g:["Persistence","REST","Security"],e:`
<p>date: 2024-06-25
category:</p>
<ul>
<li>REST with Spring Boot</li>
<li>Learn Spring Security
tag:</li>
<li>Persistence</li>
<li>REST</li>
<li>Security
head:</li>
<li>
<ul>
<li>meta</li>
<li>name: keywords
content: Java, Long Literal, Cast</li>
</ul>
</li>
</ul>
<hr>
<h1>Java 中的 1L 与 (long) 1 的区别</h1>`,r:{minutes:.25,words:76},t:"Java 中的 1L 与 (long) 1 的区别---",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Difference%20Between%20execute%20%20%20and%20submit%20%20%20in%20Executor%20Service.html",{loader:()=>n(()=>import("./2024-06-25-Difference Between execute   and submit   in Executor Service.html-Be0DE1xA.js"),__vite__mapDeps([166,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","Concurrency"],g:["ExecutorService","submit()","execute()"],e:`
<p>多线程和并行处理是现代应用开发中的关键概念。在Java中，_Executor_框架提供了一种有效管理和控制并发任务执行的方式。_ExecutorService_接口是这个框架的核心，它提供了两种常用的方法来提交需要执行的任务：_submit()<em>和_execute()</em>。</p>
<p>在本文中，我们将探讨这两种方法之间的主要区别。我们将通过一个简单的示例来使用_submit()<em>和_execute()</em>，模拟一个计算数组中数字总和的任务，使用线程池。</p>
<h2>2. 使用_ExecutorService.submit( )_</h2>
<p>让我们首先从_submit()_方法开始，它广泛用于_ExecutorService_接口。它允许我们提交任务以供执行，并返回一个表示计算结果的_Future_对象。</p>`,r:{minutes:4.3,words:1290},t:"Java中ExecutorService的submit()和execute()方法的区别",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Dijkstra%20s%20Algorithm%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-25-Dijkstra s Algorithm in Kotlin.html-ofrIQPlh.js"),__vite__mapDeps([167,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Kotlin","Algorithms"],g:["Dijkstra’s Algorithm","Graphs"],e:`<hr>
<h1>Kotlin中实现迪杰斯特拉算法</h1>
<p>在本教程中，我们将学习如何在Kotlin中实现迪杰斯特拉算法。它是一种在加权图中找出从起始节点到所有其他节点的最短路径的解决方案。与适用于无权图的广度优先搜索（BFS）不同，迪杰斯特拉算法在有加权边的环境中表现出色，根据累积权重或距离优化路径。本文深入探讨了在Kotlin中实现迪杰斯特拉算法，展示了该语言简洁的语法和强大的功能。</p>
<h3>2. 理解迪杰斯特拉算法</h3>
<p>迪杰斯特拉算法擅长在有加权边的图中找到从起始节点到所有其他节点的最短路径。它将起始节点的距离初始化为零，其他节点的距离初始化为无穷大，迭代更新距离，并按距离的升序处理节点。</p>`,r:{minutes:5.78,words:1733},t:"Kotlin中实现迪杰斯特拉算法",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Find%20Files%20by%20Extension%20in%20Specified%20Directory%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Find Files by Extension in Specified Directory in Java.html-CqLsMISz.js"),__vite__mapDeps([168,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","文件处理"],g:["Java","文件搜索","文件遍历"],e:`
<h2>1. 引言</h2>
<p>在本快速教程中，我们将看到使用核心Java和外部库来搜索目录（包括子目录）中匹配特定扩展名的文件的一些替代方案。我们将从简单的数组和列表到流和其他更新的方法。</p>
<h2>2. 设置我们的过滤器</h2>
<p><strong>由于我们需要按扩展名过滤文件，让我们从简单的_Predicate_实现开始。</strong> 我们需要一点输入清理，以确保我们匹配大多数用例，比如接受以点开头或不以点开头的扩展名：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MatchExtensionPredicate</span> <span class="token keyword">implements</span> <span class="token class-name">Predicate</span>\`\`\`\`\`\`\`\`\`\`\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Path</span><span class="token punctuation">&gt;</span></span>\`\`\`\`\`\`\`\`\`\`\` <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> extension<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MatchExtensionPredicate</span><span class="token punctuation">(</span><span class="token class-name">String</span> extension<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>extension<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            extension <span class="token operator">=</span> <span class="token string">"."</span> <span class="token operator">+</span> extension<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>extension <span class="token operator">=</span> extension<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Path</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>path <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:5.14,words:1543},t:"在Java中指定目录查找特定扩展名的文件",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Find%20Missing%20Number%20From%20a%20Given%20Array%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Find Missing Number From a Given Array in Java.html-DLCi_-j8.js"),__vite__mapDeps([169,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","数组"],g:["数组","缺失数字","Java"],e:`<hr>
<h1>在Java中从给定数组中找到缺失的数字</h1>
<h2>1. 概述</h2>
<p>在Java中，从数组中找出指定范围内的缺失数字在多种场景下都非常有用，例如数据验证、确保完整性或识别数据集中的空白。</p>
<p>在本教程中，我们将<strong>学习多种方法来从整数范围 <em>[1-N]</em> 的数组中找出单个缺失的数字</strong>。</p>
<h2>2. 理解场景</h2>
<p>让我们想象我们有一个包含整数范围 <em>[1-9]</em>（包括两端）的 <em>numbers</em> 数组：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>int[] numbers = new int[] { 1, 4, 5, 2, 7, 8, 6, 9 };
</code></pre></div>`,r:{minutes:4.74,words:1421},t:"在Java中从给定数组中找到缺失的数字",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Fixing%20Hibernate%20QueryException%20%20Named%20Parameter%20Not%20Bound.html",{loader:()=>n(()=>import("./2024-06-25-Fixing Hibernate QueryException  Named Parameter Not Bound.html-CPL3nbbF.js"),__vite__mapDeps([170,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Hibernate","QueryException"],g:["QueryException","Named Parameter"],e:`
<h2>1. 概述</h2>
<p>在这篇简短的教程中，我们将阐明如何解决Hibernate查询异常：“命名参数未绑定”。</p>
<p>首先，我们将解释异常的主要原因。然后，我们将演示如何重现它，最后，我们将学习如何修复它。</p>
<h2>2. 理解异常</h2>
<p>在跳转到解决方案之前，让我们尝试理解异常及其堆栈跟踪的含义。</p>
<p>简而言之，Hibernate抛出_QueryException_来表示在将Hibernate查询转换为SQL时由于无效语法而出现错误。因此，堆栈跟踪中的“命名参数未绑定”表示Hibernate无法绑定在特定查询中指定的命名参数。</p>
<p>通常，命名参数以冒号(:)开头，后面跟着实际值的占位符，该值需要在执行查询之前设置：</p>`,r:{minutes:2.33,words:698},t:"解决Hibernate查询异常：未绑定的命名参数",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Format%20LocalDate%20to%20ISO%208601%20With%20T%20and%20Z.html",{loader:()=>n(()=>import("./2024-06-25-Format LocalDate to ISO 8601 With T and Z.html-Cp3RoxHu.js"),__vite__mapDeps([171,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","ISO 8601"],g:["LocalDate","DateTimeFormatter"],e:`
<p>处理日期和时间的标准格式对于处理涉及不同时区的应用程序或在系统之间交换数据至关重要。</p>
<p>在本教程中，我们将探讨将_LocalDate_格式化为ISO 8601格式的多种技术。这种格式包括‘<em>T</em>’分隔符和表示协调世界时（UTC）的‘<em>Z</em>’。</p>
<p>_LocalDate_是Java 8中引入的现代日期和时间API的一部分，位于_java.time_包下。它是不可变的，这意味着一旦创建实例，其值就不能更改。它表示一个不考虑时间或时区的日期，专注于月份、年份和月份中的天。_LocalDate_便于方便地操作和与日期信息交互。</p>
<p>ISO 8601是表示日期和时间的国际标准，格式清晰、明确且被普遍接受。它为表示日期和时间提供了标准化的方法，这对于广泛的应用程序至关重要。这包括数据交换、国际通信和计算机系统。</p>`,r:{minutes:5.53,words:1659},t:"Java中将LocalDate格式化为带T和Z的ISO 8601格式",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Get%20Client%20Information%20From%20HTTP%20Request%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Get Client Information From HTTP Request in Java.html-B-r5dpuT.js"),__vite__mapDeps([172,1])),meta:{d:1719312693e3,e:`<p>根据您提供的网页内容，以下是翻译结果：</p>
<hr>
<p>date: 2024-06-25
category:</p>
<ul>
<li>Java</li>
<li>Web Development
tag:</li>
<li>HTTP Request</li>
<li>Servlet</li>
<li>HttpServletRequest
head:</li>
<li>
<ul>
<li>meta</li>
<li>name: keywords
content: Java, HTTP, Servlet, HttpServletRequest, User-Agent, Web Development</li>
</ul>
</li>
</ul>`,r:{minutes:4.03,words:1208},t:"在Java中从HTTP请求获取客户端信息",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Getting%20All%20Field%20Names%20of%20a%20Class%20Using%20Kotlin%20Reflection.html",{loader:()=>n(()=>import("./2024-06-25-Getting All Field Names of a Class Using Kotlin Reflection.html-B1iIqB4O.js"),__vite__mapDeps([173,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Kotlin","Reflection"],g:["Kotlin","Reflection","Field Names"],e:'\n<p>在 Kotlin 中，反射允许我们在运行时动态地检查、操作和与类、字段和方法交互。作为开发者，我们有时需要动态地检索类的字段名称。</p>\n<p>在本教程中，我们将探讨使用 Kotlin 反射获取类所有字段名称的各种技术。</p>\n<h2>1. 使用 <em>members</em> 属性</h2>\n<p>我们获取类所有字段名称的第一种方法涉及使用 <em>KClass</em> 的 <em>members</em> 属性。这返回类的所有成员的列表，包括字段和方法。<strong>我们可以过滤这些成员以仅提取属性</strong>：</p>\n<div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">getAllFieldNamesUsingMembersProperty</span><span class="token punctuation">(</span>clazz<span class="token operator">:</span> KClass`````<span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span>`````<span class="token punctuation">)</span><span class="token operator">:</span> List````<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span>```` <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> clazz<span class="token punctuation">.</span>members\n      <span class="token punctuation">.</span><span class="token function">filter</span> <span class="token punctuation">{</span> it <span class="token keyword">is</span> KProperty`````<span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span>````` <span class="token punctuation">}</span>\n      <span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span>name <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:4.94,words:1481},t:"使用 Kotlin 反射获取类的所有字段名",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-How%20to%20Get%20Last%20Record%20in%20Spring%20Data%20JPA.html",{loader:()=>n(()=>import("./2024-06-25-How to Get Last Record in Spring Data JPA.html-D9aFt4-s.js"),__vite__mapDeps([174,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Spring Data JPA","JPA"],g:["Spring","JPA","Hibernate"],e:`
<p>在这个简短的教程中，我们将探索在Spring Data JPA中获取最后一条记录的不同方法。首先，我们将看看如何使用派生查询方法来实现。然后，我们将探索如何使用<code>@Query</code>注解来达到同样的目的。</p>
<h2>2. 设置</h2>
<p>**首先，让我们创建并初始化我们想要查询的表。**让我们从创建一个<code>Post</code>实体类开始：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Post</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Id</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDate</span> publicationDate<span class="token punctuation">;</span>

    <span class="token comment">// 标准的getter和setter</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4,words:1200},t:"如何在Spring Data JPA中获取最后一条记录",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-How%20to%20Write%20Strings%20to%20OutputStream%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-How to Write Strings to OutputStream in Java.html-CVsb-wcr.js"),__vite__mapDeps([175,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","OutputStream"],g:["Java","OutputStream","StringWriter"],e:`<hr>
<h1>如何在Java中将字符串写入OutputStream</h1>
<h2>1. 概述</h2>
<p>我们经常在需要将数据传输到外部目的地，如文件和网络时使用_OutputStream_。数据可以是二进制格式或字符串格式。<strong>我们使用_OutputStream_，这是一个字节流，来处理二进制数据，并使用_Writer_，这是一个字符流，来处理字符串数据。</strong></p>
<p>然而，在某些情况下，由于选定的API的限制，我们必须将字符串写入_OutputStream_。在某些情况下，API可能只提供_OutputStream_而不是_Writer_。在本教程中，我们将探讨在这种情况下将字符串写入_OutputStream_的不同方法。</p>`,r:{minutes:3.39,words:1017},t:"如何在Java中将字符串写入OutputStream",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Java%20System.currentTimeMillis%20%20%20Vs.%20System.nanoTime%20%20.html",{loader:()=>n(()=>import("./2024-06-25-Java System.currentTimeMillis   Vs. System.nanoTime  .html-OtjI36Kt.js"),__vite__mapDeps([176,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","性能"],g:["System.currentTimeMillis()","System.nanoTime()"],e:`
<h2>1. 引言</h2>
<p>Java 中用于时间测量的两个常用方法是 <code>System.currentTimeMillis()</code> 和 <code>System.nanoTime()</code>。尽管这两种方法都提供了测量时间的方式，它们服务于不同的目的，并且具有不同的特点。</p>
<p><strong>在本教程中，我们将探索这两种方法之间的区别，并了解何时使用每种方法。</strong></p>
<h2>2. <code>System.currentTimeMillis()</code> 方法</h2>
<p><code>currentTimeMillis()</code> 方法返回自1970年1月1日00:00:00 UTC起的当前时间（以毫秒为单位）。此外，它基于系统时钟，适用于测量绝对时间，例如当前日期和时间。</p>`,r:{minutes:2.74,words:822},t:"Java System.currentTimeMillis() 与 System.nanoTime() 比较 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Java%20s%20String.length%20%20%20and%20String.getBytes%20%20.length.html",{loader:()=>n(()=>import("./2024-06-25-Java s String.length   and String.getBytes  .length.html-Bp7pzzzj.js"),__vite__mapDeps([177,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","字符串"],g:["String.length()","String.getBytes().length"],e:`
<p>当我们在Java中工作时，操作字符串是一项基本技能。因此，理解与字符串相关的方法是编写高效且无误代码的关键。</p>
<p>两个常用的方法，String.length()和String.getBytes().length，乍一看可能看起来相似，但它们服务于不同的目的。</p>
<p>在本教程中，我们将了解这两种方法并探讨它们之间的区别。此外，我们还将讨论何时使用每一种方法。</p>
<h3>String.length()和String.getBytes().length的初步了解</h3>
<p>正如方法名所暗示的，String.length()方法返回字符串的长度。另一方面，String.getBytes()从给定的字符串中获取默认编码的字节数组。然后，String.getBytes().length报告数组的长度。</p>`,r:{minutes:5.7,words:1710},t:"Java中String.length()与String.getBytes().length的区别",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Lazy%20Field%20Initialization%20with%20Lambdas.html",{loader:()=>n(()=>import("./2024-06-25-Lazy Field Initialization with Lambdas.html-DIxNVgH9.js"),__vite__mapDeps([178,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","Programming"],g:["Java","Lambda","Lazy Initialization"],e:`<hr>
<h1>Java中使用Lambda表达式进行懒加载字段初始化</h1>
<ol>
<li>引言</li>
</ol>
<p>在处理需要执行昂贵或慢速方法的资源时，例如数据库查询或REST调用，我们通常会使用本地缓存或私有字段。一般来说，lambda函数允许我们使用方法作为参数，并推迟方法的执行或完全省略它。</p>
<p>在本教程中，我们将展示使用lambda函数以不同方式懒加载字段初始化。</p>
<ol start="2">
<li>Lambda替代</li>
</ol>
<p>让我们实现我们自己的解决方案的第一个版本。作为第一次迭代，我们将提供_LambdaSupplier_类：</p>`,r:{minutes:4.05,words:1214},t:"Java中使用Lambda表达式进行懒加载字段初始化",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Print%20a%20Double%20Value%20Without%20Scientific%20Notation%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Print a Double Value Without Scientific Notation in Java.html-BtfbEz2a.js"),__vite__mapDeps([179,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","Programming"],g:["double","scientific notation","formatting"],e:`
<p>在我们的日常工作中，我们经常面临格式化双精度值的挑战。其中之一可能是打印双精度值时避免使用科学记数法。尽管这种方法有助于我们更紧凑地表示大和小的值，但在某些情况下，默认的科学记数法可能不是最实用的选择。在这种情况下，可能需要考虑替代方法以获得更合适的表示。</p>
<p>在本教程中，我们将探索在Java中打印双精度值时不使用科学记数法的各种方法。</p>
<p>科学记数法由两个组成部分：系数和指数。通常，介于1和10之间的小数是系数，而指数表示系统将系数乘以10的幂。</p>
<p>在Java中，科学记数法通常使用“e”表示法表示，其中“e”代表指数：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">double</span> largeNumber <span class="token operator">=</span> <span class="token number">256450000d</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Large Number: "</span> <span class="token operator">+</span> largeNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">double</span> smallNumber <span class="token operator">=</span> <span class="token number">0.0000046d</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Small Number: "</span> <span class="token operator">+</span> smallNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:4.97,words:1490},t:"在Java中打印双精度值时不使用科学记数法",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Reactor%20WebFlux%20vs%20Virtual%20Threads.html",{loader:()=>n(()=>import("./2024-06-25-Reactor WebFlux vs Virtual Threads.html-M0JRN4CT.js"),__vite__mapDeps([180,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","WebFlux"],g:["Reactor","Virtual Threads"],e:`
<p>在本教程中，我们将比较 Java 19 的虚拟线程与 Reactor 项目的 WebFlux。我们将首先回顾每种方法的基本工作原理，然后分析它们的优势和劣势。</p>
<p>我们将从探索响应式框架的优势开始，并看看为什么 WebFlux 仍然具有价值。之后，我们将讨论每个请求一个线程的方法，并强调虚拟线程可能是更好选择的场景。</p>
<h2>2. 代码示例</h2>
<p>在本文的代码示例中，我们假设我们正在开发一个电子商务应用程序的后端。我们将专注于负责计算和发布添加到购物车中的商品价格的函数：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">ProductService</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">PRODUCT_ADDED_TO_CART_TOPIC</span> <span class="token operator">=</span> <span class="token string">"product-added-to-cart"</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ProductRepository</span> repository<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">DiscountService</span> discountService<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">KafkaTemplate</span>\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ProductAddedToCartEvent</span><span class="token punctuation">&gt;</span></span>\` kafkaTemplate<span class="token punctuation">;</span>

    <span class="token comment">// 构造函数</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addProductToCart</span><span class="token punctuation">(</span><span class="token class-name">String</span> productId<span class="token punctuation">,</span> <span class="token class-name">String</span> cartId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Product</span> product <span class="token operator">=</span> repository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"not found!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Price</span> price <span class="token operator">=</span> product<span class="token punctuation">.</span><span class="token function">basePrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">category</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEligibleForDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">BigDecimal</span> discount <span class="token operator">=</span> discountService<span class="token punctuation">.</span><span class="token function">discountForProduct</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            price<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>price<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>discount<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">var</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProductAddedToCartEvent</span><span class="token punctuation">(</span>productId<span class="token punctuation">,</span> price<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> price<span class="token punctuation">.</span><span class="token function">getCurrency</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cartId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        kafkaTemplate<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">PRODUCT_ADDED_TO_CART_TOPIC</span><span class="token punctuation">,</span> cartId<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:6.4,words:1920},t:"Reactor WebFlux 与虚拟线程 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Read%20a%20File%20and%20Split%20It%20Into%20Multiple%20Files%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Read a File and Split It Into Multiple Files in Java.html-CBbjbY_y.js"),__vite__mapDeps([181,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","文件处理"],g:["Java","文件分割"],e:`
<p>在本教程中，我们将学习如何在Java中拆分大文件。首先，我们将比较将文件完整加载到内存中与使用流的方式读取文件。之后，我们将学习基于文件大小和数量来拆分文件。</p>
<h2>2. 内存中读取文件与流式读取文件</h2>
<p>当我们将文件完整加载到内存中时，JVM会将所有行保留在内存中。这对于小文件是一个很好的选择。然而，对于大文件来说，这经常会导致<code>OutOfMemoryException</code>。</p>
<p>流式读取文件是另一种读取方式，并且有很多方法可以流式读取大文件。<strong>由于整个文件并不在内存中，它消耗的内存更少，并且可以很好地处理大文件而不抛出异常。</strong></p>`,r:{minutes:4.11,words:1232},t:"Java中读取文件并将其拆分为多个文件",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Return%20Map%20Instead%20of%20List%20in%20Spring%20Data%20JPA.html",{loader:()=>n(()=>import("./2024-06-25-Return Map Instead of List in Spring Data JPA.html-zhSgEfoT.js"),__vite__mapDeps([182,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Spring Data JPA","Java"],g:["Spring","JPA","Repository"],e:`
<p>Spring JPA提供了一个非常灵活且方便的API来与数据库交互。然而，有时我们需要自定义它或为返回的集合添加更多功能。</p>
<p>使用Map作为JPA仓库方法的返回类型可能有助于创建服务和数据库之间更直接的交互。<strong>不幸的是，Spring不允许这种转换自动发生。</strong> 在本教程中，我们将检查如何克服这个问题，并学习一些使仓库更具功能性的有趣技术。</p>
<h3>2. 手动实现</h3>
<p>当框架不提供某些功能时，最明显的方法是我们自己实现。在这种情况下，JPA允许我们从头开始实现仓库，跳过整个生成过程，或使用默认方法以获得两全其美的结果。</p>
`,r:{minutes:4.24,words:1272},t:"在Spring Data JPA中返回Map而不是List",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Rotating%20a%20Java%20String%20By%20n%20Characters.html",{loader:()=>n(()=>import("./2024-06-25-Rotating a Java String By n Characters.html-tuzCVbvV.js"),__vite__mapDeps([183,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","编程"],g:["字符串操作","字符串旋转"],e:`
<p>在我们的日常Java编程中，字符串通常是我们必须处理的基本对象。有时，我们需要通过n个字符来旋转给定的字符串。旋转字符串涉及以循环方式移动其字符，创造出动态且视觉上吸引人的效果。</p>
<p>在本教程中，我们将探讨解决字符串旋转问题的几种不同方法。</p>
<h3>2.1. 一个例子</h3>
<p>假设我们有一个字符串对象：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>String STRING = "abcdefg";
</code></pre></div>`,r:{minutes:6.59,words:1977},t:"Java中通过n个字符旋转字符串",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Sending%20Data%20to%20a%20Specific%20Partition%20in%20Kafka.html",{loader:()=>n(()=>import("./2024-06-25-Sending Data to a Specific Partition in Kafka.html-CWdUpq5T.js"),__vite__mapDeps([184,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Kafka","分区"],g:["分布式系统","消息队列"],e:`
<h2>1. 引言</h2>
<p>Apache Kafka是一个分布式流处理平台，擅长处理大规模的实时数据流。Kafka将数据组织成主题(topic)，并将主题进一步划分为分区(partition)。<strong>每个分区充当一个独立的通道，实现并行处理和容错。</strong></p>
<p>本教程深入探讨了在Kafka中将数据发送到特定分区的技术。我们将探索这种方法的好处、实现方式以及潜在的挑战。</p>
<h2>2. Kafka分区的理解</h2>
<p>现在，让我们探索Kafka分区的基本概念。</p>
<h3>2.1 Kafka分区是什么</h3>
<p>当生产者将消息发送到Kafka主题时，Kafka使用指定的分区策略将这些消息组织成分区。分区是表示消息线性有序序列的基本单元。一旦消息被生产，它将根据所选的分区策略被分配到特定的分区。<strong>随后，该消息被追加到该分区的日志末尾。</strong></p>`,r:{minutes:6.71,words:2014},t:"Apache Kafka中将数据发送到特定分区的技巧",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-Sorting%20One%20List%20Based%20on%20Another%20List%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-Sorting One List Based on Another List in Java.html-Dz0m3KWj.js"),__vite__mapDeps([185,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","编程技巧"],g:["Java","列表排序"],e:'\n<p>在Java中，根据另一个列表的顺序对列表进行排序是一项常见任务，存在多种方法可以实现这一点。</p>\n<p>在本教程中，我们将看到Java中根据另一个列表对列表进行排序的不同方法。</p>\n<h2>2. 示例</h2>\n<p>假设我们有一个产品列表<code>productList</code>和另一个列表<code>shoppingCart</code>，后者代表用户的购物车。<code>shoppingCart</code>包含各种产品ID，我们需要按照它们在购物车中出现的顺序显示产品：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span>````````````````````````````````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>```````````````````````````````````````` productList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"Burger"</span><span class="token punctuation">,</span> <span class="token string">"Coke"</span><span class="token punctuation">,</span> <span class="token string">"Fries"</span><span class="token punctuation">,</span> <span class="token string">"Pizza"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">List</span>````````````````````````````````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>```````````````````````````````````````` shoppingCart <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"Pizza"</span><span class="token punctuation">,</span> <span class="token string">"Burger"</span><span class="token punctuation">,</span> <span class="token string">"Fries"</span><span class="token punctuation">,</span> <span class="token string">"Coke"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',r:{minutes:5.28,words:1585},t:"Java中根据另一个列表排序列表的多种方法",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-UTF%208%20Validation%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-25-UTF 8 Validation in Java.html-0fI8SwTP.js"),__vite__mapDeps([186,1])),meta:{d:17192736e5,l:"2024年6月25日",c:["Java","UTF-8"],g:["UTF-8","编码","验证"],e:`
<h2>1. 概述</h2>
<p>在数据传输中，我们经常需要处理字节数据。如果数据是编码后的字符串而不是二进制数据，我们通常会使用Unicode编码。Unicode转换格式-8（UTF-8）是一种可变长度的编码方式，可以编码所有可能的Unicode字符。</p>
<p>在本教程中，我们将探讨UTF-8编码字节和字符串之间的转换。之后，我们将深入探讨在Java中对字节数据进行UTF-8验证的关键方面。</p>
<h2>2. UTF-8转换</h2>
<p>在我们进入验证部分之前，让我们回顾一下如何将字符串转换为UTF-8编码的字节数组，反之亦然。</p>
<p><strong>我们可以通过调用字符串的目标编码的_getBytes()_方法，将字符串转换为字节数组：</strong></p>`,r:{minutes:3.94,words:1183},t:"Java中的UTF-8编码验证",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-What%20Does%20It%20Mean%20to%20Hydrate%20an%20Object%20.html",{loader:()=>n(()=>import("./2024-06-25-What Does It Mean to Hydrate an Object .html-C5vlCNd7.js"),__vite__mapDeps([187,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Programming","Java"],g:["Object Hydration","Lazy Initialization","ORM Frameworks"],e:`
<h2>1. 引言</h2>
<p>在本教程中，我们将讨论在编程上下文中“水合化”一词的含义，并深入探讨水合化一个Java对象意味着什么。</p>
<h2>2. 对象水合化</h2>
<h3>2.1. 延迟初始化</h3>
<p>延迟加载或延迟初始化是软件应用程序中常用的模式。在Java中，对象是一个使用_new_关键字创建的类的实例。对象是程序的构建块，对象通过相互交互来实现所需的功能。</p>
<p>对象通常旨在表示面向对象编程范式中的现实世界实体，因此，对象具有多个相关属性。<strong>对象初始化指的是用真实数据填充对象属性的过程。</strong> 这通常是通过调用类构造函数并将数据作为参数传递来完成的。<strong>初始化也可以从数据源如网络、数据库或文件系统进行。</strong></p>`,r:{minutes:5.38,words:1615},t:"什么是对象水合化？ | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-25/2024-06-25-When%20to%20Use%20the%20getReferenceById%20%20%20and%20findById%20%20%20Methods%20in%20Spring%20Data%20JPA.html",{loader:()=>n(()=>import("./2024-06-25-When to Use the getReferenceById   and findById   Methods in Spring Data JPA.html-T2PI3eGZ.js"),__vite__mapDeps([188,1])),meta:{d:17036352e5,l:"2023年12月27日",c:["Spring Data JPA","CRUD"],g:["getReferenceById","findById"],e:`
<p><em>JpaRepository</em> 提供了基本的CRUD操作方法。然而，其中一些方法并不那么直接明了，有时很难确定哪种方法最适合给定的情况。</p>
<p><strong><em>getReferenceById(ID)</em> 和 <em>findById(ID)</em> 是经常造成混淆的方法。</strong> 这些方法是 <em>getOne(ID)</em>, findOne(ID), <em>getById(ID)</em> 的新API名称。</p>
<p>在本教程中，我们将学习它们之间的区别，并找出每种方法可能更适合的情况。</p>
<p>让我们从这两种方法中最简单的一个开始。这个方法做了它所说的事情，通常开发者对它没有任何问题。它简单地根据特定的ID在仓库中找到一个实体：</p>`,r:{minutes:7.85,words:2355},t:"在Spring Data JPA中何时使用getReferenceById()和findById()方法",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-A%20Guide%20to%20Timefold%20Solver%20for%20Employee%20Scheduling.html",{loader:()=>n(()=>import("./2024-06-26-A Guide to Timefold Solver for Employee Scheduling.html-GQAfCzLa.js"),__vite__mapDeps([189,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","Timefold Solver"],g:["员工调度","优化"],e:`
<h2>1. 概览</h2>
<h3>1.1. Timefold Solver 是什么？</h3>
<p>Timefold Solver 是一个纯 Java 计划求解器 AI。Timefold 优化计划问题，例如车辆路径问题（VRP）、维护调度、作业车间调度和学校时间表编制。它生成的物流计划可以大幅降低成本，提高服务质量，并减少环境足迹——通常高达 25%——适用于复杂的现实世界调度操作。</p>
<p>Timefold 是 OptaPlanner 的延续。它是一种数学优化的形式（在更广泛的运筹学和人工智能领域中），支持以代码形式编写的约束。</p>
<h3>1.2. 我们将构建什么</h3>`,r:{minutes:9.13,words:2740},t:"Timefold Solver 员工调度问题求解指南",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Connect%20to%20Database%20Through%20Intellij%20Data%20Sources%20and%20Drivers.html",{loader:()=>n(()=>import("./2024-06-26-Connect to Database Through Intellij Data Sources and Drivers.html-CxbPqg6U.js"),__vite__mapDeps([190,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Database","IntelliJ IDEA"],g:["Database Connection","IntelliJ IDEA"],e:`
<p>连接到数据库通过IntelliJ IDEA涉及配置数据源并选择适当的数据库驱动程序。</p>
<p>在本教程中，<strong>我们将学习如何通过IntelliJ数据源和驱动连接到数据库</strong>。</p>
<p>数据库工具和SQL插件通常在IntelliJ IDEA Ultimate中默认启用。然而，如果我们遇到它未启用的情况，我们可以按照以下步骤确保它已启用：</p>
<ol>
<li>首先，让我们打开IntelliJ IDEA，然后导航到“文件”-&gt;“设置”（在Windows/Linux上）或“IntelliJ IDEA”-&gt;“首选项”（在macOS上）</li>
<li>一旦设置/首选项对话框弹出，我们可以导航到“插件”</li>
<li>现在我们需要在已安装插件列表中查找“数据库工具和SQL”插件</li>
<li>如果“数据库工具和SQL”插件尚未选中，我们需要选中它</li>
<li>如果插件未安装，我们必须点击“市场”选项卡并搜索“数据库工具和SQL”以从那里安装它</li>
<li>在启用或安装插件后，我们可能需要重新启动IntelliJ IDEA以应用更改：</li>
</ol>`,r:{minutes:3.47,words:1040},t:"通过IntelliJ数据源和驱动连接数据库",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Deserializing%20JSON%20to%20Java%20Record%20using%20Gson.html",{loader:()=>n(()=>import("./2024-06-26-Deserializing JSON to Java Record using Gson.html-9BUUw6yL.js"),__vite__mapDeps([191,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","JSON"],g:["Gson","Deserialization"],e:`
<h2>1. 引言</h2>
<p>反序列化过程涉及将对象（或数据）的JSON表示转换为编程语言中的等效对象，例如Java对象。Gson是一个流行的Java库，用于JSON序列化和反序列化，简化了这一过程。</p>
<p><strong>在本教程中，我们将探讨如何使用Gson将JSON数据反序列化为Java记录。</strong></p>
<h2>2. 创建Java记录</h2>
<p>在深入代码示例之前，我们需要确保已经将Gson库添加到我们的项目中。<strong>我们可以将其作为构建工具的依赖项添加，例如Maven或Gradle。对于Maven，我们添加以下依赖项：</strong></p>`,r:{minutes:2.49,words:748},t:"使用Gson将JSON反序列化为Java记录",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Differences%20Between%20Entities%20and%20DTOs.html",{loader:()=>n(()=>import("./2024-06-26-Differences Between Entities and DTOs.html-Qbt94GUg.js"),__vite__mapDeps([192,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","Software Development"],g:["Entity","DTO"],e:`
<p>在软件开发领域，实体（Entities）和数据传输对象（DTOs）之间有明显的区别。了解它们确切的角色和差异可以帮助我们构建更高效和可维护的软件。</p>
<p>在本文中，我们将探讨实体和DTOs之间的区别，并尝试提供对它们目的的清晰理解，以及何时在我们的软件项目中使用它们。在讨论每个概念时，我们将使用Spring Boot和JPA来构建一个简单的用户管理应用程序。</p>
<p>实体是我们应用程序领域中真实世界对象或概念的基本组成部分。它们通常直接对应于数据库表或领域对象。因此，它们的主要目的是封装和管理这些对象的状态和行为。</p>
<h3>2.1 实体示例</h3>
<p>让我们为我们的项目创建一些实体，代表一个拥有多本书的用户。我们将从创建_Book_实体开始：</p>`,r:{minutes:6.87,words:2062},t:"实体与数据传输对象（DTO）的区别",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Extract%20Numbers%20From%20a%20String%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-26-Extract Numbers From a String in Kotlin.html-BqKHMfUC.js"),__vite__mapDeps([193,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Kotlin","编程"],g:["Kotlin","字符串","数字提取"],e:`
<h2>1. 引言</h2>
<p>在数据分析和处理中，从文本中提取数字信息是一个关键且基本的任务。这对于解析标识符、提取电话号码、解释邮政编码等任务至关重要。</p>
<p>在本教程中，我们将探讨在Kotlin中从字符串中提取数字的不同方法。</p>
<h2>2. 假设</h2>
<p>对于手头的问题，我们将仅关注提取可以转换为_BigInteger_数据类型的十进制正整数。小数和非十进制数字不在提取方法的范围内。</p>
<h2>3. 使用循环</h2>
<p>我们可以使用传统的_for_循环来遍历文本中的每个字符并提取数字。让我们看看实现：</p>
<div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">extractNumbersUsingLoop</span><span class="token punctuation">(</span>str<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> List\`\`\`\`\`<span class="token operator">&lt;</span>BigInteger<span class="token operator">&gt;</span>\`\`\`\`\` <span class="token punctuation">{</span>
    <span class="token keyword">val</span> numbers <span class="token operator">=</span> mutableListOf\`\`\`\`\`<span class="token operator">&lt;</span>BigInteger<span class="token operator">&gt;</span>\`\`\`\`\`<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> currentNumber <span class="token operator">=</span> <span class="token function">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>char <span class="token keyword">in</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>char<span class="token punctuation">.</span><span class="token function">isDigit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            currentNumber<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>currentNumber<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            numbers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>currentNumber<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBigInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            currentNumber<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentNumber<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        numbers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>currentNumber<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBigInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> numbers
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.94,words:1183},t:"在Kotlin中从字符串中提取数字",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Get%20Index%20of%20First%20Element%20Matching%20Boolean%20Using%20Java%20Streams.html",{loader:()=>n(()=>import("./2024-06-26-Get Index of First Element Matching Boolean Using Java Streams.html-CelpyoAz.js"),__vite__mapDeps([194,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","Streams"],g:["Java 8","Stream API"],e:`
<h2>1. 引言</h2>
<p>在数据结构中查找元素的索引是开发者的常见任务。在本教程中，我们将使用Java Stream API和第三方库来查找列表中第一个匹配布尔条件的元素的索引。</p>
<h2>2. 环境搭建</h2>
<p>在本文中，我们将使用下面提到的User对象编写一些测试用例来实现我们的目标：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> userId<span class="token punctuation">;</span>

    <span class="token comment">// 构造函数和getter方法</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.48,words:1043},t:"使用Java Stream API获取布尔条件匹配的第一个元素的索引",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Handling%20NullPointerException%20in%20findFirst%20%20%20When%20the%20First%20Element%20Is%20Null.html",{loader:()=>n(()=>import("./2024-06-26-Handling NullPointerException in findFirst   When the First Element Is Null.html-CBnk71T4.js"),__vite__mapDeps([195,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","Exception Handling"],g:["NullPointerException","findFirst()","Optional"],e:`
<p>在这个简短的教程中，我们将探讨在使用findFirst()方法时避免NullPointerException的不同方法。</p>
<p>首先，我们将解释导致该方法因NullPointerException失败的原因。然后，我们将通过实际示例演示如何重现并修复异常。</p>
<h3>解释问题</h3>
<p>简而言之，NullPointerException被抛出以表明我们在需要对象的地方使用了null进行了某些操作。</p>
<p>通常，我们使用findFirst()来返回一个包含给定流的第一个元素的Optional实例。然而，<strong>根据文档，如果返回的第一个元素是null，该方法会抛出NullPointerException</strong>。</p>`,r:{minutes:2.63,words:789},t:"处理findFirst()方法中第一个元素为Null时的NullPointerException",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-How%20to%20Effectively%20Unit%20Test%20CompletableFuture.html",{loader:()=>n(()=>import("./2024-06-26-How to Effectively Unit Test CompletableFuture.html-BZijLVTj.js"),__vite__mapDeps([196,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","异步编程"],g:["CompletableFuture","单元测试"],e:`
<p>CompletableFuture 是 Java 中用于异步编程的强大工具。它提供了一种方便的方式来将异步任务链接在一起并处理它们的结果。它通常用于需要执行异步操作并在稍后阶段需要使用或处理其结果的情况。</p>
<p>然而，对 CompletableFuture 进行单元测试可能具有挑战性，因为它的异步特性。依赖于顺序执行的传统测试方法常常无法捕捉到异步代码的细微差别。在本教程中，我们将讨论如何使用两种不同的方法：黑盒测试和基于状态的测试，来有效地对 CompletableFuture 进行单元测试。</p>
<p>异步代码引入了挑战，因为它的非阻塞和并发执行，给传统测试方法带来了困难。这些挑战包括：</p>`,r:{minutes:6.07,words:1821},t:"如何有效地对CompletableFuture进行单元测试",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Inter%20Process%20Communication%20Methods%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-26-Inter Process Communication Methods in Java.html-CFwgYfbI.js"),__vite__mapDeps([197,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","编程"],g:["Inter-Process Communication","Java IPC"],e:`
<h2><strong>1. 引言</strong></h2>
<p>们之前已经研究了进程间通信（IPC），并比较了不同方法之间的性能。在本文中，我们将探讨如何在Java应用程序中实现这些方法。</p>
<p>进程间通信，简称IPC，是一种不同进程之间可以相互通信的机制。这可以是构成同一应用程序的不同进程，也可以是在同一台计算机上运行的不同进程，或者是分布在互联网上的其他进程。</p>
<p>例如，一些网络浏览器将每个标签页作为不同的操作系统进程运行。这样做是为了使它们彼此隔离，但确实需要在标签页进程和主浏览器进程之间进行一定程度的IPC，以确保一切正常工作。</p>
<p>这里我们所看到的一切都将以消息传递的形式出现。Java缺乏对共享内存机制的标准支持，尽管一些第三方库可以促进这一点。因此，我们将考虑一个生产进程向消费进程发送消息。</p>`,r:{minutes:7.66,words:2297},t:"Java中的进程间通信方法",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Recursively%20Sum%20the%20Integers%20in%20an%20Array.html",{loader:()=>n(()=>import("./2024-06-26-Recursively Sum the Integers in an Array.html-GOxl3DiR.js"),__vite__mapDeps([198,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","编程"],g:["数组","递归"],e:`
<h2>1. 概述</h2>
<p>当我们处理数字时，对数组中的所有整数进行求和是一项常见操作。此外，递归经常提供优雅的解决方案。</p>
<p>在本教程中，我们将探讨如何使用递归来对数组中的整数进行求和。</p>
<h2>2. 带数组复制的递归</h2>
<p>首先，我们初始化一个整数数组：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">INT_ARRAY</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:4.91,words:1474},t:"数组中整数的递归求和 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Skip%20Bytes%20in%20InputStream%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-26-Skip Bytes in InputStream in Java.html-DCdoVuPh.js"),__vite__mapDeps([199,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","InputStream"],g:["Java","InputStream","skip bytes"],e:`
<p>在Java编程中，<code>InputStream</code>是一个基本类，用于从源头读取字节。然而，在某些场景中，可能需要在<code>InputStream</code>中跳过一定数量的字节。</p>
<p>在本教程中，我们将深入探讨<code>skip()</code>方法，探索如何在Java的<code>InputStream</code>中有效地跳过字节。</p>
<p><code>InputStream</code>是一个抽象类，作为所有表示字节输入流的类的超类。此外，它提供了从流中读取字节的方法，成为输入操作的基本组件。</p>
<p>在相同的背景下，有多种情况需要跳过字节。一个常见的场景是处理文件头或元数据，这些对于特定操作不是必需的。因此，跳过不必要的字节可以提高性能并减少需要处理的数据量。</p>`,r:{minutes:2.05,words:614},t:"Java中在InputStream中跳过字节",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Spring%20Kafka%20Trusted%20Packages%20Feature.html",{loader:()=>n(()=>import("./2024-06-26-Spring Kafka Trusted Packages Feature.html-CV19XpRa.js"),__vite__mapDeps([200,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Spring Kafka","Trusted Packages"],g:["Alpaquita Linux","Java apps","Kafka message headers"],e:`
<p>寻找理想的Linux发行版，用于在云中运行现代Spring应用程序？</p>
<p><strong>遇见Alpaquita Linux</strong>：轻量级、安全且功能强大，足以处理重负荷工作负载。</p>
<p>这个发行版是<strong>专门为运行Java应用程序而设计的</strong>。它基于Alpine，具有显著的增强功能，在高密度容器环境中表现出色，同时满足企业级安全标准。</p>
<p>具体来说，容器镜像大小比标准选项小约<strong>30%</strong>，并且消耗的RAM少至<strong>30%</strong>：</p>
<p><strong>&gt;&gt; 立即尝试Alpaquita容器。</strong></p>`,r:{minutes:4.92,words:1476},t:"Spring Kafka可信包特性 | Baeldung",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Static%20Final%20Variables%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-26-Static Final Variables in Java.html-MiYRZ_KC.js"),__vite__mapDeps([201,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","编程"],g:["static","final","常量"],e:`
<p>简单来说，静态最终变量，也称为常量，是Java中创建一个在初始化后不会改变的类变量的关键特性。然而，在静态最终对象引用的情况下，对象的状态可能会改变。</p>
<p>在本教程中，我们将学习如何声明和初始化常量变量。我们还将讨论它们的用途。</p>
<p>静态关键字将变量与类本身关联，而不是类的实例。</p>
<p>此外，最终关键字使变量不可变。其值在初始化后不能改变。</p>
<p>两个关键字的组合有助于创建常量。它们通常使用大写字母和下划线来分隔单词。</p>
<h3>2.1. 初始化静态最终变量</h3>
<p>以下是如何声明静态最终字段并赋值的示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Bike</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TIRE</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.24,words:972},t:"Java中的静态最终变量",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-String%20s%20Maximum%20Length%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-26-String s Maximum Length in Java.html-Bki1U8kP.js"),__vite__mapDeps([202,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","编程"],g:["String","内存限制","Integer.MAX_VALUE"],e:`
<h2>1. 引言</h2>
<p>Java中的基本数据类型之一是_String_类，它表示字符序列。然而，理解Java中_String_的最大长度对于编写健壮和高效的代码至关重要。</p>
<h3>在本教程中，我们将探讨与Java中字符串最大长度相关的限制和考虑因素。</h3>
<h2>2. 内存限制</h2>
<p>Java中_String_的最大长度与可用内存紧密相关。在Java中，字符串存储在堆内存中，堆中对象的最大大小受到最大可寻址内存的限制。</p>
<h3>然而，这个限制是平台依赖的，可能会根据Java虚拟机（JVM）的实现和底层硬件而变化。</h3>
<p>让我们来看一个例子：</p>`,r:{minutes:1.91,words:572},t:"Java中String的最大长度",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-String%20vs%20StringBuffer%20Comparison%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-26-String vs StringBuffer Comparison in Java.html-Cn-PuYgH.js"),__vite__mapDeps([203,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","编程"],g:["String","StringBuffer"],e:`
<p>在Java中处理字符串时，String和StringBuffer是两个重要的类。简单来说，字符串是字符序列，例如“java”，“spring”等。</p>
<p>String和StringBuffer之间的主要区别在于String是不可变的，而StringBuffer是可变的并且是线程安全的。</p>
<p>本教程将比较String和StringBuffer类，并理解它们之间的相似之处和不同之处。</p>
<p>String类表示字符字符串。Java将所有字符串字面量，例如“baeldung”，实现为这个类的实例。</p>
<p>让我们创建一个String字面量：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>String str = "baeldung";
</code></pre></div>`,r:{minutes:3.78,words:1134},t:"Java中String与StringBuffer的比较",y:"a"}}],["/posts/baeldung/2024-06-26/2024-06-26-Verify%20That%20Lambda%20Expression%20Was%20Called%20Using%20Mockito.html",{loader:()=>n(()=>import("./2024-06-26-Verify That Lambda Expression Was Called Using Mockito.html-CPrFhq9y.js"),__vite__mapDeps([204,1])),meta:{d:171936e7,l:"2024年6月26日",c:["Java","Testing"],g:["Mockito","Lambda Expression","Testing"],e:`
<h2>1. 概述</h2>
<p>在本教程中，我们将探讨如何测试我们的代码是否调用了Lambda函数。实现此目标有两种方法。首先，我们将检查Lambda是否使用正确的参数被调用。然后，我们将关注测试行为，检查Lambda代码是否执行并产生了预期的结果。</p>
<h2>2. 被测试的示例类</h2>
<p>首先，让我们创建一个名为_LambdaExample_的类，它包含一个我们将调用_bricksList_的_ArrayList_：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">LambdaExample</span> <span class="token punctuation">{</span>
    <span class="token class-name">ArrayList</span>\`\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>\`\` bricksList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.79,words:1138},t:"使用Mockito验证Lambda表达式被调用",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Check%20if%20an%20Element%20Is%20Present%20in%20a%20Set%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-19-Check if an Element Is Present in a Set in Java.html-BdTjfint.js"),__vite__mapDeps([205,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","Set"],g:["Set Membership","Java Collection"],e:`
<p>在这篇简短的教程中，我们将探讨如何在Java中检查一个元素是否存在于一个集合（Set）中。</p>
<p>首先，我们将通过使用Java核心开发工具包（JDK）来探索解决方案。然后，我们将阐明如何使用外部库，如Apache Commons，来实现相同的结果。</p>
<h3>2.1 使用核心JDK的<code>Set#contains()</code>方法</h3>
<p>顾名思义，这个方法检查特定的集合是否包含给定的元素。这是我们可以使用的最简单的解决方案之一，以回答我们的核心问题：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">givenASet_whenUsingContainsMethod_thenCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token constant">CITIES</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"London"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token constant">CITIES</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"Madrid"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4.67,words:1401},t:"Java中检查集合中元素是否存在的方法",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Checking%20Which%20Java%20Version%20Is%20Running%20in%20Eclipse.html",{loader:()=>n(()=>import("./2024-06-19-Checking Which Java Version Is Running in Eclipse.html-BLBNkiNy.js"),__vite__mapDeps([206,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","Eclipse"],g:["Java版本","Eclipse IDE"],e:`<hr>
<h1>在Eclipse中检查正在运行的Java版本</h1>
<h2><strong>1. 概述</strong></h2>
<p>在Eclipse IDE中使用Java时，确保正确的Java版本对于编译和执行代码至关重要。Eclipse通过提供简单的方法来检查和配置它所使用的Java版本，简化了这一过程。在本教程中，我们将介绍确定Eclipse中运行的Java版本的步骤。</p>
<h2>2. Eclipse中的Java：环境与项目配置</h2>
<p><strong>在Eclipse中使用的Java版本与Eclipse内特定项目配置的Java版本之间存在差异，这一点非常重要。</strong></p>`,r:{minutes:3.1,words:929},t:"在Eclipse中检查正在运行的Java版本",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Convert%20TemporalAccessor%20to%20LocalDate.html",{loader:()=>n(()=>import("./2024-06-19-Convert TemporalAccessor to LocalDate.html-DIi79J1N.js"),__vite__mapDeps([207,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","Date and Time"],g:["TemporalAccessor","LocalDate"],e:`
<h2>1. 引言</h2>
<p>处理日期和时间值是一项常见任务。有时，我们可能需要将TemporalAccessor对象转换为LocalDate对象以执行特定日期的操作。这在解析日期时间字符串或从日期时间对象中提取日期组件时可能非常有用。</p>
<p><strong>在本教程中，我们将探索在Java中实现这种转换的不同方法。</strong></p>
<h2>2. 使用LocalDate.from()方法</h2>
<p>将TemporalAccessor转换为LocalDate的一种直接方法是使用LocalDate.from(TemporalAccessor temporal)方法。实际上，此方法从TemporalAccessor中提取日期组件（年、月和日）并构建一个LocalDate对象。让我们看一个例子：</p>`,r:{minutes:2.11,words:632},t:"Java中将TemporalAccessor转换为LocalDate",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Convert%20a%20Phone%20Number%20in%20Words%20to%20Number%20with%20Java.html",{loader:()=>n(()=>import("./2024-06-19-Convert a Phone Number in Words to Number with Java.html-Cx53hQ_u.js"),__vite__mapDeps([208,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","Programming"],g:["Java","Algorithm","Phone Number Conversion"],e:`
<h2>1. 概述</h2>
<p>我们可能需要处理以文本形式表达的电话号码。也许我们通过语音转文字接口接收到了一个电话号码。</p>
<p>在本教程中，我们将研究一个算法，该算法处理一系列表达数字序列的单词，并将它们转换为一串数字。</p>
<h2>2. 问题陈述介绍</h2>
<p>让我们更深入地看看输入的格式。我们将得到一个用单词表达的电话号码，例如“five six eight”。然而，口语数字通常包括乘数，例如“double two”。</p>
<p>因此，我们期望我们的算法能够转换：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>输入："triple five two three six eight"
预期输出："5552368"
</code></pre></div>`,r:{minutes:4.77,words:1430},t:"Java中将用文字表达的电话号码转换为数字",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Disable%20%20Cacheable%20in%20Spring%20Boot.html",{loader:()=>n(()=>import("./2024-06-19-Disable  Cacheable in Spring Boot.html-CxmHfYiY.js"),__vite__mapDeps([209,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Spring Boot","Jmix"],g:["Cacheable","Caching"],e:`
<p>无论你是刚开始还是拥有多年经验，<strong>Spring Boot</strong> 都是构建新应用程序的绝佳选择，使用起来非常便捷。</p>
<p>Jmix增强了Spring Boot开发者的能力，允许他们构建并交付<strong>全栈Web</strong> <strong>应用程序</strong>，而无需涉足前端技术。它使你能够创建从简单的Web GUI CRUD应用程序到复杂的企业解决方案，消除了前后端分离及其相关的安全问题。</p>
<p><strong>Jmix平台</strong>包括一个构建在<strong>Spring Boot, JPA, 和 Vaadin</strong>之上的框架，并配备了Jmix Studio，这是一个<strong>IntelliJ IDEA插件</strong>，配备了一系列开发者生产力工具。该平台还提供了<strong>现成</strong>的报告生成、BPM、地图等插件，你可以在你的Jmix应用程序中使用，或者作为单独的服务使用。所有技术都是相互连接的，赋予一个Java开发者以整个团队的水平，<strong>以最少的知识</strong> <strong>开始</strong>。</p>`,r:{minutes:5.18,words:1553},t:"在Spring Boot中禁用@Cacheable",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Disable%20%20EnableScheduling%20on%20Spring%20Tests.html",{loader:()=>n(()=>import("./2024-06-19-Disable  EnableScheduling on Spring Tests.html-Bsgr2nHp.js"),__vite__mapDeps([210,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Spring","Testing"],g:["Spring Boot","Scheduling","Integration Testing"],e:`<hr>
<h1>在Spring测试中禁用@EnableScheduling</h1>
<p>无论你是刚开始还是拥有多年经验，<strong>Spring Boot</strong> 都是构建新应用程序的绝佳选择，使用起来非常轻松。</p>
<p>Jmix增强了Spring Boot开发者的能力，允许他们构建和交付<strong>全栈Web</strong> <strong>应用程序</strong>，而无需涉足前端技术。它使你能够从简单的Web GUI CRUD应用程序到复杂的企业解决方案，消除了前端/后端分离及其相关的安全问题。</p>
<p><strong>Jmix平台</strong>包括一个构建在<strong>Spring Boot, JPA, 和 Vaadin</strong>之上的框架，并附带Jmix Studio，这是一个<strong>IntelliJ IDEA插件</strong>，配备了一套开发者生产力工具。该平台还提供了<strong>现成</strong>的插件，用于报告生成、BPM、地图等，你可以在Jmix应用程序中使用它们或作为单独的服务。所有技术都是相互连接的，使单个Java开发者能够以整个团队的水平进行工作，<strong>入门所需的知识最少</strong>。</p>`,r:{minutes:7.29,words:2186},t:"在Spring测试中禁用@EnableScheduling",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Get%20Last%20n%20Characters%20From%20a%20String.html",{loader:()=>n(()=>import("./2024-06-19-Get Last n Characters From a String.html-BiRUbwOb.js"),__vite__mapDeps([211,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","String Manipulation"],g:["substring","StringUtils","Stream API"],e:`
<p>在本教程中，我们将探讨几种不同的方法来从字符串中获取最后n个字符。</p>
<p>假设我们有以下字符串，其值表示一个日期：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">"10-03-2024"</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:3.57,words:1070},t:"从字符串获取最后n个字符的几种方法",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Get%20a%20Path%20to%20a%20Resource%20in%20a%20Java%20JAR%20File.html",{loader:()=>n(()=>import("./2024-06-19-Get a Path to a Resource in a Java JAR File.html-D66aauKH.js"),__vite__mapDeps([212,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","JAR文件"],g:["JAR","资源路径"],e:`
<h2>1. 引言</h2>
<p>Java中JAR文件内的资源通常使用相对于JAR文件根的路径来访问。此外，了解这路径的结构对于有效检索资源至关重要。</p>
<p><strong>在本教程中，我们将探讨获取Java JAR文件内资源路径的不同方法。</strong></p>
<h2>2. 使用 <em>Class.getResource()</em> 方法获取资源的URL</h2>
<p><em>Class.getResource()</em> 方法提供了一种直接获取JAR文件内资源的_URL_ 的方式。让我们看看如何使用这个方法：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenFile_whenClassUsed_thenGetResourcePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">URL</span> resourceUrl <span class="token operator">=</span> <span class="token class-name">GetPathToResourceUnitTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"/myFile.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assertNotNull</span><span class="token punctuation">(</span>resourceUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.37,words:710},t:"在Java JAR文件中获取资源路径",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-How%20to%20Check%20Number%20Perfection.html",{loader:()=>n(()=>import("./2024-06-19-How to Check Number Perfection.html-CqSFAW9E.js"),__vite__mapDeps([213,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","算法"],g:["完美数","算法"],e:`
<h2>1. 引言</h2>
<p><strong>完美数是一种特殊的正整数，它具有一个独特的属性，即它等于其所有真因子（不包括它本身）的和。</strong></p>
<p>完美数在整数领域中的稀有性是其最引人入胜的特点之一。事实上，在历史上，只确定了少数几个完美数。人类已知的前四个完美数是6、28、496和8128。</p>
<p>在本文中，我们将深入探讨完美数的概念，并探索各种方法来检查给定的数字是否属于这一有趣的类别。</p>
<h2>2. 理解完美数</h2>
<p>让我们通过前几个例子来理解完美数的概念。例如，数字6有真因子1、2和3。将这些因子相加得到1 + 2 + 3 = 6，使6成为一个完美数。同样，数字28有真因子1、2、4、7和14，它们的和等于1 + 2 + 4 + 7 + 14 = 28。因此，28是另一个完美数。</p>`,r:{minutes:6.92,words:2076},t:"如何检查完美数",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-How%20to%20Scale%20a%20Bufferedimage%20in%20Java%20.html",{loader:()=>n(()=>import("./2024-06-19-How to Scale a Bufferedimage in Java .html-BkS80PKd.js"),__vite__mapDeps([214,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","图像处理"],g:["BufferedImage","图像缩放"],e:`
<p>在本教程中，我们将介绍如何使用Java的基本API重新调整图像大小。我们将展示如何从文件加载和保存图像，并解释缩放过程中的一些技术细节。</p>
<h2>2. 在Java中加载图像</h2>
<p>对于本教程，我们将使用一个简单的JPG图像文件。我们将使用Java SDK中包含的_ImageIO_ API来加载它。这个API有一些预设的_ImageReaders_，用于读取如JPEG和PNG等格式。_ImageReaders_知道如何读取它们各自的图像格式，并从图像文件中获取位图。</p>
<p>我们将使用_ImageIO_的_read_方法。这个方法有几个重载版本，但我们将使用最简单的一个：</p>`,r:{minutes:3.46,words:1037},t:"如何在Java中缩放BufferedImage？",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-How%20to%20Test%20Spring%20Application%20Events.html",{loader:()=>n(()=>import("./2024-06-19-How to Test Spring Application Events.html-D8-_YS5h.js"),__vite__mapDeps([215,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Spring Framework","Testing"],g:["Testing","Events","Spring","Application Events"],e:`<hr>
<h1>如何测试Spring应用程序事件</h1>
<p>在本教程中，我们将讨论使用Spring应用程序事件的代码测试。我们将从手动创建测试工具开始，这些工具帮助我们在测试目的下发布和收集应用程序事件。</p>
<p>之后，我们将探索Spring Modulith的测试库，并使用其流畅的场景API来讨论常见的测试案例。使用这种声明性DSL，我们将编写富有表现力的测试，这些测试可以轻松地产生和消费应用程序事件。</p>
<p><strong>Spring Framework提供应用程序事件，以允许组件在保持松散耦合的同时相互通信。</strong> 我们可以使用_ApplicationEventPublisher_ bean来发布内部事件，这些事件是普通的Java对象。因此，所有注册的监听器都会收到通知。</p>`,r:{minutes:6.65,words:1995},t:"如何测试Spring应用程序事件",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Immutable%20vs%20Unmodifiable%20Collection%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-19-Immutable vs Unmodifiable Collection in Java.html-Br3Vs1yw.js"),__vite__mapDeps([216,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","Collections"],g:["Immutable","Unmodifiable"],e:`
<p>在本教程中，我们将探讨Java中除了常见的_Collection_类之外的两种集合类型。众所周知，我们有三个核心集合类：<em>Map</em>、<em>List_和_Set</em>。它们有对应的<strong>不可修改</strong>和<strong>不可变版本</strong>。</p>
<p>在我们的示例中，我们涵盖了Java中的_Map_系列集合。_Collections.unmodifiableMap()<em>和_Map.of()<em>方法适用于_Map</em>，而_Collections.unmodifiableList()</em>、<em>Collections.unmodifiableSet()</em>、_List.of()_和_Set.of()_是_List_和_Set_集合类的相应实用方法。相同的概念也适用于_List_和_Set_集合类。</p>`,r:{minutes:5.78,words:1735},t:"Java中的不可变与不可修改集合",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Internet%20Address%20Resolution%20SPI%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-19-Internet Address Resolution SPI in Java.html-CNH6JPGf.js"),__vite__mapDeps([217,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","JEP 418"],g:["Service Provider Interface","Internet Address Resolution"],e:`
<p>在本教程中，我们将讨论Java的JEP 418，它为Internet主机和地址解析建立了一个新的服务提供者接口（SPI）。</p>
<p>任何连接到计算机网络的设备都被分配一个数值或IP（Internet协议）地址。IP地址有助于唯一地识别网络上的设备，并且它们也有助于路由数据包到设备和从设备。</p>
<p>它们通常有两种类型。IPv4是IP标准的第四代，是一个32位地址。由于互联网的快速增长，还发布了一个更大的新的v6版本的IP标准，其中包含十六进制字符。</p>
<p>此外，还有另一种相关的地址类型。网络设备，如以太网端口或网络接口卡（NIC），具有MAC（媒体访问控制）地址。这些是全球分布的，所有网络接口设备都可以用MAC地址唯一地识别。</p>`,r:{minutes:7.23,words:2169},t:"Java中的Internet地址解析服务提供者接口",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Introduction%20to%20Light%204J.html",{loader:()=>n(()=>import("./2024-06-19-Introduction to Light 4J.html-DvzfHI9A.js"),__vite__mapDeps([218,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","Framework"],g:["Light-4J","Microservices"],e:`
<p>传统的框架虽然健壮，但往往引入了挑战敏捷性的复杂性。现代开发需要的框架不仅要强大，还要灵活。轻量级框架，包括 Light-4J，在采用极简设计哲学的同时，专注于提供基本功能而不带不必要的复杂性，从而降低了开发人员的学习曲线，并优先考虑快速的开发周期。</p>
<p>**Light-4J 是一种尖端的 Java 框架，通过结合敏捷性和性能来彻底改变开发。**它采用现代开发范式，与微服务的原则保持一致，并满足当今动态软件架构的需求。</p>
<p>在本教程中，我们将深入探讨其核心理念、主要功能和架构概念。我们将剖析它之所以轻量级的原因，以及这种品质如何转化为增强的开发速度和资源效率。</p>`,r:{minutes:11.89,words:3568},t:"Light-4J 简介",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Logging%20in%20Apache%20Camel.html",{loader:()=>n(()=>import("./2024-06-19-Logging in Apache Camel.html-DwEITy1a.js"),__vite__mapDeps([219,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Apache Camel","Logging"],g:["Java","Apache Camel","Logging"],e:`
<p>记录日志在软件开发中至关重要，它有助于记录应用程序的每一个足迹。它有助于跟踪应用程序的活动和状态。基本上，它对于调试非常有用。</p>
<p>Apache Camel提供了一个组件、接口和拦截器来记录消息和交换。它通过为各种日志框架提供一层抽象来简化记录日志。</p>
<p>在本教程中，我们将探讨在Camel应用程序中记录消息和交换的四种方式。</p>
<h2>2. 使用Log EIP</h2>
<p>Apache Camel 2.2提供了一个轻量级的_log()_ DSL，用于从路由中记录人类可读的消息。其主要用途是快速将消息输出到日志控制台。此外，我们还可以与Camel Simple表达式语言一起使用，以进一步将路由中的细节记录到日志控制台。</p>`,r:{minutes:5.47,words:1642},t:"在Apache Camel中记录日志",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Logging%20in%20Spring%20Boot%20With%20Loki.html",{loader:()=>n(()=>import("./2024-06-19-Logging in Spring Boot With Loki.html-BFwNC2xB.js"),__vite__mapDeps([220,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Spring Boot","Logging"],g:["Loki","Grafana"],e:`
<p>无论你是刚开始学习还是拥有多年经验，<strong>Spring Boot</strong> 都是构建新应用程序的绝佳选择，它让开发变得轻松。</p>
<p>Jmix 增强了 Spring Boot 开发者的能力，允许他们构建和交付 <strong>全栈 Web 应用程序</strong>，而无需深入前端技术。它使你能够创建从简单的 Web GUI CRUD 应用程序到复杂的企业解决方案，消除了前端/后端分离及其相关的安全问题。</p>
<p><strong>Jmix 平台</strong> 包括一个基于 <strong>Spring Boot, JPA, 和 Vaadin</strong> 的框架，并附带 Jmix Studio，这是一个 IntelliJ IDEA 插件，配备了一套开发者生产力工具。该平台还提供了 <strong>即开即用</strong> 的插件，用于报告生成、BPM、地图等，你可以在 Jmix 应用程序中使用它们，或者作为单独的服务。所有技术都是相互连接的，使单个 Java 开发者能够在几乎不需要开始知识的情况下，达到整个团队的水平。</p>`,r:{minutes:4.96,words:1489},t:"Spring Boot 中使用 Loki 进行日志记录",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Multiple%20Level%20Mock%20Injection%20Into%20Mockito%20Spy%20Objects.html",{loader:()=>n(()=>import("./2024-06-19-Multiple Level Mock Injection Into Mockito Spy Objects.html-UEt49pYd.js"),__vite__mapDeps([221,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Testing","Mockito"],g:["Mockito","Testing","Java"],e:`<hr>
<h1>Mockito 多级模拟注入到Spy对象</h1>
<p>在本教程中，我们将讨论众所周知的Mockito注解_@InjectMocks_、<em>@Mock_和</em>@Spy_，并理解它们在多级注入场景中的协同工作方式。我们将讨论重要的测试概念，并学习如何进行适当的测试配置。</p>
<h2>2. 多级注入概念</h2>
<p>多级注入是一个强大的概念，但如果误用可能会很危险。让我们在继续实现之前回顾一下重要的理论概念。</p>
<h3>2.1. 单元测试概念</h3>
<p><strong>根据定义，单元测试是覆盖源代码一个单元的测试。</strong> 在Java世界中，我们可以将单元测试视为覆盖某个特定类—服务、仓库、工具等的测试。</p>`,r:{minutes:6.83,words:2049},t:"Mockito 多级模拟注入到Spy对象",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-New%20Features%20in%20Java%2021.html",{loader:()=>n(()=>import("./2024-06-19-New Features in Java 21.html-DQMIBAK7.js"),__vite__mapDeps([222,1])),meta:{d:16950816e5,l:"2023年9月19日",c:["Java","New Features"],g:["Java 21","JEP"],e:`
<p>Oracle在2023年9月19日发布了Java 21，这是继Java 17之后的最新的Java长期支持(LTS)版本。</p>
<p>本文将讨论Java 21中新增的特性和增强功能。</p>
<h2>2. 通过JEP引入的显著增强功能列表</h2>
<h3>2.1. 记录模式（JEP 440）</h3>
<p>记录模式在Java 19和Java 20中作为预览特性被包含进来，Java 21进一步改进了这一特性。</p>
<p><strong>此JEP将现有的模式匹配功能扩展到解构记录类实例，这使得编写复杂的数据查询成为可能</strong>。还增加了对嵌套模式的支持，以实现更可组合的数据查询。</p>`,r:{minutes:6.07,words:1821},t:"Java 21的新特性概览",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Opening%20HTML%20File%20Using%20Java.html",{loader:()=>n(()=>import("./2024-06-19-Opening HTML File Using Java.html-D4YuCP5s.js"),__vite__mapDeps([223,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","HTML"],g:["Desktop Class","ProcessBuilder"],e:`
<p>在各种Java应用程序中，经常需要以编程方式打开和显示HTML文件。Java提供了几种方法来完成这项任务，无论是生成报告、显示文档还是呈现用户界面。</p>
<p>在本教程中，我们将探讨两种不同的方法：使用_Desktop_和_ProcessBuilder_类。</p>
<h2>2. 使用_Desktop_类</h2>
<p>_Desktop_类提供了一种与桌面默认浏览器交互的独立于平台的方式。</p>
<p>在我们深入探讨这些方法之前，让我们首先初始化URL和HTML文件的绝对路径。让我们首先确保HTML文件存在，并获取其绝对路径以供我们的测试进一步使用：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">URL</span> url<span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> absolutePath<span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:2.49,words:748},t:"使用Java打开HTML文件",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-Statements%20Before%20super%20%20%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-19-Statements Before super   in Java.html-CtISj86e.js"),__vite__mapDeps([224,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","Programming"],g:["super()","Constructor","Java Best Practices"],e:`<hr>
<h1>Java中super()之前的语句</h1>
<p>在Java编程中，我们使用_super()_关键字来调用超类构造函数。然而，关于在子类构造函数中超类构造函数调用之前的语句放置有特定的规则。</p>
<p><strong>在本教程中，我们将深入探讨super()的重要性，放置语句之前它的影响，以及应遵循的最佳实践。</strong></p>
<h3>2. 理解super()的角色</h3>
<p>当一个子类被实例化时，它的构造函数隐式地使用super()调用其超类的构造函数。这确保了在子类构造函数继续其初始化逻辑之前，对象的超类部分被正确初始化。</p>
<p><strong>此外，省略或错误放置super()调用可能导致编译错误或意外的运行时行为。</strong></p>`,r:{minutes:2.71,words:813},t:"Java中super()之前的语句",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-The%20%20Struct%20Annotation%20Type%20in%20Hibernate%20%20%20Structured%20User%20Defined%20Types.html",{loader:()=>n(()=>import("./2024-06-19-The  Struct Annotation Type in Hibernate   Structured User Defined Types.html-DjDEBQf0.js"),__vite__mapDeps([225,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Hibernate","Java"],g:["Struct Annotation","User-Defined Types"],e:`
<p>在本教程中，我们将回顾Hibernate的@Struct注解，它允许开发者创建结构化用户定义类型。</p>
<p>结构化用户定义类型，也称为结构化类型，是在SQL:1999标准中引入的，是对象关系（ORM）数据库的一个特性。</p>
<p>结构化或复合类型有其用例，特别是自SQL:2016标准引入JSON支持以来。这些结构化类型的值可以访问它们的子部分，并且不像表中的行那样具有标识符或主键。</p>
<h3>结构映射</h3>
<p><strong>Hibernate允许你通过@Struct注解类型为带有@Embeddable注解或@Embedded属性的类指定结构化类型。</strong></p>`,r:{minutes:3.1,words:931},t:"Hibernate中的@Struct注解类型 - 结构化用户定义类型 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/2024-06-19-The%20Difference%20Between%20Throwing%20an%20Exception%20and%20Mono.error%20%20%20in%20Spring%20Webflux.html",{loader:()=>n(()=>import("./2024-06-19-The Difference Between Throwing an Exception and Mono.error   in Spring Webflux.html-BsA_SQ05.js"),__vite__mapDeps([226,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Spring WebFlux","Reactive Programming"],g:["Exception Handling","Mono.error()"],e:`
<p>错误处理是使用Spring WebFlux进行响应式编程的一个关键方面。开发者通常依赖两种主要方法来处理错误：抛出异常或使用Project Reactor提供的_Mono.error()_方法。这两种方法都用于信号错误，但它们具有不同的特点和用例。</p>
<p>在本教程中，我们将解释在Spring WebFlux中抛出异常和使用_Mono.error()_的区别。我们将提供说明性的Java代码示例，以使其更易于理解。</p>
<h2>2. 传统方法：抛出异常</h2>
<p>多年来，抛出异常一直是管理Java应用程序中错误的可靠方式。这是一种简单的方法，可以中断程序的正常流程，并将错误传达给应用程序的更高层。Spring WebFlux与这种传统的错误处理方法无缝集成，使开发者能够在其响应式端点中抛出异常。下面的代码代表了传统方法的一个例子：</p>`,r:{minutes:3.55,words:1066},t:"Spring WebFlux中抛出异常与Mono.error()的区别",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-%20Subselect%20Annotation%20in%20Hibernate.html",{loader:()=>n(()=>import("./2024-06-20- Subselect Annotation in Hibernate.html-DUCsWmlc.js"),__vite__mapDeps([227,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Hibernate","JPA"],g:["Subselect","Entity","SQL"],e:`
<p>在本教程中，我们将回顾Hibernate中的@Subselect注解，如何使用它以及它的好处。我们还将看到Hibernate对使用@Subselect注解的实体的限制及其后果。</p>
<h2>@Subselect注解概述</h2>
<p>@Subselect允许我们将一个不可变的实体映射到SQL查询上。让我们从实体到SQL查询映射的含义开始解释。</p>
<h3>2.1. 映射到SQL查询</h3>
<p>通常，我们在Hibernate中创建实体时，会使用@Entity注解。这个注解表明这是一个实体，应该由持久化上下文管理。我们也可以提供@Table注解，以指示Hibernate应该将这个实体映射到哪个具体的表。默认情况下，每当我们在Hibernate中创建一个实体时，它都假定实体直接映射到一个特定的表。在大多数情况下，这正是我们想要的，但并不总是这样。</p>`,r:{minutes:6.5,words:1949},t:"Hibernate中的@Subselect注解",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-A%20Guide%20to%20Kotlin%20Context%20Receivers.html",{loader:()=>n(()=>import("./2024-06-20-A Guide to Kotlin Context Receivers.html-W5hmlE8k.js"),__vite__mapDeps([228,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","Programming"],g:["Kotlin","Context Receivers"],e:`
<ol>
<li>引言</li>
</ol>
<p>Kotlin中的上下文接收器提供了一种强大的机制来定义函数可以被调用的上下文环境。这个特性通过允许函数声明它们所需的特定上下文，增强了Kotlin代码的表现力和可维护性，从而使得代码更加清晰和模块化。</p>
<p>在本教程中，我们将探讨上下文接收器，包括如何有效使用它们以及讨论它们的优势和局限性。</p>
<ol start="2">
<li>理解上下文接收器</li>
</ol>
<p>Kotlin中的上下文接收器允许函数显式声明它们操作所需的上下文或环境，类似于扩展函数。这个特性通过确保函数仅在满足必要条件或依赖性时才被调用，从而改善了我们的代码语义和安全性。</p>`,r:{minutes:4.84,words:1452},t:"Kotlin上下文接收器指南",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Add%20One%20Element%20to%20an%20Immutable%20List%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-20-Add One Element to an Immutable List in Java.html-BW6Iw9Bz.js"),__vite__mapDeps([229,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Collections"],g:["Immutable List","Java"],e:`
<p>在Java中，不可变对象确保了线程安全并防止了意外的修改，从而促进了健壮和可靠的代码。然而，有时我们希望向不可变列表添加元素。</p>
<p>在这个快速教程中，我们将探讨如何在Java中实现这一点。</p>
<h2>2. 问题介绍</h2>
<p>不可变列表不允许我们向其添加元素。但在某些情况下，我们希望将额外的元素合并到不可变列表中，同时不损害其不可变性。换句话说，<strong>我们希望有一个包含给定不可变列表所有元素和新元素的不可变列表。</strong></p>
<p>接下来，让我们创建一个方法来实现这一点。为了简单起见，我们将使用单元测试断言来验证我们的解决方案是否产生了预期的结果。</p>`,r:{minutes:3.4,words:1020},t:"在Java中向不可变列表添加一个元素 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Avoiding%20the%20ConcurrentModificationException%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-20-Avoiding the ConcurrentModificationException in Kotlin.html-B00k97vf.js"),__vite__mapDeps([230,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","Programming"],g:["ConcurrentModificationException","Exception Handling"],e:`
<p>在本教程中，我们将解决Kotlin中的一个常见问题：<em>ConcurrentModificationException</em>。这通常发生在我们尝试在迭代集合的同时修改它，这是并发编程中的一个常见陷阱。</p>
<p>这种异常可能会令人沮丧，特别是当我们不确定是什么导致了它或如何修复它时。让我们探讨这种异常的根本原因，以及最重要的是，一些避免在代码中出现它的策略。</p>
<p><strong>_ConcurrentModificationException_通常在尝试在迭代过程中修改集合时抛出</strong>：</p>
<div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> numbers <span class="token operator">=</span> <span class="token function">mutableListOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>

assertThrows\`<span class="token operator">&lt;</span>ConcurrentModificationException<span class="token operator">&gt;</span>\` <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>item <span class="token keyword">in</span> numbers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            numbers<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.77,words:1131},t:"Kotlin中避免ConcurrentModificationException",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Check%20if%20a%20Given%20Time%20Lies%20Between%20Two%20Times%20Regardless%20of%20Date.html",{loader:()=>n(()=>import("./2024-06-20-Check if a Given Time Lies Between Two Times Regardless of Date.html-uC7GumE_.js"),__vite__mapDeps([231,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","时间处理"],g:["Java 8","LocalTime","Date","Calendar"],e:`
<p>在Java中，有多种方法可以确定一个特定时间是否在两个时间之间，而不考虑日期。</p>
<p><strong>在本教程中，我们将探讨几种可能的实现方式。</strong></p>
<h2>2. 使用 <em>isAfter()</em> 和 <em>isBefore()</em> 方法</h2>
<p>Java 8在_java.time_包中引入了_LocalTime_类，提供了方便的方法来处理不考虑日期的时间：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>LocalTime startTime = LocalTime.parse("09:00:00");
LocalTime endTime = LocalTime.parse("17:00:00");
LocalTime targetTime = LocalTime.parse("12:30:00");
</code></pre></div>`,r:{minutes:2.65,words:795},t:"检查给定时间是否在两个时间之间，不论日期",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Checking%20if%20a%20Date%20Object%20Equals%20Yesterday.html",{loader:()=>n(()=>import("./2024-06-20-Checking if a Date Object Equals Yesterday.html-CVHXkj80.js"),__vite__mapDeps([232,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Date and Time"],g:["Calendar","LocalDate","Date Comparison"],e:`<hr>
<h1>Java中检查日期对象是否等于昨天</h1>
<p>当在Java应用程序中使用日期和时间数据时，比较日期以实现各种目的通常至关重要，例如安排任务、提醒或报告。一个常见的场景是需要确定给定的日期是否相对于当前日期是昨天。在本教程中，我们将探讨确定给定日期对象是否落在昨天的各种方法。</p>
<h3>2. 使用java.util.Calendar</h3>
<p>一种常见的方法是使用java.util.Calendar类来操作日期和时间信息。要比较昨天的日期，我们通过Calendar.getInstance()实例化一个Calendar对象。接下来，我们使用calendar.setTime(new Date())将其时间设置为当前日期，然后使用calendar.add(Calendar.DATE, -1)减去一天。这样就得到了昨天的日期。</p>`,r:{minutes:5.08,words:1524},t:"Java中检查日期对象是否等于昨天",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Convert%20RxJava%20Single%20to%20Kotlin%20Coroutine%20Deferred.html",{loader:()=>n(()=>import("./2024-06-20-Convert RxJava Single to Kotlin Coroutine Deferred.html-DzmS6xxK.js"),__vite__mapDeps([233,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","RxJava"],g:["Kotlin Coroutine","RxJava Single","Deferred"],e:`
<ol>
<li>概述</li>
</ol>
<p>在 RxJava 中的 <strong>Single</strong> 和 Kotlin 协程中的 <strong>Deferred</strong> 是执行异步操作的机制。它们允许我们在不阻塞主线程的情况下执行耗时任务。</p>
<p>我们可能已经在项目中使用了 <strong>Single</strong>，但希望迁移到 <strong>Deferred</strong> 作为替代解决方案。转换是实现这一目标的一种方式，而无需进行完整的重写。</p>
<p>在本文中，我们将尝试以多种方式将 <strong>Single</strong> 转换为 <strong>Deferred</strong>。</p>`,r:{minutes:5.17,words:1552},t:"将 RxJava 的 Single 转换为 Kotlin 协程的 Deferred",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Converting%20UTF%208%20to%20ISO%208859%201%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-20-Converting UTF 8 to ISO 8859 1 in Java.html-Bq9sJTa3.js"),__vite__mapDeps([234,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","编码转换"],g:["UTF-8","ISO-8859-1"],e:`
<h2>1. 引言</h2>
<p>字符编码问题对于Java编程至关重要，尤其是在与多个系统和数据源一起工作时。</p>
<h3>在本教程中，我们将讨论如何将UTF-8编码的字符串转换为拉丁-1编码，这通常被称为ISO-8859-1编码。</h3>
<h2>2. 问题定义</h2>
<p>将UTF-8字符串转换为ISO-8859-1编码环境可能会出奇地困难。如果字符映射方式不同，可能会导致数据损坏或丢失。</p>
<p>为了使这个问题更容易理解，假设我们有需要转换为ISO-8859-1的UTF-8编码字符串：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> string <span class="token operator">=</span> <span class="token string">"âabcd"</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:2.5,words:749},t:"Java中UTF-8到ISO-8859-1的编码转换",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Create%20Spring%20Prototype%20Scope%20Bean%20with%20Runtime%20Arguments.html",{loader:()=>n(()=>import("./2024-06-20-Create Spring Prototype Scope Bean with Runtime Arguments.html-DMmY5rU6.js"),__vite__mapDeps([235,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Spring","Java"],g:["Spring Framework","Prototype Scope"],e:`
<p>在这篇文章中，我们将学习如何在Spring中使用运行时参数创建原型作用域的Bean。</p>
<p>在Spring中，有多种不同的Bean作用域，但默认的作用域是单例，这意味着单例作用域的Bean始终会产生相同的对象。</p>
<p>或者，如果我们每次需要从容器中获取一个新的实例，我们可以使用原型作用域的Bean。然而，在大多数情况下，如果我们想要从单例Bean中实例化原型，或者将动态参数传递给原型Bean，我们会遇到问题。</p>
<p>Spring提供了许多方法来实现这些目标，我们将在本教程中深入讨论。</p>
<p>有时我们需要使用动态参数作为输入来初始化Spring Bean。原型Bean可以通过Spring使用多种方法来分配不同的动态参数。</p>`,r:{minutes:3.74,words:1121},t:"在Spring中使用运行时参数创建原型作用域Bean",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Creating%20a%20Spring%20Security%20Key%20for%20Signing%20a%20JWT%20Token.html",{loader:()=>n(()=>import("./2024-06-20-Creating a Spring Security Key for Signing a JWT Token.html-BIfuMA4o.js"),__vite__mapDeps([236,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Spring Security","JWT"],g:["Spring","Security","JWT","Token"],e:`
<p>如果您正在使用Spring Security（尤其是OAuth）实现，一定要查看《学习Spring安全》课程。</p>
<h2>1. 概述</h2>
<p>JSON Web Tokens（JWT）是保护无状态应用程序的事实标准。Spring Security框架提供了将JWT集成以保护REST API的方法。生成令牌的一个关键过程是应用签名以保证真实性。</p>
<p>在本教程中，我们将探索一个使用JWT认证的无状态Spring Boot应用程序。我们将设置必要的组件并创建一个加密的_SecretKey_实例来签名和验证JWT。</p>
<h2>2. 项目设置</h2>
<p>首先，让我们使用Spring Security和JWT令牌来引导一个无状态的Spring Boot应用程序。<strong>值得注意的是，为了简单和简洁，我们不会展示完整的设置代码。</strong></p>`,r:{minutes:5.36,words:1608},t:"创建用于签名JWT令牌的Spring Security密钥",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Difference%20Between%20eachCount%20%20%20and%20eachCountTo%20%20%20Methods%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-20-Difference Between eachCount   and eachCountTo   Methods in Kotlin.html-C1Wug7TF.js"),__vite__mapDeps([237,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Kotlin","Programming"],g:["Kotlin","eachCount","eachCountTo"],e:`
<p>Kotlin拥有一个丰富、高效且简洁的集合库。标准库提供了多种有用的方法来轻松处理集合内容。</p>
<p>在本教程中，我们将查看这两种方法：eachCount()和eachCountTo()，它们帮助执行聚合操作。</p>
<p><strong>eachCount()方法使我们能够计算元素的出现次数</strong>。此外，它在任何Grouping数据结构中都可用，其中keyOf()函数适用于获取键。它生成一个Map，包含每个组中元素的计数。</p>
<p>让我们看一个示例代码来实际演示这一点：</p>
<div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> flights <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"EK060"</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"EK531"</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"LH7"</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"LH1030"</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"DL47"</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"AI120"</span></span><span class="token punctuation">)</span>
<span class="token keyword">val</span> flightCount <span class="token operator">=</span> flights<span class="token punctuation">.</span><span class="token function">groupingBy</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">eachCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> expectedMap <span class="token operator">=</span> <span class="token function">mapOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"EK"</span></span> <span class="token keyword">to</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"LH"</span></span> <span class="token keyword">to</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"DL"</span></span> <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"AI"</span></span> <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span>expectedMap<span class="token punctuation">,</span> flightCount<span class="token punctuation">)</span>
</code></pre></div>`,r:{minutes:2.43,words:730},t:"Kotlin中eachCount()和eachCountTo()方法的区别",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Dynamically%20Managing%20Kafka%20Listeners%20in%20Spring%20Boot.html",{loader:()=>n(()=>import("./2024-06-20-Dynamically Managing Kafka Listeners in Spring Boot.html-Cbdw5nux.js"),__vite__mapDeps([238,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Spring Boot","Apache Kafka"],g:["Spring Kafka","Kafka Listeners"],e:`<hr>
<h1>在Spring Boot中动态管理Kafka侦听器</h1>
<p>无论你是刚开始还是拥有多年经验，<strong>Spring Boot</strong>显然是构建Web应用程序的不错选择。</p>
<p>Jmix建立在这个非常强大和成熟的Boot堆栈之上，允许开发人员构建并交付<strong>全栈Web****应用程序</strong>，而无需编写前端代码。也非常灵活，从简单的Web GUI CRUD应用程序到复杂的企业解决方案。</p>
<p>具体来说，<strong>Jmix平台</strong>包括一个构建在<strong>Spring Boot, JPA和Vaadin</strong>之上的框架，并附带Jmix Studio，这是一个<strong>IntelliJ IDEA插件</strong>，配备了一套开发人员生产力工具。</p>`,r:{minutes:7.27,words:2181},t:"在Spring Boot中动态管理Kafka侦听器",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Dynamically%20Register%20Spring%20Beans%20Based%20on%20Properties.html",{loader:()=>n(()=>import("./2024-06-20-Dynamically Register Spring Beans Based on Properties.html-Cj013rxu.js"),__vite__mapDeps([239,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Spring","Java"],g:["Spring Beans","Dynamic Registration"],e:`
<h2>1. 概述</h2>
<p>在本教程中，我们将探讨如何根据自定义属性动态注册Bean。我们将探索_BeanDefinitionRegistryPostProcessor_接口以及我们如何使用它来向应用程序上下文中添加Bean。</p>
<h2>2. 代码设置</h2>
<p>让我们先创建一个简单的Spring Boot应用程序。</p>
<p>首先，我们将定义一个我们想要动态注册的Bean。然后，<strong>我们将提供一个属性来决定如何注册Bean</strong>。最后，我们将定义一个配置类，根据我们的自定义属性来注册Bean。</p>
<h3>2.1. 依赖项</h3>
<p>让我们首先添加Maven依赖项：</p>`,r:{minutes:4.11,words:1232},t:"基于属性动态注册Spring Bean",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Finding%20Element%20by%20Attribute%20in%20Selenium.html",{loader:()=>n(()=>import("./2024-06-20-Finding Element by Attribute in Selenium.html-hGisOl58.js"),__vite__mapDeps([240,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Selenium","Web Automation"],g:["CSS Selectors","Web Testing"],e:`
<p>Selenium提供了多种在网页上定位元素的方法，我们经常需要基于元素的属性来查找它。属性是额外的信息片段，可以添加以提供更多的上下文或功能。它们大致可以分为两种类型：</p>
<ul>
<li>标准属性：这些属性是预定义的，并且被浏览器所识别。例如_id_, <em>class</em>, <em>src</em>, <em>href</em>, <em>alt</em>, _title_等。标准属性具有预定义的含义，并且在不同的HTML元素中广泛使用。</li>
<li>自定义属性：自定义属性不是HTML规范预定义的，而是由开发人员为特定需求创建的。这些属性通常以“<em>data-</em>”开头，后面跟着一个描述性名称。例如_data-id_, <em>data-toggle</em>, _data-target_等。自定义属性对于存储与元素相关的额外信息或元数据很有用，它们通常在Web开发中用于在HTML和JavaScript之间传递数据。</li>
</ul>`,r:{minutes:4.77,words:1430},t:"Selenium中通过属性查找元素",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Fix%20Ambiguous%20Method%20Call%20Error%20in%20Mockito.html",{loader:()=>n(()=>import("./2024-06-20-Fix Ambiguous Method Call Error in Mockito.html-ayAMHgwy.js"),__vite__mapDeps([241,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","Mockito"],g:["Ambiguous Method Call","Mockito","Unit Testing"],e:'<hr>\n<h1>解决Mockito中的模糊方法调用错误</h1>\n<p>在本教程中，我们将了解如何在Mockito框架的特定上下文中避免模糊方法调用。</p>\n<p>在Java中，方法重载允许一个类拥有多个具有相同名称但不同参数的方法。当编译器无法根据提供的参数确定要调用的具体方法时，就会发生模糊方法调用。</p>\n<h2>2. Mockito的_ArgumentMatchers_介绍</h2>\n<p>Mockito是一个用于单元测试Java应用程序的模拟框架。您可以在Maven中央仓库中找到该库的最新版本。让我们将依赖项添加到我们的_pom.xml_中：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`org.mockito`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`mockito-core`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`5.11.0`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>`test`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n</code></pre></div>',r:{minutes:4.37,words:1311},t:"解决Mockito中的模糊方法调用错误",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Flatten%20a%20Stream%20of%20Maps%20to%20a%20Single%20Map%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-20-Flatten a Stream of Maps to a Single Map in Java.html-IJRXOcO0.js"),__vite__mapDeps([242,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Stream API"],g:["Java 8","Stream","Map"],e:'\n<p>自Java 8推出以来，使用数据流已成为常态。这些流经常包含像Map这样的复杂结构，在进一步处理时可能会带来挑战。</p>\n<p>在本教程中，我们将探讨如何将Map流展平为单个Map。</p>\n<h2>2. 问题介绍</h2>\n<p>在深入解决方案之前，让我们先澄清一下“展平Map流”的含义。本质上，我们想要将流中的Map转换为包含流中每个Map的所有键值对的单个Map。</p>\n<p>像往常一样，一个例子可以帮助我们快速理解问题。假设我们有三个Map，存储了玩家名字和分数之间的关联：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Map</span>``````````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span>`````````````````` playerMap1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span>``````````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span>``````````````````<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Kai"</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Liam"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token class-name">Map</span>``````````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span>`````````````````` playerMap2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span>``````````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span>``````````````````<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Eric"</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Kevin"</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token class-name">Map</span>``````````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span>`````````````````` playerMap3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span>``````````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span>``````````````````<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Saajan"</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div>',r:{minutes:7.15,words:2146},t:"Java中将Map流展平为单个Map",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Getting%20a%20Kotlin%20KClass%20from%20a%20Package%20Class%20Name%20String.html",{loader:()=>n(()=>import("./2024-06-20-Getting a Kotlin KClass from a Package Class Name String.html-BprfaMo2.js"),__vite__mapDeps([243,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","Programming"],g:["KClass","Reflection"],e:`<hr>
<h1>从包类名字符串获取 Kotlin KClass 的方法</h1>
<p>在本教程中，我们将探讨在 Kotlin 中从包类名字符串获取 KClass 的不同方法。无论是动态实例化还是方法调用，将类名字符串转换为其对应的 KClass 对象的能力至关重要。KClass 对象在运行时表示 Kotlin 类，并且可以通过几种策略获得。</p>
<h2>1. 引言</h2>
<p>在 Kotlin 中工作时，有时需要从包类名字符串获取 KClass 实例。无论是为了动态实例化还是方法调用，将类名字符串转换为其对应的 KClass 对象的能力至关重要。KClass 对象在运行时表示 Kotlin 类，并且可以通过几种策略获得。</p>`,r:{minutes:3.26,words:977},t:"从包类名字符串获取 Kotlin KClass 的方法",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Guide%20to%20Duration%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-20-Guide to Duration in Kotlin.html-BxyeVSpH.js"),__vite__mapDeps([244,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","Duration"],g:["Duration","Time Management"],e:`
<h2>1. 引言</h2>
<p>在构建软件应用程序时，处理时间间隔和持续时间是一项常见任务。Kotlin通过_Duration_类提供了一个强大的API来处理时间管理的这一特定方面。</p>
<p>在本教程中，我们将探讨_Duration_类以及它如何使Kotlin中的时间和持续时间操作变得高效且容易。</p>
<h2>2. _Duration_是什么？</h2>
<p><strong>_Duration_表示一个特定的时间量，可以是正数、负数、零甚至无限大。</strong></p>
<p>这些间隔通过_DurationUnit_枚举指定，支持类型_DAYS_, <em>HOURS</em>, <em>MINUTES</em>, <em>SECONDS</em>, <em>MILLISECONDS</em>, <em>MICROSECONDS_和_NANOSECONDS</em>。因此，即使在指代周和月时，超过一天的持续时间也以天为单位表示。</p>`,r:{minutes:5.65,words:1695},t:"Kotlin中Duration类的指南",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Guide%20to%20ExecutorService%20vs.%20CompletableFuture.html",{loader:()=>n(()=>import("./2024-06-20-Guide to ExecutorService vs. CompletableFuture.html-DexLzlJc.js"),__vite__mapDeps([245,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java Concurrency","Java Tutorials"],g:["ExecutorService","CompletableFuture"],e:`
<p>在本教程中，我们将探讨Java中处理需要并发运行的任务的两个重要类：<em>ExecutorService_和_CompletableFuture</em>。我们将学习它们的功能以及如何有效地使用它们，并理解它们之间的关键差异。</p>
<h2>2. ExecutorService概述</h2>
<p>_ExecutorService_是Java的_java.util.concurrent_包中的强大接口，它简化了需要并发运行的任务的管理。它抽象了线程创建、管理和调度的复杂性，让我们可以专注于需要完成的实际工作。</p>
<p>_ExecutorService_提供了如_submit()_和_execute()_等方法来提交我们想要并发运行的任务。然后，这些任务被排队并分配给线程池中的可用线程。如果任务返回结果，我们可以使用_Future_对象来检索它们。然而，使用_Future_上的_get()_等方法检索结果可能会阻塞调用线程，直到任务完成。</p>`,r:{minutes:8.09,words:2426},t:"ExecutorService与CompletableFuture：Java并发处理的两种方式",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Guide%20to%20the%20HexFormat%20API.html",{loader:()=>n(()=>import("./2024-06-20-Guide to the HexFormat API.html-CEODfq7J.js"),__vite__mapDeps([246,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","HexFormat API"],g:["Hexadecimal","String","Parse"],e:`
<p>十六进制表示因其人类可读性和紧凑性而被广泛使用，这使得它成为在Kotlin中表示二进制数据的一种高效且直接的方式。因此，Kotlin引入了HexFormat API作为一个方便的数据格式化为十六进制字符串形式并解析回原始数据的包。</p>
<p>在本教程中，<strong>我们将探索HexFormat API并解决一些涉及十六进制表示的常见用例</strong>。</p>
<h3>2.1. HexFormat类</h3>
<p>在Kotlin的标准库中，<strong>_HexFormat_类位于_kotlin.text_包中，它表示十六进制格式化的总体配置</strong>。让我们快速看一下它的定义：</p>`,r:{minutes:5.85,words:1754},t:"Kotlin中HexFormat API指南",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-How%20to%20Convert%20Excel%20to%20JSON%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-20-How to Convert Excel to JSON in Java.html-CzIH8Hp9.js"),__vite__mapDeps([247,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Excel"],g:["JSON","Apache POI","Jackson"],e:`
<p>将Excel数据转换为JSON格式在许多Java应用程序中很常见，特别是在处理不同系统之间的数据交换时。</p>
<h2>1. 引言</h2>
<p>在本教程中，我们将探讨在Java中将Excel文件转换为JSON的两种方法。</p>
<h2>2. 使用Apache POI库与JSON</h2>
<p>Apache POI是一个流行的Java库，用于读写Microsoft Office文件格式，包括Excel。因此，我们可以使用POI来读取Excel文件并将数据转换为JSON格式。</p>
<h3>2.1. 添加Apache POI和JSON依赖</h3>
<p>首先，我们需要将Apache POI和JSON依赖添加到我们的项目中。如果我们使用Maven，请在_pom.xml_中包含以下依赖：</p>`,r:{minutes:3.91,words:1173},t:"Java中Excel转JSON的转换方法",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Implement%20Two%20Level%20Cache%20With%20Spring.html",{loader:()=>n(()=>import("./2024-06-20-Implement Two Level Cache With Spring.html-DpLs0N_a.js"),__vite__mapDeps([248,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Spring Framework","Caching"],g:["Spring Boot","Caffeine","Redis"],e:`<hr>
<h1>使用Spring实现两级缓存</h1>
<h2>1. 概述</h2>
<p>缓存数据意味着我们的应用程序不必访问较慢的存储层，从而提高它们的性能和响应能力。我们可以使用任何内存实现库来实现缓存，比如Caffeine。</p>
<p><strong>尽管这样做提高了数据检索的性能，但如果应用程序部署到多个副本集上，那么缓存就不会在实例之间共享</strong>。为了克服这个问题，我们可以引入一个所有实例都可以访问的分布式缓存层。</p>
<p>在本教程中，我们将学习如何在Spring中实现两级缓存机制。我们将展示如何使用Spring的缓存支持来实现这两个层，并演示当本地缓存层发生缓存未命中时，分布式缓存层是如何被调用的。</p>`,r:{minutes:6,words:1799},t:"使用Spring实现两级缓存",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Include%20null%20Value%20in%20JSON%20Serialization.html",{loader:()=>n(()=>import("./2024-06-20-Include null Value in JSON Serialization.html-CBH2y_tn.js"),__vite__mapDeps([249,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","JSON"],g:["JSON Serialization","Null Values"],e:`
<p>当我们使用Java对象并需要将其转换为JSON格式时，适当处理空值非常重要。从JSON输出中省略空值可能不符合我们的数据需求，特别是当数据完整性至关重要时。</p>
<p><strong>在本教程中，我们将深入探讨在Java中进行JSON序列化时包含空值的有效方法。</strong></p>
<h2>2. 使用案例场景：客户管理系统</h2>
<p>假设我们正在开发一个客户管理系统，其中每个客户都是一个具有名称、电子邮件和年龄等属性的Java对象。此外，一些客户可能没有电子邮件地址。</p>
<p><strong>在将客户数据序列化为JSON进行存储或传输时，包含缺失电子邮件地址的空值对于保持数据一致性至关重要。</strong></p>`,r:{minutes:2.69,words:807},t:"在Java JSON序列化中包含空值",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Invalid%20Characters%20in%20XML.html",{loader:()=>n(()=>import("./2024-06-20-Invalid Characters in XML.html-BpuIJ4DQ.js"),__vite__mapDeps([250,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["XML","Java"],g:["XML","Java","Invalid Characters"],e:`
<h2>1. 概述</h2>
<p>XML（可扩展标记语言）是用于跨不同平台和应用程序存储和传输数据的最广泛使用的格式之一。然而，尽管其具有强大的功能，XML并非没有问题，处理XML文档中的无效字符就是一个挑战。</p>
<p>在本文中，我们将探讨不同的无效字符以及如何在XML处理中处理它们。</p>
<h2>2. XML中有效字符</h2>
<p>XML规范定义了允许在元素内容和属性值中的字符。根据XML 1.0规范，可接受的字符如下所示。XML将这些范围之外的任何字符视为无效字符：</p>
<table>
<thead>
<tr>
<th><strong>描述</strong></th>
<th><strong>范围</strong></th>
<th><strong>示例</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>制表符（水平制表）</td>
<td>9 (TAB)</td>
<td>\\t</td>
</tr>
<tr>
<td>换行符（新行）</td>
<td>10 (LF)</td>
<td>\\n</td>
</tr>
<tr>
<td>回车符（回到行首）</td>
<td>13 (CR)</td>
<td>\\r</td>
</tr>
<tr>
<td>基本多语言平面（BMP）中的字符，不包括代理块</td>
<td>32 to 55295</td>
<td>A, b, &amp;, 1, α（希腊字母α）</td>
</tr>
<tr>
<td>辅助私用区A（SMP）中的字符，不包括代理块</td>
<td>57344 to 65533</td>
<td>😊（笑脸），🎉（派对彩带）</td>
</tr>
<tr>
<td>辅助平面中的BMP之外的字符</td>
<td>65536 to 1114111</td>
<td>🌍（带有经线的地球），🚀（火箭）</td>
</tr>
</tbody>
</table>`,r:{minutes:3.78,words:1134},t:"XML中无效字符的处理",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Iterating%20Over%20Components%20of%20Object%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-20-Iterating Over Components of Object in Kotlin.html-C5X2NtTv.js"),__vite__mapDeps([251,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","Programming"],g:["Kotlin","Reflection","Iteration"],e:'\n<p>本文将探讨迭代对象组件的不同方法。我们将深入研究如何使用多种方法访问Kotlin中的类和数据类的属性和函数，例如使用反射。这在我们需要在运行时动态地自省或操作对象时非常有用。</p>\n<h2>2. 依赖项</h2>\n<p>在本文中，我们将使用<strong>kotlin-reflect</strong>模块，因此让我们在_pom.xml_中包含它：</p>\n<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>`&lt;dependency&gt;`\n    `&lt;groupId&gt;`org.jetbrains.kotlin`&lt;/groupId&gt;`\n    `&lt;artifactId&gt;`kotlin-reflect`&lt;/artifactId&gt;`\n    `&lt;version&gt;`1.9.22`&lt;/version&gt;`\n`&lt;/dependency&gt;`\n</code></pre></div>',r:{minutes:5.77,words:1731},t:"在Kotlin中迭代对象组件",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Java%20InputStream%20vs.%20InputStreamReader.html",{loader:()=>n(()=>import("./2024-06-20-Java InputStream vs. InputStreamReader.html-D3ItdwqY.js"),__vite__mapDeps([252,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","编程"],g:["InputStream","InputStreamReader"],e:`
<p>在本文中，我们将讨论InputStream类以及它如何处理来自不同来源的二进制信息。我们还将讨论InputStreamReader类以及它与InputStream的不同之处。</p>
<h2>2. InputStream是什么？</h2>
<p>InputStream是一个类，它以字节的形式从源读取二进制数据。因为它是一个抽象类，我们只能通过它的子类来实例化它，比如FileInputStream和ByteArrayInputStream等。</p>
<h2>3. InputStreamReader是什么？</h2>
<p>与InputStream类相比，InputStreamReader直接处理字符或文本。它使用给定的InputStream读取字节，然后根据某种字符集将其转换为字符。我们可以显式设置字符集，比如UTF-8、UTF-16等，或者依赖JVM的默认字符集：</p>`,r:{minutes:2.35,words:704},t:"Java InputStream与InputStreamReader | Baeldung",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Normalizing%20the%20EOL%20Character%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-20-Normalizing the EOL Character in Java.html-ToqTsgJg.js"),__vite__mapDeps([253,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","EOL Characters"],g:["EOL Normalization","String Replace","Apache Commons Lang","Java 8 Stream API"],e:`
<h2>1. 引言</h2>
<p>不同的操作系统使用不同的换行符（EOL），这在文件在不同系统间传输或处理时可能会导致问题。此外，统一EOL字符意味着使用单一格式来渲染它们，以确保跨平台的一致性。</p>
<p><strong>本教程提供了不同的Java方法来统一EOL字符。</strong></p>
<h2>2. 理解EOL字符</h2>
<p>在Java中，EOL字符代表文本文件中的一行结束。不同的操作系统使用不同的序列来表示EOL：</p>
<ul>
<li>Unix/Linux: <em>\\n</em>（换行符）</li>
<li>Windows: <em>\\r\\n</em>（回车后跟换行符）</li>
<li>旧Mac: <em>\\r</em>（回车符）</li>
</ul>`,r:{minutes:2.47,words:741},t:"Java 统一换行符字符",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Parallel%20Operations%20on%20Kotlin%20Collections.html",{loader:()=>n(()=>import("./2024-06-20-Parallel Operations on Kotlin Collections.html-Q2mu3DtT.js"),__vite__mapDeps([254,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","并行操作"],g:["Kotlin","并行流","协程"],e:`<hr>
<h1>Kotlin集合的并行操作</h1>
<p>使用Kotlin集合的并行操作允许我们同时处理集合中的元素，利用多核处理器来提高性能。这对于计算密集型任务，如过滤、映射和数据缩减，非常有用。</p>
<p>在本文中，我们将讨论一些在Kotlin集合上执行并行操作的方法。</p>
<p>为了解释并行操作的工作原理，我们将使用以下集合：</p>
<div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token keyword">val</span> name<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> age<span class="token operator">:</span> Int<span class="token punctuation">,</span> <span class="token keyword">var</span> isAdult<span class="token operator">:</span> Boolean<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>

<span class="token keyword">private</span> <span class="token keyword">val</span> people <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span>
  <span class="token function">Person</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Martin"</span></span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">Person</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Ahmad"</span></span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">Person</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Alina"</span></span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">Person</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Alice"</span></span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">Person</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Bob"</span></span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">Person</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Charlie"</span></span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre></div>`,r:{minutes:4.9,words:1469},t:"Kotlin集合的并行操作",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Passing%20a%20Type%20to%20Generic%20Method%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-20-Passing a Type to Generic Method in Kotlin.html-BPKJUvCE.js"),__vite__mapDeps([255,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","Programming"],g:["Generics","Kotlin Tutorial"],e:'\n<p>泛型在Kotlin中使开发者能够编写可重用且类型安全的代码，提供在处理各种数据类型时的灵活性。</p>\n<p>正如我们所知，泛型类和方法使用尖括号来指定类型参数。我们通常需要向泛型方法传递类型参数。</p>\n<p>在本教程中，我们将探索向泛型方法传递类型的各种方法。</p>\n<h2>2. 使用类参数</h2>\n<p>向泛型方法传递类型的一种方式是使用<strong>类</strong>参数。这允许泛型方法访问并使用指定的类型：</p>\n<div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">fun</span> ````<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span>```` <span class="token function">passTypeUsingClassParameter</span><span class="token punctuation">(</span>clazz<span class="token operator">:</span> Class````<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span>````<span class="token punctuation">)</span><span class="token operator">:</span> String <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> clazz<span class="token punctuation">.</span>simpleName\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:2.95,words:886},t:"Kotlin中向泛型方法传递类型",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Querydsl%20vs.%20JPA%20Criteria.html",{loader:()=>n(()=>import("./2024-06-20-Querydsl vs. JPA Criteria.html-DfMxJFOI.js"),__vite__mapDeps([256,1])),meta:{d:1696896e6,l:"2023年10月10日",c:["Spring","JPA"],g:["Querydsl","JPA Criteria"],e:'\n<p>Querydsl 和 JPA Criteria 是 Java 中构建类型安全查询的流行框架。它们都提供了静态类型查询的表达方式，使得编写高效且易于维护的数据库交互代码变得更加容易。在本文中，我们将从不同的角度对它们进行比较。</p>\n<h2>2. 设置</h2>\n<p>首先，我们需要为我们的测试设置依赖项和配置。在所有示例中，我们将使用 HyperSQL 数据库：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>``````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>``````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````org.hsqldb```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````hsqldb```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```````2.7.1```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```````\n``````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>``````\n</code></pre></div>',r:{minutes:3.91,words:1174},t:"Querydsl 与 JPA Criteria 的比较",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Reading%20a%20.gz%20File%20Line%20by%20Line%20Using%20GZIPInputStream.html",{loader:()=>n(()=>import("./2024-06-20-Reading a .gz File Line by Line Using GZIPInputStream.html-Ci0ElQhC.js"),__vite__mapDeps([257,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","GZIP"],g:["GZIPInputStream","文件处理"],e:`
<h2>1. 概述</h2>
<p>我们可能希望在Java中使用压缩文件。常见的格式是_.gz_，这是由GZIP实用工具生成的。</p>
<p><strong>在本教程中，我们将探讨如何使用_Java_中的_GZIPInputStream_类逐行读取压缩的(<em>.gz</em>)文件。</strong></p>
<h2>2. 读取GZipped文件</h2>
<p>让我们想象一下，我们想要将文件的内容读入一个_List_。首先，我们需要在我们的路径上找到文件：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"myFile.gz"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:2.57,words:771},t:"Java中使用GZIPInputStream逐行读取.gz文件",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Representation%20of%20Integers%20at%20a%20Bit%20Level%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-20-Representation of Integers at a Bit Level in Java.html-D7ra8nw1.js"),__vite__mapDeps([258,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","编程"],g:["位运算","Java"],e:`
<p>Java在内存中以二进制形式存储数字。了解整数在位级别上的表示可以帮助我们进行某些操作。</p>
<p>在本教程中，我们将查看Java中数字表示的一些具体细节，并了解Java的位运算是如何工作的。</p>
<h2>2. Java中的位运算</h2>
<p>在Java中，整数使用32位表示，长整数使用64位。需要注意的是，Java使用2的补码表示负数。在这种情况下，如果第一位是1，则假定该数字为负数。负数是通过取数字，翻转所有的1和0，然后加1来计算的。</p>
<p>例如，在8位中，数字6是_0b00000110_。将其转换为-6，我们将其反转为_0b11111001_，然后加1，变成_0b11111010_。</p>`,r:{minutes:4.58,words:1373},t:"Java中整数的位级表示",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Saga%20Pattern%20in%20a%20Microservices%20Architecture.html",{loader:()=>n(()=>import("./2024-06-20-Saga Pattern in a Microservices Architecture.html-DYvRI63t.js"),__vite__mapDeps([259,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Microservices","Saga Pattern"],g:["Spring Boot","Orkes Conductor","Distributed Transactions"],e:`
<p>无论你是刚开始还是拥有多年的经验，<strong>Spring Boot</strong> 显然是构建一个web应用的绝佳选择。</p>
<p>Jmix 建立在这个功能强大且成熟的 Boot 堆栈之上，允许开发者在不需要编写前端代码的情况下构建和交付<strong>全栈web应用</strong>。非常灵活，从简单的web GUI CRUD应用到复杂的企业解决方案。</p>
<p>具体来说，<strong>Jmix平台</strong>包括一个构建在<strong>Spring Boot, JPA, 和 Vaadin</strong>之上的框架，并附带了 Jmix Studio，<strong>一个 IntelliJ IDEA 插件</strong>，配备了一套开发者生产力工具。</p>`,r:{minutes:11.73,words:3519},t:"微服务架构中的Saga模式 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Serialize%20Enum%20Property%20to%20JSON%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-20-Serialize Enum Property to JSON in Kotlin.html-Bhjd-_Pz.js"),__vite__mapDeps([260,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","JSON"],g:["Kotlin","JSON","Serialization","Enum","Jackson","Gson","kotlinx.serialization"],e:`
<p>在Kotlin中，处理JSON序列化通常需要处理枚举。当将这些枚举序列化为JSON时，我们需要确保它们正确地转换为字符串表示形式。</p>
<p>在本教程中，我们将探讨如何使用一些流行的JSON序列化库在Kotlin中将枚举字段序列化为JSON。</p>
<h2>2. 问题介绍</h2>
<p>像往常一样，让我们通过一个例子来理解问题。假设我们有一个表示不同编程语言的枚举类：</p>
<div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">enum</span> <span class="token keyword">class</span> <span class="token function">Language</span><span class="token punctuation">(</span><span class="token keyword">val</span> description<span class="token operator">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">KOTLIN</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Kotlin_is_awesome"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JAVA</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Java_is_great"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">GO</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Go_is_nice"</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:5.65,words:1694},t:"在Kotlin中将枚举属性序列化为JSON",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Use%20of%20Backticks%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-20-Use of Backticks in Kotlin.html-DisKy9Um.js"),__vite__mapDeps([261,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin","Programming"],g:["Kotlin","Backticks","Programming"],e:`<hr>
<h1>Kotlin中反引号的使用</h1>
<h2>1. 引言</h2>
<p>Kotlin允许我们在定义变量和函数时使用反引号(\`)包围标识符。本教程将探讨使用反引号的不同方式以及它们的好处。</p>
<h2>2. 反引号的使用</h2>
<p>默认情况下，Kotlin遵循严格的函数和变量命名约定。然而，<strong>当我们需要以与这些规则冲突的方式命名函数或变量时，反引号就派上用场了</strong>。</p>
<p>在这一部分，让我们看看Kotlin代码中反引号的各种用法。</p>
<h3>2.1. 转义关键字</h3>
<p>反引号最常见的用途之一是转义保留关键字。通常，我们不能在Kotlin中将关键字用作变量或函数名。然而，在某些情况下，我们可能需要将关键字用作标识符。在这些情况下，我们可以使用反引号来转义关键字。让我们看一个例子：</p>`,r:{minutes:4.75,words:1425},t:"Kotlin中反引号的使用",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Using%20the%20%20Value%20Annotation%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-20-Using the  Value Annotation in Kotlin.html-BZM2XOpP.js"),__vite__mapDeps([262,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Spring","Kotlin"],g:["Value注解","Annotation"],e:`
<p>在Spring中，@Value注解是一种强大的方式，可以从配置文件中将属性注入到类中。@Value在Kotlin中的工作方式与Java类似，但由于Kotlin语言特性如空安全和默认构造函数，它有一些细微的差别。</p>
<p>在本教程中，我们将学习如何正确使用@Value。</p>
<h2>2. @Value的基本使用</h2>
<p>@Value注解允许我们将应用程序属性文件中的值直接注入到我们的Spring Bean中。<strong>我们必须在属性占位符字符串中转义美元符号，因为Kotlin字符串也使用它进行字符串插值。</strong></p>
<p>让我们编写MyBean来演示这一点：</p>`,r:{minutes:2.66,words:797},t:"在Kotlin中使用@Value注解",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Variable%20Shadowing%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-20-Variable Shadowing in Kotlin.html-BIDq28V1.js"),__vite__mapDeps([263,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Kotlin"],g:["Variable Shadowing","Programming"],e:`
<p>在Kotlin中，每个在作用域内声明的变量都会遮蔽作用域外同名的变量。这适用于所有作用域级别，例如函数内、类内或代码块中。</p>
<p>有时，变量遮蔽是有用的——例如，用于将我们的代码与系统的其他部分隔离。然而，对于不熟悉它的人来说，这可能会造成混淆。尽管Kotlin允许这样做，但它强烈建议尽可能避免使用遮蔽。如果我们使用像IntelliJ IDEA这样的IDE，我们将很容易发现为我们突出显示的警告。</p>
<p>在本教程中，<strong>我们将讨论一些在Kotlin中可能发生遮蔽的情况。</strong></p>
<h3>类成员变量遮蔽</h3>
<p>这种情况发生在我们有一个类的成员变量，然后我们在函数作用域或代码块内创建了另一个同名的变量：</p>`,r:{minutes:6.79,words:2036},t:"Kotlin中的变量遮蔽",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-Vigen%20re%20Cipher%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-20-Vigen re Cipher in Java.html-DW4vjiUW.js"),__vite__mapDeps([264,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","密码学"],g:["Vigenère密码","加密","解密"],e:`<hr>
<h1>Vigenère密码在Java中的实现 | Baeldung</h1>
<h2><strong>1. 引言</strong></h2>
<p>在本文中，我们将研究Vigenère密码。我们将了解密码的工作原理，然后学习如何在Java中实现和逆向实现它。</p>
<h2><strong>2. Vigenère密码是什么？</strong></h2>
<p><strong>Vigenère密码是经典凯撒密码的一个变种，只是每个字母的位移量不同。</strong></p>
<p>在凯撒密码中，我们将明文中的每个字母都按照相同的量进行位移。例如，如果我们将每个字母位移三位，那么字符串"BAELDUNG"将变成"EDHOGXQJ"：</p>`,r:{minutes:6.88,words:2063},t:"Vigenère密码在Java中的实现 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/2024-06-20-When%20to%20Use%20Setter%20Methods%20or%20Constructors%20for%20Setting%20a%20Variable%20s%20Value%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-20-When to Use Setter Methods or Constructors for Setting a Variable s Value in Java.html-CumIGHpg.js"),__vite__mapDeps([265,1])),meta:{d:17188416e5,l:"2024年6月20日",c:["Java","Programming"],g:["Java","Setter Methods","Constructors"],e:`<hr>
<h1>在Java中何时使用Setter方法或构造器设置变量的值</h1>
<h2>1. 引言</h2>
<p>开发者们经常面临的一个选择是：应该使用Setter方法还是构造器来设置变量的值。这两种技术都有其优点，但它们在不同的情况下被实现。</p>
<p><strong>在本教程中，我们将讨论在Java中何时使用Setter方法或构造器来设置变量的值。</strong></p>
<h2>2. 使用Setter方法</h2>
<p>Setter方法是我们可以在Java类中用来设置实例变量值的函数。<strong>此外，它们提供了一种灵活的方式来在对象初始化后修改其状态。</strong> 使用Setter方法设置的实例变量不能声明为final，因为这些值可以在对象初始化后更改。</p>`,r:{minutes:3.29,words:988},t:"在Java中何时使用Setter方法或构造器设置变量的值",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Adding%20Elements%20to%20a%20Collection%20During%20Iteration.html",{loader:()=>n(()=>import("./2024-06-21-Adding Elements to a Collection During Iteration.html-D0cYcVN9.js"),__vite__mapDeps([266,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Collections"],g:["List","ListIterator","Java 8"],e:`
<p>迭代一个列表是Java中的常见操作，但在迭代过程中向其中添加元素需要仔细考虑，以避免异常并确保代码的正确性。</p>
<p>在这个教程中，我们将讨论在迭代期间向集合添加元素的几种方法。</p>
<h2>2. 使用 ListIterator 类</h2>
<p>一种常见的方法是使用 ListIterator，它为列表提供了双向遍历和修改能力。</p>
<h3>2.1. 字符串场景</h3>
<p>考虑以下示例，我们在遇到 Python 后将 JavaScript 添加到编程语言列表中：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span>\`\`\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>\`\`\` programmingLanguages <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">,</span> <span class="token string">"Python"</span><span class="token punctuation">,</span> <span class="token string">"C++"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenList_whenAddElementWithListIterator_thenModifiedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ListIterator</span>\`\`\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>\`\`\` listIterator <span class="token operator">=</span> programmingLanguages<span class="token punctuation">.</span><span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>listIterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> language <span class="token operator">=</span> listIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>language<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Python"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            listIterator<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"JavaScript"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">assertIterableEquals</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">,</span> <span class="token string">"Python"</span><span class="token punctuation">,</span> <span class="token string">"JavaScript"</span><span class="token punctuation">,</span> <span class="token string">"C++"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> programmingLanguages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.96,words:1188},t:"在迭代期间向集合添加元素",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Calculate%20Percentiles%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Calculate Percentiles in Java.html-C0ykizSe.js"),__vite__mapDeps([267,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","数据分析"],g:["百分位数","数据集","统计分布"],e:`
<h2>1. 概述</h2>
<p>在Java中分析数据时，计算百位数是理解数值数据集的统计分布和特征的基本任务。</p>
<p>在本教程中，我们将逐步介绍Java中计算百分位数的过程，并提供代码示例和解释。</p>
<h2>2. 理解百分位数</h2>
<p>在讨论实现细节之前，我们首先了解百分位数是什么以及它们在数据分析中的常见用法。</p>
<p><strong>百分位数是统计学中用来表示低于某个给定百分比的观察值的值</strong>。例如，第50百分位数（也称为中位数）表示有50%的数据点低于此值。</p>
<p>值得注意的是，<strong>百分位数以与输入数据集相同的单位表示，而不是以百分比</strong>。例如，如果数据集指的是月薪，相应的百分位数将以美元、欧元或其他货币表示。</p>`,r:{minutes:4.31,words:1292},t:"Java中计算百分位数",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Capturing%20Method%20Arguments%20When%20Running%20Spock%20Tests.html",{loader:()=>n(()=>import("./2024-06-21-Capturing Method Arguments When Running Spock Tests.html-B-40x0v9.js"),__vite__mapDeps([268,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Spock"],g:["测试","Groovy"],e:`
<p>当我们测试代码时，有时我们想要捕获传递给方法的参数。</p>
<p>在本教程中，我们将学习如何使用Spock测试中的_Stubs_、_Mocks_和_Spies_来捕获参数，并检查我们捕获的内容。我们还将学习如何验证对同一_Mock_的多次调用使用不同的参数，并断言这些调用的顺序。</p>
<h2>2. 我们测试的主题</h2>
<p>首先，我们需要一个接受我们想要捕获的单个参数或参数的方法。</p>
<p>让我们创建一个_ArgumentCaptureSubject_类，它有一个_catchMeIfYouCan()_方法，该方法接受一个_String_并返回它，前面加上“Received ”：</p>`,r:{minutes:7.84,words:2352},t:"使用Spock测试捕获方法参数",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Check%20if%20a%20Number%20Is%20a%20Happy%20Number%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Check if a Number Is a Happy Number in Java.html-BELcRLNJ.js"),__vite__mapDeps([269,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","算法"],g:["Happy Number","算法实现"],e:`
<h2>1. 概述</h2>
<p>我们经常在编程中解决数学问题。确定一个数是否是快乐数是一个有趣的任务。</p>
<p>在本教程中，我们将理解快乐数的定义，并探索如何实现一个Java程序来检查给定的数是否是快乐数。</p>
<h2>2. 理解快乐数</h2>
<p><strong>快乐数是通过重复替换其数字平方和达到1的数。</strong> 相反，非快乐数（悲伤数）会陷入一个无限循环，永远无法达到1。</p>
<p>像往常一样，一些例子可以帮助我们快速理解快乐数的定义：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>给定数字：19

 19 -&gt; 1^2 + 9^2 = 82
 82 -&gt; 8^2 + 2^2 = 68
 68 -&gt; 6^2 + 8^2 = 100
100 -&gt; 1^2 + 0^2 + 0^2 = 1
  1

</code></pre></div>`,r:{minutes:5.03,words:1508},t:"Java中判断一个数是否是快乐数",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Commit%20Offsets%20in%20Kafka.html",{loader:()=>n(()=>import("./2024-06-21-Commit Offsets in Kafka.html-Bm3TRZ1X.js"),__vite__mapDeps([270,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Kafka","Commit Offsets"],g:["Kafka","Offsets","Commit"],e:`
<p>在Kafka中，消费者从分区中读取消息。在读取消息时，需要考虑一些问题，比如确定从分区中读取哪些消息，或者防止在故障情况下重复读取消息或消息丢失。解决这些问题的方案是使用偏移量。</p>
<p>在本教程中，我们将学习Kafka中的偏移量。我们将看到如何提交偏移量来管理消息消费，并讨论其方法和缺点。</p>
<h2>2. 什么是偏移量？</h2>
<p>我们知道Kafka将消息存储在主题中，每个主题可以有多个分区。每个消费者从一个主题的分区中读取消息。在这里，<strong>Kafka通过偏移量来跟踪消费者读取的消息。</strong> 偏移量是从零开始的整数，随着消息的存储而递增。</p>`,r:{minutes:5.41,words:1623},t:"Kafka中的提交偏移量",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Find%20the%20Largest%20Number%20Possible%20After%20Removing%20k%20Digits%20of%20a%20Number.html",{loader:()=>n(()=>import("./2024-06-21-Find the Largest Number Possible After Removing k Digits of a Number.html-C0AJTyHe.js"),__vite__mapDeps([271,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Algorithms"],g:["Largest Number","Remove Digits"],e:`
<h2>1. 概述</h2>
<p>在本教程中，我们将看到不同的算法，允许我们<strong>在移除数字k位后找到可能的最大数字</strong>。</p>
<p>首先，我们将解释问题。然后，我们将看到两种不同的算法，它们适合我们的需求。最后，我们将讨论它们的复杂性。</p>
<h2>2. 问题解释</h2>
<p>首先，让我们解释算法的目标。我们想要在移除数字k位后找到可能的最大数字。</p>
<p>例如，考虑数字286281。我们必须移除的位数是2，所以可能的最大数字将是8681。假设我们考虑另一个k值，即2，预期的输出将是88。</p>
<h2>3. 使用算术</h2>
<p>在这一部分，我们将看到逻辑解释以及时间和空间复杂性。</p>`,r:{minutes:3.77,words:1132},t:"移除数字k位后找到可能的最大数字 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Finding%20the%20Majority%20Element%20of%20an%20Array%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Finding the Majority Element of an Array in Java.html-BcfVseMc.js"),__vite__mapDeps([272,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Algorithms"],g:["Array","Majority Element"],e:`
<h2>1. 引言</h2>
<p>在本教程中，我们将探讨在数组中寻找主要元素的不同方法。对于每种方法，我们将提供它们各自的代码实现以及时间和空间复杂度的分析。</p>
<h2>2. 问题陈述</h2>
<p>让我们理解在数组中寻找主要元素的问题。我们有一个整数数组，我们的目标是确定其中是否存在一个主要元素。</p>
<p>**主要元素出现的次数超过数组长度的一半，即出现次数超过_n/2_，其中_n_代表数组的长度。**这意味着识别出在出现频率方面支配数组的元素。</p>
<p>在深入每种方法之前，我们将使用提供的样本数据作为输入：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:7.68,words:2305},t:"在Java中寻找数组的主要元素",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Finding%20the%20Peak%20Elements%20of%20a%20List.html",{loader:()=>n(()=>import("./2024-06-21-Finding the Peak Elements of a List.html-D2eFtCqz.js"),__vite__mapDeps([273,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Algorithms"],g:["Peak Elements","Array","Binary Search"],e:`
<h2>1. 引言</h2>
<p>数组中的峰值元素对于许多算法来说都非常重要，它们为数据集的特性提供了宝贵的洞察。在本教程中，我们将探讨峰值元素的概念，解释它们的重要性，并探索在单峰和多峰情况下有效识别它们的高效方法。</p>
<h2>2. 什么是峰值元素？</h2>
<p><strong>数组中的峰值元素定义为严格大于其相邻元素的元素。</strong> 如果边元素大于它们唯一的相邻元素，则认为它们处于峰值位置。</p>
<p>在元素相等的情况下，不存在严格的峰值。相反，峰值是元素首次超过其邻居的第一个实例。</p>
<h3>2.1. 示例</h3>
<p>为了更好地理解峰值元素的概念，请看以下示例：</p>`,r:{minutes:7.13,words:2139},t:"寻找列表中的峰值元素 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-HTML%20Builder%20in%20Kotlin.html",{loader:()=>n(()=>import("./2024-06-21-HTML Builder in Kotlin.html-CcT51hSB.js"),__vite__mapDeps([274,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Kotlin","Web Development"],g:["HTML","Kotlin","kotlinx.html"],e:`
<p>开发Web应用程序可能具有挑战性，特别是在处理动态内容时。然而，Kotlin提供了一个解决方案，即其HTML生成器库，这是_kotlinx.html_的一部分。使用这个库，开发者可以轻松地使用Kotlin的表达性语法创建HTML文档。</p>
<p>在本教程中，我们将探讨_kotlinx.html_如何简化Kotlin中的HTML生成。</p>
<h2>2. 理解_kotlinx.html_</h2>
<p>_kotlinx.html_库为在Kotlin中构建HTML结构提供了一个特定领域的语言（DSL）。通常，这个DSL允许我们以类型安全和简洁的方式创建HTML元素和属性，类似于HTML本身的结构。</p>`,r:{minutes:2.72,words:817},t:"Kotlin中的HTML生成器",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-How%20to%20Autowire%20a%20Spring%20Bean%20in%20a%20Servlet%20Filter.html",{loader:()=>n(()=>import("./2024-06-21-How to Autowire a Spring Bean in a Servlet Filter.html-DwRWKqFe.js"),__vite__mapDeps([275,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Spring","Java"],g:["Spring Framework","Servlet Filter"],e:`
<h2>1. 引言</h2>
<p>Servlet过滤器提供了一种强大的机制，用于拦截和操作传入的请求。然而，在这些过滤器中访问Spring管理的Bean可能会带来挑战。</p>
<p>在本教程中，我们将探讨在Servlet过滤器中无缝获取Spring Bean的各种方法，这在基于Spring的Web应用程序中是一个常见的需求。</p>
<h2>2. 理解@Autowired在Servlet过滤器中的限制</h2>
<p>虽然Spring的依赖注入机制@Autowired是将依赖注入Spring管理组件的便捷方式，但它与Servlet过滤器并不完全兼容。这是因为Servlet过滤器是由Servlet容器初始化的，通常在Spring的ApplicationContext完全加载和初始化之前。</p>`,r:{minutes:5.4,words:1620},t:"如何在Servlet过滤器中自动装配Spring Bean",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Intro%20to%20the%20Apache%20Commons%20CLI.html",{loader:()=>n(()=>import("./2024-06-21-Intro to the Apache Commons CLI.html-DTQ1xY6V.js"),__vite__mapDeps([276,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java Libraries","Apache Commons"],g:["Apache Commons CLI","CLI Development"],e:`
<p>在这个教程中，我们将探索 Java Apache Commons CLI 库。它是一个框架，通过帮助开发者以一种高效和标准化的方式构建现有软件工具的命令行界面（CLI），赋予了开发者能力。</p>
<p><strong>该库可以通过支持定义 CLI 选项和基本验证来加速 CLI 的开发。</strong> 它帮助解析命令行参数及其值。最后，参数值可以传递给实现工具的底层服务。</p>
<p><strong>值得注意的是，Apache Commons CLI 库也在 Apache 的多个产品中使用，包括 Kafka、Maven、Ant 和 Tomcat。</strong></p>
<p>我们将讨论 Apache Commons CLI 中的一些重要类，然后使用它们在示例程序中展示其功能。</p>`,r:{minutes:6.38,words:1915},t:"Apache Commons CLI 入门指南",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Introduction%20to%20Redpanda.html",{loader:()=>n(()=>import("./2024-06-21-Introduction to Redpanda.html-IWhAJ5JU.js"),__vite__mapDeps([277,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Redpanda","Kafka"],g:["事件流平台","性能"],e:`
<p>在本教程中，我们将讨论一个名为 Redpanda 的强大事件流平台。它是行业流平台 Kafka 的竞争对手，并且有趣的是，它还与 Kafka API 兼容。</p>
<p>我们将查看 Redpanda 的关键组件、特性和用例，创建 Java 程序以发布消息到 Redpanda 主题，然后从中读取消息。Redpanda 与 Kafka 的比较</p>
<p>由于 Redpanda 的制作者声称它是 Kafka 的竞争对手，让我们在一些重要因素上对它们进行比较：</p>
<table>
<thead>
<tr>
<th>特性</th>
<th>Redpanda</th>
<th>Kafka</th>
</tr>
</thead>
<tbody>
<tr>
<td>开发者体验</td>
<td>- 包括一个易于安装的单一二进制包<code>&lt;br&gt;</code>- 不依赖 JVM 和第三方工具</td>
<td>- 依赖 Zookeeper 或 KRaft<code>&lt;br&gt;</code>- 安装时开发者需要更多专业知识</td>
</tr>
<tr>
<td>性能</td>
<td>- 由于其每个核心一个线程的编程模型，比 Kafka 快 10 倍<code>&lt;br&gt;</code>- 用 C++ 编写<code>&lt;br&gt;</code>- 每个核心可以处理每秒 1GB 的写入<code>&lt;br&gt;</code>- 支持自动内核调整<code>&lt;br&gt;</code>- p99999 延迟是 16ms</td>
<td>- Kafka 是很久以前开发的，因此没有针对运行多个核心的新时代 CPU 进行优化。<code>&lt;br&gt;</code>- 用 Java 编写<code>&lt;br&gt;</code>- p99999 延迟是 1.8 秒</td>
</tr>
<tr>
<td>成本</td>
<td>- 比 Kafka 低 6 倍</td>
<td>- 需要更多的基础设施来支持类似的性能</td>
</tr>
<tr>
<td>连接器</td>
<td>- Redpanda Cloud 提供一些开箱即用的托管连接器</td>
<td>- 非常成熟，支持许多开箱即用的连接器</td>
</tr>
<tr>
<td>社区支持</td>
<td>- 在可接受性方面，与 Kafka 相比还有很长的路要走<code>&lt;br&gt;</code>- 有一个 Slack 频道</td>
<td>- 它在各个行业中有大量的采用，因此有一个非常成熟的社区</td>
</tr>
</tbody>
</table>`,r:{minutes:7.61,words:2283},t:"Redpanda 简介",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Obtaining%20the%20Last%20Path%20Segment%20of%20a%20URI%20in%20Java.html",{loader:()=>n(()=>import("./2024-06-21-Obtaining the Last Path Segment of a URI in Java.html-D8QPO22K.js"),__vite__mapDeps([278,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","URI"],g:["URI","Java","路径"],e:`
<hr>
<p>在Web开发和文件管理中，处理统一资源标识符（URI）是一项常见的操作。</p>
<p>除此之外，最常见的需求之一是从URL中获取最后一个路径段（最后一个段是在最后一个‘/’字符之后的最后一个段）。</p>
<p><strong>在本教程中，我们将探讨获取URL最后一个段的不同方法。</strong></p>
<h3>2. 使用_URI_类</h3>
<p>java.net.URI类提供了一种面向对象的URI解析和操作方法。为了简化，让我们以一个示例为例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenURL_whenUsingURIClass_thenGetLastPathSegment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">{</span>
    <span class="token class-name">URI</span> uri <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"https://www.example.com/path/to/resource"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> path <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> segments <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> lastSegment <span class="token operator">=</span> segments<span class="token punctuation">[</span>segments<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">"resource"</span><span class="token punctuation">,</span> lastSegment<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.96,words:887},t:"在Java中获取URI的最后一个路径段",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Parsing%20HTML%20Table%20in%20Java%20With%20Jsoup.html",{loader:()=>n(()=>import("./2024-06-21-Parsing HTML Table in Java With Jsoup.html-CC2_ItvE.js"),__vite__mapDeps([279,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Java","Jsoup"],g:["HTML","网页抓取"],e:'<hr>\n<h1>Java中使用Jsoup解析HTML表格</h1>\n<p>Jsoup是一个开源库，用于抓取HTML页面。它提供了一个API，使用DOM API方法进行数据解析、提取和操作。</p>\n<p>在本文中，我们将看到如何使用Jsoup解析HTML表格。<strong>我们将检索和更新HTML表格中的数据，并且，使用Jsoup向表格中添加和删除行。</strong></p>\n<h3>2. 依赖性</h3>\n<p>要使用Jsoup库，请将以下依赖项添加到项目中：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`org.jsoup`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`jsoup`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`1.17.2`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n</code></pre></div>',r:{minutes:5.04,words:1511},t:"Java中使用Jsoup解析HTML表格",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Refresh%20and%20Fetch%20an%20Entity%20After%20Save%20in%20JPA.html",{loader:()=>n(()=>import("./2024-06-21-Refresh and Fetch an Entity After Save in JPA.html-yW9IOxNC.js"),__vite__mapDeps([280,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Spring Data JPA","JPA"],g:["Refresh","Fetch","Entity Management"],e:`
<p>Java持久化API（JPA）充当Java对象和关系数据库之间的桥梁，允许我们无缝地持久化和检索数据。在本教程中，我们将探讨在JPA中保存操作后有效地刷新和获取实体的各种策略和技术。### 2. Spring Data JPA中的实体管理理解</p>
<p>在Spring Data JPA中，实体管理围绕<code>JpaRepository</code>接口展开，它是与数据库交互的主要机制。通过扩展<code>CrudRepository</code>的<code>JpaRepository</code>接口，Spring Data JPA提供了一套强大的方法用于实体的持久化、检索、更新和删除。</p>`,r:{minutes:7.21,words:2162},t:"在JPA中保存后刷新和获取实体",y:"a"}}],["/posts/baeldung/Archive/2024-06-21-Spring%20Security%20AuthorizationManager.html",{loader:()=>n(()=>import("./2024-06-21-Spring Security AuthorizationManager.html-BsFWZdB5.js"),__vite__mapDeps([281,1])),meta:{d:1718928e6,l:"2024年6月21日",c:["Spring Security","Authorization"],g:["Spring Security","AuthorizationManager"],e:`
<p>如果你正在开发Spring Security（特别是OAuth）实现，一定要看看《学习Spring安全》课程：</p>
<p><strong>&gt;&gt; 学习 Spring</strong>
<strong>安全</strong></p>
<h2>1. 引言</h2>
<p>Spring Security是Spring框架的一个扩展，它使我们能够轻松地将常见的安全实践集成到我们的应用程序中。这包括用户认证和授权、API保护等。</p>
<p>在本教程中，我们将查看Spring Security内部的许多部分之一：<em>AuthorizationManager</em>。我们将看到它如何适应更大的Spring Security生态系统，以及它如何帮助保护我们的应用程序的各种用例。</p>`,r:{minutes:6.98,words:2094},t:"Spring Security 授权管理器",y:"a"}}],["/posts/baeldung/Archive/Add%20Global%20Exception%20Interceptor%20in%20gRPC%20Server.html",{loader:()=>n(()=>import("./Add Global Exception Interceptor in gRPC Server.html-D26vTSKi.js"),__vite__mapDeps([282,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["gRPC","异常处理"],g:["gRPC","拦截器","异常拦截器"],e:`
<p>在本教程中，我们将探讨gRPC服务器应用程序中拦截器的作用，以处理全局异常。</p>
<p>拦截器可以在请求到达RPC方法之前进行验证或操作。因此，它们对于处理应用程序的常见问题非常有用，例如日志记录、安全性、缓存、审计、身份验证和授权等。</p>
<p>应用程序也可以使用拦截器作为全局异常处理器。</p>
<p>主要地，拦截器可以帮助处理两种类型的异常：</p>
<ul>
<li>处理从无法处理它们的方法中逃逸的未知运行时异常</li>
<li>处理从任何其他下游拦截器中逃逸的异常</li>
</ul>
<p>拦截器可以帮助以集中的方式创建一个处理异常的框架。这样，应用程序就可以有一个一致的标准和强大的方法来处理异常。</p>`,r:{minutes:6.77,words:2032},t:"在gRPC服务器中添加全局异常拦截器",y:"a"}}],["/posts/baeldung/Archive/Add%20an%20Aggregation%20to%20an%20Elasticsearch%20Query.html",{loader:()=>n(()=>import("./Add an Aggregation to an Elasticsearch Query.html-DcWrRMWX.js"),__vite__mapDeps([283,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Elasticsearch","Spring Data"],g:["Elasticsearch","Aggregation","Query","Spring Data","Tutorial"],e:`
<p>Elasticsearch是一个适用于需要灵活过滤的场景的搜索和分析引擎。<strong>有时，我们需要检索请求的数据及其聚合信息。</strong> 在本教程中，我们将探讨如何做到这一点。</p>
<h2>2. Elasticsearch搜索与聚合</h2>
<p>让我们从探索Elasticsearch的聚合功能开始。</p>
<p>一旦我们在本地主机上运行了Elasticsearch实例，<strong>让我们创建一个名为_store-items_的索引，并在其中添加一些文档</strong>：</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code>POST http<span class="token operator">:</span><span class="token comment">//localhost:9200/store-items/_doc</span>
<span class="token punctuation">{</span>
    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Multimedia"</span><span class="token punctuation">,</span>
    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"PC Monitor"</span><span class="token punctuation">,</span>
    <span class="token property">"price"</span><span class="token operator">:</span> <span class="token number">1000</span>
<span class="token punctuation">}</span>
...
POST http<span class="token operator">:</span><span class="token comment">//localhost:9200/store-items/_doc</span>
<span class="token punctuation">{</span>
    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Pets"</span><span class="token punctuation">,</span>
    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Dog Toy"</span><span class="token punctuation">,</span>
    <span class="token property">"price"</span><span class="token operator">:</span> <span class="token number">10</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4.18,words:1254},t:"Elasticsearch查询中添加聚合",y:"a"}}],["/posts/baeldung/Archive/BigDecimal%20equals%20%20%20vs.%20compareTo%20%20.html",{loader:()=>n(()=>import("./BigDecimal equals   vs. compareTo  .html-BW1JXVwD.js"),__vite__mapDeps([284,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","BigDecimal"],g:["equals()","compareTo()"],e:`
<p>正确处理数字对于任何编程语言来说都至关重要。然而，有些应用程序更依赖于确切的值，并需要更好地表示小数。
例如，在处理金钱或精确计算时，我们应该避免允许四舍五入错误和溢出的数字表示。在这种情况下，强烈建议使用 <em>BigDecimal</em> 类。
尽管 <em>BigDecimal</em> 提供了许多好处，但它在 <em>equals()</em> 和 <em>compareTo()</em> 方法上表现出非直观的行为。在本教程中，我们将深入探讨它们的差异、底层实现以及这些方法的影响。</p>
<p>让我们从这些方法中最简单的 <em>compareTo()</em> 开始。它的美妙之处在于其行为是预期的，并且对于大多数开发人员来说被认为是一致和合乎逻辑的。
这个方法比较两个数字，并返回一个整数值，显示一个数字是大于、小于还是等于另一个数字。在这种情况下，我们根据 <em>compareTo()</em> 结果为零来引用两个数字的相等性。让我们检查一下 <em>compareTo()</em> 逻辑的以下示例：</p>`,r:{minutes:3.39,words:1016},t:"BigDecimal equals() 与 compareTo() 的差异 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Calculating%20Moving%20Averages%20in%20Java.html",{loader:()=>n(()=>import("./Calculating Moving Averages in Java.html-n0raIJIv.js"),__vite__mapDeps([285,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","编程"],g:["移动平均","计算"],e:`
<p>date: 2024-06-18
category:</p>
<ul>
<li>Java</li>
<li>编程
tag:</li>
<li>移动平均</li>
<li>计算</li>
</ul>
<hr>
<h1>Java中计算移动平均值 | Baeldung</h1>
<ul>
<li>
<p>从这里开始</p>
</li>
<li>
<p>课程▼▲</p>
</li>
<li>
<p><strong>使用Spring Boot构建REST</strong><br>
\\ 构建生产级API的权威参考**（几天后价格将上涨50美元）**</p>
</li>
<li>
<p><strong>学习Spring Security▼▲</strong><br>
\\ 如果你今天使用Java工作，这是唯一的Spring Security教育</p>
</li>
<li>
<p><strong>学习Spring Security Core</strong><br>
\\ 专注于Spring Security 6的核心</p>
</li>
<li>
<p><strong>学习Spring Security OAuth</strong><br>
\\ 专注于Spring Security 6中的新OAuth2堆栈</p>
</li>
<li>
<p><strong>学习Spring</strong><br>
\\ 从无经验到实际构建东西</p>
</li>
<li>
<p><strong>学习Spring Data JPA</strong><br>
\\ 完整的Spring Data JPA持久性指南</p>
</li>
<li>
<p>指南▼▲</p>
</li>
<li>
<p><strong>持久性</strong><br>
\\ Spring持久性的指南</p>
</li>
<li>
<p><strong>REST</strong><br>
\\ 使用Spring构建REST API的指南</p>
</li>
<li>
<p><strong>安全</strong><br>
\\ Spring Security指南</p>
</li>
<li>
<p>关于▼▲</p>
</li>
<li>
<p><strong>完整存档</strong><br>
\\ 网站上所有文章的高层次概述。</p>
</li>
<li>
<p><strong>Baeldung电子书</strong><br>
\\ 发现我们所有的电子书</p>
</li>
<li>
<p><strong>关于Baeldung</strong><br>
\\ 关于Baeldung。</p>
</li>
<li>
<p><strong>为Baeldung写作</strong><br>
\\ 成为网站上的作家。</p>
</li>
<li>
<p>RSS</p>
</li>
<li>
<p>搜索</p>
</li>
</ul>`,r:{minutes:.85,words:254},t:"Java中计算移动平均值 | Baeldung---",y:"a"}}],["/posts/baeldung/Archive/Can%20%20Transactional%20and%20%20Async%20Work%20Together%20.html",{loader:()=>n(()=>import("./Can  Transactional and  Async Work Together .html-BMxRR1W-.js"),__vite__mapDeps([286,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Spring","Java"],g:["Spring Framework","Asynchronous","Transactional"],e:`
<h2>1. 引言</h2>
<p>在本文中，我们将探讨Spring框架中@Transactional和@Async注解之间的兼容性。</p>
<h2>2. 理解 @Transactional 和 @Async</h2>
<p><strong>@Transactional注解从许多其他代码块中创建一个原子代码块。因此，如果一个块以异常方式完成，所有部分都会回滚</strong>。因此，只有当其所有部分都成功时，新创建的原子单元才会成功完成提交。</p>
<p>创建事务使我们能够避免代码中的部分失败，提高数据一致性。</p>
<p>另一方面，@Async告诉Spring，被注解的单元可以与调用线程并行运行。<strong>换句话说，如果我们从线程调用一个@Async方法或类，Spring会在具有不同上下文的另一个线程中运行其代码</strong>。</p>`,r:{minutes:6.74,words:2023},t:"@Transactional 和 @Async 是否可以一起工作？ | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Check%20if%20Two%20Strings%20Are%20Permutations%20of%20Each%20Other%20in%20Java.html",{loader:()=>n(()=>import("./Check if Two Strings Are Permutations of Each Other in Java.html-CTIfhduJ.js"),__vite__mapDeps([287,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","Algorithms"],g:["String","Permutation","Anagram"],e:`
<p>排列或变位词是通过重新排列不同单词或短语的字母形成的单词或短语。换句话说，<strong>排列包含与另一个字符串相同的字符，但字符的排列顺序可以变化</strong>。</p>
<p>在本教程中，我们将检查字符串是否是另一个字符串的排列或变位词的解决方案。</p>
<h3>2.1. 排列</h3>
<p>让我们看看单词 "CAT" 的排列：</p>
<p>显然，有六种排列（包括 "CAT" 本身）。我们可以计算 <em>n!</em>（字符串长度 <em>n</em> 的阶乘）。</p>
<h3>2.2. 如何解决问题</h3>
<p>正如我们所看到的，一个字符串有许多可能的排列。我们可能会想到创建一个算法，循环遍历所有的字符串排列，以检查是否有一个与我们比较的字符串相等。</p>`,r:{minutes:7.57,words:2271},t:"Java中检查两个字符串是否为彼此的排列",y:"a"}}],["/posts/baeldung/Archive/Check%20if%20a%20Number%20Is%20Power%20of%202%20in%20Java.html",{loader:()=>n(()=>import("./Check if a Number Is Power of 2 in Java.html-BmPTQWoF.js"),__vite__mapDeps([288,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","编程"],g:["Java","算法","位运算"],e:`
<h2>1. 引言</h2>
<p>2的幂是一个可以表示为2的某个整数次方的数字，例如2、4、8、16等。在Java中，有几种方法可以确定给定的数字是否是2的幂，包括使用对数、位运算、循环除法和内置方法。在本教程中，我们将探索这些不同的方法，并提供如何在Java中实现它们的示例。</p>
<h2>2. 循环除法</h2>
<p>检查一个数字是否是2的幂的一种方法是通过迭代地将数字除以2，直到它变为1。如果数字是2的幂，它将在有限次除法后变为1。让我们看看这种技术是如何实现的：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">boolean</span> <span class="token function">isPowerOfTwoUsingLoopDivision</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        n <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:5.04,words:1513},t:"Java中检查数字是否为2的幂的方法 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Clear%20Managed%20Entities%20in%20JPA%20Hibernate.html",{loader:()=>n(()=>import("./Clear Managed Entities in JPA Hibernate.html-gbZCPexg.js"),__vite__mapDeps([289,1])),meta:{d:1696896e6,l:"2023年10月10日",c:["JPA","Hibernate"],g:["JPA","Hibernate","持久化上下文","清除管理实体"],e:`
<h2>1. 概述</h2>
<p>在本教程中，我们将回顾JPA中实体是如何被管理的，然后探讨一个场景，即由于外部变化，持久化上下文可能不会返回最新数据。</p>
<h2>2. 持久化上下文</h2>
<p>每个_EntityManager_都与一个持久化上下文相关联，该上下文在内存中存储管理实体。每当我们通过_EntityManager_对实体执行任何数据操作时，该实体就会由持久化上下文管理。</p>
<p>当我们再次检索实体时，JPA会从持久化上下文中返回管理实体，而不是从数据库中获取。这种缓存机制有助于提高性能，避免了从数据库中重复获取相同的数据。</p>
<p><strong>持久化上下文在JPA中也被称为一级（L1）缓存。</strong></p>`,r:{minutes:3.03,words:908},t:"JPA/Hibernate 中清除管理实体的指南",y:"a"}}],["/posts/baeldung/Archive/Code%20Coverage%20vs.%20Test%20Coverage.html",{loader:()=>n(()=>import("./Code Coverage vs. Test Coverage.html-DOXEXIlx.js"),__vite__mapDeps([290,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Software Testing","Development Practices"],g:["Code Coverage","Test Coverage"],e:`
<p>软件测试帮助我们确保代码正确运行，这使得它成为开发过程中的重要组成部分。当讨论测试时，可能会出现诸如代码覆盖率和测试覆盖率等术语。尽管它们都是衡量我们代码库有效性的方式，但它们指的是不同的概念。因此，我们不应该将它们交替使用。</p>
<p>在本教程中，我们将学习代码和测试覆盖率之间的区别，并讨论每种覆盖率的含义。</p>
<p>代码覆盖率是一种机制，用于衡量测试中源代码覆盖的部分。它代表了白盒测试的一种形式，需要访问源代码，并考虑实现细节和代码的内部结构。代码覆盖率主要由开发人员在单元测试中完成。</p>
<p>有几种方法可以衡量代码覆盖率：</p>
<ul>
<li><strong>语句/行覆盖率</strong>检查在测试期间至少执行一次的语句数量。</li>
<li><strong>分支覆盖率</strong>计算决策过程中覆盖的分支百分比。</li>
<li><strong>条件/表达式覆盖率</strong>确保每个条件至少被评估为真或假一次。</li>
<li><strong>函数覆盖率</strong>计算至少被调用一次的方法数量。</li>
</ul>`,r:{minutes:6.41,words:1923},t:"代码覆盖率与测试覆盖率 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Collecting%20into%20Map%20using%20Collectors.toMap%20%20%20vs%20Collectors.groupingBy%20%20.html",{loader:()=>n(()=>import("./Collecting into Map using Collectors.toMap   vs Collectors.groupingBy  .html-0Tx3Abs6.js"),__vite__mapDeps([291,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Java","编程"],g:["Java 8","Stream API","Collectors"],e:`
<p>在 Java 编程中，处理集合和流是常见任务，特别是在现代的函数式编程范式中。Java 8 引入了 Stream API，为处理数据集合提供了强大的工具。</p>
<p>Stream API 中的两个基本的 Collector 是 Collectors.toMap() 和 Collectors.groupingBy()，它们在将 Stream 元素转换为 Map 方面有着不同的目的。</p>
<p>在本教程中，我们将深入探讨这两种 Collector 的差异，并探索每种 Collector 更适用的场景。</p>
<h2>2. 城市示例</h2>
<p>示例可以帮助我们说明问题。因此，让我们创建一个简单的不可变 POJO 类：</p>`,r:{minutes:7.1,words:2131},t:"Java 8 中使用 Stream API 的 Collectors.toMap() 与 Collectors.groupingBy() 的比较",y:"a"}}],["/posts/baeldung/Archive/Compare%20the%20Numbers%20of%20Different%20Types.html",{loader:()=>n(()=>import("./Compare the Numbers of Different Types.html-Drrqs7Hr.js"),__vite__mapDeps([292,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java"],g:["数字比较","浮点数","整数"],e:`
<ol>
<li>概述</li>
</ol>
<p>有时，我们必须比较数字，忽略它们的类别或类型。<strong>这在格式不统一且数字可能在不同上下文中使用时特别有用。</strong></p>
<p>在本教程中，我们将学习如何比较原始类型和不同类别的数字，例如_整数_、<em>长整数_和_浮点数</em>。我们还将检查如何将浮点数与整数进行比较。</p>
<ol start="2">
<li>比较不同类别</li>
</ol>
<p>让我们检查Java如何比较不同的原始类型、包装类和数字类型。<strong>为了澄清，在本文的上下文中，我们将把_“类型”_称为浮点数和整数，而不是类或原始类型。</strong></p>`,r:{minutes:6.03,words:1809},t:"Java中不同数字类型的比较",y:"a"}}],["/posts/baeldung/Archive/Comparison%20Between%20Flux.map()%20and%20Flux.doOnNext().html",{loader:()=>n(()=>import("./Comparison Between Flux.map() and Flux.doOnNext().html-BWcYDbyE.js"),__vite__mapDeps([293,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java","Reactive Programming"],g:["Reactor","Flux","map","doOnNext"],e:`
<p>在Reactor库中，Flux.map()和Flux.doOnNext()操作符在处理流数据元素时扮演着不同的角色。</p>
<p>Flux.map()操作符有助于转换Flux发出的每个元素。Flux.doOnNext()操作符是一个生命周期钩子，允许我们在每个元素发出时执行副作用操作。</p>
<p>在本教程中，我们将深入探讨这些操作符的详细信息，探索它们的内部实现和实际用例。此外，我们还将看到如何一起使用这两个操作符。</p>
<p>Maven依赖</p>
<p>要使用Flux发布者和其他响应式操作符，让我们将reactor-core依赖项添加到pom.xml中：</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>\\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency\\</span><span class="token punctuation">&gt;</span></span>
    \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId\\</span><span class="token punctuation">&gt;</span></span>io.projectreactor\\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId\\</span><span class="token punctuation">&gt;</span></span>
    \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId\\</span><span class="token punctuation">&gt;</span></span>reactor-core\\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId\\</span><span class="token punctuation">&gt;</span></span>
    \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version\\</span><span class="token punctuation">&gt;</span></span>3.6.5\\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version\\</span><span class="token punctuation">&gt;</span></span>
\\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency\\</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,r:{minutes:4.92,words:1476},t:"Reactor库中Flux.map()与Flux.doOnNext()的比较 | Baeldung概述",y:"a"}}],["/posts/baeldung/Archive/CompletableFuture%20vs.%20Mono.html",{loader:()=>n(()=>import("./CompletableFuture vs. Mono.html-BxXkn20M.js"),__vite__mapDeps([294,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Java"],g:["CompletableFuture","Mono","异步编程"],e:`
<p>在这篇快速教程中，我们将学习Java中CompletableFuture和来自Project Reactor的Mono之间的差异。我们将重点讨论它们如何处理异步任务以及为完成这些任务而发生的执行过程。</p>
<p>让我们先从CompletableFuture开始了解。</p>
<h3>2. CompletableFuture的理解</h3>
<p>CompletableFuture是在Java 8中引入的，它建立在之前的Future类之上，并提供了一种异步运行代码的方式。简而言之，它改善了异步编程并简化了线程的工作。</p>
<p>此外，我们可以使用thenApply()、thenAccept()和thenCompose()等方法创建一系列计算，以协调我们的异步任务。</p>`,r:{minutes:3.19,words:956},t:"CompletableFuture与Mono | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Compress%20and%20Create%20a%20Byte%20Array%20Using%20GZip.html",{loader:()=>n(()=>import("./Compress and Create a Byte Array Using GZip.html-DqOkzJmY.js"),__vite__mapDeps([295,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","GZIP"],g:["数据压缩","Java GZIP"],e:`
<h2>1. 概述</h2>
<p><strong>GZIP格式是一种用于数据压缩的文件格式</strong>。Java语言中的_GZipInputStream_和_GZipOutputStream_类实现了这种文件格式。</p>
<p>在本教程中，我们将学习如何在Java中使用GZIP压缩数据。同时，我们还将探讨如何将压缩后的数据写入字节数组。</p>
<h2>2. _GZipOutputStream_类</h2>
<p>_GZipOutputStream_类将数据压缩并写入底层输出流。</p>
<h3>2.1. 对象实例化</h3>
<p><strong>我们可以使用构造函数来创建类的实例</strong>：</p>`,r:{minutes:3.93,words:1179},t:"使用GZip压缩并创建字节数组",y:"a"}}],["/posts/baeldung/Archive/Configuring%20Retry%20Policy%20for%20gRPC%20Request.html",{loader:()=>n(()=>import("./Configuring Retry Policy for gRPC Request.html-70ZdnkPq.js"),__vite__mapDeps([296,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["gRPC","Java"],g:["重试策略","微服务"],e:`
<h2>1. 概述</h2>
<p>在本教程中，我们将讨论在gRPC中实现重试策略的各种方式，gRPC是由Google开发的远程过程调用框架。gRPC可以在多种编程语言中互操作，但我们将专注于Java实现。</p>
<h2>2. 重试的重要性</h2>
<p>应用程序越来越多地依赖于分布式架构。这种方法有助于通过水平扩展来处理重负载。它还促进了高可用性。然而，它也引入了更多的潜在故障点。因此，在开发具有多个微服务的应用程序时，容错能力至关重要。</p>
<p><strong>RPC可能会因各种原因暂时或短暂地失败：</strong></p>
<ul>
<li><strong>网络延迟或网络中的连接中断</strong></li>
<li><strong>服务器由于内部错误而不响应</strong></li>
<li><strong>系统资源繁忙</strong></li>
<li><strong>下游服务忙碌或不可用</strong></li>
<li><strong>其他相关问题</strong></li>
</ul>`,r:{minutes:7.4,words:2219},t:"gRPC请求的重试策略配置 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Consumer%20Processing%20of%20Kafka%20Messages%20With%20Delay.html",{loader:()=>n(()=>import("./Consumer Processing of Kafka Messages With Delay.html-DboXY-CV.js"),__vite__mapDeps([297,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Kafka","Spring"],g:["Kafka","Consumer","Delay","Spring Kafka"],e:`
<p>Apache Kafka是一个事件流平台，用于大规模地收集、处理、存储和集成数据。有时，我们可能希望延迟从Kafka处理消息。例如，一个客户订单处理系统设计为在X秒的延迟后处理订单，以适应这个时间框架内的取消。</p>
<p>在本文中，我们将使用Spring Kafka探索Kafka消息的延迟消费者处理。尽管Kafka没有提供开箱即用的延迟消费消息支持，但我们将查看实现的替代选项。</p>
<h2>2. 应用上下文</h2>
<p><strong>Kafka提供了多种方式来在错误时重试。我们将使用这种重试机制来延迟消费者处理消息。因此，了解Kafka重试的工作方式是值得的。</strong></p>`,r:{minutes:5.33,words:1599},t:"Apache Kafka消费者延迟处理消息概述",y:"a"}}],["/posts/baeldung/Archive/Continue%20the%20Test%20Even%20After%20Assertion%20Failure%20in%20TestNG.html",{loader:()=>n(()=>import("./Continue the Test Even After Assertion Failure in TestNG.html-GblyDN5l.js"),__vite__mapDeps([298,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","Testing"],g:["TestNG","SoftAssert"],e:`
<h2>1. 概述</h2>
<p>TestNG是一个流行的Java测试框架，它是JUnit的替代品。虽然两个框架都提供了自己的范例，但它们都有断言的概念：如果逻辑语句评估为false，则会停止程序执行，测试失败。TestNG中的一个简单断言可能看起来像这样：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">testNotNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assertNotNull</span><span class="token punctuation">(</span><span class="token string">"My String"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4.19,words:1258},t:"TestNG中在断言失败后继续测试 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Convert%202D%20Array%20Into%201D%20Array.html",{loader:()=>n(()=>import("./Convert 2D Array Into 1D Array.html-DFI7U_A1.js"),__vite__mapDeps([299,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","编程"],g:["数组","2D数组","1D数组"],e:`
<p>数组是任何语言中最基本的数据结构。<strong>尽管我们大多数情况下不直接操作它们，但知道如何有效操作它们可以显著提高我们的代码效率。</strong></p>
<p>在本教程中，我们将学习如何将二维数组转换为一维数组，通常被称为扁平化。例如，我们将转换 { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} } 为 {1, 2, 3, 4, 5, 6, 7, 8, 9}。</p>
<p>尽管我们将使用二维数组进行操作，但本教程中概述的思想可以应用于任何维度的数组。在本文中，我们将使用原始整数数组作为示例，但这些思想可以应用于任何数组。</p>
<h2>2. 循环和原始数组</h2>`,r:{minutes:4.1,words:1231},t:"Java中将二维数组转换为一维数组",y:"a"}}],["/posts/baeldung/Archive/Convert%20Between%20CLOB%20and%20String%20in%20Java.html",{loader:()=>n(()=>import("./Convert Between CLOB and String in Java.html-DOASbgv0.js"),__vite__mapDeps([300,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java","数据库"],g:["CLOB","String","数据库操作"],e:`
<h2>1. 引言</h2>
<p>在Java中使用数据库时，处理大型文本数据是一项常见任务。此外，字符大对象（CLOB）类型允许数据库存储大量的文本数据。而且，当从数据库读取或写入数据时，通常需要在CLOB和String对象之间进行转换。</p>
<p><strong>在本教程中，我们将探讨如何在Java中高效地执行此转换。</strong></p>
<h2>2. 将CLOB转换为String</h2>
<p>在这种方法中，我们将利用标准的Java I/O（Reader和Writer）操作来高效地处理来自SQL Clob对象的字符数据。Reader从Clob读取数据，然后处理并写入StringWriter以转换为String对象。</p>`,r:{minutes:2.4,words:720},t:"在Java中将CLOB和String相互转换",y:"a"}}],["/posts/baeldung/Archive/Convert%20Decimal%20to%20Fraction%20in%20Java.html",{loader:()=>n(()=>import("./Convert Decimal to Fraction in Java.html-CPPq8ITC.js"),__vite__mapDeps([301,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Java","编程"],g:["十进制转分数","Java"],e:`
<ol>
<li>引言</li>
</ol>
<p>分数是表示数字的另一种方式，由分子和分母组成。例如，分数3/5可以被看作是“5分之3”，表示的值与十进制数0.6相同。在本教程中，我们将探讨在Java中将十进制数字转换为分数的不同方法。</p>
<ol start="2">
<li>使用乘以10的幂</li>
</ol>
<p>将十进制转换为分数的一种简单方法是将十进制乘以10的幂，然后使用结果的分子和分母作为分数。</p>
<p>以下是这种方法的代码片段：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token function">convertDecimalToFractionUsingMultiplyingWithPowerOf10</span><span class="token punctuation">(</span><span class="token keyword">double</span> decimal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> decimalStr <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>decimal<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> decimalPlaces <span class="token operator">=</span> decimalStr<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> decimalStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">'.'</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">long</span> denominator <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> decimalPlaces<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> numerator <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>decimal <span class="token operator">*</span> denominator<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> numerator <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> denominator<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:5.86,words:1757},t:"Java中将十进制转换为分数",y:"a"}}],["/posts/baeldung/Archive/Convert%20From%20int%20to%20short%20in%20Java.html",{loader:()=>n(()=>import("./Convert From int to short in Java.html-aM0r3Evk.js"),__vite__mapDeps([302,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","数据类型转换"],g:["int","short"],e:`
<p>当我们在Java中工作时，经常会遇到需要转换数据类型以满足特定要求的场景。一种常见的转换是从int转换为short。</p>
<p>在本教程中，我们将探讨如何在Java中将int转换为short以及需要注意的潜在陷阱。</p>
<h2>2. 问题介绍</h2>
<p>Java提供了几种原始数据类型来存储数值，每种数据类型都有其范围和精度。例如，int数据类型是一个32位有符号整数，能够存储从-2<sup>31到2</sup>31 - 1的值。另一方面，short数据类型是一个16位有符号整数，能够存储从-2<sup>15到2</sup>15 - 1的值。</p>
<p>由于int的范围比short宽，将int转换为short可能会有潜在的陷阱，我们将在接下来的部分中详细讨论。</p>`,r:{minutes:9.58,words:2874},t:"Java中从int转换为short的方法",y:"a"}}],["/posts/baeldung/Archive/Convert%20Google%20Protocol%20Buffer%20Timestamp%20to%20LocalDate.html",{loader:()=>n(()=>import("./Convert Google Protocol Buffer Timestamp to LocalDate.html-CGxvSvo-.js"),__vite__mapDeps([303,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","Google Protocol Buffer"],g:["LocalDate","Timestamp","Java"],e:`
<h2>1. 概述</h2>
<p>协议缓冲区（protobuf）数据格式帮助我们在网络上传输结构化数据。它独立于任何编程语言，并且大多数编程语言都有实现，包括Java。</p>
<p><strong>protobuf <em>Timestamp</em> 类型表示一个时间点，独立于任何特定时区</strong>。时间在计算中是一个关键组成部分，我们可能需要将 protobuf <em>Timestamp</em> 转换为 Java 时间实例，例如 <em>LocalDate</em>，以便将其无缝集成到现有的 Java 代码库中。</p>
<p>在本教程中，我们将探讨将 protobuf 时间戳实例转换为 <em>LocalDate</em> 类型的过程，使我们能够在 Java 应用程序中更有效地使用 protobuf 数据。</p>`,r:{minutes:2.76,words:827},t:"将 Google 协议缓冲区时间戳转换为 LocalDate | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Convert%20InputStream%20to%20Stream%20in%20Java.html",{loader:()=>n(()=>import("./Convert InputStream to Stream in Java.html-Bbk3xs9C.js"),__vite__mapDeps([304,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java"],g:["InputStream","Stream"],e:`
<h2>1. 引言</h2>
<p>在Java中处理来自不同来源的输入数据时，我们有时会遇到需要将_InputStream_转换为_Stream<code>&lt;String&gt;</code>_的情况。</p>
<p>在本教程中，我们将探讨实现这种转换的不同方法。</p>
<h2>2. 使用BufferedReader和lines()方法转换</h2>
<p>将_InputStream_转换为_Stream<code>&lt;String&gt;</code>_的一种有效方式是使用_BufferedReader_及其_lines()_方法。</p>
<p>首先，我们将定义一个_byte_数组_bytes_，其中包含一系列文本行：</p>`,r:{minutes:2.62,words:786},t:"Java中将InputStream转换为Stream<String> | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Convert%20Jackson%20JsonNode%20to%20Typed%20Collection.html",{loader:()=>n(()=>import("./Convert Jackson JsonNode to Typed Collection.html-PkjDrUAV.js"),__vite__mapDeps([305,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Spring","Java"],g:["Jackson","JSON","Collection"],e:'\n<h3>2. 示例设置</h3>\n<p>在我们的代码示例中，我们将探索将JsonNode转换为List或Map对象的不同方法。让我们设置我们示例的基础构件。</p>\n<h4>2.1. 依赖性</h4>\n<p>首先，让我们在pom.xml文件中添加Jackson核心依赖性：</p>\n<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>`&lt;dependency&gt;`\n    `&lt;groupId&gt;`com.fasterxml.jackson.core`&lt;/groupId&gt;`\n    `&lt;artifactId&gt;`jackson-core`&lt;/artifactId&gt;`\n    `&lt;version&gt;`2.17.0`&lt;/version&gt;`\n`&lt;/dependency&gt;`\n</code></pre></div>',r:{minutes:5.21,words:1563},t:"Jackson JsonNode 转换为类型化集合 | Baeldung这篇文章是关于如何将Jackson的原始数据类型JsonNode转换为Java类型集合的。我们可以利用JsonNode本身来读取JSON，但将其转换为Java集合可能更有益处。Java集合比原始JSON数据提供的优势包括类型安全性、更快的处理速度以及更多类型特定的操作。",y:"a"}}],["/posts/baeldung/Archive/Convert%20a%20Queue%20to%20a%20List.html",{loader:()=>n(()=>import("./Convert a Queue to a List.html-YoizKBpA.js"),__vite__mapDeps([306,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Java"],g:["队列","列表"],e:'\n<p>在本教程中，我们将学习如何在Java中将队列对象转换为列表。</p>\n<p>我们将解释几种流行的方法及其实现方式，并在每个部分结束时提供一个测试用例来测试相应的实现。</p>\n<p>在这一部分，我们将使用标准Java类和方法介绍不同的将队列转换为列表的方法。我们假设所有示例中的队列都不为null。</p>\n<h3>2.1 使用ArrayList构造器</h3>\n<p>ArrayList构造器提供了将队列转换为ArrayList的最简单和最常见的方法。</p>\n<p><strong>基本思想是将队列作为参数传递给ArrayList构造器</strong>：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span>`````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>````` list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',r:{minutes:2.67,words:801},t:"Java中将队列转换为列表",y:"a"}}],["/posts/baeldung/Archive/Convert%20an%20Optional%20to%20an%20ArrayList%20in%20Java.html",{loader:()=>n(()=>import("./Convert an Optional to an ArrayList in Java.html-CI5Qs1h1.js"),__vite__mapDeps([307,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Java"],g:["Optional","ArrayList","Java 8","转换"],e:`
<h2>1. 引言</h2>
<p>Java 8引入了_Optional_类来表示一个可能存在或不存在的值。**它帮助我们避免_NullPointerException_并编写更富有表现力和可读的代码。**在想要将可选值作为列表处理的场景中，将_Optional_转换为_ArrayList_可能很有用。在本教程中，我们将探索在Java中将_Optional_转换为_ArrayList_的不同方法。</p>
<h2>2. 使用_ifPresent()_</h2>
<p>这种方法利用了_Optional_类提供的_ifPresent()_方法来处理值的存在或缺失。<strong>它允许我们仅在_Optional_包含值时执行一段代码，消除了显式空值检查的需要，提高了代码的可读性。</strong></p>`,r:{minutes:4.79,words:1437},t:"Java中将Optional转换为ArrayList的方法 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Converting%20Float%20ArrayList%20to%20Primitive%20Array%20in%20Java.html",{loader:()=>n(()=>import("./Converting Float ArrayList to Primitive Array in Java.html-C_sgVYhb.js"),__vite__mapDeps([308,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","编程"],g:["ArrayList","原始类型数组","转换"],e:`
<p>概述</p>
<p>数据序列是任何项目和编程语言中不可或缺的一部分。在Java中，有两种方式来表示元素序列：集合和数组。</p>
<p>本教程将学习如何将包装类数组列表转换为原始类型数组。尽管这听起来是一个简单的任务，但Java API中的一些怪癖使得这个过程不那么直接。</p>
<p>简单For循环</p>
<p>进行这种转换的最简单方式是使用声明性风格的for循环：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@ParameterizedTest</span>
<span class="token annotation punctuation">@MethodSource</span><span class="token punctuation">(</span><span class="token string">"floatListProvider"</span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">givenListOfWrapperFloat_whenConvertToPrimitiveArray_thenGetCorrectResult</span><span class="token punctuation">(</span><span class="token class-name">List</span>\`\`\`\`\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Float</span><span class="token punctuation">&gt;</span></span>\`\`\`\`\` floats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span> actual <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">float</span><span class="token punctuation">[</span>floats<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> floats<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        actual<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> floats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">compareSequences</span><span class="token punctuation">(</span>floats<span class="token punctuation">,</span> actual<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4.85,words:1454},t:"Java中将Float型ArrayList转换为原始类型数组 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Converting%20Image%20to%20BufferedImage%20in%20Java.html",{loader:()=>n(()=>import("./Converting Image to BufferedImage in Java.html-qBdL86-I.js"),__vite__mapDeps([309,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","图像处理"],g:["BufferedImage","图像转换"],e:`
<p>在Java开发中，管理和操作图像是至关重要的。图像处理的核心能力之一是将各种图像格式转换为BufferedImage对象。</p>
<h2>1. 概述</h2>
<p>在本文中，我们将学习如何在Java中将图像转换为BufferedImage。</p>
<h2>2. 理解BufferedImage</h2>
<p>在深入探讨将Image转换为BufferedImage的复杂性之前，理解BufferedImage的基本概念至关重要。作为Java AWT（抽象窗口工具包）中Image类的子类，BufferedImage由于其多功能性和强大的功能，在图像处理中扮演着关键角色。</p>
<p>此外，BufferedImage的核心功能是为开发人员提供了直接访问图像数据的能力，使得可以执行包括像素操作、颜色空间转换和光栅操作在内的广泛操作。这种可访问性使得BufferedImage成为Java应用程序中不可或缺的工具，促进了从基本图像渲染到高级图像分析和操作的任务。</p>`,r:{minutes:2.88,words:864},t:"Java中将图像转换为BufferedImage",y:"a"}}],["/posts/baeldung/Archive/Converting%20short%20to%20byte%20%20%20in%20Java.html",{loader:()=>n(()=>import("./Converting short to byte   in Java.html-DshjLmVn.js"),__vite__mapDeps([310,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Java","编程"],g:["Java NIO","ByteBuffer","DataOutputStream","位操作"],e:`
<p>将short值转换为byte[]数组是Java编程中的一项常见任务，特别是在处理二进制数据或网络通信时。</p>
<p>在本教程中，我们将探索实现这种转换的不同方法。</p>
<h3>2. 使用ByteBuffer类（Java NIO）</h3>
<p>Java NIO包提供了ByteBuffer类，它简化了将原始数据类型转换为字节数组的过程。让我们看看如何使用它将short值转换为byte[]数组：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">short</span> shortValue <span class="token operator">=</span> <span class="token number">12345</span><span class="token punctuation">;</span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> expectedByteArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenShort_whenUsingByteBuffer_thenConvertToByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ByteBuffer</span> buffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">putShort</span><span class="token punctuation">(</span>shortValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">assertArrayEquals</span><span class="token punctuation">(</span>expectedByteArray<span class="token punctuation">,</span> byteArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4.98,words:1495},t:"Java中将short转换为byte[]的几种方法",y:"a"}}],["/posts/baeldung/Archive/Create%20HashMap%20with%20Character%20Count%20of%20a%20String%20in%20Java.html",{loader:()=>n(()=>import("./Create HashMap with Character Count of a String in Java.html-Cagxbgvw.js"),__vite__mapDeps([311,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","编程"],g:["HashMap","字符计数","Java 8"],e:`
<h2>1. 引言</h2>
<p>在各种编程场景中，处理字符串中的字符计数是常见的。一种高效的方法是使用_HashMap_来存储字符串中每个字符的频率。</p>
<p><strong>在本教程中，我们将探讨如何在Java中创建一个包含给定字符串字符计数的_HashMap_。</strong></p>
<h2>2. 使用传统循环</h2>
<p>创建一个包含字符串字符计数的_HashMap_的最简单方法之一是使用传统循环。在这种方法中，我们遍历字符串中的每个字符，并相应地在_HashMap_中更新每个字符的计数。</p>
<p>让我们看看这如何实现：</p>
<p><code>String str = "abcaadcbcb";</code></p>`,r:{minutes:2.57,words:770},t:"在Java中创建包含字符串字符计数的HashMap | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Create%20and%20Run%20Apache%20JMeter%20Test%20Scripts%20via%20Java%20Program.html",{loader:()=>n(()=>import("./Create and Run Apache JMeter Test Scripts via Java Program.html-DTXldFwh.js"),__vite__mapDeps([312,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","JMeter"],g:["性能测试","自动化测试"],e:`
<p>Apache JMeter是一个开源的基于Java的应用程序，旨在分析和衡量Web应用程序的性能。它允许测试人员模拟对服务器、网络或对象的重负载，以分析不同负载下的总体性能。JMeter提供了一个易于使用的GUI，用于定义、执行和查看各种负载测试的报告。</p>
<p>尽管JMeter提供了一个用户友好的GUI来创建和执行测试脚本，但在某些情况下，利用Java编程进行自动化可能更有益，特别是在持续集成和部署流程中。</p>
<p>在本教程中，我们将探讨如何使用Java以编程方式创建和执行Apache JMeter测试脚本，并提供一个实际示例来说明所涉及的步骤。</p>
<h2>2. <strong>设置环境</strong></h2>`,r:{minutes:7.54,words:2261},t:"通过Java程序创建并运行Apache JMeter测试脚本",y:"a"}}],["/posts/baeldung/Archive/Declare%20an%20Enum%20in%20an%20Inner%20Class%20in%20Java.html",{loader:()=>n(()=>import("./Declare an Enum in an Inner Class in Java.html-xhu34kty.js"),__vite__mapDeps([313,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java","Programming"],g:["Java Enums","Inner Classes"],e:`
<p>当我们使用Java进行编程时，枚举是一种方便的方式来定义一组固定的常量。然而，在Java 16之前的版本中，在内部类中创建枚举可能会引入一些复杂性和考虑因素。</p>
<p>在本教程中，我们将深入探讨Java 16之前内部类中静态类型的历史悠久限制，然后讨论Java 16及更高版本中这些规则的显著放宽。</p>
<p>在Java 16之前，Java语言规范（JLS）严格规定了内部类中静态类型的规则：</p>
<ul>
<li>嵌套的枚举类型隐式地是静态的，如JLS §8.9所述。</li>
<li>在非静态嵌套类型（内部类）中声明静态嵌套类型（包括枚举）是被禁止的，如JLS §8.1.3所述。</li>
</ul>`,r:{minutes:1.79,words:536},t:"在Java中声明内部类的枚举",y:"a"}}],["/posts/baeldung/Archive/Difference%20Between%20Casting%20to%20String%20and%20String.valueOf%20%20.html",{loader:()=>n(()=>import("./Difference Between Casting to String and String.valueOf  .html-PNj2SK4u.js"),__vite__mapDeps([314,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","Programming"],g:["Java String","String Conversion"],e:`
<p>在Java中操作字符串是一项基本任务。我们经常需要将其他数据类型转换为字符串。实现这一目标的两种常见方法是将对象类型转换为String和使用String.valueOf()方法。它们在表面上可能看起来相似，但两种方法之间的一些差异可能会影响我们代码的行为。</p>
<p>在这个快速教程中，让我们讨论它们之间的区别。</p>
<p>首先，让我们看一个例子。假设我们将一个字符串值分配给一个类型为Object的变量：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Object</span> obj <span class="token operator">=</span> <span class="token string">"Baeldung is awesome!"</span><span class="token punctuation">;</span>

</code></pre></div>`,r:{minutes:3.94,words:1181},t:"Java中字符串转换：类型转换与String.valueOf()方法的区别",y:"a"}}],["/posts/baeldung/Archive/Difference%20Between%20Iterator.forEachRemaining%20%20%20and%20Iterable.forEach%20%20.html",{loader:()=>n(()=>import("./Difference Between Iterator.forEachRemaining   and Iterable.forEach  .html-DGuRVpoR.js"),__vite__mapDeps([315,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java"],g:["Iterator","Iterable"],e:`
<h2>1. 引言</h2>
<p>_Iterator_和_Iterable_接口是Java中处理集合的基本构造。实际上，每个接口都提供了遍历元素的方法，但它们有不同的目的和使用场景。</p>
<p><strong>在本教程中，我们将深入探讨_Iterator.forEachRemaining()_和_Iterable.forEach()_之间的差异，以理解它们独特的功能。</strong></p>
<h2>2. _Iterator.forEachRemaining()_方法</h2>
<p>_Iterator_接口提供了一种顺序遍历集合元素的方式。_Iterator_接口中的_forEachRemaining()_方法是在Java 8中引入的。</p>`,r:{minutes:3.15,words:946},t:"Java中Iterator.forEachRemaining()与Iterable.forEach()的区别 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Difference%20Between%20Lombok%20%20AllArgsConstructor%20%20%20RequiredArgsConstructor%20and%20%20NoArgConstructor.html",{loader:()=>n(()=>import("./Difference Between Lombok  AllArgsConstructor   RequiredArgsConstructor and  NoArgConstructor.html-rcoooDH5.js"),__vite__mapDeps([316,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","Lombok"],g:["Lombok","Annotations","Constructors"],e:'\n<h2>1. 概述</h2>\n<p>Lombok 项目通过提供注解自动生成常用的代码，从而减少了Java应用程序中的样板代码。</p>\n<p>在本教程中，我们将探讨这个库提供的三种构造函数注解之间的区别。</p>\n<h2>2. 设置</h2>\n<p>为了突出这些差异，让我们首先将 <em>lombok</em> 添加到我们的依赖中：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`org.projectlombok`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`lombok`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`1.18.30`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>`provided`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n</code></pre></div>',r:{minutes:3.9,words:1169},t:"Lombok @AllArgsConstructor, @RequiredArgsConstructor 和 @NoArgsConstructor 的区别 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Difference%20Between%20Optional.of%20%20%20and%20Optional.ofNullable%20%20%20in%20Java.html",{loader:()=>n(()=>import("./Difference Between Optional.of   and Optional.ofNullable   in Java.html-UB3UF0Sy.js"),__vite__mapDeps([317,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","Optional"],g:["Java","Optional.of()","Optional.ofNullable()"],e:`
<h2>1. 概述</h2>
<p>在Java中，一个引用可能指向内存中的一个对象，也可能不指向任何对象，换句话说，一个引用可以是_null_。因此，这可能导致抛出一个_NullPointerException_。</p>
<p>为了解决这个问题，Java 8引入了_Optional_类。<strong>将一个引用包装在_Optional_中可以让我们更好地表达一个值是否存在的可能性。</strong> 此外，我们可以利用_Optional_类上的多种工具方法，如_isPresent()<em>，以避免运行时抛出_NullPointerException</em>。</p>
<p>我们可以使用静态工厂方法_Optional.of()_和_Optional.ofNullable()<em>来为给定的引用获取一个_Optional</em>。但是，我们应该使用哪一个呢？在本教程中，我们将探讨这些方法之间的区别，并了解何时使用哪一个。</p>`,r:{minutes:2.41,words:724},t:"Java中Optional.of()与Optional.ofNullable()的区别 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Disable%20Logging%20From%20a%20Specific%20Class%20in%20Logback.html",{loader:()=>n(()=>import("./Disable Logging From a Specific Class in Logback.html-D2VmoPmM.js"),__vite__mapDeps([318,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Logback","Logging"],g:["Logback","Logging","Configuration"],e:`
<p>日志记录是任何应用程序的关键组成部分，它提供了对应用程序行为和健康状况的洞察。然而，过度的日志记录可能会使输出变得杂乱无章，特别是当详细的日志来自特定类时，可能会掩盖有用信息。</p>
<p>在本教程中，我们将探讨如何在Logback中禁用特定类的日志记录。</p>
<p>在Logback中禁用特定类的日志记录在多种场景下都很有用：</p>
<ul>
<li>减少日志量：减少日志量可以帮助我们专注于相关信息，并降低存储/处理成本。</li>
<li>安全性：一些类可能会无意中记录敏感信息；使它们静音可以降低这种风险。</li>
<li>性能：过度的日志记录可能会影响性能；禁用详细记录器可以帮助保持应用程序的最佳性能。</li>
</ul>`,r:{minutes:2.83,words:848},t:"在Logback中禁用特定类的日志记录",y:"a"}}],["/posts/baeldung/Archive/Download%20File%20from%20S3%20Given%20a%20URL.html",{loader:()=>n(()=>import("./Download File from S3 Given a URL.html-BGFSk84F.js"),__vite__mapDeps([319,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","AWS"],g:["S3","SDK","文件下载"],e:`
<p>在当今的软件领域，与云存储服务如Amazon Simple Storage Service (S3)的交互已成为许多应用程序的基本方面。一个常见的需求是使用提供的URL从S3下载文件。</p>
<p>在本文中，我们将探讨使用Java、Spring Boot和Java的AWS SDK来实现这一目标的简化方法。</p>
<h2>2. 设置</h2>
<p>首先，我们需要配置我们的AWS凭据以访问S3存储桶。这可以通过几种方式完成。对于开发目的，我们可以在_application.properties_文件中设置我们的凭据：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>aws.accessKeyId=\`&lt;你的访问密钥ID&gt;\`
aws.secretKey=\`&lt;你的密钥&gt;\`
aws.region=\`&lt;你的区域&gt;\`
</code></pre></div>`,r:{minutes:4.07,words:1222},t:"使用Java从S3 URL下载文件",y:"a"}}],["/posts/baeldung/Archive/Exploring%20Complex%20Number%20Arithmetic%20Operations%20in%20Java.html",{loader:()=>n(()=>import("./Exploring Complex Number Arithmetic Operations in Java.html-EApIblKA.js"),__vite__mapDeps([320,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","数学"],g:["复数","运算"],e:`
<p>在这个教程中，我们将检查复数的算术运算。具体来说，我们将探讨如何在Java中对两个复数进行加法、减法、乘法和除法。</p>
<h2>2. 什么是复数？</h2>
<p>复数使用实部和虚部的组合来表示。它们通常表示为a+bi，其中a和b是实数，i代表虚数单位，相当于-1的平方根。在正式的数学符号中，a是复数的实部，而bi项是虚部。尽管复数最初可能让新手感到困惑，但它们在各种实际应用中发挥着关键作用，例如物理学和数学，包括量子力学、信号处理和经济学等领域。</p>
<p>像实数一样，我们可以执行加法、减法、乘法和除法等算术运算。对复数进行算术运算由于实部和虚部的组合而引入了复杂性。然而，每种运算都有特定的公式，这些公式简化了运算并确保了准确的结果。</p>`,r:{minutes:4.97,words:1491},t:"探索Java中的复数算术运算",y:"a"}}],["/posts/baeldung/Archive/Extract%20Text%20From%20a%20HTML%20Tag%20with%20Regex.html",{loader:()=>n(()=>import("./Extract Text From a HTML Tag with Regex.html-BV286irp.js"),__vite__mapDeps([321,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","HTML"],g:["正则表达式","文本提取"],e:`
<p>当在Java中处理HTML内容时，从HTML标签中提取特定文本是常见的需求。尽管通常不推荐使用正则表达式来解析HTML，因为它的结构复杂，但在某些简单任务中，这有时是足够的。</p>
<p>在本教程中，我们将看到如何使用Java中的正则表达式从HTML标签中提取文本。</p>
<h2>2. 使用Pattern和Matcher类</h2>
<p>Java提供了来自java.util.regex的Pattern和Matcher类，允许我们定义并应用正则表达式来从字符串中提取文本。以下是一个使用正则表达式从指定HTML标签中提取文本的示例：</p>
<p>在这里，我们首先定义了HTML内容，表示为htmlContent，其中包含带有<code>&lt;b&gt;</code>标签的HTML。此外，我们指定了标签名tagName为“b”，以从<code>&lt;b&gt;</code>标签中提取文本。</p>`,r:{minutes:1.99,words:596},t:"使用Java正则表达式从HTML标签提取文本",y:"a"}}],["/posts/baeldung/Archive/Extracting%20Text%20Between%20Parentheses%20in%20Java.html",{loader:()=>n(()=>import("./Extracting Text Between Parentheses in Java.html-DU16MdqW.js"),__vite__mapDeps([322,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Java","正则表达式"],g:["Java","字符串处理","正则表达式"],e:`
<h2>1. 概述</h2>
<p>在Java编程中，有许多场景需要我们提取括号内包含的文本。理解如何检索括号之间的文本是一项重要技能。</p>
<p>在本教程中，我们将探索实现这一目标的不同方法，重点关注正则表达式和一些流行的外部库。</p>
<h2>2. 问题介绍</h2>
<p>当我们的输入只包含一对括号时，我们可以使用两个replaceAll()方法调用来提取它们之间的内容：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> myString <span class="token operator">=</span> <span class="token string">"a b c (d e f) x y z"</span><span class="token punctuation">;</span>

<span class="token class-name">String</span> result <span class="token operator">=</span> myString<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">".*[(]"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"[)].*"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">"d e f"</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:4.43,words:1328},t:"Java中提取括号内文本的方法 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Fault%20Tolerance%20in%20Java%20Using%20Failsafe.html",{loader:()=>n(()=>import("./Fault Tolerance in Java Using Failsafe.html-hedjsGiV.js"),__vite__mapDeps([323,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java"],g:["Failsafe","容错"],e:`
<p>在这篇文章中，我们将探索Failsafe库，并看到如何将其集成到我们的代码中，使其对故障情况更加有弹性。</p>
<h2>2. 什么是容错？</h2>
<p>无论我们多么精心构建应用程序，总会有出错的方式。通常，这些是我们无法控制的——例如，调用一个不可用的远程服务。因此，我们必须构建能够容忍这些故障并为用户提供最佳体验的应用程序。</p>
<p>我们可以根据不同的情况以许多不同的方式对这些故障做出反应。例如，如果我们正在调用一个我们知道会有间歇性中断的远程服务，我们可以重试并希望调用能够成功。或者我们可以尝试调用提供相同功能的另一个服务。</p>
<p>还有方法可以结构化我们的代码以避免这些情况。例如，限制对同一远程服务的并发调用数量将减少其负载。</p>`,r:{minutes:11.93,words:3578},t:"Java中使用Failsafe实现容错",y:"a"}}],["/posts/baeldung/Archive/Find%20the%20Date%20of%20Easter%20Sunday%20for%20the%20Given%20Year.html",{loader:()=>n(()=>import("./Find the Date of Easter Sunday for the Given Year.html-Dl5-b4yw.js"),__vite__mapDeps([324,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","Algorithm"],g:["Easter","Algorithm","Java"],e:`
<p>在本教程中，我们将理解为什么复活节的日期计算起来很复杂。然后，我们将用Java实现三种算法来计算它：高斯算法、Butcher-Meeus算法和Conway算法。</p>
<p>复活节是一个庆祝耶稣基督从死里复活的节日。复活节的最初时间与犹太逾越节有关，因为耶稣与他的门徒共进的最后一餐是逾越节的晚餐。然而，在最初的几个世纪里，每个基督教社区都可以选择一个日期来庆祝它，导致了一些争议。<strong>公元325年的尼西亚会议最终标准化了复活节的定义：复活节是春分之后满月之后的第一个星期日。</strong></p>
<p>计算复活节的日期是具有挑战性的，因为它依赖于月亮和太阳日历，而月亮周期与太阳周期不匹配。因此，数学算法在确定复活节的日期时非常有用。</p>`,r:{minutes:4.81,words:1444},t:"如何计算特定年份的复活节日期",y:"a"}}],["/posts/baeldung/Archive/Find%20the%20Length%20of%20the%20Longest%20Symmetric%20Substring.html",{loader:()=>n(()=>import("./Find the Length of the Longest Symmetric Substring.html-C7C2QB-g.js"),__vite__mapDeps([325,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","Algorithm"],g:["Symmetric Substring","String Manipulation"],e:`<hr>
<h1>寻找最长对称子串的长度 | Baeldung</h1>
<h2>1. 引言</h2>
<p>确定最长对称子串的长度是字符串操作任务中的一个常见挑战。</p>
<p><strong>在本教程中，我们将讨论两种高效的Java方法来解决这个问题。</strong></p>
<h2>2. 理解对称子串</h2>
<p>对称子串是一个正读和反读都相同的子串。例如，在字符串 "abba" 中，最长的对称子串是 "abba"，它正读和反读都是相同的，最大长度为4。</p>
<h2>3. 对称子串扩展方法</h2>
<p>这种方法使用滑动窗口技术来高效地识别给定字符串中的最长对称子串。本质上，算法通过迭代字符串，从中间开始扩展，同时确保对称性。</p>`,r:{minutes:2.86,words:859},t:"寻找最长对称子串的长度 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Finding%20Minimum%20and%20Maximum%20in%20a%202D%20Array.html",{loader:()=>n(()=>import("./Finding Minimum and Maximum in a 2D Array.html-RVgQ1o6K.js"),__vite__mapDeps([326,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java","编程"],g:["数组","算法"],e:`
<p>在本教程中，我们将讨论使用Java在二维数组中寻找最小和最大值的两种技术。二维数组是一种像网格一样的元素排列。它是一个数组的数组，其中每个内部数组代表网格中的一行。</p>
<p>我们首先将检查使用嵌套_for_循环的传统方法。接下来，我们将探索使用_Stream_ API来完成相同的任务。两种方法都有优缺点。最佳选择取决于我们的需求。</p>
<h2>2. 使用嵌套For循环识别极值</h2>
<p>我们将使用的第一个方法是嵌套_for_循环。这种技术提供了一种清晰直观的方法来迭代二维数组中的每个元素。<strong>我们通过迭代数组的每一行和列来实现这一点</strong>。当访问每个元素时，将其与我们迄今为止遇到的当前最小值和最大值进行比较：</p>`,r:{minutes:3.3,words:990},t:"在二维数组中寻找最小和最大值 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Finding%20the%20Index%20of%20the%20Smallest%20Element%20in%20an%20Array.html",{loader:()=>n(()=>import("./Finding the Index of the Smallest Element in an Array.html-DqOfYHx4.js"),__vite__mapDeps([327,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","编程"],g:["数组","最小元素","索引"],e:`
<h2>1. 概述</h2>
<p>数组操作是必不可少的，我们可能在任何应用程序中都需要它们。有时，它们隐藏在像集合API这样更便利的接口后面。然而，这是我们应该在职业生涯早期就掌握的基本知识。</p>
<p>在本教程中，我们将学习如何找到数组中最小元素的索引。我们将讨论如何做到这一点，无论元素的类型如何，但为了简单起见，我们将使用一个整数数组。</p>
<h2>2. 简单迭代</h2>
<p>最简单的解决方案往往是最好的。<strong>这是出于几个原因：它更容易实现、更改和理解。</strong> 让我们看看如何使用基本的_for_循环找到最小元素的索引：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@ParameterizedTest</span>
<span class="token annotation punctuation">@MethodSource</span><span class="token punctuation">(</span><span class="token string">"primitiveProvider"</span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">givenArray_whenUsingForLoop_thenGetCorrectResult</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> expectedIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> minValue <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> minIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \`<span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> minValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            minValue <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">assertThat</span><span class="token punctuation">(</span>minIndex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span>expectedIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:5.1,words:1529},t:"在数组中找到最小元素的索引 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Finding%20the%20Next%20Higher%20Number%20With%20the%20Same%20Digits.html",{loader:()=>n(()=>import("./Finding the Next Higher Number With the Same Digits.html-CuuhBW3u.js"),__vite__mapDeps([328,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java"],g:["Algorithm","Number"],e:`
<h2>1. 引言</h2>
<p>在本教程中，我们将学习如何在Java中找到与原始数字具有相同数字集的下一个更高数字。这个问题可以通过使用排列、排序和双指针方法的概念来解决。</p>
<h2>2. 问题陈述</h2>
<p>给定一个正整数，我们需要找到使用完全相同的数字集的下一个更高数字。例如，如果输入是123，我们的目标是重新排列其数字以形成具有相同数字的下一个更高数字。在这种情况下，下一个更高数字将是132。</p>
<p>如果输入是654或444，那么我们返回-1以表示无法找到下一个更高数字。</p>
<h2>3. 使用排列</h2>
<p>在这种方法中，我们将利用排列来找到与输入数字相同的数字集的下一个更大数字。<strong>我们将生成输入数字数字的所有可能排列，并将它们添加到_TreeSet_中以确保唯一性和排序。</strong></p>`,r:{minutes:6.21,words:1862},t:"寻找具有相同数字的下一个更高数字 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Finding%20the%20Redirected%20URL%20of%20a%20URL%20in%20Java.html",{loader:()=>n(()=>import("./Finding the Redirected URL of a URL in Java.html-CjX16d21.js"),__vite__mapDeps([329,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","Web Development"],g:["URL Redirection","Java","HttpURLConnection","HttpClient"],e:`
<h2>1. 引言</h2>
<p>理解URL是如何重定向的对于网络开发和网络编程任务至关重要，例如处理HTTP重定向、验证URL重定向或提取最终目的地URL。在Java中，我们可以使用_HttpURLConnection_或_HttpClient_库来实现这一功能。</p>
<p><strong>在本教程中，我们将探讨在Java中查找给定URL重定向后的URL的不同方法。</strong></p>
<h2>2. 使用_HttpURLConnection_</h2>
<p>Java提供了_HttpURLConnection_类，它允许我们发出HTTP请求并处理响应。此外，我们可以使用_HttpURLConnection_来查找给定URL的重定向后的URL。以下是如何操作的示例：</p>`,r:{minutes:2.42,words:726},t:"在Java中查找URL重定向后的URL",y:"a"}}],["/posts/baeldung/Archive/Finding%20the%20Second%20Smallest%20Integer%20in%20an%20Array%20in%20Java.html",{loader:()=>n(()=>import("./Finding the Second Smallest Integer in an Array in Java.html-DkCV1ZRJ.js"),__vite__mapDeps([330,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","Algorithm"],g:["Array","Second Smallest"],e:`
<h2>1. 引言</h2>
<p>在本教程中，我们将探索使用Java在数组中找到第二小元素的不同方法。</p>
<h2>2. 问题陈述</h2>
<p>给定一个整数数组，任务是在数组中找到第二小的元素。<strong>这个值代表数组中存在的第二低的整数，假设至少有两个不同的元素。</strong></p>
<p>数组中无法找到第二小元素有两种情况：</p>
<ul>
<li>如果输入数组为空（长度为0）或只包含一个元素，那么就无法识别出第二小的元素。</li>
<li>如果数组中的所有元素都相同，那么就不存在不同的第二小元素。</li>
</ul>
<p>在这些情况下，我们将返回 <em>-1</em> 以表示在给定的数组中没有找到第二小的数字。</p>`,r:{minutes:6.06,words:1818},t:"在Java中找到数组中的第二小整数",y:"a"}}],["/posts/baeldung/Archive/Finding%20the%20nth%20Last%20Occurrence%20of%20char%20in%20String.html",{loader:()=>n(()=>import("./Finding the nth Last Occurrence of char in String.html-DAAutvjQ.js"),__vite__mapDeps([331,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","编程"],g:["文本处理","Java 流"],e:`
<p>在各种文本处理任务中，我们经常需要在给定的字符串中找到特定字符的第n个最后一次出现。此外，这一操作在解析日志、分析文本数据或从字符串中提取相关信息等任务中特别有用。</p>
<p>在本教程中，我们将探索使用Java在字符串中查找字符的第n个最后一次出现的多种技术。</p>
<h2>2. 使用传统循环</h2>
<p>找到字符串中字符的第n个最后一次出现的一个传统方法是通过迭代循环。在这种方法中，我们从字符串的末尾开始迭代，直到达到所需位置，计算目标字符的出现次数。</p>
<p>让我们看看这如何实现：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"Welcome to Baeldung"</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> target <span class="token operator">=</span> <span class="token char">'e'</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> expectedIndex <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenStringAndCharAndN_whenFindingNthLastOccurrence_thenCorrectIndexReturned</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                index <span class="token operator">=</span> i<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span>expectedIndex<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.79,words:836},t:"在Java中查找字符串中字符的第n个最后一次出现",y:"a"}}],["/posts/baeldung/Archive/Fix%20Spring%20Boot%20H2%20JdbcSQLSyntaxErrorException%20%20Table%20not%20found%20.html",{loader:()=>n(()=>import("./Fix Spring Boot H2 JdbcSQLSyntaxErrorException  Table not found .html-C_Nm8Zx-.js"),__vite__mapDeps([332,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Spring Boot","H2 Database"],g:["SQL Syntax Error","Table Not Found"],e:`
<h3>1. 引言</h3>
<p>H2提供了一个简单的内存数据库和轻量级数据库，Spring Boot可以自动配置，使开发人员能够轻松测试数据访问逻辑。</p>
<p>通常，正如其名称所示，_org.h2.jdbc.JdbcSQLSyntaxErrorException_被抛出以表示与SQL语法相关的错误。因此，消息“找不到表”表示H2未能找到指定的表。</p>
<p>因此，在本简短教程中，我们将学习如何产生并修复H2异常：<em>JdbcSQLSyntaxErrorException: 找不到表</em>。</p>
<h3>2. 实践示例</h3>
<p>现在我们知道了异常背后的原因，让我们看看如何在实践中重现它。</p>`,r:{minutes:2.95,words:884},t:"修复Spring Boot H2 JdbcSQLSyntaxErrorException “找不到表” | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Full%20and%20Partial%20Text%20Search%20in%20MongoDB.html",{loader:()=>n(()=>import("./Full and Partial Text Search in MongoDB.html-B09JukBu.js"),__vite__mapDeps([333,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["MongoDB","Java"],g:["Full-Text Search","Partial-Text Search"],e:`
<p>全文搜索和部分文本搜索的需求在开发数据库应用程序时经常出现。它们还应该支持全文和部分文本匹配，以使这些搜索更加用户友好。为此，MongoDB提供了几种使用文本搜索查找相关文档的方法。</p>
<p>在本教程中，我们将探索MongoDB中的文本搜索，其特性，如何使用它，以及如何充分利用它。</p>
<p>尽管文本搜索查询是一个强大的工具，但它们需要特定的设置。为了实现这一点，我们需要在集合上创建一个文本索引。</p>
<p><strong>索引就像是特殊的文件夹，只保存集合中每个文档的一点点信息</strong>。换句话说，它们与实际的文档本身是分开的。此外，MongoDB允许用户创建不同类型的索引。</p>`,r:{minutes:4.11,words:1232},t:"MongoDB中的全文和部分文本搜索",y:"a"}}],["/posts/baeldung/Archive/Generate%20Java%20Classes%20From%20Avro%20Schemas%20Using%20Gradle.html",{loader:()=>n(()=>import("./Generate Java Classes From Avro Schemas Using Gradle.html-BkgqSi5g.js"),__vite__mapDeps([334,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","Gradle"],g:["Apache Avro","代码生成"],e:`
<p>在这个教程中，我们将学习如何从Apache Avro模式生成Java类。
首先，我们将熟悉两种方法：使用现有的Gradle插件和为构建脚本实现自定义任务。然后，我们将确定每种方法的优缺点，并了解它们最适合的场景。</p>
<h2>2. 开始使用Apache Avro</h2>
<p>我们的主要焦点是从Apache Avro模式生成Java类。在深入代码生成的细节之前，让我们简要回顾一下基本概念。</p>
<h3>2.1. Apache Avro模式定义</h3>
<p>首先，我们准备所需的依赖项来处理Avro格式。<strong>我们将需要_apache.avro_模块进行数据序列化和反序列化，因此我们将在_libs.version.toml_和_build.gradle_文件中添加它：</strong></p>`,r:{minutes:2.21,words:663},t:"使用Gradle从Avro模式生成Java类",y:"a"}}],["/posts/baeldung/Archive/Get%202%20s%20Complement%20of%20a%20Number%20in%20Java.html",{loader:()=>n(()=>import("./Get 2 s Complement of a Number in Java.html--Rf92grT.js"),__vite__mapDeps([335,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","计算机科学"],g:["二进制","补码"],e:`
<ol>
<li>引言</li>
</ol>
<p>二进制补码是计算机科学中的一个基本概念，特别是在处理有符号二进制数时。它允许在固定数量的位内表示正整数和负整数。</p>
<p>在本教程中，我们将学习如何在Java中计算一个数的二进制补码。</p>
<ol start="2">
<li>什么是二进制补码？</li>
</ol>
<p>在计算机系统中，值是通过一系列由0和1组成的二进制数字来表示的。存在不同的方式在二进制表示中编码这些值，例如符号-数值表示法、1的补码、2的补码等。</p>
<p><strong>二进制补码表示法是一种非常高效的方式来存储和操作有符号数</strong>。在这里，最高有效位（MSB）表示数字的符号，0表示正数，1表示负数。这种表示简化了二进制数的加法和减法操作。</p>`,r:{minutes:4.9,words:1470},t:"在Java中计算一个数的二进制补码",y:"a"}}],["/posts/baeldung/Archive/Get%20JSON%20Content%20as%20Object%20Using%20MockMVC.html",{loader:()=>n(()=>import("./Get JSON Content as Object Using MockMVC.html-DqQQ1bp8.js"),__vite__mapDeps([336,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Spring","Spring Boot"],g:["MockMVC","JSON"],e:`
<h2>1. 概述</h2>
<p>在测试我们的REST端点时，有时我们希望获取响应并将其转换为对象，以便进一步检查和验证。众所周知，一种方法是使用如RestAssured等库在不将响应转换为对象的情况下验证响应。</p>
<p>在本教程中，我们将探索使用MockMVC和Spring Boot获取JSON内容为对象的几种方法。</p>
<h2>2. 示例设置</h2>
<p>在我们深入研究之前，让我们创建一个我们将用于测试的简单REST端点。</p>
<p>让我们从依赖设置开始。我们将在_pom.xml_中添加_spring-boot-starter-web_依赖，以便我们可以创建REST端点：</p>`,r:{minutes:4.56,words:1367},t:"使用MockMVC获取JSON内容为对象 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Get%20Nextval%20From%20Sequence%20With%20Spring%20JPA.html",{loader:()=>n(()=>import("./Get Nextval From Sequence With Spring JPA.html-CKogg8C3.js"),__vite__mapDeps([337,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Spring JPA","Database"],g:["Sequence","Nextval"],e:`
<p>序列是数据库中生成唯一ID的数字生成器，以避免重复条目。Spring JPA提供了在大多数情况下自动使用序列的方法。然而，在某些特定场景中，我们可能需要在持久化实体之前手动检索下一个序列值。例如，我们可能想在将发票详细信息保存到数据库之前生成一个唯一的发票号码。</p>
<p>在本教程中，我们将探讨使用Spring Data JPA从数据库序列获取下一个值的几种方法。</p>
<h2>2. 设置项目依赖</h2>
<p>在我们深入使用Spring Data JPA中的序列之前，让我们确保我们的项目正确设置。我们需要在我们的Maven <em>pom.xml</em> 文件中添加Spring Data JPA和PostgreSQL驱动依赖，并在数据库中创建序列。</p>`,r:{minutes:5.14,words:1541},t:"使用Spring JPA从序列获取下一个值",y:"a"}}],["/posts/baeldung/Archive/Get%20the%20First%20and%20the%20Last%20Elements%20From%20an%20Array%20in%20Java.html",{loader:()=>n(()=>import("./Get the First and the Last Elements From an Array in Java.html-ChbVyuiK.js"),__vite__mapDeps([338,1])),meta:{d:1718963696e3,e:`<p>由于网页链接解析失败，我无法获取到网页的具体内容，包括标题、日期、分类(category)和标签(tag)。请您检查链接的有效性，并确保网络连接正常。如果需要翻译其他内容或有其他问题，欢迎随时告知。---
date: {2024-06-15}
category:</p>
<ul>
<li>Java</li>
<li>编程
tag:</li>
<li>数组</li>
<li>Java基础</li>
</ul>
<hr>
<h1>在Java中获取数组的第一个和最后一个元素 | Baeldung</h1>
<p>OK</p>
`,r:{minutes:.37,words:111},t:"在Java中获取数组的第一个和最后一个元素 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Get%20the%20Indices%20of%20an%20Array%20After%20Sorting%20in%20Java.html",{loader:()=>n(()=>import("./Get the Indices of an Array After Sorting in Java.html-DUSoPqJs.js"),__vite__mapDeps([339,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java","编程"],g:["数组排序","索引"],e:`
<h2>1. 引言</h2>
<p>在Java中对数组进行排序是一项常见操作，但有时我们还需要知道排序后元素的原始索引。这些信息对于某些算法和应用至关重要。</p>
<p><strong>在本教程中，我们将展示在Java中实现这一点的不同方法。</strong></p>
<h2>2. 问题描述</h2>
<p>对数组进行排序是一项基本操作，但在某些场景中，我们不仅需要按顺序排列值；我们还需要保留这些值的原始位置。当我们想要知道排序后元素的顺序如何变化时，这一点尤其重要。让我们考虑以下数组：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>int[] array = {40, 10, 20, 30};
</code></pre></div>`,r:{minutes:2.98,words:893},t:"Java中数组排序后获取索引的方法 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Get%20the%20Position%20of%20Key%20Value%20in%20LinkedHashMap%20Using%20Its%20Key.html",{loader:()=>n(()=>import("./Get the Position of Key Value in LinkedHashMap Using Its Key.html-DGo-6K6b.js"),__vite__mapDeps([340,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Java","LinkedHashMap"],g:["Java","LinkedHashMap","编程技巧"],e:`
<h2>1. 引言</h2>
<p><em>LinkedHashMap</em> 类提供了一种方便的方式来保持键值对的插入顺序，同时还提供了 <em>HashMap</em> 的功能。</p>
<p><strong>在本教程中，我们将探讨几种在 <em>LinkedHashMap</em> 中检索位置（索引）的方法。</strong></p>
<h2>2. <em>LinkedHashMap</em> 概览</h2>
<p><em>LinkedHashMap</em> 是一个 Java 类，它扩展了 <em>HashMap</em> 并维护了一个插入顺序的条目链表。这意味着 <em>LinkedHashMap</em> 中元素的顺序是可预测的，并反映了键的插入顺序。</p>`,r:{minutes:2.45,words:735},t:"使用其键在LinkedHashMap中获取键/值的位置 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Get%20the%20Response%20Body%20in%20Spring%20Boot%20Filter.html",{loader:()=>n(()=>import("./Get the Response Body in Spring Boot Filter.html-MkQ0DlxO.js"),__vite__mapDeps([341,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Spring Boot","Java"],g:["Spring Boot","Filter","Response Body"],e:`
<p>无论你是刚开始学习还是拥有多年经验，<strong>Spring Boot</strong> 是构建新应用程序的绝佳选择，它让一切变得简单。</p>
<p>Jmix增强了Spring Boot开发者的能力，允许他们构建和交付<strong>全栈Web****应用程序</strong>，而无需涉足前端技术。它使你能够从简单的Web GUI CRUD应用程序到复杂的企业解决方案，消除了前端/后端分离及相关安全问题。</p>
<p><strong>Jmix平台</strong>包括一个构建在<strong>Spring Boot, JPA, 和 Vaadin</strong>之上的框架，并带有Jmix Studio，<strong>一个IntelliJ IDEA插件</strong>，配备了一套开发者生产力工具。该平台还提供了<strong>现成的</strong>插件，用于报告生成、BPM、地图等，你可以在Jmix应用程序中使用它们，或者作为单独的服务。所有技术都是相互连接的，使单个Java开发者能够以整个团队的水平执行任务，<strong>入门所需的知识最少</strong>。</p>`,r:{minutes:4.74,words:1423},t:"在Spring Boot Filter中获取响应体",y:"a"}}],["/posts/baeldung/Archive/Git%20Integration%20in%20IntelliJ%20IDEA.html",{loader:()=>n(()=>import("./Git Integration in IntelliJ IDEA.html-Bs1R-RAD.js"),__vite__mapDeps([342,1])),meta:{d:16780608e5,l:"2023年3月6日",c:["Development Tools","Version Control"],g:["Git","IntelliJ IDEA"],e:`
<h2>1. 引言</h2>
<p>IntelliJ IDEA 提供了对 Git 版本控制系统的广泛支持。在本教程中，我们将查看 IDE 提供的一些功能。</p>
<p>由于 IntelliJ 定期更新，我们不会详细介绍每一个功能。相反，我们将提供一个概览。本教程的截图基于 IntelliJ IDEA 2023.3.6 版本，使用深色模式，我们将使用 Baeldung GitHub 仓库来演示示例。</p>
<h2>2. Git 配置</h2>
<p>在 IntelliJ 中使用 Git 之前，我们需要在系统中安装它，并在 IDE 的设置中配置路径：</p>
<p>这个设置告诉 IntelliJ 使用我们系统中安装的 Git 可执行文件。</p>`,r:{minutes:5.57,words:1672},t:"IntelliJ IDEA 中的 Git 集成",y:"a"}}],["/posts/baeldung/Archive/Handling%20Nulls%20in%20ArrayList.addAll%20%20.html",{loader:()=>n(()=>import("./Handling Nulls in ArrayList.addAll  .html-DmzpSBzv.js"),__vite__mapDeps([343,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","Collections"],g:["ArrayList","Null Handling"],e:'\n<p>熟练使用集合API是Java开发者最关键的技能之一。本教程将重点介绍_ArrayList_及其_addAll()_方法。</p>\n<p>尽管_addAll()_是向目标_ArrayList_添加一系列元素的最便捷方式，但它在处理空值时表现不佳。</p>\n<h3>空值和addAll()</h3>\n<p>正如前面所述，addAll()方法在处理空值时表现不佳。如果我们传递一个空引用，它将抛出_NullPointerException_：</p>\n<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@ParameterizedTest</span>\n<span class="token annotation punctuation">@NullSource</span>\n<span class="token keyword">void</span> <span class="token function">givenNull_whenAddAll_thenAddThrowsNPE</span><span class="token punctuation">(</span><span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>````````````` list<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">ArrayList</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>````````````` strings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assertThatExceptionOfType</span><span class="token punctuation">(</span><span class="token class-name">NullPointerException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">isThrownBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> strings<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',r:{minutes:3.17,words:951},t:"ArrayList中addAll()方法处理空值 | Baeldung### 概述",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Check%20if%20Optional%20Contains%20Value%20Equal%20to%20T%20Object.html",{loader:()=>n(()=>import("./How to Check if Optional Contains Value Equal to T Object.html-CvFO7Y73.js"),__vite__mapDeps([344,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","Optional"],g:["Java 8","Optional","equals","get","map"],e:`
<h2>1. 概述</h2>
<p><em>Optional</em> 是Java 8引入的一个类，属于_java.util_包。它作为一个容器，可能包含也可能不包含一个非空值。<em>Optional_可以帮助我们更有效地处理_null_值，并避免代码中的_NullPointerException</em>。</p>
<p>当我们使用_Optional_时，一个常见的任务是检查它是否包含一个等于特定对象的值。在本教程中，我们将探讨执行此检查的各种技术。</p>
<h2>2. 问题的介绍</h2>
<p>首先，让我们澄清等值检查的要求。假设我们有两个对象；一个是类型为_T_的非空_valueOfT_对象，另一个是一个类型为_Optional<code>&lt;T&gt;</code>_的_opt_实例。</p>`,r:{minutes:3.61,words:1082},t:"如何检查Optional是否包含等于T对象的值 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Compile%20Java%20to%20WASM%20%20Web%20Assembly%20.html",{loader:()=>n(()=>import("./How to Compile Java to WASM  Web Assembly .html-DUNAkBl4.js"),__vite__mapDeps([345,1])),meta:{d:16935264e5,l:"2023年9月1日",c:["Web Development"],g:["WebAssembly","Java"],e:`
<h2>1. 概述</h2>
<p>在快节奏的Web开发世界中，WASM（WebAssembly）的引入为开发者带来了新的可能性。它允许他们在Web平台上利用编译语言的速度和适应性。</p>
<p>在本教程中，我们将探讨将Java编译为WebAssembly的过程，并研究可用的工具和方法。</p>
<h2>2. WASM（WebAssembly）是什么</h2>
<p>WebAssembly是一种低级的二进制指令格式，可以在现代Web浏览器中运行。它允许开发者在Web浏览器中以接近原生速度运行用C、C++等语言编写的代码。WebAssembly旨在与JavaScript一起运行，允许两者协同工作。</p>`,r:{minutes:3.29,words:988},t:"如何将Java编译为WASM（Web Assembly） | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Convert%20Between%20java.sql.Timestamp%20and%20ZonedDateTime%20in%20Java.html",{loader:()=>n(()=>import("./How to Convert Between java.sql.Timestamp and ZonedDateTime in Java.html-CeCgGrK9.js"),__vite__mapDeps([346,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Java","编程"],g:["java.sql.Timestamp","ZonedDateTime"],e:`
<p>处理Java中的时间戳是一项常见任务，它使我们能够更有效地操作和显示日期和时间信息，特别是在我们处理数据库或全球应用程序时。用于处理时间戳和时区的两个基本类是java.sql.Timestamp和ZonedDateTime。</p>
<p>在本教程中，我们将探讨在java.sql.Timestamp和ZonedDateTime之间进行转换的多种方法。</p>
<h3>2.1. 使用Instant类</h3>
<p>Instant类可以被看作是UTC时区中的一个单一时刻。如果我们将时间想象成一条线，Instant就代表线上的一个点。</p>
<p>在内部，Instant类只是计算相对于1970年1月1日标准Unix纪元时间00:00:00的秒数和纳秒数。这个时间点由0秒和0纳秒表示，其他一切都是从这个时间点的偏移量。</p>`,r:{minutes:4.95,words:1484},t:"如何在Java中转换java.sql.Timestamp和ZonedDateTime",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Convert%20XML%20to%20PDF.html",{loader:()=>n(()=>import("./How to Convert XML to PDF.html-BGmRT7CQ.js"),__vite__mapDeps([347,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java","XML"],g:["XML to PDF","Apache FOP","iText"],e:`
<h2>1. 概览</h2>
<p>Java提供了多种库和API来处理XML和PDF文档。在Java中将XML转换为PDF涉及解析XML数据，应用样式和格式化，并生成PDF输出。</p>
<p>本文探讨了在Java中将XML转换为PDF的不同方法和库。</p>
<h2>2. 理解转换过程</h2>
<p>在讨论实现细节之前，让我们强调将XML转换为PDF的基本步骤。这个过程通常包括两个主要步骤：</p>
<ol>
<li><strong>第一步是XML解析，分析XML内容并提取其结构和文本数据。</strong> 在Java中，开发人员可以使用各种XML解析库，如DOM（文档对象模型）、SAX（简单API for XML）和StAX（流API for XML）。</li>
<li><strong>第二步涉及PDF生成。</strong> 这一步包括创建PDF组件，如段落、表格、图像和其他元素。然后根据XML文档中定义的结构对这些组件进行组织和格式化。</li>
</ol>`,r:{minutes:4.92,words:1475},t:"如何在Java中将XML转换为PDF | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Convert%20org.w3c.dom.Document%20to%20String%20in%20Java.html",{loader:()=>n(()=>import("./How to Convert org.w3c.dom.Document to String in Java.html-CgAiZqCS.js"),__vite__mapDeps([348,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Java","XML"],g:["XML转换","DOM","Java"],e:`
<p>在Java中处理XML时，我们经常需要将一个_org.w3c.dom.Document_实例转换为_String_。<strong>通常我们可能出于多种原因需要这样做，例如序列化、记录日志以及处理HTTP请求或响应。</strong></p>
<p>在这个快速教程中，我们将看到如何将一个_Document_转换为_String_。要了解更多关于Java中使用XML的信息，请查看我们关于XML的全面系列。</p>
<h2>创建一个简单的文档</h2>
<p>本教程的示例将集中在一个描述一些水果的简单XML文档上：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>\\&lt;fruit\\&gt;
    \\&lt;name\\&gt;Apple\\&lt;/name\\&gt;
    \\&lt;color\\&gt;Red\\&lt;/color\\&gt;
    \\&lt;weight unit="grams"\\&gt;150\\&lt;/weight\\&gt;
    \\&lt;sweetness\\&gt;7\\&lt;/sweetness\\&gt;
\\&lt;/fruit\\&gt;
</code></pre></div>`,r:{minutes:3.68,words:1103},t:"在Java中将org.w3c.dom.Document转换为String的方法 | Baeldung## 概述",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Fix%20EOFException%20in%20Java.html",{loader:()=>n(()=>import("./How to Fix EOFException in Java.html-CxaSZmei.js"),__vite__mapDeps([349,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","异常处理"],g:["EOFException","Java异常","文件读取"],e:`
<h2><strong>1. 概述</strong></h2>
<p>在本教程中，我们将讨论Java中的_java.io.EOFException_，这是一种在处理文件时可能遇到的特殊的_IOException_。</p>
<p>我们将首先理解这种异常的原因，然后讨论如何解决它。</p>
<h2><strong>2. EOFException是如何发生的？</strong></h2>
<p>在深入细节之前，让我们首先了解这个异常的含义。</p>
<p>_EOF_在_EOFException_中代表“文件结束”。它表示程序在读取文件内容时已经到达了文件的末尾。</p>
<p>**通常情况下，当使用输入流对象读取数据时，会抛出此异常。**例如，<em>DataInputStream_类提供了_readChar()</em>、<em>readInt()</em>、_readDouble()<em>等方法，用于从流中读取值。在这种情况下，当流的末尾到达时，会抛出_EOFException</em>。</p>`,r:{minutes:2.74,words:823},t:"如何在Java中解决EOFException问题 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Implement%20Elvis%20Operator%20in%20Java%208.html",{loader:()=>n(()=>import("./How to Implement Elvis Operator in Java 8.html-BdgZKO-w.js"),__vite__mapDeps([350,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Java","Programming"],g:["Java 8","Elvis Operator"],e:`
<h2>1. 引言</h2>
<p>在Java 8中，并没有像Groovy或Kotlin中内置的Elvis操作符。然而，我们可以使用方法引用和三元运算符来实现我们自己的Elvis操作符。在本教程中，我们将探讨如何在Java 8中实现Elvis操作符。</p>
<h2>2. 理解Elvis操作符</h2>
<p>Elvis操作符通常在Groovy和Kotlin等语言中使用。它由<code>?:</code>符号表示，用于在原始值为<code>null</code>时提供一个默认值。</p>
<p><strong>操作符评估其左侧的表达式，如果它不是<code>null</code>，则返回它。如果左侧的表达式评估为<code>null</code>，则返回右侧的表达式。</strong></p>`,r:{minutes:4.5,words:1350},t:"如何在Java 8中实现Elvis操作符 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Intercept%20a%20Request%20and%20Add%20Headers%20in%20WebFlux.html",{loader:()=>n(()=>import("./How to Intercept a Request and Add Headers in WebFlux.html-CGsDSBK3.js"),__vite__mapDeps([351,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Spring WebFlux","Reactive Programming"],g:["WebFlux","Interceptor","Headers"],e:'\n<p>拦截器，也被称为过滤器，是 Spring 的一个特性，允许我们拦截客户端请求。这使我们能够在控制器处理它或向客户端返回响应之前检查和转换请求。</p>\n<p>在本教程中，我们将讨论使用 WebFlux 框架拦截客户端请求并添加自定义头部的各种方式。我们首先探索如何为特定端点执行此操作。然后，我们将确定拦截所有传入请求的方法。</p>\n<p>我们将使用以下 spring-boot-starter-webflux Maven 依赖项，以支持 Spring 框架的响应式 Web 功能：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`org.springframework.boot`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`spring-boot-starter-webflux`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`3.1.5`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n</code></pre></div>',r:{minutes:4.53,words:1358},t:"如何在 WebFlux 中拦截请求并添加头部信息 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Iterate%20a%20List%20of%20Maps%20in%20Java.html",{loader:()=>n(()=>import("./How to Iterate a List of Maps in Java.html-DfiXjE0u.js"),__vite__mapDeps([352,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Java"],g:["集合","迭代"],e:`
<h2>1. 引言</h2>
<p>在Java编程中，处理集合是一个基本任务。列表（List）和映射（Map）是两种常用的集合类型，有时我们可能需要处理一个列表的映射。无论是处理数据、操作配置还是涉及复杂数据结构的任何其他任务，高效地迭代列表映射都是至关重要的。</p>
<p>在本教程中，我们将探讨在Java中迭代列表映射的各种技术。</p>
<h2>2. 理解列表映射</h2>
<p>在我们探索迭代技术之前，让我们先理解列表映射的概念。</p>
<p>列表映射由多个映射对象组成，每个映射都能够保存键值对，其中每个映射中的键是唯一的。<strong>这种结构提供了显著的灵活性，并在表示表格数据、配置或任何需要键到值映射的数据中找到常见应用。</strong></p>`,r:{minutes:2.76,words:827},t:"Java中迭代列表映射的方法 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Make%20Multiple%20REST%20Calls%20in%20CompletableFuture.html",{loader:()=>n(()=>import("./How to Make Multiple REST Calls in CompletableFuture.html-B6YIalfD.js"),__vite__mapDeps([353,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","Spring Boot"],g:["CompletableFuture","REST API","并行处理"],e:`
<p>现在，新版的《REST With Spring - "REST With Spring Boot"》终于发布了，当前价格将在6月22日之前有效，之后将永久上涨50美元。</p>
<p><strong>&gt;获取访问权限</strong></p>
<p><strong>现在</strong></p>
<h2>1. 引言</h2>
<p>在创建软件功能时，日常活动之一是从不同来源检索数据并在响应中聚合。在微服务中，这些来源通常是外部REST API。</p>
<p>在本教程中，我们将使用Java的CompletableFuture高效地从多个外部REST API并行检索数据。</p>
<h2>2. 为什么在REST调用中使用并行性</h2>`,r:{minutes:6.47,words:1941},t:"如何在CompletableFuture中进行多个REST调用 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Set%20JVM%20Arguments%20in%20IntelliJ%20IDEA%20.html",{loader:()=>n(()=>import("./How to Set JVM Arguments in IntelliJ IDEA .html-DLcDuWZ_.js"),__vite__mapDeps([354,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Software Development"],g:["IntelliJ IDEA","JVM"],e:`
<p>IntelliJ IDEA是开发各种编程语言软件中最受欢迎和功能强大的IDE之一。</p>
<p>在本教程中，<strong>我们将学习如何在IntelliJ IDEA中配置JVM参数</strong>，允许我们为开发和调试调整JVM。</p>
<h2>2. JVM参数基础</h2>
<p>我们可以根据应用程序的特定需求选择JVM参数。<strong>正确的JVM参数可以</strong> <strong>提高应用程序的性能和稳定性</strong>，并使调试应用程序更加容易。</p>
<h3>2.1. JVM参数类型</h3>
<p>有几种类别的JVM参数：</p>
<ul>
<li><strong>内存分配</strong> - 例如 <em>-Xms</em>（初始堆大小）或 <em>-Xmx</em>（最大堆大小）</li>
<li><strong>垃圾回收</strong> - 例如 <em>-XX:+UseConcMarkSweepGC</em>（启用并发标记-清除垃圾回收器）或 <em>-XX:+UseParallelGC</em>（启用并行垃圾回收器）</li>
<li><strong>调试</strong> - 例如 <em>-XX:+HeapDumpOnOutOfMemoryError</em>（当发生OutOfMemoryError时进行堆转储）或 <em>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</em> 用于通过JDWP在5005端口进行远程调试。</li>
<li><strong>系统属性</strong> - 例如 <em>-Djava.version</em>（Java版本）或 <em>-Dcustom.property=value</em>（定义自定义属性及其值）。</li>
</ul>`,r:{minutes:4.11,words:1232},t:"如何在IntelliJ IDEA中设置JVM参数 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Specify%20the%20logback.xml%20Location.html",{loader:()=>n(()=>import("./How to Specify the logback.xml Location.html-BTm18iLi.js"),__vite__mapDeps([355,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","Spring Boot"],g:["Logback","Configuration"],e:`<hr>
<h1>如何指定logback.xml的位置 | Baeldung</h1>
<p>无论你是刚开始还是拥有多年经验，Spring Boot 都是构建新应用程序的极佳选择，使用起来非常方便。</p>
<p>Jmix 增强了 Spring Boot 开发者的能力，允许他们构建和交付全栈 Web 应用程序，而无需涉足前端技术。它使你能够从简单的 Web GUI CRUD 应用程序到复杂的企业解决方案，消除了前端/后端分离及其相关的安全问题。</p>
<p>Jmix 平台包括一个构建在 Spring Boot、JPA 和 Vaadin 之上的框架，并附带 Jmix Studio，这是一个 IntelliJ IDEA 插件，配备了一整套开发者生产力工具。该平台还提供了即开即用的报告生成、BPM、地图等插件，你可以在 Jmix 应用程序中使用它们，或者作为独立服务使用。所有技术都是相互连接的，使单个 Java 开发者能够以整个团队的水平进行工作，<strong>所需的起步知识最少</strong>。</p>`,r:{minutes:4.69,words:1406},t:"如何指定logback.xml的位置 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Test%20a%20Spring%20AOP%20Aspect.html",{loader:()=>n(()=>import("./How to Test a Spring AOP Aspect.html-BYKAniT2.js"),__vite__mapDeps([356,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Spring AOP","Testing"],g:["AOP","Testing","Spring Boot"],e:`
<p>现在，新版的《REST With Spring - "REST With Spring Boot"》终于发布了，当前价格将在6月22日之前有效，之后将永久上涨50美元。</p>
<p><strong>&gt;获取访问权限</strong></p>
<p><strong>现在</strong></p>
<h2>1. 概述</h2>
<p>面向切面编程（AOP）通过将跨领域关注点分离到一个基本单元，称为切面，从而改善程序设计，这个单元与主应用程序逻辑分开。Spring AOP是一个框架，它帮助我们轻松实现切面。</p>
<p>AOP切面与其他软件组件没有什么不同。它们需要不同的测试来验证它们的正确性。在本教程中，我们将学习如何对Spring AOP切面进行单元测试和集成测试。</p>`,r:{minutes:5.43,words:1630},t:"如何测试Spring AOP切面 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Unit%20Test%20an%20ExecutorService%20Without%20Using%20Thread.sleep%20%20.html",{loader:()=>n(()=>import("./How to Unit Test an ExecutorService Without Using Thread.sleep  .html-DMkUDFt2.js"),__vite__mapDeps([357,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","Concurrency"],g:["ExecutorService","Unit Testing"],e:`
<h2>1. 概述</h2>
<p>一个_ExecutorService_对象在后台运行任务。单元测试在另一个线程上运行的任务是具有挑战性的。<strong>父线程必须等待任务结束才能断言其结果</strong>。</p>
<p>此外，解决这个问题的一个方法是使用_Thread.sleep()_方法。这个方法会阻塞父线程一段时间。然而，如果任务超出了_sleep()_上设置的时间，单元测试会在任务完成之前结束并失败。</p>
<p>在本教程中，我们将学习如何在不使用_Thread.sleep()_方法的情况下单元测试一个_ExecutorService_实例。</p>
<h2>2. 创建一个_Runnable_对象</h2>`,r:{minutes:4.65,words:1396},t:"如何在不使用Thread.sleep()的情况下单元测试ExecutorService | Baeldung",y:"a"}}],["/posts/baeldung/Archive/How%20to%20Use%20Pair%20With%20Java%20PriorityQueue.html",{loader:()=>n(()=>import("./How to Use Pair With Java PriorityQueue.html-BzVExmP4.js"),__vite__mapDeps([358,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","PriorityQueue"],g:["Java","PriorityQueue","Pair","Comparator"],e:`
<p>优先队列是最强大数据结构之一。它在企业应用中不常见，但我们经常在编码挑战和算法实现中使用它。</p>
<p>在本教程中，我们将学习如何使用比较器（Comparators）与优先队列（PriorityQueues）以及如何改变这些队列中的排序顺序。然后我们将检查一个更通用的例子，使用自定义类，并了解如何将类似的逻辑应用到Pair类。</p>
<p>对于Pair类，我们将使用Apache Commons的实现。然而，有多种选项可供选择，我们可以选择最适合我们需求的那个。</p>
<p>首先，让我们讨论数据结构本身。这个结构的主要超能力是在将元素推入队列时保持它们的顺序。</p>
<p>然而，像其他队列一样，它不提供访问队列内元素的API。我们只能访问队列前面的元素。</p>`,r:{minutes:5.72,words:1715},t:"如何在Java中使用Pair与PriorityQueue | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Implement%20Update%20Or%20Insert%20in%20Spring%20Data%20JPA.html",{loader:()=>n(()=>import("./Implement Update Or Insert in Spring Data JPA.html-DxiJ-pc1.js"),__vite__mapDeps([359,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Spring Data JPA","Update-Or-Insert"],g:["Spring Boot","REST API","Spring Security","Spring Data JPA"],e:`<hr>
<h1>在Spring Data JPA中实现更新或插入操作</h1>
<ul>
<li>
<p>从这里开始</p>
</li>
<li>
<p>课程▼▲</p>
</li>
<li>
<p><strong>Spring Boot与REST</strong><br>
用于构建生产级API的Spring的标准参考（几天后价格将上涨50美元）</p>
</li>
<li>
<p><strong>学习Spring Security▼▲</strong><br>
如果您今天使用Java工作，这是唯一的Spring Security教育</p>
</li>
<li>
<p><strong>学习Spring Security Core</strong><br>
专注于Spring Security 6的核心</p>
</li>
<li>
<p><strong>学习Spring Security OAuth</strong><br>
专注于Spring Security 6中的新OAuth2栈</p>
</li>
<li>
<p><strong>学习Spring</strong><br>
从无经验到实际构建东西</p>
</li>
<li>
<p><strong>学习Spring Data JPA</strong><br>
Spring Data JPA持久化的完整指南</p>
</li>
<li>
<p>指南▼▲</p>
</li>
<li>
<p><strong>持久化</strong><br>
Spring持久化指南</p>
</li>
<li>
<p><strong>REST</strong><br>
使用Spring构建REST API的指南</p>
</li>
<li>
<p><strong>安全</strong><br>
Spring Security指南</p>
</li>
<li>
<p>关于▼▲</p>
</li>
<li>
<p><strong>完整存档</strong><br>
网站上所有文章的高级概述。</p>
</li>
<li>
<p><strong>Baeldung电子书</strong><br>
发现我们所有的电子书</p>
</li>
<li>
<p><strong>关于Baeldung</strong><br>
关于Baeldung。</p>
</li>
<li>
<p><strong>为Baeldung写作</strong><br>
成为网站上的作者。</p>
</li>
<li>
<p>RSS</p>
</li>
<li>
<p>搜索---
date: 2024-06-18
category:</p>
<ul>
<li>Spring Data JPA</li>
<li>Update-Or-Insert
tag:</li>
<li>Spring Boot</li>
<li>REST API</li>
<li>Spring Security</li>
<li>Spring Data JPA
head:</li>
<li>
<ul>
<li>meta</li>
<li>name: keywords
content: Spring Data JPA, Update or Insert, JPA, Spring Boot, REST API, 持久化</li>
</ul>
</li>
</ul>
</li>
</ul>`,r:{minutes:1.7,words:509},t:"在Spring Data JPA中实现更新或插入操作",y:"a"}}],["/posts/baeldung/Archive/Implement%20the%20Builder%20Pattern%20in%20Java%208.html",{loader:()=>n(()=>import("./Implement the Builder Pattern in Java 8.html-B1_4av99.js"),__vite__mapDeps([360,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","设计模式"],g:["Builder模式","Java 8"],e:`
<h2>1. 引言</h2>
<p>在软件开发的旅程中，我们经常遇到创建具有众多属性的对象的场景，这可能令人生畏。构造函数的混乱使得我们的代码可读性降低。这正是建造者模式大放异彩的地方。<strong>建造者模式是一种创建型设计模式，它将复杂对象的构建与其表示分离，提供了一种更干净、更灵活的对象创建方法。</strong></p>
<h2>2. 建造者模式的优势</h2>
<p>在我们深入编码之前，让我们快速回顾一下使用建造者模式的优势：</p>
<ul>
<li>灵活性 - 通过将构建过程与实际对象表示解耦，建造者模式允许我们以不同的配置创建对象，而不会在我们的代码库中充斥着多个构造函数或设置器</li>
<li>可读性 - 建造者模式提供了流畅的接口，使我们的代码更易于阅读；这使我们和其他开发人员能够一目了然地理解复杂对象的构建过程</li>
<li>不可变性 - 建造者可以通过在构建完成后创建不可变对象来强制执行不可变性；这确保了线程安全性并防止了意外的修改</li>
</ul>`,r:{minutes:4.94,words:1481},t:"Java 8中实现建造者模式 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Inheritance%20vs.%20Composition%20in%20JPA.html",{loader:()=>n(()=>import("./Inheritance vs. Composition in JPA.html-CCPQJ9Sr.js"),__vite__mapDeps([361,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["JPA","数据库"],g:["继承","组合"],e:`
<h2>1. 引言</h2>
<p>继承和组合是面向对象编程（OOP）中的两个基本概念，我们同样可以在JPA中利用它们进行数据建模。在JPA中，继承和组合都是用于建模实体之间关系的技术，但它们代表了不同类型的关系。在本教程中，我们将探讨这两种方法及其含义。</p>
<h2>2.1. 单表继承（STI）</h2>
<p>单表继承（STI）涉及将所有子类映射到单个数据库表中。通过使用鉴别器列来区分子类实例，这简化了模式管理和查询执行。</p>
<p>我们首先使用@Entity注解定义_Employee_实体类作为超类。接下来，我们将继承策略设置为InheritanceType.SINGLE_TABLE，以便将所有子类映射到同一个数据库表。</p>`,r:{minutes:3.35,words:1005},t:"JPA中的继承与组合",y:"a"}}],["/posts/baeldung/Archive/Install%20Java%20on%20macOS.html",{loader:()=>n(()=>import("./Install Java on macOS.html-CARh3p-u.js"),__vite__mapDeps([362,1])),meta:{d:17053632e5,l:"2024年1月16日",c:["Java","macOS"],g:["Java安装","macOS"],e:`<hr>
<h1>在macOS上安装Java</h1>
<p>Java是由Oracle拥有的一种编程语言，最初由Sun Microsystems在1995年开发。在企业中，Web开发以及开发高度可扩展的解决方案时，Java仍然是首选的开发语言。</p>
<p>Oracle提供了两种Java版本：Oracle JDK和OpenJDK。Oracle JDK是商业产品，而OpenJDK是开源替代品。</p>
<p>在这个简短的教程中，我们将讨论在macOS上安装Java的方法。以我们的例子，我们将通过DMG包安装Oracle JDK，并通过Homebrew包管理器安装OpenJDK。</p>
<h2>2. 通过DMG包手动安装</h2>`,r:{minutes:3.43,words:1028},t:"在macOS上安装Java",y:"a"}}],["/posts/baeldung/Archive/Intro%20to%20Apache%20Commons%20Configuration%20Project.html",{loader:()=>n(()=>import("./Intro to Apache Commons Configuration Project.html-1_FDLg5s.js"),__vite__mapDeps([363,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","Apache Commons"],g:["Apache Commons Configuration","Java"],e:`
<ol>
<li>概述</li>
</ol>
<p>在部署时，我们可能需要向应用程序提供一些配置。这些配置可能来自多个外部来源。</p>
<p>Apache Commons Configuration 提供了一种统一的方法来管理来自不同来源的配置。</p>
<p>在本教程中，我们将探讨 Apache Commons Configuration 如何帮助我们配置应用程序。</p>
<ol start="2">
<li>Apache Commons Configuration 简介</li>
</ol>
<p>Apache Commons Configuration <strong>为 Java 应用程序提供了一个接口，用于访问和使用来自不同来源的配置数据</strong>。通过配置构建器，<strong>它提供了对单值和多值特性的类型化访问</strong>。</p>`,r:{minutes:5.14,words:1543},t:"Apache Commons Configuration 项目入门",y:"a"}}],["/posts/baeldung/Archive/Intro%20to%20the%20Apache%20Commons%20Compress%20Project.html",{loader:()=>n(()=>import("./Intro to the Apache Commons Compress Project.html-zUz3PgOu.js"),__vite__mapDeps([364,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Apache Commons Compress","Java"],g:["Java","Compression","Archiving"],e:`
<p>在本教程中，我们将学习如何使用 Apache Commons Compress 来压缩、归档和提取文件。我们还将了解其支持的格式以及一些限制。</p>
<h2>2. Apache Commons Compress 是什么</h2>
<p><strong>Apache Commons Compress 是一个库，它为最广泛使用的压缩和归档格式创建了一个标准接口。</strong> 它从无处不在的 TAR、ZIP 和 GZIP 到不太知名但同样常用的格式，如 BZIP2、XZ、LZMA 和 Snappy。</p>
<h3>2.1. 压缩器和归档器之间的区别</h3>
<p><strong>归档器（例如 TAR）将目录结构捆绑到一个单一文件中，而压缩器接收一个字节流并使其变小，节省空间。</strong> 有些格式（如 ZIP）可以充当归档器和压缩器，但库中将其视为归档器。</p>`,r:{minutes:7.53,words:2258},t:"Apache Commons Compress 项目简介",y:"a"}}],["/posts/baeldung/Archive/Introduction%20to%20Brave.html",{loader:()=>n(()=>import("./Introduction to Brave.html-DlfIKNTA.js"),__vite__mapDeps([365,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","Spring"],g:["Brave","Zipkin","分布式追踪"],e:`
<p>在现代软件开发中，微服务架构非常流行，因此，跨多个服务跟踪和分析请求流的能力至关重要。正因如此，分布式追踪作为一种关键工具出现，为我们的系统性能和行为提供了洞察。</p>
<p>在本教程中，我们将介绍Brave，这是Java生态系统中一个流行的分布式追踪工具库。</p>
<h2>2. 分布式追踪的理解</h2>
<p>分布式追踪是一种用于监控和排查由相互连接的服务组成的复杂分布式系统的方法。在这些系统中，请求可能会经过多个服务，每个服务都负责执行特定的任务。因此，没有使用一些专用工具，跟踪请求的旅程可能会变得具有挑战性。</p>
<p>在探索分布式追踪之前，我们必须定义两个关键概念：追踪和跨度。一个追踪代表一个外部请求，由一组跨度组成。一个跨度代表一个操作；其关键属性是操作名称、开始时间和结束时间。一个跨度可以有一个或多个子跨度，代表嵌套操作。</p>`,r:{minutes:6.6,words:1980},t:"Brave简介",y:"a"}}],["/posts/baeldung/Archive/Introduction%20to%20DuckDB.html",{loader:()=>n(()=>import("./Introduction to DuckDB.html-DmVKnW98.js"),__vite__mapDeps([366,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Database","Java"],g:["DuckDB","SQL","CSV","JSON"],e:`
<ol>
<li>概览</li>
</ol>
<p>在本教程中，我们将学习一个名为DuckDB的分析型关系数据库。我们将探索它的优势，并了解它如何成为分析任务的高效解决方案。然后，我们将介绍安装过程和一些基本操作。</p>
<ol start="2">
<li>DuckDB是什么？</li>
</ol>
<p><strong>DuckDB是一个主要设计用于数据分析的内存分析关系数据库。</strong> 由于其列存储特性，即将每个列的数据分别存储，因此被认为是分析数据库。相比之下，传统关系数据库使用基于行的存储，按行存储数据。</p>
<p>DuckDB的优势包括：</p>
<ul>
<li>快速查询——DuckDB利用列向量化查询执行引擎，优化了批量数据查询。</li>
<li>SQL兼容性——DuckDB支持标准SQL查询，例如聚合和窗口函数，非常适合熟悉SQL的数据分析人员。</li>
<li>快速部署——DuckDB外部依赖性很小，并且可以在应用程序进程内运行，无需单独的数据库实例，使得部署和集成变得简单。</li>
<li>免费——DuckDB是一个开源项目，对所有人免费开放。其全部源代码在GitHub上可供探索和贡献。</li>
</ul>`,r:{minutes:6.01,words:1803},t:"DuckDB数据库简介",y:"a"}}],["/posts/baeldung/Archive/Introduction%20to%20JFreeChart.html",{loader:()=>n(()=>import("./Introduction to JFreeChart.html-DM1qF94d.js"),__vite__mapDeps([367,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["编程","Java"],g:["JFreeChart","图表库"],e:`
<h2>1. 概览</h2>
<p>在本教程中，我们将了解如何使用JFreeChart，这是一个全面的Java库，用于创建各种图表。我们可以使用它将图形数据表示集成到Swing应用程序中。它还包括一个JavaFX的独立扩展。</p>
<p>我们将从基础开始，涵盖设置和图表创建，并尝试几种不同类型的图表。</p>
<h2>2. 创建我们的第一个图表</h2>
<p>JFreeChart允许我们创建折线图、条形图、饼图、散点图、时间序列图、直方图等。它还可以将不同的图表组合到一个视图中。</p>
<h3>2.1. 设置依赖项</h3>
<p>要开始使用，我们需要在我们的pom.xml文件中添加jfreechart构件：</p>`,r:{minutes:4.09,words:1226},t:"JFreeChart入门指南",y:"a"}}],["/posts/baeldung/Archive/Introduction%20to%20Java%2022.html",{loader:()=>n(()=>import("./Introduction to Java 22.html-BmvP92UM.js"),__vite__mapDeps([368,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","Programming"],g:["Java 22","JEP"],e:`
<p>在本教程中，我们将深入探讨最新的 Java 版本，Java 22，它现在已经普遍可用。</p>
<h2>2. Java 语言更新</h2>
<p>让我们来谈谈作为这个版本一部分的 Java 语言的所有新变化。</p>
<h3>2.1. 未命名变量和模式 - JEP 456</h3>
<p>我们经常在代码中定义临时变量或模式变量，这些变量在代码中保持未使用。这往往是由于语言限制，移除它们是被禁止的或会引入副作用。异常、switch 模式和 Lambda 表达式是我们在某个作用域内定义变量或模式，但我们从未真正使用它们的例子：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> number <span class="token operator">=</span> someNumber <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ArithmeticException</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"除以零"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">switch</span> <span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token class-name">Integer</span> i <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"是整数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token class-name">Float</span> f <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"是浮点数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token class-name">String</span> s <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"是字符串"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"默认"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> pwd<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token string">""</span>
      <span class="token operator">+</span> <span class="token string">"数据库连接成功"</span>
      <span class="token operator">+</span> <span class="token string">"URL = {url}"</span>
      <span class="token operator">+</span> <span class="token string">"usr = {user}"</span>
      <span class="token operator">+</span> <span class="token string">"pwd = {pwd}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:9.11,words:2732},t:"Java 22 简介",y:"a"}}],["/posts/baeldung/Archive/Introduction%20to%20JavaParser.html",{loader:()=>n(()=>import("./Introduction to JavaParser.html-CLYR83do.js"),__vite__mapDeps([369,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","Libraries"],g:["JavaParser","AST"],e:`
<p>在本文中，我们将了解 JavaParser 库。我们将看到它是什么，我们可以用它做什么，以及如何使用它。</p>
<h2><strong>2. JavaParser 是什么？</strong></h2>
<p>JavaParser 是一个用于处理 Java 源代码的开源库。<strong>它允许我们将 Java 源代码解析为抽象语法树（AST）。一旦我们完成这一步，我们可以分析解析后的代码，对其进行操作，甚至编写新的代码。</strong></p>
<p>使用 JavaParser，我们可以解析 Java 语言直到 Java 18 的源代码。这包括所有稳定的语言特性，但可能不包括任何预览特性。</p>`,r:{minutes:9.99,words:2997},t:"JavaParser 简介 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Introduction%20to%20SSHJ.html",{loader:()=>n(()=>import("./Introduction to SSHJ.html-BZ91NQBa.js"),__vite__mapDeps([370,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["SSHJ","Java"],g:["SSH","Java库"],e:'\n<h2>1. 概览</h2>\n<p><strong>SSHJ是一个使用SSH协议与远程服务器安全通信的开源Java库。</strong></p>\n<p>在本文中，我们将介绍SSHJ库的基本功能。</p>\n<h2>2. 依赖项</h2>\n<p>要使用SSHJ库，我们需要向项目中添加以下依赖项：</p>\n<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>`&lt;dependency&gt;`\n    `&lt;groupId&gt;`com.hierynomus`&lt;/groupId&gt;`\n    `&lt;artifactId&gt;`sshj`&lt;/artifactId&gt;`\n    `&lt;version&gt;`0.38.0`&lt;/version&gt;`\n`&lt;/dependency&gt;`\n</code></pre></div>',r:{minutes:5.54,words:1661},t:"SSHJ简介 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Introduction%20to%20Simple%20Java%20Mail.html",{loader:()=>n(()=>import("./Introduction to Simple Java Mail.html-Bstltqyt.js"),__vite__mapDeps([371,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","Email"],g:["Simple Java Mail","JavaMail API"],e:'\n<p>Simple Java Mail 是一个流行的开源库，它简化了 Java 应用程序中的邮件发送过程。与标准的 JavaMail API 相比，它提供了更用户友好的 API，让我们可以专注于电子邮件的内容和收件人，而不是底层细节。</p>\n<p>在本教程中，我们将探索设置 Simple Java Mail 的过程，并学习如何发送电子邮件，包括附件和 HTML 内容，处理异常等。</p>\n<h2>2. 设置项目</h2>\n<p>我们首先通过将 Simple Java Mail 依赖项添加到我们的项目配置文件 <em>pom.xml</em> 中开始：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>`org.simplejavamail`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>`simple-java-mail`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>`\n    `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>`8.7.0`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>`\n`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>`\n</code></pre></div>',r:{minutes:8.74,words:2621},t:"Simple Java Mail 简介",y:"a"}}],["/posts/baeldung/Archive/Java%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%AF%94%E8%BE%83.html",{loader:()=>n(()=>import("./Java中不同数值类型的比较.html-Dobi9V8y.js"),__vite__mapDeps([372,1])),meta:{d:17157312e5,l:"2024年5月15日",c:["Java编程","数据类型比较"],g:["Java","BigDecimal","数据比较"],e:`
<h2>1. 概述</h2>
<p>有时，我们需要比较数字，忽略它们的类或类型。<strong>这在格式不统一，数字可能在不同上下文中使用时特别有用。</strong></p>
<p>在本教程中，我们将学习如何比较原始类型和不同类别的数字，例如_Integers_、<em>Longs_和_Floats</em>。我们还将检查如何将浮点数与整数进行比较。</p>
<h2>2. 比较不同类别</h2>
<p>让我们检查Java如何比较不同的原始类型、包装类和数字类型。<strong>为了澄清，在本文的上下文中，我们将把“类型”称为浮点数和整数，而不是类或原始类型。</strong></p>
<h3>2.1. 比较整数原始类型</h3>`,r:{minutes:5.92,words:1777},t:"Java中不同数值类型的比较",y:"a"}}],["/posts/baeldung/Archive/Java%E4%B8%AD%E5%B0%86int%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%97%A0%E7%AC%A6%E5%8F%B7%E5%AD%97%E8%8A%82.html",{loader:()=>n(()=>import("./Java中将int转换为无符号字节.html-BdpB2RdO.js"),__vite__mapDeps([373,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","编程"],g:["Java","转换","无符号字节"],e:`
<h2>1. 引言</h2>
<p>在Java中，_byte_类型是一个有符号的8位整数。这意味着它可以存储-128到127之间的值。然而，在某些情况下，我们可能需要将_bytes_作为无符号数来处理，表示0到255的值。这在处理二进制数据、网络和文件I/O时尤为重要，因为无符号字节很常见。</p>
<p><strong>在本教程中，我们将探讨将_int_转换为无符号_byte_的两种方法。</strong></p>
<h2>2. 使用类型转换和位掩码</h2>
<p>最常见的方法是使用类型转换结合位掩码。让我们探索实现方式：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">int</span> value <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenInt_whenUsingTypeCastingAndBitMasking_thenConvertToUnsignedByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">byte</span> unsignedByte <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">assertEquals</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token class-name">Byte</span><span class="token punctuation">.</span><span class="token function">toUnsignedInt</span><span class="token punctuation">(</span>unsignedByte<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.21,words:664},t:"Java中将int转换为无符号字节",y:"a"}}],["/posts/baeldung/Archive/Java%E4%B8%AD%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BAOffsetDateTime.html",{loader:()=>n(()=>import("./Java中将字符串转换为OffsetDateTime.html-DIOnhter.js"),__vite__mapDeps([374,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","Date and Time"],g:["OffsetDateTime","String Conversion"],e:`<hr>
<h1>Java中将字符串转换为OffsetDateTime</h1>
<p>在软件开发中，处理日期和时间值是一项常见任务，尤其是在构建涉及调度、日志记录或任何时间敏感操作的应用程序时。在相同的背景下，Java中的_OffsetDateTime_类提供了一种强大的解决方案，用于表示带有UTC/GMT偏移量的日期和时间信息。</p>
<p><strong>在本教程中，我们将探讨如何高效地将表示日期和时间信息的字符串转换为Java中的_OffsetDateTime_对象。</strong></p>
<h3>2. 使用_OffsetDateTime.parse()_方法</h3>
<p>将字符串转换为_OffsetDateTime_对象的最简单方法之一是使用_OffsetDateTime.parse(CharSequence text)_方法。此方法根据ISO-8601格式解析输入字符串，并返回表示解析日期和时间的_OffsetDateTime_对象：</p>`,r:{minutes:2.5,words:749},t:"Java中将字符串转换为OffsetDateTime",y:"a"}}],["/posts/baeldung/Archive/Join%20Two%20Tables%20Using%20jOOQ.html",{loader:()=>n(()=>import("./Join Two Tables Using jOOQ.html-Dzs3AKcq.js"),__vite__mapDeps([375,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","jOOQ"],g:["jOOQ","SQL","Java"],e:'\n<p>jOOQ（Java Object Oriented Querying）是一个强大的库，它通过使我们能够以面向对象的方式编写SQL查询，从而简化了Java中的数据库交互。在关系数据库中，连接表是一个基本操作，它允许我们根据特定条件从多个表中组合数据。在本教程中，我们将探索jOOQ中可用的各种连接类型。</p>\n<h2>2. 设置jOOQ</h2>\n<p>使用jOOQ连接两个表涉及使用jOOQ提供的DSL（领域特定语言）来构建SQL查询。</p>\n<p>要使用jOOQ，我们需要将jOOQ和PostgreSQL依赖项添加到我们的Maven项目的_pom.xml_文件中：</p>\n<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>``&lt;dependency&gt;``\n    ``&lt;groupId&gt;``org.jooq``&lt;/groupId&gt;``\n    ``&lt;artifactId&gt;``jooq``&lt;/artifactId&gt;``\n``&lt;/dependency&gt;``\n``&lt;dependency&gt;``\n    ``&lt;groupId&gt;``org.postgresql``&lt;/groupId&gt;``\n    ``&lt;artifactId&gt;``postgresql``&lt;/artifactId&gt;``\n``&lt;/dependency&gt;``\n</code></pre></div>',r:{minutes:6.08,words:1824},t:"使用jOOQ连接两个表",y:"a"}}],["/posts/baeldung/Archive/Logging%20SQL%20Queries%20to%20the%20Console%20in%20Mybatis.html",{loader:()=>n(()=>import("./Logging SQL Queries to the Console in Mybatis.html-vfyVUae8.js"),__vite__mapDeps([376,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","MyBatis"],g:["Logging","SQL"],e:`
<p>MyBatis是一个流行的基于Java的持久层框架，它通过将SQL查询映射到Java方法来简化数据库操作。</p>
<p>在使用MyBatis开发应用程序时，查看正在使用的SQL查询通常对调试非常有用。</p>
<p>在本教程中，我们将探讨如何在MyBatis中将SQL查询记录到控制台。</p>
<h2>2. 支持的日志实现</h2>
<p>在深入研究MyBatis中的SQL记录之前，了解支持的日志实现是很重要的。</p>
<p><strong>MyBatis是一个灵活的框架，可以与各种日志框架集成</strong>，包括SLF4J、Apache Commons Logging、Log4j 2和JDK Logging。本文将探讨两种不同的日志选项：标准输出日志和SLF4J。</p>`,r:{minutes:5.36,words:1607},t:"在MyBatis中将SQL查询记录到控制台",y:"a"}}],["/posts/baeldung/Archive/Map%20LocalDateTime%20to%20Instant%20in%20MapStruct.html",{loader:()=>n(()=>import("./Map LocalDateTime to Instant in MapStruct.html-IpnvfO_f.js"),__vite__mapDeps([377,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java"],g:["MapStruct","LocalDateTime","Instant"],e:`
<h2>1. 概述</h2>
<p>在Java中处理日期和时间时，我们经常会遇到不同的格式，例如_LocalDateTime_和_Instant_。_LocalDateTime_表示没有时区的日期时间，而_Instant_表示通常参考自纪元（1970年1月1日，00:00:00 UTC）的特定时间点。在许多场景中，我们需要在这两种类型之间进行映射。幸运的是，MapStruct，一个强大的Java映射框架，允许我们轻松地做到这一点。</p>
<p>在本教程中，我们将学习如何在MapStruct中将_LocalDateTime_映射到_Instant_。</p>
<h2>2. 理解_LocalDateTime_和_Instant_</h2>`,r:{minutes:5.87,words:1762},t:"使用MapStruct映射LocalDateTime到Instant | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Mapping%20Enum%20to%20String%20Using%20MapStruct.html",{loader:()=>n(()=>import("./Mapping Enum to String Using MapStruct.html-BKYK24xs.js"),__vite__mapDeps([378,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Java","MapStruct"],g:["数据映射","枚举"],e:`
<p>MapStruct是一个高效、类型安全的库，它简化了Java对象之间的数据映射，消除了手动转换逻辑的需要。</p>
<p>在本教程中，我们将探索如何使用MapStruct将枚举映射为字符串。</p>
<p>使用Java枚举作为字符串而不是序数可以简化与外部API的数据交换，使数据检索更简单，并提高UI中的可读性。</p>
<p>假设我们想要将_DayOfWeek_枚举转换为字符串。</p>
<p>_DayOfWeek_是Java Date-Time API中的一个枚举，表示一周的七天，从星期一到星期日。</p>
<p>让我们实现MapStruct映射器：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DayOfWeekMapper</span> <span class="token punctuation">{</span>
    <span class="token class-name">DayOfWeekMapper</span> <span class="token constant">INSTANCE</span> <span class="token operator">=</span> <span class="token class-name">Mappers</span><span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DayOfWeekMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token class-name">DayOfWeek</span> dayOfWeek<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 根据需要添加其他映射方法</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4,words:1199},t:"使用MapStruct将枚举映射为字符串",y:"a"}}],["/posts/baeldung/Archive/Merge%20Multiple%20PDF%20Files%20Into%20a%20Single%20PDF%20Using%20Java.html",{loader:()=>n(()=>import("./Merge Multiple PDF Files Into a Single PDF Using Java.html-CZpv9ZLs.js"),__vite__mapDeps([379,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java","PDF"],g:["Apache PDFBox","iText"],e:`
<p>在现代商业和文档管理流程中，将多个PDF文件合并成一个单独的PDF文档是一个常见的需求。常见的用例包括演示文稿、整合报告或将多个包编译成一个单一的包。</p>
<p>在Java中，存在多个库，它们提供了现成的功能来处理PDF并将它们合并成一个单独的PDF。Apache PDFBox和iText是其中最受欢迎的。</p>
<p>在本教程中，我们将使用Apache PDFBox和iText实现PDF合并功能。</p>
<h2>2. 设置</h2>
<p>在深入实现之前，让我们先了解必要的设置步骤。我们将为项目添加所需的依赖项，此外，我们将为我们的测试创建辅助方法。</p>
<h3>2.1. 依赖项</h3>`,r:{minutes:4.39,words:1318},t:"使用Java合并多个PDF文件",y:"a"}}],["/posts/baeldung/Archive/Mocking%20Protected%20Method%20in%20Java.html",{loader:()=>n(()=>import("./Mocking Protected Method in Java.html-DGJwRIgA.js"),__vite__mapDeps([380,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","Mockito"],g:["测试","Mockito","反射"],e:`
<h2>1. 概述</h2>
<p>在Java中模拟受保护的方法与模拟公共方法类似，但有一个问题：测试类中该方法的可见性。我们可以从同一包中的类和继承自A类的类中看到类A的受保护方法。因此，如果我们尝试从不同包中测试类A，我们将面临问题。</p>
<p>在本教程中，我们将探讨在测试中模拟受保护方法的情况。我们将演示两种情况：可以访问该方法和不能访问。我们将使用Mockito间谍而不是模拟，因为我们只想存根测试类中的某些行为。</p>
<p>当我们可以访问Mockito中的受保护方法时，模拟是直接的。我们可以通过两种方式获得访问权限。首先，将受保护的范围更改为公共，或者第二，将测试类移动到与具有受保护方法的类相同的包中。</p>`,r:{minutes:4.89,words:1466},t:"在Java中模拟受保护的方法",y:"a"}}],["/posts/baeldung/Archive/Monads%20in%20Java.html",{loader:()=>n(()=>import("./Monads in Java.html-Czncn0Zt.js"),__vite__mapDeps([381,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java"],g:["Monads","Functional Programming"],e:`
<h2>1. 概述</h2>
<p>在本教程中，我们将学习关于单子（monads），以及它们如何帮助我们处理副作用。我们将学习到关键的方法，这些方法使我们能够连接单子和操作：_map()<em>和_flatMap()</em>。在整篇文章中，我们将探索Java生态系统中一些流行的单子的API，重点关注它们的实际应用。</p>
<h2>2. 副作用</h2>
<p>在函数式编程中，“副作用”通常指的是那些超出函数或组件作用域的操作所引起的变化。</p>
<p>为了在处理这些副作用的同时应用函数式编程范式，我们可以将我们的操作或数据包装在一个容器中。<strong>我们可以将单子想象为容器，允许我们在函数作用域之外处理副作用，保持函数的纯度。</strong></p>`,r:{minutes:6.67,words:2002},t:"Java中的单子模式 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Monitor%20a%20Spring%20Boot%20App%20Using%20Prometheus.html",{loader:()=>n(()=>import("./Monitor a Spring Boot App Using Prometheus.html-CnzTegE1.js"),__vite__mapDeps([382,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Spring Boot","Prometheus"],g:["监控","微服务"],e:`
<h2>1. 概述</h2>
<p>在软件开发的严格要求世界中，确保应用程序在生产环境中部署后能够最佳且可靠地执行不仅是可取的——这是必需的。使用Spring Boot，开发者可以轻松设置独立、高质量的应用程序。然而，要真正提高性能、可用性和可靠性，集成像Prometheus这样复杂的监控工具是关键。</p>
<p>本教程旨在提供<strong>一个详细的教程，介绍如何将Prometheus与Spring Boot应用程序连接</strong>，通过基本和复杂的配置丰富我们的监控策略。</p>
<h2>2. Prometheus是什么？</h2>
<p>Prometheus是一个<strong>开源项目，旨在深入挖掘我们的应用程序数据，创建过滤层来收集和分析从最简单的到最复杂的一切</strong>。这不仅仅是关于数字和图表：它是通过其高级查询语言和时间序列数据能力来理解我们应用程序的心跳。</p>`,r:{minutes:8.93,words:2678},t:"使用Prometheus监控Spring Boot应用 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/OpenAI%20API%20Client%20in%20Java.html",{loader:()=>n(()=>import("./OpenAI API Client in Java.html-BMexPOkl.js"),__vite__mapDeps([383,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Java","OpenAI API"],g:["Java","AI","ChatGPT","API"],e:`
<h2>1. 概述</h2>
<p>随着生成性AI的广泛使用，特别是ChatGPT，许多语言都开始提供与OpenAI API交互的库。Java也不例外。</p>
<p>在本教程中，我们将讨论_openai-java_。这是一个客户端，允许我们更方便地与OpenAI API进行通信。然而，在一篇文章中回顾整个库是不可能的。<strong>因此，我们将使用一个实际的例子，构建一个连接到ChatGPT的简单控制台工具。</strong></p>
<h2>2. 依赖项</h2>
<p>首先，我们必须为我们的项目导入所需的依赖项。我们可以在Maven仓库中找到这些库。<strong>这三个模块专门用于交互的不同方面：</strong></p>`,r:{minutes:9.26,words:2777},t:"Java中的OpenAI API客户端 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Parallel%20Collection%20Processing%20with%20Parallel%20Collectors%20and%20Virtual%20Threads.html",{loader:()=>n(()=>import("./Parallel Collection Processing with Parallel Collectors and Virtual Threads.html-DdRdfeFk.js"),__vite__mapDeps([384,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","Concurrency"],g:["Virtual Threads","Parallel Collectors"],e:'\n<h2>1. 引言</h2>\n<p>在之前的文章中，我们介绍了并行收集器，这是一个小型的零依赖库，它使得自定义线程池中的Stream API能够进行并行处理。</p>\n<p>Project Loom是引入轻量级虚拟线程（之前称为Fibers）到JVM的有组织努力的代号，最终在JDK21中完成。</p>\n<p>让我们看看如何利用这个技术在并行收集器中。</p>\n<h2>2. Maven依赖</h2>\n<p>如果我们想开始使用这个库，我们需要在Maven的_pom.xml_文件中添加一个单一条目：</p>\n<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>`&lt;dependency&gt;`\n    `&lt;groupId&gt;`com.pivovarit`&lt;/groupId&gt;`\n    `&lt;artifactId&gt;`parallel-collectors`&lt;/artifactId&gt;`\n    `&lt;version&gt;`3.0.0`&lt;/version&gt;`\n`&lt;/dependency&gt;`\n</code></pre></div>',r:{minutes:4.6,words:1380},t:"Java虚拟线程和并行收集器的并行集合处理",y:"a"}}],["/posts/baeldung/Archive/Pass%20a%20Class%20as%20a%20Parameter%20in%20Java.html",{loader:()=>n(()=>import("./Pass a Class as a Parameter in Java.html-Bvnldpp4.js"),__vite__mapDeps([385,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","Programming"],g:["Java","Reflection","Generics"],e:`<hr>
<h1>Java中将类作为参数传递</h1>
<h2>1. 引言</h2>
<p>在Java编程中，我们可能会遇到需要将类作为参数传递的情况，这可以在我们的代码中实现动态行为和灵活性。</p>
<p><strong>在本教程中，我们将深入探讨在Java中实现这一点的不同方法。</strong></p>
<h2>2. 问题定义</h2>
<p>在Java中，类作为对象的蓝图，定义了它们的属性和行为。此外，将类作为参数传递意味着提供对类本身的引用，而不是类的实例。</p>
<p><strong>这允许方法动态地操作或实例化不同类的实例。</strong></p>
<h2>3. 传递类参数</h2>`,r:{minutes:2.64,words:792},t:"Java中将类作为参数传递",y:"a"}}],["/posts/baeldung/Archive/Perform%20Action%20Only%20if%20All%20Optionals%20Are%20Available.html",{loader:()=>n(()=>import("./Perform Action Only if All Optionals Are Available.html-BuHnNV91.js"),__vite__mapDeps([386,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Java","Programming"],g:["Java 8","Optional","Functional Programming"],e:`
<p>介绍</p>
<p>空引用和空值多年来一直困扰着程序员。空引用的发明者Tony Hoare曾称他的发明是一个“价值十亿美元的错误”。特别是Java，一直在与空值和可怕的_NullPointerException_作斗争。</p>
<p>Java 8引入了_Optional_类来解决这一挑战，并确保正确处理空和空结果。在本教程中，我们将探讨仅当所有_Optional_变量都包含值时才执行操作，否则忽略该操作。</p>
<p>假设</p>
<p>本教程演示了使用三个_Optional_变量，但这些概念可以很容易地扩展到处理更多变量。此外，让我们声明这些变量，我们将在本文中使用它们：</p>`,r:{minutes:3.74,words:1121},t:"仅当所有Optional变量都可用时执行操作 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/PersistenceUnit%20vs.%20PersistenceContext.html",{loader:()=>n(()=>import("./PersistenceUnit vs. PersistenceContext.html-t10vQTIp.js"),__vite__mapDeps([387,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java Persistence","JPA"],g:["PersistenceUnit","PersistenceContext"],e:`
<p>持久化上下文和持久化单元是JPA中用于管理应用程序中实体生命周期的两个重要概念。</p>
<p>在本教程中，我们将简要介绍实体管理器和实体管理器工厂。接下来，我们将看到持久化上下文的重要性及其用例。最后，我们将看到持久化单元的作用及其用例。</p>
<h3>实体管理器和实体管理器工厂</h3>
<p>在深入细节之前，有必要基本了解实体管理器和实体管理器工厂接口。正如我们将看到的，它们在管理持久性、实体和数据库交互中扮演着重要角色。</p>
<h4>实体管理器</h4>
<p>实体管理器是一个与持久化上下文交互的接口。它对实体执行CRUD操作，跟踪变更，并确保在事务提交时与数据库同步。实体管理器代表一个持久化上下文，并在事务的作用域内操作。</p>`,r:{minutes:5.67,words:1702},t:"持久化上下文与持久化单元 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Polymorphism%20with%20Gson.html",{loader:()=>n(()=>import("./Polymorphism with Gson.html-DAqLImAZ.js"),__vite__mapDeps([388,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Spring","Java"],g:["Gson","Polymorphism"],e:`
<p>在本教程中，我们将探讨如何使用Gson处理多态性。我们还将探索一些处理多态性序列化和反序列化的技巧。</p>
<h2>2. JSON中的多态性</h2>
<p>Java中的多态性是众所周知的。我们有一个类层次结构，适当的时候，我们可以以某些方式将不同但相关的类型视为相同。</p>
<p>例如，我们可能有一些二维形状的定义。不同形状的定义方式各不相同，但它们都有一些共同的特征——例如，它们都可以计算面积。</p>
<p>因此，我们可以定义一些多态类来定义一些形状：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">interface</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span>
    <span class="token keyword">double</span> <span class="token function">getArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Circle</span> <span class="token keyword">implements</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> radius<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> area<span class="token punctuation">;</span>

    <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token keyword">double</span> radius<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>radius <span class="token operator">=</span> radius<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>area <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> radius <span class="token operator">*</span> radius<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> area<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Square</span> <span class="token keyword">implements</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> side<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> area<span class="token punctuation">;</span>

    <span class="token class-name">Square</span><span class="token punctuation">(</span><span class="token keyword">double</span> side<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>side <span class="token operator">=</span> side<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>area <span class="token operator">=</span> side <span class="token operator">*</span> side<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> area<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:6.21,words:1864},t:"Gson中的多态性",y:"a"}}],["/posts/baeldung/Archive/Print%20Distinct%20Characters%20of%20a%20String%20in%20Java.html",{loader:()=>n(()=>import("./Print Distinct Characters of a String in Java.html-C4G509rG.js"),__vite__mapDeps([389,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","编程"],g:["Java编程","字符串处理"],e:`
<h2>1. 引言</h2>
<p>在Java编程中，从字符串中打印不同的字符是一个基本任务，通常在文本处理和分析中需要。</p>
<p><strong>在本教程中，我们将探索处理和加工唯一字符的各种方法。</strong></p>
<h2>2. 使用_Set_集合</h2>
<p>从字符串中打印不同字符的一种有效方法是通过使用Java中的_Set_集合。_Set_自动处理重复项，允许我们高效地收集唯一字符。以下是实现此方法的方式：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> inputString <span class="token operator">=</span> <span class="token string">"BBaaeelldduunngg"</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenString_whenUsingSet_thenFindDistinctCharacters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Set</span>\`\`\`\`\`\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span>\`\`\`\`\`\` distinctChars <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> ch <span class="token operator">:</span> inputString<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        distinctChars<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token class-name">Set</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token char">'B'</span><span class="token punctuation">,</span> <span class="token char">'a'</span><span class="token punctuation">,</span> <span class="token char">'e'</span><span class="token punctuation">,</span> <span class="token char">'l'</span><span class="token punctuation">,</span> <span class="token char">'d'</span><span class="token punctuation">,</span> <span class="token char">'u'</span><span class="token punctuation">,</span> <span class="token char">'n'</span><span class="token punctuation">,</span> <span class="token char">'g'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> distinctChars<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:5.03,words:1509},t:"Java中打印字符串的不同字符 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Print%20the%20Default%20Value%20When%20Overriding%20toString%20%20%20Method.html",{loader:()=>n(()=>import("./Print the Default Value When Overriding toString   Method.html-BI9BEtXt.js"),__vite__mapDeps([390,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","编程"],g:["toString方法","空值处理","Java 8"],e:`
<p>我们可以在Java中使用<code>toString()</code>方法来返回对象的字符串表示。通常，我们会覆盖这个方法以提供一个有意义的对象状态描述。但是，某些字段可能是<code>null</code>，打印它们可能会导致<code>NullPointerExceptions</code>。</p>
<p><strong>在本教程中，我们将探索几种使用默认值来处理这种情况的方法。</strong></p>
<h2>2. 员工用例场景</h2>
<p>让我们考虑开发一个管理员工记录的应用程序。每个员工都有诸如<code>name</code>、<code>age</code>和<code>department</code>等属性：</p>`,r:{minutes:2.75,words:826},t:"Java中重写toString()方法时打印默认值",y:"a"}}],["/posts/baeldung/Archive/PrintWriter%20write%20%20%20vs%20print%20%20%20Method%20in%20Java.html",{loader:()=>n(()=>import("./PrintWriter write   vs print   Method in Java.html-DiXct-Zm.js"),__vite__mapDeps([391,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","IO"],g:["PrintWriter","write()","print()"],e:`
<p>本文将讨论Java IO包中的_PrintWriter_类。具体来说，我们将讨论它的两个方法，_write()<em>和_print()</em>，以及它们之间的区别。</p>
<p>_PrintWriter_类将对象的格式化表示打印到文本输出流。此类中的方法永远不会抛出I/O异常。然而，它的一些构造函数可能会抛出异常。要使用这些方法，我们必须调用_PrintWriter_构造函数，并提供文件、文件名或输出流作为参数。</p>
<p><strong><em>write()<em>方法有五个重载版本，两个用于_char</em>，两个用于_String</em>，一个用于_int_。</strong> 这个方法只是我们可以将内容写入控制台或文件的方式之一。</p>`,r:{minutes:4.1,words:1231},t:"Java 中的 PrintWriter write() 与 print() 方法比较 | Baeldung## 1. 引言",y:"a"}}],["/posts/baeldung/Archive/Reading%20CSV%20Headers%20Into%20a%20List.html",{loader:()=>n(()=>import("./Reading CSV Headers Into a List.html-Byb-T8Oe.js"),__vite__mapDeps([392,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Java","CSV"],g:["Java","CSV","OpenCSV","Apache Commons CSV"],e:`
<p>在这篇简短的教程中，我们将探讨在Java中将CSV头部读取到列表的不同方法。</p>
<p>首先，我们将学习如何使用JDK类来完成这项任务。然后，我们将看到如何使用如OpenCSV和Apache Commons CSV等外部库来实现相同的目标。</p>
<h2>2. 使用BufferedReader</h2>
<p>BufferedReader类为我们的挑战提供了最简单的解决方案。它提供了一种快速高效的方式来读取CSV文件，因为它通过分块读取内容来减少IO操作的次数。</p>
<p>让我们看看它的实际应用：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">CsvHeadersAsListUnitTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CSV_FILE</span> <span class="token operator">=</span> <span class="token string">"src/test/resources/employees.csv"</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">COMMA_DELIMITER</span> <span class="token operator">=</span> <span class="token string">","</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">List</span>\\<span class="token operator">&lt;</span><span class="token class-name">String</span>\\<span class="token operator">&gt;</span> <span class="token constant">EXPECTED_HEADERS</span> <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">"ID"</span><span class="token punctuation">,</span> <span class="token string">"First name"</span><span class="token punctuation">,</span> <span class="token string">"Last name"</span><span class="token punctuation">,</span> <span class="token string">"Salary"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">givenCsvFile_whenUsingBufferedReader_thenGetHeadersAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token constant">CSV_FILE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> csvHeadersLine <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span>\\<span class="token operator">&lt;</span><span class="token class-name">String</span>\\<span class="token operator">&gt;</span> headers <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>csvHeadersLine<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token constant">COMMA_DELIMITER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">assertThat</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsExactlyElementsOf</span><span class="token punctuation">(</span><span class="token constant">EXPECTED_HEADERS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.97,words:891},t:"在Java中读取CSV头部到列表的不同方式",y:"a"}}],["/posts/baeldung/Archive/Remove%20All%20Characters%20Before%20a%20Specific%20Character%20in%20Java.html",{loader:()=>n(()=>import("./Remove All Characters Before a Specific Character in Java.html-_LrBNYNS.js"),__vite__mapDeps([393,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Java","字符串操作"],g:["字符串","子字符串","正则表达式","StringBuilder"],e:`
<h2>1. 引言</h2>
<p>在Java中处理字符串时，我们可能会遇到需要移除特定分隔符或字符之前的所有字符的场景。幸运的是，我们可以使用Java中的多种技术来完成这项任务，比如传统的循环、字符串操作方法或正则表达式。</p>
<p><strong>在本教程中，我们将探索几种在字符串中移除指定字符之前所有字符的方法。</strong></p>
<h2>2. 使用索引和子字符串</h2>
<p>一种直接移除特定字符之前所有字符的方法是找到所需字符的索引，然后使用_substring()_方法提取从该索引开始的子字符串。</p>
<p>这里有一个简单的例子：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> inputString <span class="token operator">=</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> targetCharacter <span class="token operator">=</span> <span class="token char">'W'</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenString_whenUsingSubstring_thenCharactersRemoved</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> inputString<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>targetCharacter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> result <span class="token operator">=</span> inputString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">"World!"</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">assertEquals</span><span class="token punctuation">(</span>inputString<span class="token punctuation">,</span> inputString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.65,words:794},t:"在Java中移除特定字符之前的所有字符",y:"a"}}],["/posts/baeldung/Archive/Replacing%20Strings%20in%20Java%20Using%20Regex_%20Back%20Reference%20vs.%20Lookaround.html",{loader:()=>n(()=>import("./Replacing Strings in Java Using Regex_ Back Reference vs. Lookaround.html-BJnLgEAo.js"),__vite__mapDeps([394,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Java","Regex"],g:["Java","Regex","Back Reference","Lookaround"],e:`
<p>在本教程中，我们将学习如何使用String类中提供的replaceAll()方法使用正则表达式替换文本。此外，我们将学习两种方法，后向引用和环视，来执行相同的操作，然后比较它们的性能。</p>
<p>让我们首先描述第一种方法。</p>
<h3>2. 使用replaceAll()中的后向引用</h3>
<p>要理解后向引用，我们首先需要了解匹配组。简单来说，一个组不过是将多个字符视为一个单元。因此，后向引用是正则表达式中的一个特性，它允许我们在同一个正则表达式中引用先前匹配的组。通常，我们使用数字来表示模式中的捕获组，如\\1、\\2等。</p>
<p>例如，正则表达式(a)(b)\\1使用\\1来引用第一个捕获的组，在我们的例子中是(a)。</p>`,r:{minutes:4.26,words:1278},t:"Java中使用正则表达式替换字符串：后向引用与环视的比较",y:"a"}}],["/posts/baeldung/Archive/Resolving%20Security%20Exception%20%20java.security.UnrecoverableKeyException%20%20Cannot%20Recover%20Key.html",{loader:()=>n(()=>import("./Resolving Security Exception  java.security.UnrecoverableKeyException  Cannot Recover Key.html-DYp-cqIM.js"),__vite__mapDeps([395,1])),meta:{d:1696896e6,l:"2023年10月10日",c:["Java","安全"],g:["Java安全","UnrecoverableKeyException"],e:`
<h2>1. 引言</h2>
<p>在本教程中，我们将探讨如何处理_java.security.UnrecoverableKeyException_。我们还将探索这个异常实际上意味着什么以及导致它的原因。最后，我们将审查解决这个问题的可能方案。</p>
<h2>2. 理论背景</h2>
<p>在Java中，我们有一个密钥库的概念。它本质上是一个包含一些秘密的文件。特别是，它可以包含证书链以及相应的私钥。由于证书只是一个花哨的公钥包装器，我们可以基本上说密钥库包含一个非对称密钥对。</p>
<p>通常，用密码（也通常称为“口令”）保护我们的私钥是一个好习惯。这不仅是Java密钥库中的好习惯，也是网络安全的一般做法。通常通过使用对称密钥加密算法（如各种AES实例）使用密码加密私钥来实现这种保护。</p>`,r:{minutes:5.96,words:1787},t:"解决安全异常：java.security.UnrecoverableKeyException：无法恢复密钥 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Return%20Non-null%20Elements%20From%20Java%20Map%20Operation.html",{loader:()=>n(()=>import("./Return Non-null Elements From Java Map Operation.html-D93k-tP6.js"),__vite__mapDeps([396,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Java","Programming"],g:["Java Stream API","map","filter","Optional"],e:`
<p>Java Stream API引入了许多特性，显著增强了我们代码的功能和可读性。其中，map()方法作为一个强大的工具，用于转换集合中的元素，尤为突出。一个常见的需求是确保这些换结果不包含空(null)元素。</p>
<p>在本教程中，我们将探讨如何有效地从Stream的map()方法中收集非空元素。</p>
<h2>2. 问题介绍</h2>
<p>map()方法提供了一个高层次的抽象，用于处理元素序列。它是一个中间操作，将映射函数应用于Stream的每个元素，生成一个新的转换后的元素Stream。</p>
<p>有时，映射函数可能会返回空值。然而，我们希望从转换结果中排除这些空值。例如，假设我们有一个字符串列表：</p>`,r:{minutes:4.13,words:1239},t:"Java流中从map操作返回非空元素",y:"a"}}],["/posts/baeldung/Archive/Role%20Based%20Access%20Control%20in%20Quarkus.html",{loader:()=>n(()=>import("./Role Based Access Control in Quarkus.html-_iADhZVY.js"),__vite__mapDeps([397,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","Security"],g:["Quarkus","RBAC","Security"],e:`
<p>在本教程中，我们将讨论基于角色的访问控制（RBAC）以及如何使用Quarkus实现这一功能。</p>
<p>RBAC是一种广为人知的实现复杂安全系统的机制。Quarkus是一个现代的云原生全栈Java框架，它开箱即支持RBAC。</p>
<p>在我们开始之前，重要的是要注意角色可以以多种方式应用。在企业中，角色通常只是权限的聚合，用于识别用户可以执行的特定操作组。在Jakarta中，角色是允许执行资源操作（等同于权限）的标签。实现RBAC系统有多种不同的方式。</p>
<p>在本教程中，我们将使用分配给资源的权限来控制访问，而角色将组织一系列权限。</p>
<h2>2. RBAC</h2>`,r:{minutes:6.06,words:1817},t:"Quarkus中的基于角色的访问控制",y:"a"}}],["/posts/baeldung/Archive/Save%20Child%20Objects%20Automatically%20Using%20JPA.html",{loader:()=>n(()=>import("./Save Child Objects Automatically Using JPA.html-ZpcFrnQZ.js"),__vite__mapDeps([398,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["JPA","Hibernate"],g:["JPA","持久化","级联"],e:`
<h2>1. 概述</h2>
<p>有时我们处理的实体模型包含有父实体和子实体的复杂结构。在这种情况下，如果能够通过保存父实体来自动保存其所有子实体，将会非常有益。</p>
<p>在本教程中，我们将深入探讨实现自动保存时可能被忽视的各个方面。我们将讨论单向和双向关系。</p>
<h2>2. 遗漏的关系注解</h2>
<p><strong>我们可能首先会忽视的是添加关系注解。</strong> 让我们创建一个子实体：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BidirectionalChild</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span><span class="token constant">AUTO</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    <span class="token comment">//getters和setters</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:5.79,words:1736},t:"使用JPA自动保存子对象 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Set%20Matrix%20Elements%20to%20Zero%20in%20Java.html",{loader:()=>n(()=>import("./Set Matrix Elements to Zero in Java.html-0kzpx2g-.js"),__vite__mapDeps([399,1])),meta:{d:17187552e5,l:"2024年6月19日",c:["Java","Algorithms"],g:["Matrix","Zero","Optimization"],e:`
<p>矩阵是计算机科学、数学和工程领域中使用的基本数据结构。在某些场景中，我们可能需要根据特定条件或要求将某些矩阵元素设置为零。在本教程中，我们将讨论在Java中高效完成此任务的各种方法。</p>
<h2>2. 问题理解</h2>
<p>给定一个矩阵，我们的目标是将矩阵中每个零元素所在的整行和整列都设置为零。这个操作有效地“清零”了包含至少一个零元素的行和列。</p>
<p>例如，考虑以下矩阵：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>[1, 2, 3]
[4, 0, 6]
[7, 8, 9]
</code></pre></div>`,r:{minutes:5.91,words:1772},t:"Java中将矩阵元素设置为零",y:"a"}}],["/posts/baeldung/Archive/Solving%20Spring%20Data%20JPA%20ConverterNotFoundException_%20No%20converter%20found.html",{loader:()=>n(()=>import("./Solving Spring Data JPA ConverterNotFoundException_ No converter found.html-BjziUmkn.js"),__vite__mapDeps([400,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Spring Data JPA","ConverterNotFoundException"],g:["Spring Data JPA","JPA","DTO","Converter"],e:`
<h2>1. 概述</h2>
<p>在使用Spring Data JPA时，我们经常利用派生和自定义查询以我们偏好的格式返回结果。一个典型的例子是DTO投影，它提供了一种很好的方式仅选择某些特定列，减少选择不必要数据的开销。</p>
<p>然而，DTO投影并不总是容易实现，如果实现不当可能会导致_ConverterNotFoundException_。因此，在本简短教程中，我们将阐明如何在使用Spring Data JPA时避免_ConverterNotFoundException_异常。</p>
<h2>2. 实践中的异常理解</h2>
<p>在跳转到解决方案之前，让我们通过一个实际例子来理解异常及其堆栈跟踪的含义。</p>`,r:{minutes:3.95,words:1186},t:"解决Spring Data JPA转换器未找到异常：没有找到转换器 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Spring%20WebClient%20exchange%20%20%20vs%20retrieve%20%20.html",{loader:()=>n(()=>import("./Spring WebClient exchange   vs retrieve  .html-DAbWTrKc.js"),__vite__mapDeps([401,1])),meta:{d:17185824e5,l:"2024年6月17日",c:["Spring WebFlux","WebClient"],g:["Spring Boot","Web Client","Reactive Programming"],e:`
<p><em>WebClient</em> 是一个简化执行 HTTP 请求过程的接口。与 <em>RestTemplate</em> 不同，它是一个响应式且非阻塞的客户端，可以消费和操作 HTTP 响应。尽管它设计为非阻塞，但也可以在阻塞场景中使用。</p>
<p>在本教程中，我们将深入探讨 <em>WebClient</em> 接口的关键方法，包括 <em>retrieve()</em>、<em>exchangeToMono()</em> 和 <em>exchangeToFlux()</em>。我们还将探讨这些方法之间的差异和相似之处，并查看示例以展示不同的用例。此外，我们将使用 JSONPlaceholder API 获取用户数据。</p>`,r:{minutes:7.26,words:2178},t:"Spring WebClient的retrieve()与exchange()方法比较",y:"a"}}],["/posts/baeldung/Archive/Static%20Code%20Analysis%20Using%20Infer.html",{loader:()=>n(()=>import("./Static Code Analysis Using Infer.html-B6CshORp.js"),__vite__mapDeps([402,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Software Development"],g:["Static Code Analysis","Infer"],e:`
<p>在软件开发领域，确保代码质量非常重要，尤其是对于复杂和庞大的代码库。像Infer这样的静态代码分析工具为我们提供了在潜在问题成为严重问题之前检测代码库中的技术。</p>
<p>在本教程中，我们将探讨代码分析的基础知识，探索Infer的功能，并提供将其纳入我们开发工作流程的实用见解。</p>
<p>静态分析是一种不执行程序而自动检查源代码的调试方法。这个过程有助于识别潜在的缺陷、安全漏洞和可维护性问题。通常由第三方工具进行，如众所周知的SonarQube，当自动化时，静态代码分析是直接的。</p>
<p>通常，它发生在早期的开发阶段。一旦代码编写完成，就应该运行静态代码分析器来检查代码。它将根据标准或自定义预定义规则检查代码。一旦代码通过静态代码分析器运行，分析器将确定代码是否符合设定规则。</p>`,r:{minutes:6.46,words:1939},t:"使用Infer进行静态代码分析",y:"a"}}],["/posts/baeldung/Archive/Supply%20Enum%20Value%20to%20an%20Annotation%20From%20a%20Constant%20in%20Java.html",{loader:()=>n(()=>import("./Supply Enum Value to an Annotation From a Constant in Java.html-4aszG66q.js"),__vite__mapDeps([403,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Java","Annotations"],g:["Java","Enum","Annotations"],e:`
<p>在本教程中，我们将探索Java中从常量向注解提供枚举值的可能性。为了理解所提出的设计决策的主要驱动因素，我们将从问题陈述开始，然后是一个演示用例。</p>
<h2>1. 引言</h2>
<h2>2. 问题陈述</h2>
<p>让我们设想以下需求。**在控制器类中，两个_POST_和_PUT_端点始终需要具有相同的_Content-Type_。**现在，让我们看看如何共享两个端点定义中的相同枚举值。</p>
<p>为了更好地理解问题陈述，我们将继续探索一个演示用例。</p>
<h2>3. 定义演示用例</h2>
<p>为了满足要求，我们需要以下数据结构。</p>
<p>一个看起来像这样的_RequestContentType_枚举：</p>`,r:{minutes:6.19,words:1856},t:"Java中从常量向注解提供枚举值",y:"a"}}],["/posts/baeldung/Archive/The%20Difference%20Between%20doAnswer%20%20%20and%20thenReturn%20%20%20in%20Mockito.html",{loader:()=>n(()=>import("./The Difference Between doAnswer   and thenReturn   in Mockito.html-CiDVtfAN.js"),__vite__mapDeps([404,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Testing","Java"],g:["Mockito","JUnit","doAnswer","thenReturn"],e:'\n<p>Mockito是一个广泛使用的Java应用程序单元测试框架。它提供了各种API来模拟对象的行为。在本教程中，我们将探讨doAnswer()和thenReturn()存根技术的用法，并进行比较。我们可以在某些情况下使用这两种API来存根或模拟方法，但在某些情况下，我们只能使用其中之一。</p>\n<p>我们的代码将结合使用Mockito和JUnit 5作为我们的代码示例，并且我们需要在我们的pom.xml文件中添加一些依赖项：</p>\n<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```org.junit.jupiter```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```junit-jupiter-api```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```5.10.0```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```\n    ```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>```test```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>```\n```<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```\n</code></pre></div>',r:{minutes:3.66,words:1099},t:"Mockito中doAnswer()和thenReturn()的区别 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Understanding%20Maven%20Dependency%20Graph%20or%20Tree.html",{loader:()=>n(()=>import("./Understanding Maven Dependency Graph or Tree.html-C8JuC8lr.js"),__vite__mapDeps([405,1])),meta:{d:17184096e5,l:"2024年6月15日",c:["Maven","依赖管理"],g:["Maven","依赖树","依赖图"],e:`
<p>在处理大型Maven项目时可能会感到畏惧，同时跟踪所有模块和库之间的依赖关系并解决它们之间的冲突也是一个挑战。</p>
<p>在本教程中，我们将学习有关Maven依赖图或树的知识。首先，我们将了解如何创建依赖树，过滤依赖项，并创建不同的输出格式。接下来，我们将讨论以图形方式查看依赖树的不同方法。</p>
<h2>2. 项目设置</h2>
<p>在现实生活的项目中，依赖树会迅速增长并变得复杂。然而，对于我们的示例，我们将创建一个包含两个模块_module1_和_module2_的小项目，每个模块都有两到三个依赖项。此外，<em>module1_依赖于_module2</em>。</p>
`,r:{minutes:5.42,words:1627},t:"Maven依赖图或树的理解",y:"a"}}],["/posts/baeldung/Archive/Unit%20Test%20for%20hashCode%20%20%20in%20Java.html",{loader:()=>n(()=>import("./Unit Test for hashCode   in Java.html-Bny9bkoB.js"),__vite__mapDeps([406,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Java","Unit Testing"],g:["hashCode","Java","Unit Test"],e:`
<h2>1. 引言</h2>
<p>在Java中，我们可以使用_hashCode()_方法为对象生成一个哈希码值。这个值通常用于各种目的，比如存储在像_HashMap_或_HashSet_这样的集合中，其中高效的检索和存储至关重要。</p>
<p>除此之外，为_hashCode()_方法编写单元测试确保它产生一致且正确的哈希码，这对于基于哈希的数据结构的正确功能至关重要。</p>
<p><strong>在本文中，我们将深入探讨Java中_hashCode()_方法单元测试的重要性。</strong></p>
<h2>2. 理解_hashCode()_方法</h2>
<p>在Java中，每个对象都从_Object_类继承了_hashCode()_方法，该方法基于对象的内部状态为对象生成一个唯一的整型哈希码值。通常，这个哈希码是使用内存地址或某些对象属性计算的，旨在提供一种快速有效的方式来识别对象：</p>`,r:{minutes:3.65,words:1094},t:"Java中hashCode()方法的单元测试 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Using%20@Autowired%20and%20@InjectMocks%20in%20Spring%20Boot%20Tests.html",{loader:()=>n(()=>import("./Using @Autowired and @InjectMocks in Spring Boot Tests.html-CP_KUFuu.js"),__vite__mapDeps([407,1])),meta:{d:17183232e5,l:"2024年6月14日",c:["Spring Boot","Testing"],g:["Autowired","InjectMocks"],e:`
<p>在本教程中，我们将探讨在Spring Boot测试中使用Spring Boot的@Autowired和Mockito的@InjectMocks注入依赖项的使用情况。我们将讨论需要使用它们的用例，并查看相同的例子。</p>
<h3>2. 理解测试注解</h3>
<p>在开始代码示例之前，让我们快速看一下一些测试注解的基础知识。</p>
<p>首先，Mockito最常用的@Mock注解为测试创建了一个依赖项的模拟实例。<strong>它经常与@InjectMocks结合使用，后者将标记有@Mock的模拟注入到正在测试的目标对象中。</strong></p>
<p>除了Mockito的注解，Spring Boot的注解@MockBean可以帮助创建一个模拟的Spring bean。然后，模拟的bean可以被上下文中的其他bean使用。<strong>此外，如果Spring上下文自己创建了可以在不模拟的情况下使用的bean，我们可以使用@Autowired注解来注入它们。</strong></p>`,r:{minutes:6.35,words:1904},t:"使用Spring Boot测试中的@Autowired和@InjectMocks | Baeldung",y:"a"}}],["/posts/baeldung/Archive/Using%20Comparator.nullsLast()%20to%20Avoid%20NullPointerException%20When%20Sorting.html",{loader:()=>n(()=>import("./Using Comparator.nullsLast() to Avoid NullPointerException When Sorting.html-CLXMl5jd.js"),__vite__mapDeps([408,1])),meta:{d:17182368e5,l:"2024年6月13日",c:["Java","Comparator"],g:["Java 8","Sorting","NullPointerException"],e:`
<p>在Java 8中，Comparator.nullsLast()方法为我们提供了一种方便的方式来处理排序时可能遇到的NullPointerException问题。本文将介绍如何在Java中使用Comparator.nullsLast()来避免在排序时出现NullPointerException。</p>
<h2>1. 概述</h2>
<p>如果集合中包含null值，而没有适当的异常处理，排序时可能会导致NullPointerException。Java 8提供了一个方便的方法Comparator.nullsLast()来解决这个问题。这个方法允许在排序操作中处理null值。</p>
<p>在本教程中，我们将学习如何使用Comparator.nullsLast()来避免在Java排序时出现NullPointerException。</p>`,r:{minutes:2.6,words:781},t:"使用Comparator.nullsLast()在排序时避免NullPointerException",y:"a"}}],["/posts/baeldung/Archive/Using%20Reactor%20Mono.cache%20%20%20for%20Memoization.html",{loader:()=>n(()=>import("./Using Reactor Mono.cache   for Memoization.html-CWCPn6_3.js"),__vite__mapDeps([409,1])),meta:{d:1718496e6,l:"2024年6月16日",c:["Spring","WebFlux"],g:["Reactor","Mono","Cache"],e:`
<h2>1. 概述</h2>
<p>优化代码以提高性能是编程的关键部分，特别是当处理昂贵的操作或数据检索过程时。提高性能的一种有效方法是缓存。</p>
<p><strong>Project Reactor 库提供了一个 <em>cache()</em> 方法，用于缓存昂贵的操作或几乎不改变的数据，以避免重复操作并提高性能</strong>。</p>
<p>在本教程中，我们将探讨备忘录模式，这是一种缓存形式，并演示如何使用 Project Reactor 库中的 <em>Mono.cache()</em> 来缓存对 JSONPlaceholder API 的 HTTP GET 请求的结果。我们还将通过一个大理石图来理解 <em>Mono.cache()</em> 方法的内部机制。</p>`,r:{minutes:5.46,words:1639},t:"使用 Reactor Mono.cache() 进行备忘录模式 | Baeldung",y:"a"}}],["/posts/baeldung/Archive/%E6%8E%A2%E7%B4%A2Java%E4%B8%AD%E5%B0%86%E6%9E%9A%E4%B8%BE%E5%80%BC%E4%BB%8E%E5%B8%B8%E9%87%8F%E4%BC%A0%E9%80%92%E5%88%B0%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%8F%AF%E8%83%BD%E6%80%A7.html",{loader:()=>n(()=>import("./探索Java中将枚举值从常量传递到注解的可能性.html-CwuxBFUU.js"),__vite__mapDeps([410,1])),meta:{d:17157312e5,l:"2024年5月15日",c:["Java编程","注解与枚举"],g:["Java","注解","枚举"],e:`
<h2>1. 引言</h2>
<p>在本教程中，我们将探索Java中将枚举值从常量传递到注解的可能性。为了理解所提出的设计决策的主要驱动因素，我们将从问题陈述开始，然后是一个演示用例。</p>
<p>在那之后，我们将定义理想解决方案，了解Java语言的限制，并最终讨论一些实现选项。</p>
<h2>2. 问题陈述</h2>
<p>让我们想象以下要求。在控制器类中，两个_POST_和_PUT_端点始终需要具有相同的_内容类型（Content-Type）_。现在，让我们看看如何在同一枚举值中共享这两个端点定义。</p>
<p>为了更好地理解问题陈述，我们将继续探索一个演示用例。</p>
<h2>3. 定义演示用例</h2>`,r:{minutes:6.22,words:1867},t:"探索Java中将枚举值从常量传递到注解的可能性",y:"a"}}],["/404.html",{loader:()=>n(()=>import("./404.html-CPlU3GWt.js"),__vite__mapDeps([411,1])),meta:{t:""}}],["/posts/articles/",{loader:()=>n(()=>import("./index.html-By0t1aAf.js"),__vite__mapDeps([412,1])),meta:{t:"Articles"}}],["/posts/",{loader:()=>n(()=>import("./index.html-DsHgvoMv.js"),__vite__mapDeps([413,1])),meta:{t:"Posts"}}],["/posts/articles/postgresql/",{loader:()=>n(()=>import("./index.html-BKN4s9_N.js"),__vite__mapDeps([414,1])),meta:{t:"Postgresql"}}],["/posts/baeldung/2024-06-21/",{loader:()=>n(()=>import("./index.html-CI2CKRvI.js"),__vite__mapDeps([415,1])),meta:{t:"2024 06 21"}}],["/posts/baeldung/",{loader:()=>n(()=>import("./index.html-Clq8Qi4W.js"),__vite__mapDeps([416,1])),meta:{t:"Baeldung"}}],["/posts/baeldung/2024-06-22/",{loader:()=>n(()=>import("./index.html-C5BbQvJj.js"),__vite__mapDeps([417,1])),meta:{t:"2024 06 22"}}],["/posts/baeldung/2024-06-23/",{loader:()=>n(()=>import("./index.html-CQqPltuc.js"),__vite__mapDeps([418,1])),meta:{t:"2024 06 23"}}],["/posts/baeldung/2024-06-24/",{loader:()=>n(()=>import("./index.html-5c0Y1nJB.js"),__vite__mapDeps([419,1])),meta:{t:"2024 06 24"}}],["/posts/baeldung/2024-06-25/",{loader:()=>n(()=>import("./index.html-NG1oyJtp.js"),__vite__mapDeps([420,1])),meta:{t:"2024 06 25"}}],["/posts/baeldung/2024-06-26/",{loader:()=>n(()=>import("./index.html-DOvbrgNZ.js"),__vite__mapDeps([421,1])),meta:{t:"2024 06 26"}}],["/posts/baeldung/Archive/",{loader:()=>n(()=>import("./index.html-PfkqKkVe.js"),__vite__mapDeps([422,1])),meta:{t:"Archive"}}],["/category/",{loader:()=>n(()=>import("./index.html-Ci9FgAC1.js"),__vite__mapDeps([423,1])),meta:{t:"分类",I:!1}}],["/category/java/",{loader:()=>n(()=>import("./index.html-C1ORIZer.js"),__vite__mapDeps([424,1])),meta:{t:"Java 分类",I:!1}}],["/category/grpc/",{loader:()=>n(()=>import("./index.html-CB1xbKMf.js"),__vite__mapDeps([425,1])),meta:{t:"gRPC 分类",I:!1}}],["/category/postgresql/",{loader:()=>n(()=>import("./index.html-7Cl5DFIK.js"),__vite__mapDeps([426,1])),meta:{t:"PostgreSQL 分类",I:!1}}],["/category/macos/",{loader:()=>n(()=>import("./index.html-DKP2eyMv.js"),__vite__mapDeps([427,1])),meta:{t:"MacOS 分类",I:!1}}],["/category/spring-boot/",{loader:()=>n(()=>import("./index.html-apyGd4hy.js"),__vite__mapDeps([428,1])),meta:{t:"Spring Boot 分类",I:!1}}],["/category/junit/",{loader:()=>n(()=>import("./index.html-d31EvDQy.js"),__vite__mapDeps([429,1])),meta:{t:"JUnit 分类",I:!1}}],["/category/%E6%95%B0%E5%AD%97%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-D52NEUkF.js"),__vite__mapDeps([430,1])),meta:{t:"数字处理 分类",I:!1}}],["/category/jackson/",{loader:()=>n(()=>import("./index.html-By1dmsqT.js"),__vite__mapDeps([431,1])),meta:{t:"Jackson 分类",I:!1}}],["/category/netty/",{loader:()=>n(()=>import("./index.html-BYOGc1jA.js"),__vite__mapDeps([432,1])),meta:{t:"Netty 分类",I:!1}}],["/category/%E7%BC%96%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-BlcHNbz4.js"),__vite__mapDeps([433,1])),meta:{t:"编程 分类",I:!1}}],["/category/apache-kafka/",{loader:()=>n(()=>import("./index.html-_tVo0wmi.js"),__vite__mapDeps([434,1])),meta:{t:"Apache Kafka 分类",I:!1}}],["/category/groupid-vs-consumerid/",{loader:()=>n(()=>import("./index.html-DD3IIp0U.js"),__vite__mapDeps([435,1])),meta:{t:"GroupId vs ConsumerId 分类",I:!1}}],["/category/spring/",{loader:()=>n(()=>import("./index.html-DSsvE7Rp.js"),__vite__mapDeps([436,1])),meta:{t:"Spring 分类",I:!1}}],["/category/rest-docs/",{loader:()=>n(()=>import("./index.html-BUiebFHM.js"),__vite__mapDeps([437,1])),meta:{t:"REST Docs 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>n(()=>import("./index.html-DURV_AE1.js"),__vite__mapDeps([438,1])),meta:{t:"数据结构 分类",I:!1}}],["/category/%E7%AE%97%E6%B3%95/",{loader:()=>n(()=>import("./index.html-CuFF89vs.js"),__vite__mapDeps([439,1])),meta:{t:"算法 分类",I:!1}}],["/category/string-manipulation/",{loader:()=>n(()=>import("./index.html-C4M7U7SJ.js"),__vite__mapDeps([440,1])),meta:{t:"String Manipulation 分类",I:!1}}],["/category/gson/",{loader:()=>n(()=>import("./index.html-CpOzsKNY.js"),__vite__mapDeps([441,1])),meta:{t:"Gson 分类",I:!1}}],["/category/aws/",{loader:()=>n(()=>import("./index.html-Dho83tix.js"),__vite__mapDeps([442,1])),meta:{t:"AWS 分类",I:!1}}],["/category/%E6%95%99%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-BRk3-mUZ.js"),__vite__mapDeps([443,1])),meta:{t:"教程 分类",I:!1}}],["/category/graphql/",{loader:()=>n(()=>import("./index.html-hl6I-R6J.js"),__vite__mapDeps([444,1])),meta:{t:"GraphQL 分类",I:!1}}],["/category/rest-with-spring-boot/",{loader:()=>n(()=>import("./index.html-DLmZXeDI.js"),__vite__mapDeps([445,1])),meta:{t:"REST with Spring Boot 分类",I:!1}}],["/category/learn-spring-security/",{loader:()=>n(()=>import("./index.html-eLSoMXHh.js"),__vite__mapDeps([446,1])),meta:{t:"Learn Spring Security 分类",I:!1}}],["/category/spring-security/",{loader:()=>n(()=>import("./index.html-CGnaK2O_.js"),__vite__mapDeps([447,1])),meta:{t:"Spring Security 分类",I:!1}}],["/category/spring-data-jpa/",{loader:()=>n(()=>import("./index.html-DSSSk8TW.js"),__vite__mapDeps([448,1])),meta:{t:"Spring Data JPA 分类",I:!1}}],["/category/query-optimization/",{loader:()=>n(()=>import("./index.html-BKegLolH.js"),__vite__mapDeps([449,1])),meta:{t:"Query Optimization 分类",I:!1}}],["/category/kotlin/",{loader:()=>n(()=>import("./index.html-DOOLB_HN.js"),__vite__mapDeps([450,1])),meta:{t:"Kotlin 分类",I:!1}}],["/category/serialization/",{loader:()=>n(()=>import("./index.html-Bd9Gdv8n.js"),__vite__mapDeps([451,1])),meta:{t:"Serialization 分类",I:!1}}],["/category/jpa/",{loader:()=>n(()=>import("./index.html-D73PezI6.js"),__vite__mapDeps([452,1])),meta:{t:"JPA 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%86%E5%9B%BE/",{loader:()=>n(()=>import("./index.html-B3F_XsUB.js"),__vite__mapDeps([453,1])),meta:{t:"数据库视图 分类",I:!1}}],["/category/software-engineering/",{loader:()=>n(()=>import("./index.html-Cuv_Sw4F.js"),__vite__mapDeps([454,1])),meta:{t:"Software Engineering 分类",I:!1}}],["/category/testing/",{loader:()=>n(()=>import("./index.html-Cau6ZJ9J.js"),__vite__mapDeps([455,1])),meta:{t:"Testing 分类",I:!1}}],["/category/etcd/",{loader:()=>n(()=>import("./index.html-BAf9ce-a.js"),__vite__mapDeps([456,1])),meta:{t:"etcd 分类",I:!1}}],["/category/hibernate/",{loader:()=>n(()=>import("./index.html-BTQYIes8.js"),__vite__mapDeps([457,1])),meta:{t:"Hibernate 分类",I:!1}}],["/category/softdelete/",{loader:()=>n(()=>import("./index.html-De2fo746.js"),__vite__mapDeps([458,1])),meta:{t:"SoftDelete 分类",I:!1}}],["/category/apache-camel/",{loader:()=>n(()=>import("./index.html-D9yeQd6z.js"),__vite__mapDeps([459,1])),meta:{t:"Apache Camel 分类",I:!1}}],["/category/base64/",{loader:()=>n(()=>import("./index.html-DStZSNNA.js"),__vite__mapDeps([460,1])),meta:{t:"Base64 分类",I:!1}}],["/category/string-algorithms/",{loader:()=>n(()=>import("./index.html-BXDNanoG.js"),__vite__mapDeps([461,1])),meta:{t:"String Algorithms 分类",I:!1}}],["/category/%E5%AD%97%E7%AC%A6%E4%B8%B2/",{loader:()=>n(()=>import("./index.html-BIsZGVQP.js"),__vite__mapDeps([462,1])),meta:{t:"字符串 分类",I:!1}}],["/category/tutorial/",{loader:()=>n(()=>import("./index.html-BdxVr2D0.js"),__vite__mapDeps([463,1])),meta:{t:"Tutorial 分类",I:!1}}],["/category/completablefuture/",{loader:()=>n(()=>import("./index.html-Bl3EsGrS.js"),__vite__mapDeps([464,1])),meta:{t:"CompletableFuture 分类",I:!1}}],["/category/date-time/",{loader:()=>n(()=>import("./index.html-B2840JfR.js"),__vite__mapDeps([465,1])),meta:{t:"Date-Time 分类",I:!1}}],["/category/concurrency/",{loader:()=>n(()=>import("./index.html-BzeQju68.js"),__vite__mapDeps([466,1])),meta:{t:"Concurrency 分类",I:!1}}],["/category/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-Cx4vgGqK.js"),__vite__mapDeps([467,1])),meta:{t:"网络编程 分类",I:!1}}],["/category/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/",{loader:()=>n(()=>import("./index.html-Dm8fT1_L.js"),__vite__mapDeps([468,1])),meta:{t:"编程技巧 分类",I:!1}}],["/category/algorithm/",{loader:()=>n(()=>import("./index.html-DLLVVRPM.js"),__vite__mapDeps([469,1])),meta:{t:"Algorithm 分类",I:!1}}],["/category/pagination/",{loader:()=>n(()=>import("./index.html-ygbdHgU_.js"),__vite__mapDeps([470,1])),meta:{t:"Pagination 分类",I:!1}}],["/category/thymeleaf/",{loader:()=>n(()=>import("./index.html-C7P3qhiG.js"),__vite__mapDeps([471,1])),meta:{t:"Thymeleaf 分类",I:!1}}],["/category/junit-5/",{loader:()=>n(()=>import("./index.html-DE2G4vbi.js"),__vite__mapDeps([472,1])),meta:{t:"JUnit 5 分类",I:!1}}],["/category/mockito/",{loader:()=>n(()=>import("./index.html-BkDVN7Jt.js"),__vite__mapDeps([473,1])),meta:{t:"Mockito 分类",I:!1}}],["/category/openjdk/",{loader:()=>n(()=>import("./index.html-JjkZ73rV.js"),__vite__mapDeps([474,1])),meta:{t:"OpenJDK 分类",I:!1}}],["/category/windows/",{loader:()=>n(()=>import("./index.html-DUaLkkTS.js"),__vite__mapDeps([475,1])),meta:{t:"Windows 分类",I:!1}}],["/category/opengrok/",{loader:()=>n(()=>import("./index.html-X1XsMGkw.js"),__vite__mapDeps([476,1])),meta:{t:"OpenGrok 分类",I:!1}}],["/category/%E4%BB%A3%E7%A0%81%E6%90%9C%E7%B4%A2/",{loader:()=>n(()=>import("./index.html-C13ZeJC7.js"),__vite__mapDeps([477,1])),meta:{t:"代码搜索 分类",I:!1}}],["/category/aop/",{loader:()=>n(()=>import("./index.html-CXUMHeHr.js"),__vite__mapDeps([478,1])),meta:{t:"AOP 分类",I:!1}}],["/category/arrays/",{loader:()=>n(()=>import("./index.html-BKW8C7MP.js"),__vite__mapDeps([479,1])),meta:{t:"Arrays 分类",I:!1}}],["/category/spring-cloud/",{loader:()=>n(()=>import("./index.html-urlsCHAn.js"),__vite__mapDeps([480,1])),meta:{t:"Spring Cloud 分类",I:!1}}],["/category/oauth2/",{loader:()=>n(()=>import("./index.html-NXUF6BfV.js"),__vite__mapDeps([481,1])),meta:{t:"OAuth2 分类",I:!1}}],["/category/jdbc/",{loader:()=>n(()=>import("./index.html-DZo592aq.js"),__vite__mapDeps([482,1])),meta:{t:"JDBC 分类",I:!1}}],["/category/programming/",{loader:()=>n(()=>import("./index.html-CLdVg_mR.js"),__vite__mapDeps([483,1])),meta:{t:"Programming 分类",I:!1}}],["/category/quarkus/",{loader:()=>n(()=>import("./index.html-9Z1ePhLC.js"),__vite__mapDeps([484,1])),meta:{t:"Quarkus 分类",I:!1}}],["/category/maven/",{loader:()=>n(()=>import("./index.html-BLVn6t5L.js"),__vite__mapDeps([485,1])),meta:{t:"Maven 分类",I:!1}}],["/category/web-server/",{loader:()=>n(()=>import("./index.html-VdCPygGR.js"),__vite__mapDeps([486,1])),meta:{t:"Web Server 分类",I:!1}}],["/category/uuid/",{loader:()=>n(()=>import("./index.html-CvHsHR9n.js"),__vite__mapDeps([487,1])),meta:{t:"UUID 分类",I:!1}}],["/category/url%E7%BC%96%E7%A0%81/",{loader:()=>n(()=>import("./index.html-CF1mldoW.js"),__vite__mapDeps([488,1])),meta:{t:"URL编码 分类",I:!1}}],["/category/kafka/",{loader:()=>n(()=>import("./index.html-wb7evuNX.js"),__vite__mapDeps([489,1])),meta:{t:"Kafka 分类",I:!1}}],["/category/spring-batch/",{loader:()=>n(()=>import("./index.html-CAxCWQ3l.js"),__vite__mapDeps([490,1])),meta:{t:"Spring Batch 分类",I:!1}}],["/category/apache-poi/",{loader:()=>n(()=>import("./index.html-CTXjFja2.js"),__vite__mapDeps([491,1])),meta:{t:"Apache POI 分类",I:!1}}],["/category/excel/",{loader:()=>n(()=>import("./index.html-B3ZiaaTS.js"),__vite__mapDeps([492,1])),meta:{t:"Excel 分类",I:!1}}],["/category/%E6%97%A5%E6%9C%9F%E8%BD%AC%E6%8D%A2/",{loader:()=>n(()=>import("./index.html-NRwqF0PC.js"),__vite__mapDeps([493,1])),meta:{t:"日期转换 分类",I:!1}}],["/category/%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4/",{loader:()=>n(()=>import("./index.html-C_U_9-5O.js"),__vite__mapDeps([494,1])),meta:{t:"日期时间 分类",I:!1}}],["/category/xmlgregoriancalendar/",{loader:()=>n(()=>import("./index.html-CgUSjeNp.js"),__vite__mapDeps([495,1])),meta:{t:"XMLGregorianCalendar 分类",I:!1}}],["/category/unicode/",{loader:()=>n(()=>import("./index.html-BJHTGu-_.js"),__vite__mapDeps([496,1])),meta:{t:"Unicode 分类",I:!1}}],["/category/webflux/",{loader:()=>n(()=>import("./index.html-CmMVfFo0.js"),__vite__mapDeps([497,1])),meta:{t:"WebFlux 分类",I:!1}}],["/category/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/",{loader:()=>n(()=>import("./index.html-DwpL-nHV.js"),__vite__mapDeps([498,1])),meta:{t:"构建工具 分类",I:!1}}],["/category/ssl/",{loader:()=>n(()=>import("./index.html-B9K5Ycon.js"),__vite__mapDeps([499,1])),meta:{t:"SSL 分类",I:!1}}],["/category/microservices/",{loader:()=>n(()=>import("./index.html-Bk9aKD0I.js"),__vite__mapDeps([500,1])),meta:{t:"Microservices 分类",I:!1}}],["/category/event-driven-architecture/",{loader:()=>n(()=>import("./index.html-BUnGujPh.js"),__vite__mapDeps([501,1])),meta:{t:"Event-Driven Architecture 分类",I:!1}}],["/category/spring-modulith/",{loader:()=>n(()=>import("./index.html-BNXyFBw3.js"),__vite__mapDeps([502,1])),meta:{t:"Spring Modulith 分类",I:!1}}],["/category/event-externalization/",{loader:()=>n(()=>import("./index.html-DF-P09zZ.js"),__vite__mapDeps([503,1])),meta:{t:"Event Externalization 分类",I:!1}}],["/category/securerandom/",{loader:()=>n(()=>import("./index.html-CukMIVY_.js"),__vite__mapDeps([504,1])),meta:{t:"SecureRandom 分类",I:!1}}],["/category/%E7%BC%96%E7%A0%81/",{loader:()=>n(()=>import("./index.html-CTm500vu.js"),__vite__mapDeps([505,1])),meta:{t:"编码 分类",I:!1}}],["/category/kubernetes/",{loader:()=>n(()=>import("./index.html-DcTX-wl9.js"),__vite__mapDeps([506,1])),meta:{t:"Kubernetes 分类",I:!1}}],["/category/networking/",{loader:()=>n(()=>import("./index.html-D15vwXPn.js"),__vite__mapDeps([507,1])),meta:{t:"Networking 分类",I:!1}}],["/category/spock/",{loader:()=>n(()=>import("./index.html-BdcvDc3c.js"),__vite__mapDeps([508,1])),meta:{t:"Spock 分类",I:!1}}],["/category/spring-jpa/",{loader:()=>n(()=>import("./index.html-mAcdxFeB.js"),__vite__mapDeps([509,1])),meta:{t:"Spring JPA 分类",I:!1}}],["/category/backend-javaspring-team-lead/",{loader:()=>n(()=>import("./index.html-C-_CAXNe.js"),__vite__mapDeps([510,1])),meta:{t:"Backend Java/Spring Team Lead 分类",I:!1}}],["/category/remote-job/",{loader:()=>n(()=>import("./index.html-DVtppUGs.js"),__vite__mapDeps([511,1])),meta:{t:"Remote Job 分类",I:!1}}],["/category/web%E5%BC%80%E5%8F%91/",{loader:()=>n(()=>import("./index.html-BX3qCJ7l.js"),__vite__mapDeps([512,1])),meta:{t:"Web开发 分类",I:!1}}],["/category/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-DX0XBhL8.js"),__vite__mapDeps([513,1])),meta:{t:"多线程 分类",I:!1}}],["/category/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",{loader:()=>n(()=>import("./index.html-B6gjL1aK.js"),__vite__mapDeps([514,1])),meta:{t:"正则表达式 分类",I:!1}}],["/category/listiterator/",{loader:()=>n(()=>import("./index.html-CxByKahu.js"),__vite__mapDeps([515,1])),meta:{t:"ListIterator 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/",{loader:()=>n(()=>import("./index.html-nXxq6BbH.js"),__vite__mapDeps([516,1])),meta:{t:"数据压缩 分类",I:!1}}],["/category/environment-variables/",{loader:()=>n(()=>import("./index.html-DOO0PbkH.js"),__vite__mapDeps([517,1])),meta:{t:"Environment Variables 分类",I:!1}}],["/category/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/",{loader:()=>n(()=>import("./index.html-wD-XL_Bm.js"),__vite__mapDeps([518,1])),meta:{t:"内存管理 分类",I:!1}}],["/category/morse-code/",{loader:()=>n(()=>import("./index.html-g-FLRT0v.js"),__vite__mapDeps([519,1])),meta:{t:"Morse Code 分类",I:!1}}],["/category/oauth/",{loader:()=>n(()=>import("./index.html-CqxVvMEr.js"),__vite__mapDeps([520,1])),meta:{t:"OAuth 分类",I:!1}}],["/category/2d-geometry/",{loader:()=>n(()=>import("./index.html-C65pCXm5.js"),__vite__mapDeps([521,1])),meta:{t:"2D Geometry 分类",I:!1}}],["/category/joda-time/",{loader:()=>n(()=>import("./index.html-CrA2gaMf.js"),__vite__mapDeps([522,1])),meta:{t:"Joda-Time 分类",I:!1}}],["/category/bigdecimal/",{loader:()=>n(()=>import("./index.html-CXlx3g5z.js"),__vite__mapDeps([523,1])),meta:{t:"BigDecimal 分类",I:!1}}],["/category/reactive-apis/",{loader:()=>n(()=>import("./index.html-ByH2UpyK.js"),__vite__mapDeps([524,1])),meta:{t:"Reactive APIs 分类",I:!1}}],["/category/micronaut/",{loader:()=>n(()=>import("./index.html-D-F2D13e.js"),__vite__mapDeps([525,1])),meta:{t:"Micronaut 分类",I:!1}}],["/category/mongodb/",{loader:()=>n(()=>import("./index.html-D3HL5LpB.js"),__vite__mapDeps([526,1])),meta:{t:"MongoDB 分类",I:!1}}],["/category/jvm/",{loader:()=>n(()=>import("./index.html-Seq98UYT.js"),__vite__mapDeps([527,1])),meta:{t:"JVM 分类",I:!1}}],["/category/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/",{loader:()=>n(()=>import("./index.html-DdrQ8D7l.js"),__vite__mapDeps([528,1])),meta:{t:"垃圾收集器 分类",I:!1}}],["/category/spring-mvc/",{loader:()=>n(()=>import("./index.html-B0TYQ6PD.js"),__vite__mapDeps([529,1])),meta:{t:"Spring MVC 分类",I:!1}}],["/category/apache-calcite/",{loader:()=>n(()=>import("./index.html-BsR32rHJ.js"),__vite__mapDeps([530,1])),meta:{t:"Apache Calcite 分类",I:!1}}],["/category/postman/",{loader:()=>n(()=>import("./index.html-KI8lfrY2.js"),__vite__mapDeps([531,1])),meta:{t:"Postman 分类",I:!1}}],["/category/spring-ai/",{loader:()=>n(()=>import("./index.html-DZzjDDAM.js"),__vite__mapDeps([532,1])),meta:{t:"Spring AI 分类",I:!1}}],["/category/baeldung/",{loader:()=>n(()=>import("./index.html-DVxRMRQh.js"),__vite__mapDeps([533,1])),meta:{t:"Baeldung 分类",I:!1}}],["/category/spring-cloud-aws/",{loader:()=>n(()=>import("./index.html-BnRUODID.js"),__vite__mapDeps([534,1])),meta:{t:"Spring Cloud AWS 分类",I:!1}}],["/category/sqs-integration/",{loader:()=>n(()=>import("./index.html-DEMM2yFE.js"),__vite__mapDeps([535,1])),meta:{t:"SQS Integration 分类",I:!1}}],["/category/stream-api/",{loader:()=>n(()=>import("./index.html-BzZVdpXp.js"),__vite__mapDeps([536,1])),meta:{t:"Stream API 分类",I:!1}}],["/category/https/",{loader:()=>n(()=>import("./index.html-C-9rB-TY.js"),__vite__mapDeps([537,1])),meta:{t:"HTTPS 分类",I:!1}}],["/category/priorityqueue/",{loader:()=>n(()=>import("./index.html-DBCL0ORU.js"),__vite__mapDeps([538,1])),meta:{t:"PriorityQueue 分类",I:!1}}],["/category/%E8%BE%93%E5%85%A5%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-CxdAwvOy.js"),__vite__mapDeps([539,1])),meta:{t:"输入处理 分类",I:!1}}],["/category/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/",{loader:()=>n(()=>import("./index.html-BL_1KybB.js"),__vite__mapDeps([540,1])),meta:{t:"字符串操作 分类",I:!1}}],["/category/spring-webflux/",{loader:()=>n(()=>import("./index.html-B-Zh4OQ3.js"),__vite__mapDeps([541,1])),meta:{t:"Spring WebFlux 分类",I:!1}}],["/category/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",{loader:()=>n(()=>import("./index.html-CefECoby.js"),__vite__mapDeps([542,1])),meta:{t:"文件上传 分类",I:!1}}],["/category/json/",{loader:()=>n(()=>import("./index.html-CUocwsyZ.js"),__vite__mapDeps([543,1])),meta:{t:"JSON 分类",I:!1}}],["/category/spel/",{loader:()=>n(()=>import("./index.html-DJiK5by_.js"),__vite__mapDeps([544,1])),meta:{t:"SpEL 分类",I:!1}}],["/category/%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E8%AE%A1%E7%AE%97/",{loader:()=>n(()=>import("./index.html-CC6oxghC.js"),__vite__mapDeps([545,1])),meta:{t:"日期时间计算 分类",I:!1}}],["/category/stringbuilder/",{loader:()=>n(()=>import("./index.html-s3rOZwkv.js"),__vite__mapDeps([546,1])),meta:{t:"StringBuilder 分类",I:!1}}],["/category/io/",{loader:()=>n(()=>import("./index.html-DLrUGgLg.js"),__vite__mapDeps([547,1])),meta:{t:"IO 分类",I:!1}}],["/category/algorithms/",{loader:()=>n(()=>import("./index.html-DBvb0oXV.js"),__vite__mapDeps([548,1])),meta:{t:"Algorithms 分类",I:!1}}],["/category/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-CfchGKhl.js"),__vite__mapDeps([549,1])),meta:{t:"文件处理 分类",I:!1}}],["/category/%E6%95%B0%E7%BB%84/",{loader:()=>n(()=>import("./index.html-BlhenDdF.js"),__vite__mapDeps([550,1])),meta:{t:"数组 分类",I:!1}}],["/category/queryexception/",{loader:()=>n(()=>import("./index.html-CxuEDXoU.js"),__vite__mapDeps([551,1])),meta:{t:"QueryException 分类",I:!1}}],["/category/iso-8601/",{loader:()=>n(()=>import("./index.html-DhA99ocF.js"),__vite__mapDeps([552,1])),meta:{t:"ISO 8601 分类",I:!1}}],["/category/reflection/",{loader:()=>n(()=>import("./index.html-CLwCEyzQ.js"),__vite__mapDeps([553,1])),meta:{t:"Reflection 分类",I:!1}}],["/category/outputstream/",{loader:()=>n(()=>import("./index.html-DmheOorr.js"),__vite__mapDeps([554,1])),meta:{t:"OutputStream 分类",I:!1}}],["/category/%E6%80%A7%E8%83%BD/",{loader:()=>n(()=>import("./index.html-DfwJnG9C.js"),__vite__mapDeps([555,1])),meta:{t:"性能 分类",I:!1}}],["/category/%E5%88%86%E5%8C%BA/",{loader:()=>n(()=>import("./index.html-DB2uar4U.js"),__vite__mapDeps([556,1])),meta:{t:"分区 分类",I:!1}}],["/category/utf-8/",{loader:()=>n(()=>import("./index.html-CQnx5FPI.js"),__vite__mapDeps([557,1])),meta:{t:"UTF-8 分类",I:!1}}],["/category/crud/",{loader:()=>n(()=>import("./index.html-3Dm1RemT.js"),__vite__mapDeps([558,1])),meta:{t:"CRUD 分类",I:!1}}],["/category/timefold-solver/",{loader:()=>n(()=>import("./index.html-DVUFADNR.js"),__vite__mapDeps([559,1])),meta:{t:"Timefold Solver 分类",I:!1}}],["/category/database/",{loader:()=>n(()=>import("./index.html-BVipZjsG.js"),__vite__mapDeps([560,1])),meta:{t:"Database 分类",I:!1}}],["/category/intellij-idea/",{loader:()=>n(()=>import("./index.html-XqoV0C8Z.js"),__vite__mapDeps([561,1])),meta:{t:"IntelliJ IDEA 分类",I:!1}}],["/category/software-development/",{loader:()=>n(()=>import("./index.html-CChKCBe9.js"),__vite__mapDeps([562,1])),meta:{t:"Software Development 分类",I:!1}}],["/category/streams/",{loader:()=>n(()=>import("./index.html-CuNK1ARP.js"),__vite__mapDeps([563,1])),meta:{t:"Streams 分类",I:!1}}],["/category/exception-handling/",{loader:()=>n(()=>import("./index.html-BsP1VYlZ.js"),__vite__mapDeps([564,1])),meta:{t:"Exception Handling 分类",I:!1}}],["/category/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-KMNmdsu3.js"),__vite__mapDeps([565,1])),meta:{t:"异步编程 分类",I:!1}}],["/category/inputstream/",{loader:()=>n(()=>import("./index.html-CwfPXHBU.js"),__vite__mapDeps([566,1])),meta:{t:"InputStream 分类",I:!1}}],["/category/spring-kafka/",{loader:()=>n(()=>import("./index.html-DAFw8rTw.js"),__vite__mapDeps([567,1])),meta:{t:"Spring Kafka 分类",I:!1}}],["/category/trusted-packages/",{loader:()=>n(()=>import("./index.html-B0fUVokw.js"),__vite__mapDeps([568,1])),meta:{t:"Trusted Packages 分类",I:!1}}],["/category/set/",{loader:()=>n(()=>import("./index.html-B9KUxd2r.js"),__vite__mapDeps([569,1])),meta:{t:"Set 分类",I:!1}}],["/category/eclipse/",{loader:()=>n(()=>import("./index.html-ASUlxaEP.js"),__vite__mapDeps([570,1])),meta:{t:"Eclipse 分类",I:!1}}],["/category/date-and-time/",{loader:()=>n(()=>import("./index.html-CRs0r-PU.js"),__vite__mapDeps([571,1])),meta:{t:"Date and Time 分类",I:!1}}],["/category/jmix/",{loader:()=>n(()=>import("./index.html-CR98v8OC.js"),__vite__mapDeps([572,1])),meta:{t:"Jmix 分类",I:!1}}],["/category/jar%E6%96%87%E4%BB%B6/",{loader:()=>n(()=>import("./index.html-BX91fVW8.js"),__vite__mapDeps([573,1])),meta:{t:"JAR文件 分类",I:!1}}],["/category/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-BHrQBSan.js"),__vite__mapDeps([574,1])),meta:{t:"图像处理 分类",I:!1}}],["/category/spring-framework/",{loader:()=>n(()=>import("./index.html-COx06brv.js"),__vite__mapDeps([575,1])),meta:{t:"Spring Framework 分类",I:!1}}],["/category/collections/",{loader:()=>n(()=>import("./index.html-DbSYMkbG.js"),__vite__mapDeps([576,1])),meta:{t:"Collections 分类",I:!1}}],["/category/jep-418/",{loader:()=>n(()=>import("./index.html-CjffBQ4u.js"),__vite__mapDeps([577,1])),meta:{t:"JEP 418 分类",I:!1}}],["/category/framework/",{loader:()=>n(()=>import("./index.html-uaZDispL.js"),__vite__mapDeps([578,1])),meta:{t:"Framework 分类",I:!1}}],["/category/logging/",{loader:()=>n(()=>import("./index.html-DIP-9ziQ.js"),__vite__mapDeps([579,1])),meta:{t:"Logging 分类",I:!1}}],["/category/new-features/",{loader:()=>n(()=>import("./index.html-CHuMhRLf.js"),__vite__mapDeps([580,1])),meta:{t:"New Features 分类",I:!1}}],["/category/html/",{loader:()=>n(()=>import("./index.html-CU-qYMe9.js"),__vite__mapDeps([581,1])),meta:{t:"HTML 分类",I:!1}}],["/category/reactive-programming/",{loader:()=>n(()=>import("./index.html-C_AYZtpx.js"),__vite__mapDeps([582,1])),meta:{t:"Reactive Programming 分类",I:!1}}],["/category/%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-DrkDmlOb.js"),__vite__mapDeps([583,1])),meta:{t:"时间处理 分类",I:!1}}],["/category/rxjava/",{loader:()=>n(()=>import("./index.html-BbdFNGTr.js"),__vite__mapDeps([584,1])),meta:{t:"RxJava 分类",I:!1}}],["/category/%E7%BC%96%E7%A0%81%E8%BD%AC%E6%8D%A2/",{loader:()=>n(()=>import("./index.html-CvMUWAIa.js"),__vite__mapDeps([585,1])),meta:{t:"编码转换 分类",I:!1}}],["/category/jwt/",{loader:()=>n(()=>import("./index.html-aQULo8SA.js"),__vite__mapDeps([586,1])),meta:{t:"JWT 分类",I:!1}}],["/category/selenium/",{loader:()=>n(()=>import("./index.html-B25ygFJA.js"),__vite__mapDeps([587,1])),meta:{t:"Selenium 分类",I:!1}}],["/category/web-automation/",{loader:()=>n(()=>import("./index.html-DeI-A8Mi.js"),__vite__mapDeps([588,1])),meta:{t:"Web Automation 分类",I:!1}}],["/category/duration/",{loader:()=>n(()=>import("./index.html-CdRr0yIe.js"),__vite__mapDeps([589,1])),meta:{t:"Duration 分类",I:!1}}],["/category/java-concurrency/",{loader:()=>n(()=>import("./index.html-ju1dm-aq.js"),__vite__mapDeps([590,1])),meta:{t:"Java Concurrency 分类",I:!1}}],["/category/java-tutorials/",{loader:()=>n(()=>import("./index.html-u9oJ4QXn.js"),__vite__mapDeps([591,1])),meta:{t:"Java Tutorials 分类",I:!1}}],["/category/hexformat-api/",{loader:()=>n(()=>import("./index.html-DeDOpCEV.js"),__vite__mapDeps([592,1])),meta:{t:"HexFormat API 分类",I:!1}}],["/category/caching/",{loader:()=>n(()=>import("./index.html-DHZp7tUb.js"),__vite__mapDeps([593,1])),meta:{t:"Caching 分类",I:!1}}],["/category/xml/",{loader:()=>n(()=>import("./index.html-DBtZ1rPv.js"),__vite__mapDeps([594,1])),meta:{t:"XML 分类",I:!1}}],["/category/eol-characters/",{loader:()=>n(()=>import("./index.html-sKmrvRNI.js"),__vite__mapDeps([595,1])),meta:{t:"EOL Characters 分类",I:!1}}],["/category/%E5%B9%B6%E8%A1%8C%E6%93%8D%E4%BD%9C/",{loader:()=>n(()=>import("./index.html-CPlbiNGq.js"),__vite__mapDeps([596,1])),meta:{t:"并行操作 分类",I:!1}}],["/category/gzip/",{loader:()=>n(()=>import("./index.html-D5NfZTI8.js"),__vite__mapDeps([597,1])),meta:{t:"GZIP 分类",I:!1}}],["/category/saga-pattern/",{loader:()=>n(()=>import("./index.html-ThXLTxud.js"),__vite__mapDeps([598,1])),meta:{t:"Saga Pattern 分类",I:!1}}],["/category/%E5%AF%86%E7%A0%81%E5%AD%A6/",{loader:()=>n(()=>import("./index.html-CT6V_TGo.js"),__vite__mapDeps([599,1])),meta:{t:"密码学 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/",{loader:()=>n(()=>import("./index.html-HL5s8QZv.js"),__vite__mapDeps([600,1])),meta:{t:"数据分析 分类",I:!1}}],["/category/commit-offsets/",{loader:()=>n(()=>import("./index.html-Bjtpo3Q2.js"),__vite__mapDeps([601,1])),meta:{t:"Commit Offsets 分类",I:!1}}],["/category/web-development/",{loader:()=>n(()=>import("./index.html-DUa4vZne.js"),__vite__mapDeps([602,1])),meta:{t:"Web Development 分类",I:!1}}],["/category/java-libraries/",{loader:()=>n(()=>import("./index.html-VrRjYfRK.js"),__vite__mapDeps([603,1])),meta:{t:"Java Libraries 分类",I:!1}}],["/category/apache-commons/",{loader:()=>n(()=>import("./index.html-DxVlnhQ5.js"),__vite__mapDeps([604,1])),meta:{t:"Apache Commons 分类",I:!1}}],["/category/redpanda/",{loader:()=>n(()=>import("./index.html-CeB97A2p.js"),__vite__mapDeps([605,1])),meta:{t:"Redpanda 分类",I:!1}}],["/category/uri/",{loader:()=>n(()=>import("./index.html-Boh-_IW_.js"),__vite__mapDeps([606,1])),meta:{t:"URI 分类",I:!1}}],["/category/jsoup/",{loader:()=>n(()=>import("./index.html-BZJxVVtd.js"),__vite__mapDeps([607,1])),meta:{t:"Jsoup 分类",I:!1}}],["/category/authorization/",{loader:()=>n(()=>import("./index.html-CpF26XCV.js"),__vite__mapDeps([608,1])),meta:{t:"Authorization 分类",I:!1}}],["/category/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-BIaEcOie.js"),__vite__mapDeps([609,1])),meta:{t:"异常处理 分类",I:!1}}],["/category/elasticsearch/",{loader:()=>n(()=>import("./index.html-BG4LCPD1.js"),__vite__mapDeps([610,1])),meta:{t:"Elasticsearch 分类",I:!1}}],["/category/spring-data/",{loader:()=>n(()=>import("./index.html-BjjWKzJn.js"),__vite__mapDeps([611,1])),meta:{t:"Spring Data 分类",I:!1}}],["/category/software-testing/",{loader:()=>n(()=>import("./index.html-BVmotAir.js"),__vite__mapDeps([612,1])),meta:{t:"Software Testing 分类",I:!1}}],["/category/development-practices/",{loader:()=>n(()=>import("./index.html-3Lkt3-bZ.js"),__vite__mapDeps([613,1])),meta:{t:"Development Practices 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>n(()=>import("./index.html-B_MWH4ji.js"),__vite__mapDeps([614,1])),meta:{t:"数据库 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/",{loader:()=>n(()=>import("./index.html-BRW15s6k.js"),__vite__mapDeps([615,1])),meta:{t:"数据类型转换 分类",I:!1}}],["/category/google-protocol-buffer/",{loader:()=>n(()=>import("./index.html-D_MWvqHN.js"),__vite__mapDeps([616,1])),meta:{t:"Google Protocol Buffer 分类",I:!1}}],["/category/jmeter/",{loader:()=>n(()=>import("./index.html-CHpygLMx.js"),__vite__mapDeps([617,1])),meta:{t:"JMeter 分类",I:!1}}],["/category/lombok/",{loader:()=>n(()=>import("./index.html-CI9p9ioX.js"),__vite__mapDeps([618,1])),meta:{t:"Lombok 分类",I:!1}}],["/category/optional/",{loader:()=>n(()=>import("./index.html-_s2Sie2E.js"),__vite__mapDeps([619,1])),meta:{t:"Optional 分类",I:!1}}],["/category/logback/",{loader:()=>n(()=>import("./index.html-DExkRyOv.js"),__vite__mapDeps([620,1])),meta:{t:"Logback 分类",I:!1}}],["/category/%E6%95%B0%E5%AD%A6/",{loader:()=>n(()=>import("./index.html-DUDErxe-.js"),__vite__mapDeps([621,1])),meta:{t:"数学 分类",I:!1}}],["/category/h2-database/",{loader:()=>n(()=>import("./index.html-DsIQBeM1.js"),__vite__mapDeps([622,1])),meta:{t:"H2 Database 分类",I:!1}}],["/category/gradle/",{loader:()=>n(()=>import("./index.html-G71XxtWE.js"),__vite__mapDeps([623,1])),meta:{t:"Gradle 分类",I:!1}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/",{loader:()=>n(()=>import("./index.html-Cutx-o4z.js"),__vite__mapDeps([624,1])),meta:{t:"计算机科学 分类",I:!1}}],["/category/linkedhashmap/",{loader:()=>n(()=>import("./index.html-DVvqJuks.js"),__vite__mapDeps([625,1])),meta:{t:"LinkedHashMap 分类",I:!1}}],["/category/development-tools/",{loader:()=>n(()=>import("./index.html-Bou-Tjgp.js"),__vite__mapDeps([626,1])),meta:{t:"Development Tools 分类",I:!1}}],["/category/version-control/",{loader:()=>n(()=>import("./index.html-BgjLCH_Z.js"),__vite__mapDeps([627,1])),meta:{t:"Version Control 分类",I:!1}}],["/category/spring-aop/",{loader:()=>n(()=>import("./index.html-_ENtJgXZ.js"),__vite__mapDeps([628,1])),meta:{t:"Spring AOP 分类",I:!1}}],["/category/update-or-insert/",{loader:()=>n(()=>import("./index.html-n3LRC1J1.js"),__vite__mapDeps([629,1])),meta:{t:"Update-Or-Insert 分类",I:!1}}],["/category/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",{loader:()=>n(()=>import("./index.html-Cw27L6pR.js"),__vite__mapDeps([630,1])),meta:{t:"设计模式 分类",I:!1}}],["/category/macos/",{loader:()=>n(()=>import("./index.html-DKP2eyMv.js"),__vite__mapDeps([427,1])),meta:{t:"macOS 分类",I:!1}}],["/category/apache-commons-compress/",{loader:()=>n(()=>import("./index.html-BTAAutR8.js"),__vite__mapDeps([631,1])),meta:{t:"Apache Commons Compress 分类",I:!1}}],["/category/libraries/",{loader:()=>n(()=>import("./index.html-DqdvMP95.js"),__vite__mapDeps([632,1])),meta:{t:"Libraries 分类",I:!1}}],["/category/sshj/",{loader:()=>n(()=>import("./index.html-mVwcJCTl.js"),__vite__mapDeps([633,1])),meta:{t:"SSHJ 分类",I:!1}}],["/category/email/",{loader:()=>n(()=>import("./index.html-CZIWXwsn.js"),__vite__mapDeps([634,1])),meta:{t:"Email 分类",I:!1}}],["/category/java%E7%BC%96%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-CHC1gUHv.js"),__vite__mapDeps([635,1])),meta:{t:"Java编程 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/",{loader:()=>n(()=>import("./index.html-y4q9Fpml.js"),__vite__mapDeps([636,1])),meta:{t:"数据类型比较 分类",I:!1}}],["/category/jooq/",{loader:()=>n(()=>import("./index.html-CmUKY53n.js"),__vite__mapDeps([637,1])),meta:{t:"jOOQ 分类",I:!1}}],["/category/mybatis/",{loader:()=>n(()=>import("./index.html-C0g0WLoJ.js"),__vite__mapDeps([638,1])),meta:{t:"MyBatis 分类",I:!1}}],["/category/mapstruct/",{loader:()=>n(()=>import("./index.html-7qZrde1o.js"),__vite__mapDeps([639,1])),meta:{t:"MapStruct 分类",I:!1}}],["/category/pdf/",{loader:()=>n(()=>import("./index.html-bUy9X1Cm.js"),__vite__mapDeps([640,1])),meta:{t:"PDF 分类",I:!1}}],["/category/prometheus/",{loader:()=>n(()=>import("./index.html-DMBAa62p.js"),__vite__mapDeps([641,1])),meta:{t:"Prometheus 分类",I:!1}}],["/category/openai-api/",{loader:()=>n(()=>import("./index.html-BSb_dGub.js"),__vite__mapDeps([642,1])),meta:{t:"OpenAI API 分类",I:!1}}],["/category/java-persistence/",{loader:()=>n(()=>import("./index.html-CxB8V1F5.js"),__vite__mapDeps([643,1])),meta:{t:"Java Persistence 分类",I:!1}}],["/category/csv/",{loader:()=>n(()=>import("./index.html-BA0j2nBL.js"),__vite__mapDeps([644,1])),meta:{t:"CSV 分类",I:!1}}],["/category/regex/",{loader:()=>n(()=>import("./index.html-ePYn_AWq.js"),__vite__mapDeps([645,1])),meta:{t:"Regex 分类",I:!1}}],["/category/%E5%AE%89%E5%85%A8/",{loader:()=>n(()=>import("./index.html-bxIS2RIR.js"),__vite__mapDeps([646,1])),meta:{t:"安全 分类",I:!1}}],["/category/security/",{loader:()=>n(()=>import("./index.html-BvhVpS-x.js"),__vite__mapDeps([647,1])),meta:{t:"Security 分类",I:!1}}],["/category/converternotfoundexception/",{loader:()=>n(()=>import("./index.html-L7mlFFOu.js"),__vite__mapDeps([648,1])),meta:{t:"ConverterNotFoundException 分类",I:!1}}],["/category/webclient/",{loader:()=>n(()=>import("./index.html-DAWgH8f1.js"),__vite__mapDeps([649,1])),meta:{t:"WebClient 分类",I:!1}}],["/category/annotations/",{loader:()=>n(()=>import("./index.html-Dk7_nXkR.js"),__vite__mapDeps([650,1])),meta:{t:"Annotations 分类",I:!1}}],["/category/%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/",{loader:()=>n(()=>import("./index.html-DWnoUEZz.js"),__vite__mapDeps([651,1])),meta:{t:"依赖管理 分类",I:!1}}],["/category/unit-testing/",{loader:()=>n(()=>import("./index.html-BuzI3MLX.js"),__vite__mapDeps([652,1])),meta:{t:"Unit Testing 分类",I:!1}}],["/category/comparator/",{loader:()=>n(()=>import("./index.html-BTBxa0IW.js"),__vite__mapDeps([653,1])),meta:{t:"Comparator 分类",I:!1}}],["/category/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E6%9E%9A%E4%B8%BE/",{loader:()=>n(()=>import("./index.html-DrmIq9EQ.js"),__vite__mapDeps([654,1])),meta:{t:"注解与枚举 分类",I:!1}}],["/tag/",{loader:()=>n(()=>import("./index.html-DY8pWZ1z.js"),__vite__mapDeps([655,1])),meta:{t:"标签",I:!1}}],["/tag/alts/",{loader:()=>n(()=>import("./index.html-CQ3xU5o5.js"),__vite__mapDeps([656,1])),meta:{t:"标签: ALTS",I:!1}}],["/tag/%E5%AE%89%E5%85%A8/",{loader:()=>n(()=>import("./index.html-D6VBgc06.js"),__vite__mapDeps([657,1])),meta:{t:"标签: 安全",I:!1}}],["/tag/postgresql/",{loader:()=>n(()=>import("./index.html-BeY4IDll.js"),__vite__mapDeps([658,1])),meta:{t:"标签: PostgreSQL",I:!1}}],["/tag/macos/",{loader:()=>n(()=>import("./index.html-DoXNXau6.js"),__vite__mapDeps([659,1])),meta:{t:"标签: MacOS",I:!1}}],["/tag/homebrew/",{loader:()=>n(()=>import("./index.html-LfD3uVTr.js"),__vite__mapDeps([660,1])),meta:{t:"标签: Homebrew",I:!1}}],["/tag/database/",{loader:()=>n(()=>import("./index.html-DVFYMA-G.js"),__vite__mapDeps([661,1])),meta:{t:"标签: Database",I:!1}}],["/tag/datajpatest/",{loader:()=>n(()=>import("./index.html-DKiWvDjx.js"),__vite__mapDeps([662,1])),meta:{t:"标签: DataJpaTest",I:!1}}],["/tag/repository/",{loader:()=>n(()=>import("./index.html-DGjktH41.js"),__vite__mapDeps([663,1])),meta:{t:"标签: Repository",I:!1}}],["/tag/%E6%95%B0%E5%AD%97%E5%94%AF%E4%B8%80%E6%80%A7/",{loader:()=>n(()=>import("./index.html-IdFH1oHl.js"),__vite__mapDeps([664,1])),meta:{t:"标签: 数字唯一性",I:!1}}],["/tag/%E9%9B%86%E5%90%88/",{loader:()=>n(()=>import("./index.html-BIcywIYb.js"),__vite__mapDeps([665,1])),meta:{t:"标签: 集合",I:!1}}],["/tag/%E6%B5%81api/",{loader:()=>n(()=>import("./index.html-Baxx-aK3.js"),__vite__mapDeps([666,1])),meta:{t:"标签: 流API",I:!1}}],["/tag/%E4%BD%8D%E6%93%8D%E4%BD%9C/",{loader:()=>n(()=>import("./index.html-DyGLb8rY.js"),__vite__mapDeps([667,1])),meta:{t:"标签: 位操作",I:!1}}],["/tag/javatype/",{loader:()=>n(()=>import("./index.html-CG7sgDox.js"),__vite__mapDeps([668,1])),meta:{t:"标签: JavaType",I:!1}}],["/tag/class/",{loader:()=>n(()=>import("./index.html-C-stBEBa.js"),__vite__mapDeps([669,1])),meta:{t:"标签: Class",I:!1}}],["/tag/netty/",{loader:()=>n(()=>import("./index.html-kDTRFQMs.js"),__vite__mapDeps([670,1])),meta:{t:"标签: Netty",I:!1}}],["/tag/%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E5%99%A8/",{loader:()=>n(()=>import("./index.html-eCBeYWsX.js"),__vite__mapDeps([671,1])),meta:{t:"标签: 事件处理器",I:!1}}],["/tag/%E7%9B%91%E5%90%AC%E5%99%A8/",{loader:()=>n(()=>import("./index.html-EPDj93cp.js"),__vite__mapDeps([672,1])),meta:{t:"标签: 监听器",I:!1}}],["/tag/groupid/",{loader:()=>n(()=>import("./index.html-CvKilMM-.js"),__vite__mapDeps([673,1])),meta:{t:"标签: GroupId",I:!1}}],["/tag/consumerid/",{loader:()=>n(()=>import("./index.html-BzrY8OtJ.js"),__vite__mapDeps([674,1])),meta:{t:"标签: ConsumerId",I:!1}}],["/tag/api%E6%96%87%E6%A1%A3/",{loader:()=>n(()=>import("./index.html-BZDhVsqM.js"),__vite__mapDeps([675,1])),meta:{t:"标签: API文档",I:!1}}],["/tag/spring-boot/",{loader:()=>n(()=>import("./index.html-xziYIwvz.js"),__vite__mapDeps([676,1])),meta:{t:"标签: Spring Boot",I:!1}}],["/tag/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/",{loader:()=>n(()=>import("./index.html-rFPss2D8.js"),__vite__mapDeps([677,1])),meta:{t:"标签: 二叉搜索树",I:!1}}],["/tag/%E7%AE%97%E6%B3%95/",{loader:()=>n(()=>import("./index.html-N4lf0nvS.js"),__vite__mapDeps([678,1])),meta:{t:"标签: 算法",I:!1}}],["/tag/%E5%BA%8F%E5%88%97/",{loader:()=>n(()=>import("./index.html-Cc6X9fGY.js"),__vite__mapDeps([679,1])),meta:{t:"标签: 序列",I:!1}}],["/tag/%E9%80%92%E5%BD%92/",{loader:()=>n(()=>import("./index.html-D5xLS0uM.js"),__vite__mapDeps([680,1])),meta:{t:"标签: 递归",I:!1}}],["/tag/java/",{loader:()=>n(()=>import("./index.html-tnLWk3KE.js"),__vite__mapDeps([681,1])),meta:{t:"标签: Java",I:!1}}],["/tag/string/",{loader:()=>n(()=>import("./index.html-DHox7PQL.js"),__vite__mapDeps([682,1])),meta:{t:"标签: String",I:!1}}],["/tag/substring/",{loader:()=>n(()=>import("./index.html-BiJpRTNR.js"),__vite__mapDeps([683,1])),meta:{t:"标签: substring",I:!1}}],["/tag/apache-commons-lang/",{loader:()=>n(()=>import("./index.html-CETmyKIA.js"),__vite__mapDeps([684,1])),meta:{t:"标签: Apache Commons Lang",I:!1}}],["/tag/guava/",{loader:()=>n(()=>import("./index.html-BfHIAhVk.js"),__vite__mapDeps([685,1])),meta:{t:"标签: Guava",I:!1}}],["/tag/%E7%BC%A9%E5%86%99/",{loader:()=>n(()=>import("./index.html-D3u8V8IK.js"),__vite__mapDeps([686,1])),meta:{t:"标签: 缩写",I:!1}}],["/tag/%E5%A7%93%E5%90%8D%E7%BC%A9%E5%86%99/",{loader:()=>n(()=>import("./index.html-CCH-E8NY.js"),__vite__mapDeps([687,1])),meta:{t:"标签: 姓名缩写",I:!1}}],["/tag/json/",{loader:()=>n(()=>import("./index.html-DSMZYZo0.js"),__vite__mapDeps([688,1])),meta:{t:"标签: JSON",I:!1}}],["/tag/java-list/",{loader:()=>n(()=>import("./index.html-Cd332jKe.js"),__vite__mapDeps([689,1])),meta:{t:"标签: Java List",I:!1}}],["/tag/typetoken/",{loader:()=>n(()=>import("./index.html-C9cchRX_.js"),__vite__mapDeps([690,1])),meta:{t:"标签: TypeToken",I:!1}}],["/tag/s3/",{loader:()=>n(()=>import("./index.html-Bpre7wpk.js"),__vite__mapDeps([691,1])),meta:{t:"标签: S3",I:!1}}],["/tag/mock/",{loader:()=>n(()=>import("./index.html-BVXkxC8d.js"),__vite__mapDeps([692,1])),meta:{t:"标签: Mock",I:!1}}],["/tag/testing/",{loader:()=>n(()=>import("./index.html-CzoPwVcn.js"),__vite__mapDeps([693,1])),meta:{t:"标签: Testing",I:!1}}],["/tag/%E5%9C%B0%E5%9B%BE/",{loader:()=>n(()=>import("./index.html-g4skijJE.js"),__vite__mapDeps([694,1])),meta:{t:"标签: 地图",I:!1}}],["/tag/%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/",{loader:()=>n(()=>import("./index.html-Dh5WLDxF.js"),__vite__mapDeps([695,1])),meta:{t:"标签: 格式化输出",I:!1}}],["/tag/graphql-mutation/",{loader:()=>n(()=>import("./index.html-UT53XCLy.js"),__vite__mapDeps([696,1])),meta:{t:"标签: GraphQL Mutation",I:!1}}],["/tag/spring/",{loader:()=>n(()=>import("./index.html-DUi4POcj.js"),__vite__mapDeps([697,1])),meta:{t:"标签: Spring",I:!1}}],["/tag/spring-security/",{loader:()=>n(()=>import("./index.html-TdWeq1gz.js"),__vite__mapDeps([698,1])),meta:{t:"标签: Spring Security",I:!1}}],["/tag/spring-data-jpa/",{loader:()=>n(()=>import("./index.html-DaOGh0lq.js"),__vite__mapDeps([699,1])),meta:{t:"标签: Spring Data JPA",I:!1}}],["/tag/%E8%BF%81%E7%A7%BB/",{loader:()=>n(()=>import("./index.html-C1B7qOa3.js"),__vite__mapDeps([700,1])),meta:{t:"标签: 迁移",I:!1}}],["/tag/%E6%B5%81/",{loader:()=>n(()=>import("./index.html-C0Ydybnw.js"),__vite__mapDeps([701,1])),meta:{t:"标签: 流",I:!1}}],["/tag/%E5%88%97%E8%A1%A8/",{loader:()=>n(()=>import("./index.html-DvuUr_ff.js"),__vite__mapDeps([702,1])),meta:{t:"标签: 列表",I:!1}}],["/tag/%E6%89%93%E5%8D%B0/",{loader:()=>n(()=>import("./index.html-VQmmxxPQ.js"),__vite__mapDeps([703,1])),meta:{t:"标签: 打印",I:!1}}],["/tag/query-hints/",{loader:()=>n(()=>import("./index.html-8u1uZr-I.js"),__vite__mapDeps([704,1])),meta:{t:"标签: Query Hints",I:!1}}],["/tag/performance/",{loader:()=>n(()=>import("./index.html-Dj7MDVcY.js"),__vite__mapDeps([705,1])),meta:{t:"标签: Performance",I:!1}}],["/tag/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-wQkxpQbZ.js"),__vite__mapDeps([706,1])),meta:{t:"标签: 函数式编程",I:!1}}],["/tag/railway-oriented-programming/",{loader:()=>n(()=>import("./index.html-QPQAjnto.js"),__vite__mapDeps([707,1])),meta:{t:"标签: Railway Oriented Programming",I:!1}}],["/tag/trailing-spaces/",{loader:()=>n(()=>import("./index.html-Bm0f5l0M.js"),__vite__mapDeps([708,1])),meta:{t:"标签: trailing spaces",I:!1}}],["/tag/whitespace/",{loader:()=>n(()=>import("./index.html-CLEZJcd1.js"),__vite__mapDeps([709,1])),meta:{t:"标签: whitespace",I:!1}}],["/tag/regex/",{loader:()=>n(()=>import("./index.html-Ctecdz2t.js"),__vite__mapDeps([710,1])),meta:{t:"标签: regex",I:!1}}],["/tag/striptrailing/",{loader:()=>n(()=>import("./index.html-BEWs1xBw.js"),__vite__mapDeps([711,1])),meta:{t:"标签: stripTrailing",I:!1}}],["/tag/flatbuffers/",{loader:()=>n(()=>import("./index.html-CswVs0H0.js"),__vite__mapDeps([712,1])),meta:{t:"标签: FlatBuffers",I:!1}}],["/tag/tutorial/",{loader:()=>n(()=>import("./index.html-zUIqGH3i.js"),__vite__mapDeps([713,1])),meta:{t:"标签: Tutorial",I:!1}}],["/tag/jsonnode/",{loader:()=>n(()=>import("./index.html-Bovrg-t5.js"),__vite__mapDeps([714,1])),meta:{t:"标签: JsonNode",I:!1}}],["/tag/arraynode/",{loader:()=>n(()=>import("./index.html-CsGCteER.js"),__vite__mapDeps([715,1])),meta:{t:"标签: ArrayNode",I:!1}}],["/tag/hibernate/",{loader:()=>n(()=>import("./index.html-BS3KaKBR.js"),__vite__mapDeps([716,1])),meta:{t:"标签: Hibernate",I:!1}}],["/tag/rest-api/",{loader:()=>n(()=>import("./index.html-ouoGDyLl.js"),__vite__mapDeps([717,1])),meta:{t:"标签: REST API",I:!1}}],["/tag/testcontainers/",{loader:()=>n(()=>import("./index.html-YeJ52xaF.js"),__vite__mapDeps([718,1])),meta:{t:"标签: Testcontainers",I:!1}}],["/tag/docker/",{loader:()=>n(()=>import("./index.html-BmuQeHMF.js"),__vite__mapDeps([719,1])),meta:{t:"标签: Docker",I:!1}}],["/tag/testing-tools/",{loader:()=>n(()=>import("./index.html-DyOoB0wL.js"),__vite__mapDeps([720,1])),meta:{t:"标签: Testing Tools",I:!1}}],["/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/",{loader:()=>n(()=>import("./index.html-B7OOqKS_.js"),__vite__mapDeps([721,1])),meta:{t:"标签: 分布式系统",I:!1}}],["/tag/%E9%94%AE%E5%80%BC%E5%AD%98%E5%82%A8/",{loader:()=>n(()=>import("./index.html-D46wwPPt.js"),__vite__mapDeps([722,1])),meta:{t:"标签: 键值存储",I:!1}}],["/tag/annotation/",{loader:()=>n(()=>import("./index.html-C8V4pmst.js"),__vite__mapDeps([723,1])),meta:{t:"标签: Annotation",I:!1}}],["/tag/softdelete/",{loader:()=>n(()=>import("./index.html-COfu3ibF.js"),__vite__mapDeps([724,1])),meta:{t:"标签: SoftDelete",I:!1}}],["/tag/%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/",{loader:()=>n(()=>import("./index.html-B5h65vnt.js"),__vite__mapDeps([725,1])),meta:{t:"标签: 动态路由",I:!1}}],["/tag/%E4%BC%81%E4%B8%9A%E9%9B%86%E6%88%90%E6%A8%A1%E5%BC%8F/",{loader:()=>n(()=>import("./index.html-Oz8Zkw26.js"),__vite__mapDeps([726,1])),meta:{t:"标签: 企业集成模式",I:!1}}],["/tag/%E6%9D%83%E9%87%8D%E5%B9%B3%E5%9D%87%E6%95%B0/",{loader:()=>n(()=>import("./index.html-BSUdXfaY.js"),__vite__mapDeps([727,1])),meta:{t:"标签: 权重平均数",I:!1}}],["/tag/%E8%AE%A1%E7%AE%97/",{loader:()=>n(()=>import("./index.html-BgFIY8u6.js"),__vite__mapDeps([728,1])),meta:{t:"标签: 计算",I:!1}}],["/tag/base64%E7%BC%96%E7%A0%81/",{loader:()=>n(()=>import("./index.html-C4VZ0IUO.js"),__vite__mapDeps([729,1])),meta:{t:"标签: Base64编码",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/",{loader:()=>n(()=>import("./index.html-DLTYdhV9.js"),__vite__mapDeps([730,1])),meta:{t:"标签: 数据编码",I:!1}}],["/tag/string-rotation/",{loader:()=>n(()=>import("./index.html-CKj3Nrt1.js"),__vite__mapDeps([731,1])),meta:{t:"标签: String Rotation",I:!1}}],["/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC/",{loader:()=>n(()=>import("./index.html-BmHiaM8B.js"),__vite__mapDeps([732,1])),meta:{t:"标签: 字符串反转",I:!1}}],["/tag/%E9%95%9C%E5%83%8F%E6%B5%8B%E8%AF%95/",{loader:()=>n(()=>import("./index.html-Bjhlod2_.js"),__vite__mapDeps([733,1])),meta:{t:"标签: 镜像测试",I:!1}}],["/tag/linkedhashmap/",{loader:()=>n(()=>import("./index.html-DalztaoZ.js"),__vite__mapDeps([734,1])),meta:{t:"标签: LinkedHashMap",I:!1}}],["/tag/stream/",{loader:()=>n(()=>import("./index.html-CGBAFsB9.js"),__vite__mapDeps([735,1])),meta:{t:"标签: Stream",I:!1}}],["/tag/java-8/",{loader:()=>n(()=>import("./index.html-DykGs0cG.js"),__vite__mapDeps([736,1])),meta:{t:"标签: Java 8",I:!1}}],["/tag/completablefuture/",{loader:()=>n(()=>import("./index.html-Ve0eo3BL.js"),__vite__mapDeps([737,1])),meta:{t:"标签: CompletableFuture",I:!1}}],["/tag/runasync/",{loader:()=>n(()=>import("./index.html-BXGQoifU.js"),__vite__mapDeps([738,1])),meta:{t:"标签: runAsync",I:!1}}],["/tag/supplyasync/",{loader:()=>n(()=>import("./index.html-DOj0FrWB.js"),__vite__mapDeps([739,1])),meta:{t:"标签: supplyAsync",I:!1}}],["/tag/unix-timestamp/",{loader:()=>n(()=>import("./index.html-CSJPUcjb.js"),__vite__mapDeps([740,1])),meta:{t:"标签: Unix Timestamp",I:!1}}],["/tag/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BD%AC%E6%8D%A2/",{loader:()=>n(()=>import("./index.html-BeFTdSW2.js"),__vite__mapDeps([741,1])),meta:{t:"标签: 表达式转换",I:!1}}],["/tag/%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E7%A4%BA%E6%B3%95/",{loader:()=>n(()=>import("./index.html-BhZyiMh7.js"),__vite__mapDeps([742,1])),meta:{t:"标签: 逆波兰表示法",I:!1}}],["/tag/uppercase/",{loader:()=>n(()=>import("./index.html-DSoOTN7L.js"),__vite__mapDeps([743,1])),meta:{t:"标签: uppercase",I:!1}}],["/tag/lowercase/",{loader:()=>n(()=>import("./index.html-BZECha-u.js"),__vite__mapDeps([744,1])),meta:{t:"标签: lowercase",I:!1}}],["/tag/count/",{loader:()=>n(()=>import("./index.html-DC7CU9Jf.js"),__vite__mapDeps([745,1])),meta:{t:"标签: count",I:!1}}],["/tag/countdownlatch/",{loader:()=>n(()=>import("./index.html-iHlcEPgK.js"),__vite__mapDeps([746,1])),meta:{t:"标签: CountDownLatch",I:!1}}],["/tag/semaphore/",{loader:()=>n(()=>import("./index.html-B5SaNd50.js"),__vite__mapDeps([747,1])),meta:{t:"标签: Semaphore",I:!1}}],["/tag/urlconnection/",{loader:()=>n(()=>import("./index.html-DyZsweOs.js"),__vite__mapDeps([748,1])),meta:{t:"标签: URLConnection",I:!1}}],["/tag/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%9E%E6%8E%A5/",{loader:()=>n(()=>import("./index.html-6OznejB4.js"),__vite__mapDeps([749,1])),meta:{t:"标签: 自定义连接",I:!1}}],["/tag/thenapply/",{loader:()=>n(()=>import("./index.html-Dpm8iD4D.js"),__vite__mapDeps([750,1])),meta:{t:"标签: thenApply",I:!1}}],["/tag/thenapplyasync/",{loader:()=>n(()=>import("./index.html-Co6e1_3G.js"),__vite__mapDeps([751,1])),meta:{t:"标签: thenApplyAsync",I:!1}}],["/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-JFo1uUFy.js"),__vite__mapDeps([752,1])),meta:{t:"标签: 字符串处理",I:!1}}],["/tag/%E6%95%B0%E5%AD%97%E6%8F%90%E5%8F%96/",{loader:()=>n(()=>import("./index.html-B4L1gsO-.js"),__vite__mapDeps([753,1])),meta:{t:"标签: 数字提取",I:!1}}],["/tag/equilibrium-index/",{loader:()=>n(()=>import("./index.html-BqapO4gk.js"),__vite__mapDeps([754,1])),meta:{t:"标签: Equilibrium Index",I:!1}}],["/tag/array/",{loader:()=>n(()=>import("./index.html-C0ex7a4o.js"),__vite__mapDeps([755,1])),meta:{t:"标签: Array",I:!1}}],["/tag/%E9%9D%9E%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/",{loader:()=>n(()=>import("./index.html-DfbPl4cT.js"),__vite__mapDeps([756,1])),meta:{t:"标签: 非重复元素",I:!1}}],["/tag/%E5%88%97%E8%A1%A8%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-B0g3otth.js"),__vite__mapDeps([757,1])),meta:{t:"标签: 列表处理",I:!1}}],["/tag/spring-data/",{loader:()=>n(()=>import("./index.html-D9_ullFh.js"),__vite__mapDeps([758,1])),meta:{t:"标签: Spring Data",I:!1}}],["/tag/jpa/",{loader:()=>n(()=>import("./index.html-Bjw9g4wG.js"),__vite__mapDeps([759,1])),meta:{t:"标签: JPA",I:!1}}],["/tag/learn-spring-security/",{loader:()=>n(()=>import("./index.html-rm-llAA4.js"),__vite__mapDeps([760,1])),meta:{t:"标签: Learn Spring Security",I:!1}}],["/tag/learn-spring-security-core/",{loader:()=>n(()=>import("./index.html-GT5OqeFY.js"),__vite__mapDeps([761,1])),meta:{t:"标签: Learn Spring Security Core",I:!1}}],["/tag/learn-spring-security-oauth/",{loader:()=>n(()=>import("./index.html-C_-vOZm5.js"),__vite__mapDeps([762,1])),meta:{t:"标签: Learn Spring Security OAuth",I:!1}}],["/tag/learn-spring/",{loader:()=>n(()=>import("./index.html-CxR-C8ny.js"),__vite__mapDeps([763,1])),meta:{t:"标签: Learn Spring",I:!1}}],["/tag/learn-spring-data-jpa/",{loader:()=>n(()=>import("./index.html-BFsopebA.js"),__vite__mapDeps([764,1])),meta:{t:"标签: Learn Spring Data JPA",I:!1}}],["/tag/system.in.read()/",{loader:()=>n(()=>import("./index.html-Cxrwwm_y.js"),__vite__mapDeps([765,1])),meta:{t:"标签: System.in.read()",I:!1}}],["/tag/%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5/",{loader:()=>n(()=>import("./index.html-BjTQCzc5.js"),__vite__mapDeps([766,1])),meta:{t:"标签: 用户输入",I:!1}}],["/tag/findby/",{loader:()=>n(()=>import("./index.html-LEvTYY_f.js"),__vite__mapDeps([767,1])),meta:{t:"标签: findBy",I:!1}}],["/tag/%E5%A4%9A%E5%88%97%E6%9F%A5%E8%AF%A2/",{loader:()=>n(()=>import("./index.html-CFCBnJYg.js"),__vite__mapDeps([768,1])),meta:{t:"标签: 多列查询",I:!1}}],["/tag/thymeleaf/",{loader:()=>n(()=>import("./index.html-CKNz_Q8a.js"),__vite__mapDeps([769,1])),meta:{t:"标签: Thymeleaf",I:!1}}],["/tag/spring-mvc/",{loader:()=>n(()=>import("./index.html-viD4J9-u.js"),__vite__mapDeps([770,1])),meta:{t:"标签: Spring MVC",I:!1}}],["/tag/junit-5/",{loader:()=>n(()=>import("./index.html-D9GLRQ-K.js"),__vite__mapDeps([771,1])),meta:{t:"标签: JUnit 5",I:!1}}],["/tag/mockito/",{loader:()=>n(()=>import("./index.html-BcyUxELr.js"),__vite__mapDeps([772,1])),meta:{t:"标签: Mockito",I:!1}}],["/tag/%E6%B5%8B%E8%AF%95/",{loader:()=>n(()=>import("./index.html-ow0_gt2s.js"),__vite__mapDeps([773,1])),meta:{t:"标签: 测试",I:!1}}],["/tag/jdk/",{loader:()=>n(()=>import("./index.html-DiUN1n1Y.js"),__vite__mapDeps([774,1])),meta:{t:"标签: JDK",I:!1}}],["/tag/%E5%AE%89%E8%A3%85/",{loader:()=>n(()=>import("./index.html-DkEEej2e.js"),__vite__mapDeps([775,1])),meta:{t:"标签: 安装",I:!1}}],["/tag/java%E5%8F%8D%E5%B0%84/",{loader:()=>n(()=>import("./index.html-CjOaGWLG.js"),__vite__mapDeps([776,1])),meta:{t:"标签: Java反射",I:!1}}],["/tag/%E5%86%85%E5%B5%8C%E7%B1%BB%E5%AE%9E%E4%BE%8B%E5%8C%96/",{loader:()=>n(()=>import("./index.html-DBh0tqRB.js"),__vite__mapDeps([777,1])),meta:{t:"标签: 内嵌类实例化",I:!1}}],["/tag/%E6%BA%90%E4%BB%A3%E7%A0%81%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/",{loader:()=>n(()=>import("./index.html-DOiRx_bo.js"),__vite__mapDeps([778,1])),meta:{t:"标签: 源代码搜索引擎",I:!1}}],["/tag/%E8%B7%A8%E5%BC%95%E7%94%A8/",{loader:()=>n(()=>import("./index.html-Bnf0x9Mu.js"),__vite__mapDeps([779,1])),meta:{t:"标签: 跨引用",I:!1}}],["/tag/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/",{loader:()=>n(()=>import("./index.html-CPE6nOQM.js"),__vite__mapDeps([780,1])),meta:{t:"标签: 安装指南",I:!1}}],["/tag/logging/",{loader:()=>n(()=>import("./index.html-BOKl6Lb5.js"),__vite__mapDeps([781,1])),meta:{t:"标签: Logging",I:!1}}],["/tag/aspect-oriented-programming/",{loader:()=>n(()=>import("./index.html-CRS0c_ZH.js"),__vite__mapDeps([782,1])),meta:{t:"标签: Aspect-Oriented Programming",I:!1}}],["/tag/%E9%82%AE%E7%AE%B1%E5%9C%B0%E5%9D%80/",{loader:()=>n(()=>import("./index.html-Dma_ddhw.js"),__vite__mapDeps([783,1])),meta:{t:"标签: 邮箱地址",I:!1}}],["/tag/%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81/",{loader:()=>n(()=>import("./index.html-C_SCJ9Dg.js"),__vite__mapDeps([784,1])),meta:{t:"标签: 电话号码",I:!1}}],["/tag/%E8%84%B1%E6%95%8F/",{loader:()=>n(()=>import("./index.html-C-s_4wD2.js"),__vite__mapDeps([785,1])),meta:{t:"标签: 脱敏",I:!1}}],["/tag/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",{loader:()=>n(()=>import("./index.html-C_lT-vW3.js"),__vite__mapDeps([786,1])),meta:{t:"标签: 正则表达式",I:!1}}],["/tag/algorithm/",{loader:()=>n(()=>import("./index.html-DaGl6K89.js"),__vite__mapDeps([787,1])),meta:{t:"标签: Algorithm",I:!1}}],["/tag/%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1/",{loader:()=>n(()=>import("./index.html-ceUpGWGM.js"),__vite__mapDeps([788,1])),meta:{t:"标签: 可变对象",I:!1}}],["/tag/%E4%B8%8D%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1/",{loader:()=>n(()=>import("./index.html-Bq1nulUe.js"),__vite__mapDeps([789,1])),meta:{t:"标签: 不可变对象",I:!1}}],["/tag/backend-for-frontend/",{loader:()=>n(()=>import("./index.html-DKLo8cZA.js"),__vite__mapDeps([790,1])),meta:{t:"标签: Backend for Frontend",I:!1}}],["/tag/pagination/",{loader:()=>n(()=>import("./index.html-Bq-BdFSm.js"),__vite__mapDeps([791,1])),meta:{t:"标签: Pagination",I:!1}}],["/tag/jdbc/",{loader:()=>n(()=>import("./index.html-De1kmITr.js"),__vite__mapDeps([792,1])),meta:{t:"标签: JDBC",I:!1}}],["/tag/kotlin/",{loader:()=>n(()=>import("./index.html-CF0rrBt2.js"),__vite__mapDeps([793,1])),meta:{t:"标签: Kotlin",I:!1}}],["/tag/string-parsing/",{loader:()=>n(()=>import("./index.html-mDSjf2x5.js"),__vite__mapDeps([794,1])),meta:{t:"标签: String Parsing",I:!1}}],["/tag/number-format/",{loader:()=>n(()=>import("./index.html-B3aApXVg.js"),__vite__mapDeps([795,1])),meta:{t:"标签: Number Format",I:!1}}],["/tag/serialization/",{loader:()=>n(()=>import("./index.html-DzyO2pEN.js"),__vite__mapDeps([796,1])),meta:{t:"标签: Serialization",I:!1}}],["/tag/deserialization/",{loader:()=>n(()=>import("./index.html-BflPfUCo.js"),__vite__mapDeps([797,1])),meta:{t:"标签: Deserialization",I:!1}}],["/tag/java%E8%99%9A%E6%8B%9F%E7%BA%BF%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-yyZQtwBX.js"),__vite__mapDeps([798,1])),meta:{t:"标签: Java虚拟线程",I:!1}}],["/tag/%E5%B9%B6%E5%8F%91/",{loader:()=>n(()=>import("./index.html-CgRqe1px.js"),__vite__mapDeps([799,1])),meta:{t:"标签: 并发",I:!1}}],["/tag/maven/",{loader:()=>n(()=>import("./index.html-B8GFG0_2.js"),__vite__mapDeps([800,1])),meta:{t:"标签: Maven",I:!1}}],["/tag/java-18/",{loader:()=>n(()=>import("./index.html-CBujqjVI.js"),__vite__mapDeps([801,1])),meta:{t:"标签: Java 18",I:!1}}],["/tag/simple-web-server/",{loader:()=>n(()=>import("./index.html-BfmjAVhf.js"),__vite__mapDeps([802,1])),meta:{t:"标签: Simple Web Server",I:!1}}],["/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",{loader:()=>n(()=>import("./index.html-sVB6xXWe.js"),__vite__mapDeps([803,1])),meta:{t:"标签: 动态规划",I:!1}}],["/tag/base64/",{loader:()=>n(()=>import("./index.html-BHVXuKQc.js"),__vite__mapDeps([804,1])),meta:{t:"标签: Base64",I:!1}}],["/tag/encoding/",{loader:()=>n(()=>import("./index.html-WY2ZZas2.js"),__vite__mapDeps([805,1])),meta:{t:"标签: Encoding",I:!1}}],["/tag/urlencoder/",{loader:()=>n(()=>import("./index.html-DDzda0lm.js"),__vite__mapDeps([806,1])),meta:{t:"标签: URLEncoder",I:!1}}],["/tag/%E7%BC%96%E7%A0%81/",{loader:()=>n(()=>import("./index.html-bUAvIrP_.js"),__vite__mapDeps([807,1])),meta:{t:"标签: 编码",I:!1}}],["/tag/%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/",{loader:()=>n(()=>import("./index.html-CThF5jxn.js"),__vite__mapDeps([808,1])),meta:{t:"标签: 特殊字符",I:!1}}],["/tag/raw-type/",{loader:()=>n(()=>import("./index.html-C0REUve1.js"),__vite__mapDeps([809,1])),meta:{t:"标签: Raw Type",I:!1}}],["/tag/java-generics/",{loader:()=>n(()=>import("./index.html-TZbxdky-.js"),__vite__mapDeps([810,1])),meta:{t:"标签: Java Generics",I:!1}}],["/tag/instancealreadyexistsexception/",{loader:()=>n(()=>import("./index.html-BBr3fbNi.js"),__vite__mapDeps([811,1])),meta:{t:"标签: InstanceAlreadyExistsException",I:!1}}],["/tag/kafka-producer/",{loader:()=>n(()=>import("./index.html-Cxld4iN2.js"),__vite__mapDeps([812,1])),meta:{t:"标签: Kafka producer",I:!1}}],["/tag/kafka-consumer/",{loader:()=>n(()=>import("./index.html-CW30lPgq.js"),__vite__mapDeps([813,1])),meta:{t:"标签: Kafka consumer",I:!1}}],["/tag/apache-kafka/",{loader:()=>n(()=>import("./index.html-C2VBgMhn.js"),__vite__mapDeps([814,1])),meta:{t:"标签: Apache Kafka",I:!1}}],["/tag/kafka-headers/",{loader:()=>n(()=>import("./index.html-DDeh3pVI.js"),__vite__mapDeps([815,1])),meta:{t:"标签: Kafka Headers",I:!1}}],["/tag/jobparameters/",{loader:()=>n(()=>import("./index.html-DmtrsZ59.js"),__vite__mapDeps([816,1])),meta:{t:"标签: JobParameters",I:!1}}],["/tag/itemreader/",{loader:()=>n(()=>import("./index.html-DwAKUFev.js"),__vite__mapDeps([817,1])),meta:{t:"标签: ItemReader",I:!1}}],["/tag/%E6%95%99%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-BVvh57Pr.js"),__vite__mapDeps([818,1])),meta:{t:"标签: 教程",I:!1}}],["/tag/design-pattern/",{loader:()=>n(()=>import("./index.html-THnvWDmF.js"),__vite__mapDeps([819,1])),meta:{t:"标签: Design Pattern",I:!1}}],["/tag/builder-pattern/",{loader:()=>n(()=>import("./index.html-B0Sl8cR8.js"),__vite__mapDeps([820,1])),meta:{t:"标签: Builder Pattern",I:!1}}],["/tag/%E5%B7%A5%E4%BD%9C%E6%97%A5%E8%AE%A1%E7%AE%97/",{loader:()=>n(()=>import("./index.html-BnTJu2Lb.js"),__vite__mapDeps([821,1])),meta:{t:"标签: 工作日计算",I:!1}}],["/tag/java%E6%97%A5%E6%9C%9F%E6%93%8D%E4%BD%9C/",{loader:()=>n(()=>import("./index.html-TbSiMHNz.js"),__vite__mapDeps([822,1])),meta:{t:"标签: Java日期操作",I:!1}}],["/tag/%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97/",{loader:()=>n(()=>import("./index.html-DzUA4bOZ.js"),__vite__mapDeps([823,1])),meta:{t:"标签: 数学运算",I:!1}}],["/tag/persistence/",{loader:()=>n(()=>import("./index.html-C2g8LldD.js"),__vite__mapDeps([824,1])),meta:{t:"标签: Persistence",I:!1}}],["/tag/rest/",{loader:()=>n(()=>import("./index.html-D26Dlskg.js"),__vite__mapDeps([825,1])),meta:{t:"标签: REST",I:!1}}],["/tag/security/",{loader:()=>n(()=>import("./index.html-CblQrt2_.js"),__vite__mapDeps([826,1])),meta:{t:"标签: Security",I:!1}}],["/tag/gregorian/",{loader:()=>n(()=>import("./index.html-wDiG8S-G.js"),__vite__mapDeps([827,1])),meta:{t:"标签: Gregorian",I:!1}}],["/tag/hijri/",{loader:()=>n(()=>import("./index.html-bSl0gov5.js"),__vite__mapDeps([828,1])),meta:{t:"标签: Hijri",I:!1}}],["/tag/%E6%97%A5%E6%9C%9F%E8%BD%AC%E6%8D%A2/",{loader:()=>n(()=>import("./index.html-D7gY-ZyG.js"),__vite__mapDeps([829,1])),meta:{t:"标签: 日期转换",I:!1}}],["/tag/instant/",{loader:()=>n(()=>import("./index.html-Cil27UNk.js"),__vite__mapDeps([830,1])),meta:{t:"标签: Instant",I:!1}}],["/tag/localdate/",{loader:()=>n(()=>import("./index.html-DG7LZf8G.js"),__vite__mapDeps([831,1])),meta:{t:"标签: LocalDate",I:!1}}],["/tag/joda-time/",{loader:()=>n(()=>import("./index.html-CMGK6LaN.js"),__vite__mapDeps([832,1])),meta:{t:"标签: Joda-Time",I:!1}}],["/tag/string-date-conversion/",{loader:()=>n(()=>import("./index.html-1aT7J1Ft.js"),__vite__mapDeps([833,1])),meta:{t:"标签: String Date Conversion",I:!1}}],["/tag/xml-schema/",{loader:()=>n(()=>import("./index.html-BntG8g2o.js"),__vite__mapDeps([834,1])),meta:{t:"标签: XML Schema",I:!1}}],["/tag/byte/",{loader:()=>n(()=>import("./index.html-Df87snr9.js"),__vite__mapDeps([835,1])),meta:{t:"标签: byte",I:!1}}],["/tag/int/",{loader:()=>n(()=>import("./index.html-Bwh7BIhI.js"),__vite__mapDeps([836,1])),meta:{t:"标签: int",I:!1}}],["/tag/%E8%BD%AC%E6%8D%A2/",{loader:()=>n(()=>import("./index.html-Dj9dPbWC.js"),__vite__mapDeps([837,1])),meta:{t:"标签: 转换",I:!1}}],["/tag/unicode/",{loader:()=>n(()=>import("./index.html-CoU2n3Y4.js"),__vite__mapDeps([838,1])),meta:{t:"标签: Unicode",I:!1}}],["/tag/spring-webclient/",{loader:()=>n(()=>import("./index.html-CFNdx1jE.js"),__vite__mapDeps([839,1])),meta:{t:"标签: Spring WebClient",I:!1}}],["/tag/custom-deserialization/",{loader:()=>n(()=>import("./index.html-Bby_VZfR.js"),__vite__mapDeps([840,1])),meta:{t:"标签: Custom Deserialization",I:!1}}],["/tag/mvn-verify/",{loader:()=>n(()=>import("./index.html-Dts4FTg0.js"),__vite__mapDeps([841,1])),meta:{t:"标签: mvn verify",I:!1}}],["/tag/mvn-test/",{loader:()=>n(()=>import("./index.html-CFkjv8Fb.js"),__vite__mapDeps([842,1])),meta:{t:"标签: mvn test",I:!1}}],["/tag/mvn-install/",{loader:()=>n(()=>import("./index.html-uXyXP2Bk.js"),__vite__mapDeps([843,1])),meta:{t:"标签: mvn install",I:!1}}],["/tag/%E6%97%B6%E9%97%B4/",{loader:()=>n(()=>import("./index.html-Btn8FjXt.js"),__vite__mapDeps([844,1])),meta:{t:"标签: 时间",I:!1}}],["/tag/%E6%97%B6%E5%8C%BA/",{loader:()=>n(()=>import("./index.html-fqb6BxTY.js"),__vite__mapDeps([845,1])),meta:{t:"标签: 时区",I:!1}}],["/tag/ssl-debug/",{loader:()=>n(()=>import("./index.html-YScphjJc.js"),__vite__mapDeps([846,1])),meta:{t:"标签: SSL Debug",I:!1}}],["/tag/java-secure-socket-layer/",{loader:()=>n(()=>import("./index.html-DiYQcVXW.js"),__vite__mapDeps([847,1])),meta:{t:"标签: Java Secure Socket Layer",I:!1}}],["/tag/orkes-conductor/",{loader:()=>n(()=>import("./index.html-BBYwqjd8.js"),__vite__mapDeps([848,1])),meta:{t:"标签: Orkes Conductor",I:!1}}],["/tag/kafka/",{loader:()=>n(()=>import("./index.html-n2DXMpPG.js"),__vite__mapDeps([849,1])),meta:{t:"标签: Kafka",I:!1}}],["/tag/event-driven/",{loader:()=>n(()=>import("./index.html-DUzY8FKr.js"),__vite__mapDeps([850,1])),meta:{t:"标签: Event-Driven",I:!1}}],["/tag/securerandom/",{loader:()=>n(()=>import("./index.html-QWQlP8vE.js"),__vite__mapDeps([851,1])),meta:{t:"标签: SecureRandom",I:!1}}],["/tag/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90/",{loader:()=>n(()=>import("./index.html-Xlz5ePvl.js"),__vite__mapDeps([852,1])),meta:{t:"标签: 随机数生成",I:!1}}],["/tag/spring-kafka/",{loader:()=>n(()=>import("./index.html-CDSU4pKU.js"),__vite__mapDeps([853,1])),meta:{t:"标签: Spring-Kafka",I:!1}}],["/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2/",{loader:()=>n(()=>import("./index.html-CrfWqdwL.js"),__vite__mapDeps([854,1])),meta:{t:"标签: 字符串",I:!1}}],["/tag/utf-8/",{loader:()=>n(()=>import("./index.html-IP4itrkE.js"),__vite__mapDeps([855,1])),meta:{t:"标签: UTF-8",I:!1}}],["/tag/iso-8859-1/",{loader:()=>n(()=>import("./index.html-IRnCPc5A.js"),__vite__mapDeps([856,1])),meta:{t:"标签: ISO-8859-1",I:!1}}],["/tag/service-url/",{loader:()=>n(()=>import("./index.html-C4_iF7JC.js"),__vite__mapDeps([857,1])),meta:{t:"标签: Service URL",I:!1}}],["/tag/clusterip/",{loader:()=>n(()=>import("./index.html-Bt_10ER2.js"),__vite__mapDeps([858,1])),meta:{t:"标签: ClusterIP",I:!1}}],["/tag/nodeport/",{loader:()=>n(()=>import("./index.html-CiH61uJf.js"),__vite__mapDeps([859,1])),meta:{t:"标签: NodePort",I:!1}}],["/tag/loadbalancer/",{loader:()=>n(()=>import("./index.html-DepRFA5d.js"),__vite__mapDeps([860,1])),meta:{t:"标签: LoadBalancer",I:!1}}],["/tag/%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87/",{loader:()=>n(()=>import("./index.html-BffAQCgK.js"),__vite__mapDeps([861,1])),meta:{t:"标签: 测试覆盖率",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E7%AE%A1%E9%81%93/",{loader:()=>n(()=>import("./index.html-CMvCvzWD.js"),__vite__mapDeps([862,1])),meta:{t:"标签: 数据管道",I:!1}}],["/tag/kotlinpoet/",{loader:()=>n(()=>import("./index.html-BaMKOq_8.js"),__vite__mapDeps([863,1])),meta:{t:"标签: KotlinPoet",I:!1}}],["/tag/code-generation/",{loader:()=>n(()=>import("./index.html-Ox9QamJo.js"),__vite__mapDeps([864,1])),meta:{t:"标签: Code Generation",I:!1}}],["/tag/baeldung/",{loader:()=>n(()=>import("./index.html-01k7iatl.js"),__vite__mapDeps([865,1])),meta:{t:"标签: Baeldung",I:!1}}],["/tag/java-flight-recorder/",{loader:()=>n(()=>import("./index.html-CTxwTUKP.js"),__vite__mapDeps([866,1])),meta:{t:"标签: Java Flight Recorder",I:!1}}],["/tag/jfr/",{loader:()=>n(()=>import("./index.html-WjwxHif7.js"),__vite__mapDeps([867,1])),meta:{t:"标签: JFR",I:!1}}],["/tag/java-21/",{loader:()=>n(()=>import("./index.html-X991z9XX.js"),__vite__mapDeps([868,1])),meta:{t:"标签: Java 21",I:!1}}],["/tag/list-vs.-set/",{loader:()=>n(()=>import("./index.html-CHtZxDeP.js"),__vite__mapDeps([869,1])),meta:{t:"标签: List vs. Set",I:!1}}],["/tag/onetomany/",{loader:()=>n(()=>import("./index.html-B6cCWkCf.js"),__vite__mapDeps([870,1])),meta:{t:"标签: OneToMany",I:!1}}],["/tag/part-time/",{loader:()=>n(()=>import("./index.html-DlwnqI3Y.js"),__vite__mapDeps([871,1])),meta:{t:"标签: Part Time",I:!1}}],["/tag/integration-experience/",{loader:()=>n(()=>import("./index.html-DxSD6hxu.js"),__vite__mapDeps([872,1])),meta:{t:"标签: Integration Experience",I:!1}}],["/tag/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",{loader:()=>n(()=>import("./index.html-BVAVVeX-.js"),__vite__mapDeps([873,1])),meta:{t:"标签: 动态代理",I:!1}}],["/tag/aop/",{loader:()=>n(()=>import("./index.html-CN3uUAXO.js"),__vite__mapDeps([874,1])),meta:{t:"标签: AOP",I:!1}}],["/tag/%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/",{loader:()=>n(()=>import("./index.html-Dui7J77k.js"),__vite__mapDeps([875,1])),meta:{t:"标签: 装饰者模式",I:!1}}],["/tag/%E5%8F%8D%E5%B0%84/",{loader:()=>n(()=>import("./index.html-fm_X1dPN.js"),__vite__mapDeps([876,1])),meta:{t:"标签: 反射",I:!1}}],["/tag/n_1-problem/",{loader:()=>n(()=>import("./index.html-BEz00jJY.js"),__vite__mapDeps([877,1])),meta:{t:"标签: N+1 Problem",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/",{loader:()=>n(()=>import("./index.html-BoX2lCl3.js"),__vite__mapDeps([878,1])),meta:{t:"标签: 数据库优化",I:!1}}],["/tag/url%E8%A7%84%E8%8C%83%E5%8C%96/",{loader:()=>n(()=>import("./index.html-nvyXdxeH.js"),__vite__mapDeps([879,1])),meta:{t:"标签: URL规范化",I:!1}}],["/tag/apache-commons-validator/",{loader:()=>n(()=>import("./index.html-DnMumI2Q.js"),__vite__mapDeps([880,1])),meta:{t:"标签: Apache Commons Validator",I:!1}}],["/tag/uri%E7%B1%BB/",{loader:()=>n(()=>import("./index.html-BZuy3kXn.js"),__vite__mapDeps([881,1])),meta:{t:"标签: URI类",I:!1}}],["/tag/2d%E6%95%B0%E7%BB%84/",{loader:()=>n(()=>import("./index.html-34g1QAjN.js"),__vite__mapDeps([882,1])),meta:{t:"标签: 2D数组",I:!1}}],["/tag/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-CXHCqdHa.js"),__vite__mapDeps([883,1])),meta:{t:"标签: 多线程",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/",{loader:()=>n(()=>import("./index.html-DrvBmKSP.js"),__vite__mapDeps([884,1])),meta:{t:"标签: 文件读写",I:!1}}],["/tag/%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81/",{loader:()=>n(()=>import("./index.html-goczOae-.js"),__vite__mapDeps([885,1])),meta:{t:"标签: 密码验证",I:!1}}],["/tag/listiterator/",{loader:()=>n(()=>import("./index.html-BOwrL1pL.js"),__vite__mapDeps([886,1])),meta:{t:"标签: ListIterator",I:!1}}],["/tag/%E7%BC%96%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-DElsEkFY.js"),__vite__mapDeps([887,1])),meta:{t:"标签: 编程",I:!1}}],["/tag/run-length-encoding/",{loader:()=>n(()=>import("./index.html-D3ybG5kx.js"),__vite__mapDeps([888,1])),meta:{t:"标签: Run-Length Encoding",I:!1}}],["/tag/environment-variables/",{loader:()=>n(()=>import("./index.html-DuQmMwRV.js"),__vite__mapDeps([889,1])),meta:{t:"标签: Environment Variables",I:!1}}],["/tag/runtime/",{loader:()=>n(()=>import("./index.html-C-wflRkn.js"),__vite__mapDeps([890,1])),meta:{t:"标签: Runtime",I:!1}}],["/tag/spock/",{loader:()=>n(()=>import("./index.html-C0xEPxsd.js"),__vite__mapDeps([891,1])),meta:{t:"标签: Spock",I:!1}}],["/tag/gradle/",{loader:()=>n(()=>import("./index.html-CUuKytZv.js"),__vite__mapDeps([892,1])),meta:{t:"标签: Gradle",I:!1}}],["/tag/outofmemoryerror/",{loader:()=>n(()=>import("./index.html-6023rs2A.js"),__vite__mapDeps([893,1])),meta:{t:"标签: OutOfMemoryError",I:!1}}],["/tag/morse-code/",{loader:()=>n(()=>import("./index.html-SoTH41st.js"),__vite__mapDeps([894,1])),meta:{t:"标签: Morse Code",I:!1}}],["/tag/translation/",{loader:()=>n(()=>import("./index.html-DHsdIdZL.js"),__vite__mapDeps([895,1])),meta:{t:"标签: Translation",I:!1}}],["/tag/%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95/",{loader:()=>n(()=>import("./index.html-D3Z1i2uR.js"),__vite__mapDeps([896,1])),meta:{t:"标签: 日志记录",I:!1}}],["/tag/%E7%BB%93%E6%9E%84%E5%8C%96%E6%97%A5%E5%BF%97/",{loader:()=>n(()=>import("./index.html-w9YdhjVS.js"),__vite__mapDeps([897,1])),meta:{t:"标签: 结构化日志",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E5%90%8D/",{loader:()=>n(()=>import("./index.html-XpxkIpuY.js"),__vite__mapDeps([898,1])),meta:{t:"标签: 文件名",I:!1}}],["/tag/%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/",{loader:()=>n(()=>import("./index.html-BrpJqEK6.js"),__vite__mapDeps([899,1])),meta:{t:"标签: 当前时间",I:!1}}],["/tag/extension-functions/",{loader:()=>n(()=>import("./index.html-Bca7WwpU.js"),__vite__mapDeps([900,1])),meta:{t:"标签: Extension Functions",I:!1}}],["/tag/private-fields/",{loader:()=>n(()=>import("./index.html-CXIDL5wJ.js"),__vite__mapDeps([901,1])),meta:{t:"标签: Private Fields",I:!1}}],["/tag/jwt/",{loader:()=>n(()=>import("./index.html-BPIpdmKw.js"),__vite__mapDeps([902,1])),meta:{t:"标签: JWT",I:!1}}],["/tag/custom-claims/",{loader:()=>n(()=>import("./index.html-CvrttkSm.js"),__vite__mapDeps([903,1])),meta:{t:"标签: Custom Claims",I:!1}}],["/tag/spring-authorization-server/",{loader:()=>n(()=>import("./index.html-9Y5pppxA.js"),__vite__mapDeps([904,1])),meta:{t:"标签: Spring Authorization Server",I:!1}}],["/tag/%E6%B5%81%E5%BC%8Fapi/",{loader:()=>n(()=>import("./index.html-BS5Vskm0.js"),__vite__mapDeps([905,1])),meta:{t:"标签: 流式API",I:!1}}],["/tag/%E5%88%97%E8%A1%A8%E6%93%8D%E4%BD%9C/",{loader:()=>n(()=>import("./index.html-CsgsN28Q.js"),__vite__mapDeps([906,1])),meta:{t:"标签: 列表操作",I:!1}}],["/tag/%E6%9E%9A%E4%B8%BE/",{loader:()=>n(()=>import("./index.html-HD1czc1t.js"),__vite__mapDeps([907,1])),meta:{t:"标签: 枚举",I:!1}}],["/tag/float/",{loader:()=>n(()=>import("./index.html-CCXM1wzw.js"),__vite__mapDeps([908,1])),meta:{t:"标签: float",I:!1}}],["/tag/integer/",{loader:()=>n(()=>import("./index.html-D3Y_I6gx.js"),__vite__mapDeps([909,1])),meta:{t:"标签: integer",I:!1}}],["/tag/%E6%AF%94%E8%BE%83/",{loader:()=>n(()=>import("./index.html-DbN3onco.js"),__vite__mapDeps([910,1])),meta:{t:"标签: 比较",I:!1}}],["/tag/point/",{loader:()=>n(()=>import("./index.html-DkuJa58_.js"),__vite__mapDeps([911,1])),meta:{t:"标签: Point",I:!1}}],["/tag/straight-line/",{loader:()=>n(()=>import("./index.html-DJtmTDJr.js"),__vite__mapDeps([912,1])),meta:{t:"标签: Straight Line",I:!1}}],["/tag/check/",{loader:()=>n(()=>import("./index.html-x4MYFP4g.js"),__vite__mapDeps([913,1])),meta:{t:"标签: Check",I:!1}}],["/tag/datetime/",{loader:()=>n(()=>import("./index.html-BhzhwRJ9.js"),__vite__mapDeps([914,1])),meta:{t:"标签: DateTime",I:!1}}],["/tag/date/",{loader:()=>n(()=>import("./index.html-DYkTkNQy.js"),__vite__mapDeps([915,1])),meta:{t:"标签: Date",I:!1}}],["/tag/bigdecimal/",{loader:()=>n(()=>import("./index.html-B1MhumFS.js"),__vite__mapDeps([916,1])),meta:{t:"标签: BigDecimal",I:!1}}],["/tag/integer/",{loader:()=>n(()=>import("./index.html-D3Y_I6gx.js"),__vite__mapDeps([909,1])),meta:{t:"标签: Integer",I:!1}}],["/tag/conversion/",{loader:()=>n(()=>import("./index.html-BAK-sZw6.js"),__vite__mapDeps([917,1])),meta:{t:"标签: Conversion",I:!1}}],["/tag/kubernetes-operator/",{loader:()=>n(()=>import("./index.html-BOIKkXpt.js"),__vite__mapDeps([918,1])),meta:{t:"标签: Kubernetes Operator",I:!1}}],["/tag/java-operator-sdk/",{loader:()=>n(()=>import("./index.html-Ccd3Z3cJ.js"),__vite__mapDeps([919,1])),meta:{t:"标签: Java Operator SDK",I:!1}}],["/tag/micronaut/",{loader:()=>n(()=>import("./index.html-CJZ1eIJG.js"),__vite__mapDeps([920,1])),meta:{t:"标签: Micronaut",I:!1}}],["/tag/mongodb/",{loader:()=>n(()=>import("./index.html-kLcYMYxi.js"),__vite__mapDeps([921,1])),meta:{t:"标签: MongoDB",I:!1}}],["/tag/reactive-programming/",{loader:()=>n(()=>import("./index.html-CFbCHueg.js"),__vite__mapDeps([922,1])),meta:{t:"标签: Reactive Programming",I:!1}}],["/tag/xmx/",{loader:()=>n(()=>import("./index.html-at-3TEEm.js"),__vite__mapDeps([923,1])),meta:{t:"标签: Xmx",I:!1}}],["/tag/maxram/",{loader:()=>n(()=>import("./index.html-wKCMQRSy.js"),__vite__mapDeps([924,1])),meta:{t:"标签: MaxRAM",I:!1}}],["/tag/future/",{loader:()=>n(()=>import("./index.html-GMGFK-tI.js"),__vite__mapDeps([925,1])),meta:{t:"标签: Future",I:!1}}],["/tag/promise/",{loader:()=>n(()=>import("./index.html-BGt9eXie.js"),__vite__mapDeps([926,1])),meta:{t:"标签: Promise",I:!1}}],["/tag/generational-zgc/",{loader:()=>n(()=>import("./index.html-BrDIIQZz.js"),__vite__mapDeps([927,1])),meta:{t:"标签: Generational ZGC",I:!1}}],["/tag/httpservletrequest/",{loader:()=>n(()=>import("./index.html-Cqj5FgN7.js"),__vite__mapDeps([928,1])),meta:{t:"标签: HttpServletRequest",I:!1}}],["/tag/query-string/",{loader:()=>n(()=>import("./index.html-Bv2AnKUe.js"),__vite__mapDeps([929,1])),meta:{t:"标签: Query String",I:!1}}],["/tag/data-management/",{loader:()=>n(()=>import("./index.html-6yz4N8Pn.js"),__vite__mapDeps([930,1])),meta:{t:"标签: Data Management",I:!1}}],["/tag/query-optimization/",{loader:()=>n(()=>import("./index.html-Ct5wvDHx.js"),__vite__mapDeps([931,1])),meta:{t:"标签: Query Optimization",I:!1}}],["/tag/spring-framework/",{loader:()=>n(()=>import("./index.html-CBJ5Z0GH.js"),__vite__mapDeps([932,1])),meta:{t:"标签: Spring Framework",I:!1}}],["/tag/ai-generative-prompts/",{loader:()=>n(()=>import("./index.html-BSXdUn1P.js"),__vite__mapDeps([933,1])),meta:{t:"标签: AI Generative Prompts",I:!1}}],["/tag/spring-cloud-aws-3.0/",{loader:()=>n(()=>import("./index.html-COyE2Cef.js"),__vite__mapDeps([934,1])),meta:{t:"标签: Spring Cloud AWS 3.0",I:!1}}],["/tag/sqs/",{loader:()=>n(()=>import("./index.html-DJBzMwvJ.js"),__vite__mapDeps([935,1])),meta:{t:"标签: SQS",I:!1}}],["/tag/integration-test/",{loader:()=>n(()=>import("./index.html-lgoDsFAO.js"),__vite__mapDeps([936,1])),meta:{t:"标签: Integration Test",I:!1}}],["/tag/localstack/",{loader:()=>n(()=>import("./index.html-CxvxIFkX.js"),__vite__mapDeps([937,1])),meta:{t:"标签: LocalStack",I:!1}}],["/tag/stream%E6%93%8D%E4%BD%9C/",{loader:()=>n(()=>import("./index.html-BYvnT0Nw.js"),__vite__mapDeps([938,1])),meta:{t:"标签: Stream操作",I:!1}}],["/tag/https/",{loader:()=>n(()=>import("./index.html-C1X2-yTH.js"),__vite__mapDeps([939,1])),meta:{t:"标签: HTTPS",I:!1}}],["/tag/501%E9%94%99%E8%AF%AF/",{loader:()=>n(()=>import("./index.html-D0vY9il5.js"),__vite__mapDeps([940,1])),meta:{t:"标签: 501错误",I:!1}}],["/tag/main-method/",{loader:()=>n(()=>import("./index.html-BB5V40JG.js"),__vite__mapDeps([941,1])),meta:{t:"标签: main method",I:!1}}],["/tag/static-block/",{loader:()=>n(()=>import("./index.html-GSDk0LHT.js"),__vite__mapDeps([942,1])),meta:{t:"标签: static block",I:!1}}],["/tag/priorityqueue/",{loader:()=>n(()=>import("./index.html-DhsvT-Zn.js"),__vite__mapDeps([943,1])),meta:{t:"标签: PriorityQueue",I:!1}}],["/tag/iterator/",{loader:()=>n(()=>import("./index.html-B1nFmmRm.js"),__vite__mapDeps([944,1])),meta:{t:"标签: iterator",I:!1}}],["/tag/bufferedreader/",{loader:()=>n(()=>import("./index.html-CMbdctf7.js"),__vite__mapDeps([945,1])),meta:{t:"标签: BufferedReader",I:!1}}],["/tag/filereader/",{loader:()=>n(()=>import("./index.html-CZTwyIeH.js"),__vite__mapDeps([946,1])),meta:{t:"标签: FileReader",I:!1}}],["/tag/scanner/",{loader:()=>n(()=>import("./index.html-CDTFIwep.js"),__vite__mapDeps([947,1])),meta:{t:"标签: Scanner",I:!1}}],["/tag/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/",{loader:()=>n(()=>import("./index.html-BcTlZSJ_.js"),__vite__mapDeps([948,1])),meta:{t:"标签: 性能分析",I:!1}}],["/tag/%E9%93%BE%E8%A1%A8/",{loader:()=>n(()=>import("./index.html-BBOhCFrL.js"),__vite__mapDeps([949,1])),meta:{t:"标签: 链表",I:!1}}],["/tag/%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C/",{loader:()=>n(()=>import("./index.html-PeF_B-OQ.js"),__vite__mapDeps([950,1])),meta:{t:"标签: 删除操作",I:!1}}],["/tag/%E9%9D%9E%E6%89%93%E5%8D%B0%E5%AD%97%E7%AC%A6/",{loader:()=>n(()=>import("./index.html-D6AYeZYa.js"),__vite__mapDeps([951,1])),meta:{t:"标签: 非打印字符",I:!1}}],["/tag/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html--5Tw7j3d.js"),__vite__mapDeps([952,1])),meta:{t:"标签: 文本处理",I:!1}}],["/tag/parameterresolutionexception/",{loader:()=>n(()=>import("./index.html-D0NI9DP3.js"),__vite__mapDeps([953,1])),meta:{t:"标签: ParameterResolutionException",I:!1}}],["/tag/spring-webflux/",{loader:()=>n(()=>import("./index.html-C5eHTHNQ.js"),__vite__mapDeps([954,1])),meta:{t:"标签: Spring WebFlux",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",{loader:()=>n(()=>import("./index.html-BDvQIBE3.js"),__vite__mapDeps([955,1])),meta:{t:"标签: 文件上传",I:!1}}],["/tag/%E5%BC%82%E6%AD%A5io/",{loader:()=>n(()=>import("./index.html-CdcBR3SA.js"),__vite__mapDeps([956,1])),meta:{t:"标签: 异步I/O",I:!1}}],["/tag/%E9%9D%9E%E9%98%BB%E5%A1%9E/",{loader:()=>n(()=>import("./index.html-CIyyi8kh.js"),__vite__mapDeps([957,1])),meta:{t:"标签: 非阻塞",I:!1}}],["/tag/gson/",{loader:()=>n(()=>import("./index.html-C1lenacp.js"),__vite__mapDeps([958,1])),meta:{t:"标签: Gson",I:!1}}],["/tag/jsonparser/",{loader:()=>n(()=>import("./index.html-DONG5mMu.js"),__vite__mapDeps([959,1])),meta:{t:"标签: JsonParser",I:!1}}],["/tag/%E5%A0%86%E5%A4%A7%E5%B0%8F/",{loader:()=>n(()=>import("./index.html-DExCGBv-.js"),__vite__mapDeps([960,1])),meta:{t:"标签: 堆大小",I:!1}}],["/tag/static-context/",{loader:()=>n(()=>import("./index.html-DjB8q-hJ.js"),__vite__mapDeps([961,1])),meta:{t:"标签: Static Context",I:!1}}],["/tag/non-static-method/",{loader:()=>n(()=>import("./index.html-CQGxQu4b.js"),__vite__mapDeps([962,1])),meta:{t:"标签: Non-Static Method",I:!1}}],["/tag/query/",{loader:()=>n(()=>import("./index.html-CAaCwExR.js"),__vite__mapDeps([963,1])),meta:{t:"标签: Query",I:!1}}],["/tag/spel/",{loader:()=>n(()=>import("./index.html-C-7T550V.js"),__vite__mapDeps([964,1])),meta:{t:"标签: SpEL",I:!1}}],["/tag/zero/",{loader:()=>n(()=>import("./index.html-Du8KqSrz.js"),__vite__mapDeps([965,1])),meta:{t:"标签: ZERO",I:!1}}],["/tag/%E6%80%A7%E8%83%BD/",{loader:()=>n(()=>import("./index.html-D0V-raBm.js"),__vite__mapDeps([966,1])),meta:{t:"标签: 性能",I:!1}}],["/tag/%E6%97%A5%E6%9C%9F/",{loader:()=>n(()=>import("./index.html-DP9ImIq_.js"),__vite__mapDeps([967,1])),meta:{t:"标签: 日期",I:!1}}],["/tag/%E6%9C%88%E4%BB%BD%E9%97%B4%E9%9A%94/",{loader:()=>n(()=>import("./index.html-C0r-E0ib.js"),__vite__mapDeps([968,1])),meta:{t:"标签: 月份间隔",I:!1}}],["/tag/listenablefuture/",{loader:()=>n(()=>import("./index.html-DexHTwHx.js"),__vite__mapDeps([969,1])),meta:{t:"标签: ListenableFuture",I:!1}}],["/tag/stringbuilder/",{loader:()=>n(()=>import("./index.html-BAaZPSV-.js"),__vite__mapDeps([970,1])),meta:{t:"标签: StringBuilder",I:!1}}],["/tag/contains/",{loader:()=>n(()=>import("./index.html-DZT569Wi.js"),__vite__mapDeps([971,1])),meta:{t:"标签: contains",I:!1}}],["/tag/indexof/",{loader:()=>n(()=>import("./index.html-DJgZKI7a.js"),__vite__mapDeps([972,1])),meta:{t:"标签: indexOf",I:!1}}],["/tag/string-comparison/",{loader:()=>n(()=>import("./index.html-BawNjcCF.js"),__vite__mapDeps([973,1])),meta:{t:"标签: String Comparison",I:!1}}],["/tag/set/",{loader:()=>n(()=>import("./index.html-nsEPYmPr.js"),__vite__mapDeps([974,1])),meta:{t:"标签: Set",I:!1}}],["/tag/list/",{loader:()=>n(()=>import("./index.html-BeAEazdg.js"),__vite__mapDeps([975,1])),meta:{t:"标签: List",I:!1}}],["/tag/for%E5%BE%AA%E7%8E%AF/",{loader:()=>n(()=>import("./index.html-CmVi9Ix2.js"),__vite__mapDeps([976,1])),meta:{t:"标签: for循环",I:!1}}],["/tag/%E8%BF%AD%E4%BB%A3%E5%99%A8/",{loader:()=>n(()=>import("./index.html-x4k7n02J.js"),__vite__mapDeps([977,1])),meta:{t:"标签: 迭代器",I:!1}}],["/tag/byte-array/",{loader:()=>n(()=>import("./index.html-pNVyWD0J.js"),__vite__mapDeps([978,1])),meta:{t:"标签: byte array",I:!1}}],["/tag/json-conversion/",{loader:()=>n(()=>import("./index.html-CMOHAMi4.js"),__vite__mapDeps([979,1])),meta:{t:"标签: JSON conversion",I:!1}}],["/tag/excel/",{loader:()=>n(()=>import("./index.html-Bmn7exhg.js"),__vite__mapDeps([980,1])),meta:{t:"标签: Excel",I:!1}}],["/tag/pdf/",{loader:()=>n(()=>import("./index.html-Dnt409Q6.js"),__vite__mapDeps([981,1])),meta:{t:"标签: PDF",I:!1}}],["/tag/long/",{loader:()=>n(()=>import("./index.html-B3J8vL2L.js"),__vite__mapDeps([982,1])),meta:{t:"标签: Long",I:!1}}],["/tag/java%E5%AD%97%E7%AC%A6%E4%B8%B2/",{loader:()=>n(()=>import("./index.html-SQV4XOMP.js"),__vite__mapDeps([983,1])),meta:{t:"标签: Java字符串",I:!1}}],["/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%AD%97%E7%AC%A6%E5%88%97%E8%A1%A8/",{loader:()=>n(()=>import("./index.html-Z0ZxDjZ5.js"),__vite__mapDeps([984,1])),meta:{t:"标签: 字符串转字符列表",I:!1}}],["/tag/outputstream/",{loader:()=>n(()=>import("./index.html-C4bmVi7X.js"),__vite__mapDeps([985,1])),meta:{t:"标签: OutputStream",I:!1}}],["/tag/byte-array/",{loader:()=>n(()=>import("./index.html-pNVyWD0J.js"),__vite__mapDeps([978,1])),meta:{t:"标签: Byte Array",I:!1}}],["/tag/executorservice/",{loader:()=>n(()=>import("./index.html-CIFdWKj8.js"),__vite__mapDeps([986,1])),meta:{t:"标签: ExecutorService",I:!1}}],["/tag/submit()/",{loader:()=>n(()=>import("./index.html-BiTAi7Lz.js"),__vite__mapDeps([987,1])),meta:{t:"标签: submit()",I:!1}}],["/tag/execute()/",{loader:()=>n(()=>import("./index.html-Bvizo3so.js"),__vite__mapDeps([988,1])),meta:{t:"标签: execute()",I:!1}}],["/tag/dijkstra%E2%80%99s-algorithm/",{loader:()=>n(()=>import("./index.html-CmGuOEvO.js"),__vite__mapDeps([989,1])),meta:{t:"标签: Dijkstra’s Algorithm",I:!1}}],["/tag/graphs/",{loader:()=>n(()=>import("./index.html-t4GLv8FN.js"),__vite__mapDeps([990,1])),meta:{t:"标签: Graphs",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E6%90%9C%E7%B4%A2/",{loader:()=>n(()=>import("./index.html-NGkeJzWB.js"),__vite__mapDeps([991,1])),meta:{t:"标签: 文件搜索",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86/",{loader:()=>n(()=>import("./index.html-2Y8Kybwr.js"),__vite__mapDeps([992,1])),meta:{t:"标签: 文件遍历",I:!1}}],["/tag/%E6%95%B0%E7%BB%84/",{loader:()=>n(()=>import("./index.html-CW-3RfeA.js"),__vite__mapDeps([993,1])),meta:{t:"标签: 数组",I:!1}}],["/tag/%E7%BC%BA%E5%A4%B1%E6%95%B0%E5%AD%97/",{loader:()=>n(()=>import("./index.html-BAQDfsti.js"),__vite__mapDeps([994,1])),meta:{t:"标签: 缺失数字",I:!1}}],["/tag/queryexception/",{loader:()=>n(()=>import("./index.html-xFbSQV9p.js"),__vite__mapDeps([995,1])),meta:{t:"标签: QueryException",I:!1}}],["/tag/named-parameter/",{loader:()=>n(()=>import("./index.html-CFz0CAJd.js"),__vite__mapDeps([996,1])),meta:{t:"标签: Named Parameter",I:!1}}],["/tag/datetimeformatter/",{loader:()=>n(()=>import("./index.html-WlVBOo-w.js"),__vite__mapDeps([997,1])),meta:{t:"标签: DateTimeFormatter",I:!1}}],["/tag/reflection/",{loader:()=>n(()=>import("./index.html-CeatZO6a.js"),__vite__mapDeps([998,1])),meta:{t:"标签: Reflection",I:!1}}],["/tag/field-names/",{loader:()=>n(()=>import("./index.html-DT9UW2tg.js"),__vite__mapDeps([999,1])),meta:{t:"标签: Field Names",I:!1}}],["/tag/stringwriter/",{loader:()=>n(()=>import("./index.html-Duurv6ng.js"),__vite__mapDeps([1000,1])),meta:{t:"标签: StringWriter",I:!1}}],["/tag/system.currenttimemillis()/",{loader:()=>n(()=>import("./index.html-ga8D4nAF.js"),__vite__mapDeps([1001,1])),meta:{t:"标签: System.currentTimeMillis()",I:!1}}],["/tag/system.nanotime()/",{loader:()=>n(()=>import("./index.html-Bl-Xpmwu.js"),__vite__mapDeps([1002,1])),meta:{t:"标签: System.nanoTime()",I:!1}}],["/tag/string.length()/",{loader:()=>n(()=>import("./index.html-BtOnBkeq.js"),__vite__mapDeps([1003,1])),meta:{t:"标签: String.length()",I:!1}}],["/tag/string.getbytes().length/",{loader:()=>n(()=>import("./index.html-B9Mr6YVz.js"),__vite__mapDeps([1004,1])),meta:{t:"标签: String.getBytes().length",I:!1}}],["/tag/lambda/",{loader:()=>n(()=>import("./index.html-D5s5J-zv.js"),__vite__mapDeps([1005,1])),meta:{t:"标签: Lambda",I:!1}}],["/tag/lazy-initialization/",{loader:()=>n(()=>import("./index.html-BJHdSPPY.js"),__vite__mapDeps([1006,1])),meta:{t:"标签: Lazy Initialization",I:!1}}],["/tag/double/",{loader:()=>n(()=>import("./index.html-BfY6jtiI.js"),__vite__mapDeps([1007,1])),meta:{t:"标签: double",I:!1}}],["/tag/scientific-notation/",{loader:()=>n(()=>import("./index.html-ICAj9NrE.js"),__vite__mapDeps([1008,1])),meta:{t:"标签: scientific notation",I:!1}}],["/tag/formatting/",{loader:()=>n(()=>import("./index.html-Cf3mLcKf.js"),__vite__mapDeps([1009,1])),meta:{t:"标签: formatting",I:!1}}],["/tag/reactor/",{loader:()=>n(()=>import("./index.html-DvG086zl.js"),__vite__mapDeps([1010,1])),meta:{t:"标签: Reactor",I:!1}}],["/tag/virtual-threads/",{loader:()=>n(()=>import("./index.html-BjbgIN8D.js"),__vite__mapDeps([1011,1])),meta:{t:"标签: Virtual Threads",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E5%88%86%E5%89%B2/",{loader:()=>n(()=>import("./index.html-CV90rTuV.js"),__vite__mapDeps([1012,1])),meta:{t:"标签: 文件分割",I:!1}}],["/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/",{loader:()=>n(()=>import("./index.html-UJL8Cwed.js"),__vite__mapDeps([1013,1])),meta:{t:"标签: 字符串操作",I:!1}}],["/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%8B%E8%BD%AC/",{loader:()=>n(()=>import("./index.html-CP3mqCBj.js"),__vite__mapDeps([1014,1])),meta:{t:"标签: 字符串旋转",I:!1}}],["/tag/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/",{loader:()=>n(()=>import("./index.html-CAMc_qeF.js"),__vite__mapDeps([1015,1])),meta:{t:"标签: 消息队列",I:!1}}],["/tag/%E5%88%97%E8%A1%A8%E6%8E%92%E5%BA%8F/",{loader:()=>n(()=>import("./index.html-B1XdeuZB.js"),__vite__mapDeps([1016,1])),meta:{t:"标签: 列表排序",I:!1}}],["/tag/%E9%AA%8C%E8%AF%81/",{loader:()=>n(()=>import("./index.html-D5xdNB_v.js"),__vite__mapDeps([1017,1])),meta:{t:"标签: 验证",I:!1}}],["/tag/object-hydration/",{loader:()=>n(()=>import("./index.html-DRG6FNGP.js"),__vite__mapDeps([1018,1])),meta:{t:"标签: Object Hydration",I:!1}}],["/tag/orm-frameworks/",{loader:()=>n(()=>import("./index.html-CE6Dnho-.js"),__vite__mapDeps([1019,1])),meta:{t:"标签: ORM Frameworks",I:!1}}],["/tag/getreferencebyid/",{loader:()=>n(()=>import("./index.html-Bw3OU7Nf.js"),__vite__mapDeps([1020,1])),meta:{t:"标签: getReferenceById",I:!1}}],["/tag/findbyid/",{loader:()=>n(()=>import("./index.html-BxAAiu73.js"),__vite__mapDeps([1021,1])),meta:{t:"标签: findById",I:!1}}],["/tag/%E5%91%98%E5%B7%A5%E8%B0%83%E5%BA%A6/",{loader:()=>n(()=>import("./index.html-DguPuQvh.js"),__vite__mapDeps([1022,1])),meta:{t:"标签: 员工调度",I:!1}}],["/tag/%E4%BC%98%E5%8C%96/",{loader:()=>n(()=>import("./index.html-AMJDz76V.js"),__vite__mapDeps([1023,1])),meta:{t:"标签: 优化",I:!1}}],["/tag/database-connection/",{loader:()=>n(()=>import("./index.html-C5GBQSub.js"),__vite__mapDeps([1024,1])),meta:{t:"标签: Database Connection",I:!1}}],["/tag/intellij-idea/",{loader:()=>n(()=>import("./index.html-SSoal-fk.js"),__vite__mapDeps([1025,1])),meta:{t:"标签: IntelliJ IDEA",I:!1}}],["/tag/entity/",{loader:()=>n(()=>import("./index.html-B8UEm8lo.js"),__vite__mapDeps([1026,1])),meta:{t:"标签: Entity",I:!1}}],["/tag/dto/",{loader:()=>n(()=>import("./index.html-C_m1q1jT.js"),__vite__mapDeps([1027,1])),meta:{t:"标签: DTO",I:!1}}],["/tag/stream-api/",{loader:()=>n(()=>import("./index.html-BEJ046Zo.js"),__vite__mapDeps([1028,1])),meta:{t:"标签: Stream API",I:!1}}],["/tag/nullpointerexception/",{loader:()=>n(()=>import("./index.html-D-mIznHT.js"),__vite__mapDeps([1029,1])),meta:{t:"标签: NullPointerException",I:!1}}],["/tag/findfirst()/",{loader:()=>n(()=>import("./index.html-DI5VDPCn.js"),__vite__mapDeps([1030,1])),meta:{t:"标签: findFirst()",I:!1}}],["/tag/optional/",{loader:()=>n(()=>import("./index.html-DK1V_Ycx.js"),__vite__mapDeps([1031,1])),meta:{t:"标签: Optional",I:!1}}],["/tag/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/",{loader:()=>n(()=>import("./index.html-G_QKpTRo.js"),__vite__mapDeps([1032,1])),meta:{t:"标签: 单元测试",I:!1}}],["/tag/inter-process-communication/",{loader:()=>n(()=>import("./index.html-Du-qdrP6.js"),__vite__mapDeps([1033,1])),meta:{t:"标签: Inter-Process Communication",I:!1}}],["/tag/java-ipc/",{loader:()=>n(()=>import("./index.html-CItVPwtT.js"),__vite__mapDeps([1034,1])),meta:{t:"标签: Java IPC",I:!1}}],["/tag/inputstream/",{loader:()=>n(()=>import("./index.html-civJXLC2.js"),__vite__mapDeps([1035,1])),meta:{t:"标签: InputStream",I:!1}}],["/tag/skip-bytes/",{loader:()=>n(()=>import("./index.html-CtWZKc9O.js"),__vite__mapDeps([1036,1])),meta:{t:"标签: skip bytes",I:!1}}],["/tag/alpaquita-linux/",{loader:()=>n(()=>import("./index.html-BnZMhK86.js"),__vite__mapDeps([1037,1])),meta:{t:"标签: Alpaquita Linux",I:!1}}],["/tag/java-apps/",{loader:()=>n(()=>import("./index.html-BWCmhZZ0.js"),__vite__mapDeps([1038,1])),meta:{t:"标签: Java apps",I:!1}}],["/tag/kafka-message-headers/",{loader:()=>n(()=>import("./index.html-CaJQeKhi.js"),__vite__mapDeps([1039,1])),meta:{t:"标签: Kafka message headers",I:!1}}],["/tag/static/",{loader:()=>n(()=>import("./index.html-fyTD3zGC.js"),__vite__mapDeps([1040,1])),meta:{t:"标签: static",I:!1}}],["/tag/final/",{loader:()=>n(()=>import("./index.html-CfrDZ9C-.js"),__vite__mapDeps([1041,1])),meta:{t:"标签: final",I:!1}}],["/tag/%E5%B8%B8%E9%87%8F/",{loader:()=>n(()=>import("./index.html-DPhWa1SF.js"),__vite__mapDeps([1042,1])),meta:{t:"标签: 常量",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E9%99%90%E5%88%B6/",{loader:()=>n(()=>import("./index.html-CSA4y00o.js"),__vite__mapDeps([1043,1])),meta:{t:"标签: 内存限制",I:!1}}],["/tag/integer.max-value/",{loader:()=>n(()=>import("./index.html-BYKwnhUT.js"),__vite__mapDeps([1044,1])),meta:{t:"标签: Integer.MAX_VALUE",I:!1}}],["/tag/stringbuffer/",{loader:()=>n(()=>import("./index.html-DnIqTukA.js"),__vite__mapDeps([1045,1])),meta:{t:"标签: StringBuffer",I:!1}}],["/tag/lambda-expression/",{loader:()=>n(()=>import("./index.html-DzXR1lfY.js"),__vite__mapDeps([1046,1])),meta:{t:"标签: Lambda Expression",I:!1}}],["/tag/set-membership/",{loader:()=>n(()=>import("./index.html-BZwbzuoY.js"),__vite__mapDeps([1047,1])),meta:{t:"标签: Set Membership",I:!1}}],["/tag/java-collection/",{loader:()=>n(()=>import("./index.html-B5634G6v.js"),__vite__mapDeps([1048,1])),meta:{t:"标签: Java Collection",I:!1}}],["/tag/java%E7%89%88%E6%9C%AC/",{loader:()=>n(()=>import("./index.html-Uy3ZaalL.js"),__vite__mapDeps([1049,1])),meta:{t:"标签: Java版本",I:!1}}],["/tag/eclipse-ide/",{loader:()=>n(()=>import("./index.html-D6O7DoD9.js"),__vite__mapDeps([1050,1])),meta:{t:"标签: Eclipse IDE",I:!1}}],["/tag/temporalaccessor/",{loader:()=>n(()=>import("./index.html-PcZhskjv.js"),__vite__mapDeps([1051,1])),meta:{t:"标签: TemporalAccessor",I:!1}}],["/tag/phone-number-conversion/",{loader:()=>n(()=>import("./index.html-Cfh_rwIt.js"),__vite__mapDeps([1052,1])),meta:{t:"标签: Phone Number Conversion",I:!1}}],["/tag/cacheable/",{loader:()=>n(()=>import("./index.html-BraEYQJH.js"),__vite__mapDeps([1053,1])),meta:{t:"标签: Cacheable",I:!1}}],["/tag/caching/",{loader:()=>n(()=>import("./index.html-DS3m8EN2.js"),__vite__mapDeps([1054,1])),meta:{t:"标签: Caching",I:!1}}],["/tag/scheduling/",{loader:()=>n(()=>import("./index.html-BfRCSkIR.js"),__vite__mapDeps([1055,1])),meta:{t:"标签: Scheduling",I:!1}}],["/tag/integration-testing/",{loader:()=>n(()=>import("./index.html-DMM8Q0DW.js"),__vite__mapDeps([1056,1])),meta:{t:"标签: Integration Testing",I:!1}}],["/tag/stringutils/",{loader:()=>n(()=>import("./index.html-BYVM1tBR.js"),__vite__mapDeps([1057,1])),meta:{t:"标签: StringUtils",I:!1}}],["/tag/jar/",{loader:()=>n(()=>import("./index.html-AY2iQEPc.js"),__vite__mapDeps([1058,1])),meta:{t:"标签: JAR",I:!1}}],["/tag/%E8%B5%84%E6%BA%90%E8%B7%AF%E5%BE%84/",{loader:()=>n(()=>import("./index.html-CEPltMcd.js"),__vite__mapDeps([1059,1])),meta:{t:"标签: 资源路径",I:!1}}],["/tag/%E5%AE%8C%E7%BE%8E%E6%95%B0/",{loader:()=>n(()=>import("./index.html-BpvD_tH_.js"),__vite__mapDeps([1060,1])),meta:{t:"标签: 完美数",I:!1}}],["/tag/bufferedimage/",{loader:()=>n(()=>import("./index.html-0paFqdOj.js"),__vite__mapDeps([1061,1])),meta:{t:"标签: BufferedImage",I:!1}}],["/tag/%E5%9B%BE%E5%83%8F%E7%BC%A9%E6%94%BE/",{loader:()=>n(()=>import("./index.html-xl1Ms11k.js"),__vite__mapDeps([1062,1])),meta:{t:"标签: 图像缩放",I:!1}}],["/tag/events/",{loader:()=>n(()=>import("./index.html-CA8vE-gj.js"),__vite__mapDeps([1063,1])),meta:{t:"标签: Events",I:!1}}],["/tag/application-events/",{loader:()=>n(()=>import("./index.html-BPMSncP8.js"),__vite__mapDeps([1064,1])),meta:{t:"标签: Application Events",I:!1}}],["/tag/immutable/",{loader:()=>n(()=>import("./index.html-kycLOtX1.js"),__vite__mapDeps([1065,1])),meta:{t:"标签: Immutable",I:!1}}],["/tag/unmodifiable/",{loader:()=>n(()=>import("./index.html-CKjGFQtl.js"),__vite__mapDeps([1066,1])),meta:{t:"标签: Unmodifiable",I:!1}}],["/tag/service-provider-interface/",{loader:()=>n(()=>import("./index.html-KX64ucNl.js"),__vite__mapDeps([1067,1])),meta:{t:"标签: Service Provider Interface",I:!1}}],["/tag/internet-address-resolution/",{loader:()=>n(()=>import("./index.html-CavyT56w.js"),__vite__mapDeps([1068,1])),meta:{t:"标签: Internet Address Resolution",I:!1}}],["/tag/light-4j/",{loader:()=>n(()=>import("./index.html-LLTlVwFF.js"),__vite__mapDeps([1069,1])),meta:{t:"标签: Light-4J",I:!1}}],["/tag/microservices/",{loader:()=>n(()=>import("./index.html-CC2T4uan.js"),__vite__mapDeps([1070,1])),meta:{t:"标签: Microservices",I:!1}}],["/tag/apache-camel/",{loader:()=>n(()=>import("./index.html-ngAI203n.js"),__vite__mapDeps([1071,1])),meta:{t:"标签: Apache Camel",I:!1}}],["/tag/loki/",{loader:()=>n(()=>import("./index.html-BjSNqKse.js"),__vite__mapDeps([1072,1])),meta:{t:"标签: Loki",I:!1}}],["/tag/grafana/",{loader:()=>n(()=>import("./index.html-D_vxNvRK.js"),__vite__mapDeps([1073,1])),meta:{t:"标签: Grafana",I:!1}}],["/tag/jep/",{loader:()=>n(()=>import("./index.html-DC6ITt0T.js"),__vite__mapDeps([1074,1])),meta:{t:"标签: JEP",I:!1}}],["/tag/desktop-class/",{loader:()=>n(()=>import("./index.html-tXE1OR_d.js"),__vite__mapDeps([1075,1])),meta:{t:"标签: Desktop Class",I:!1}}],["/tag/processbuilder/",{loader:()=>n(()=>import("./index.html-MFexZDai.js"),__vite__mapDeps([1076,1])),meta:{t:"标签: ProcessBuilder",I:!1}}],["/tag/super()/",{loader:()=>n(()=>import("./index.html-DLIjhdkI.js"),__vite__mapDeps([1077,1])),meta:{t:"标签: super()",I:!1}}],["/tag/constructor/",{loader:()=>n(()=>import("./index.html-IKDwlhN4.js"),__vite__mapDeps([1078,1])),meta:{t:"标签: Constructor",I:!1}}],["/tag/java-best-practices/",{loader:()=>n(()=>import("./index.html-FJk7K80P.js"),__vite__mapDeps([1079,1])),meta:{t:"标签: Java Best Practices",I:!1}}],["/tag/struct-annotation/",{loader:()=>n(()=>import("./index.html-BidFOj8M.js"),__vite__mapDeps([1080,1])),meta:{t:"标签: Struct Annotation",I:!1}}],["/tag/user-defined-types/",{loader:()=>n(()=>import("./index.html-BC_SJW_2.js"),__vite__mapDeps([1081,1])),meta:{t:"标签: User-Defined Types",I:!1}}],["/tag/exception-handling/",{loader:()=>n(()=>import("./index.html-B_lank04.js"),__vite__mapDeps([1082,1])),meta:{t:"标签: Exception Handling",I:!1}}],["/tag/mono.error()/",{loader:()=>n(()=>import("./index.html-BhAAAsvl.js"),__vite__mapDeps([1083,1])),meta:{t:"标签: Mono.error()",I:!1}}],["/tag/subselect/",{loader:()=>n(()=>import("./index.html-CtXjtPZG.js"),__vite__mapDeps([1084,1])),meta:{t:"标签: Subselect",I:!1}}],["/tag/sql/",{loader:()=>n(()=>import("./index.html-Du-dhGAB.js"),__vite__mapDeps([1085,1])),meta:{t:"标签: SQL",I:!1}}],["/tag/context-receivers/",{loader:()=>n(()=>import("./index.html-8IAwrlEY.js"),__vite__mapDeps([1086,1])),meta:{t:"标签: Context Receivers",I:!1}}],["/tag/immutable-list/",{loader:()=>n(()=>import("./index.html-I4RidxEe.js"),__vite__mapDeps([1087,1])),meta:{t:"标签: Immutable List",I:!1}}],["/tag/concurrentmodificationexception/",{loader:()=>n(()=>import("./index.html-B_ojk2En.js"),__vite__mapDeps([1088,1])),meta:{t:"标签: ConcurrentModificationException",I:!1}}],["/tag/localtime/",{loader:()=>n(()=>import("./index.html-gDKsn9Xv.js"),__vite__mapDeps([1089,1])),meta:{t:"标签: LocalTime",I:!1}}],["/tag/calendar/",{loader:()=>n(()=>import("./index.html-CvtyHtQA.js"),__vite__mapDeps([1090,1])),meta:{t:"标签: Calendar",I:!1}}],["/tag/date-comparison/",{loader:()=>n(()=>import("./index.html-CLF-tbHA.js"),__vite__mapDeps([1091,1])),meta:{t:"标签: Date Comparison",I:!1}}],["/tag/kotlin-coroutine/",{loader:()=>n(()=>import("./index.html-Cfhsfrut.js"),__vite__mapDeps([1092,1])),meta:{t:"标签: Kotlin Coroutine",I:!1}}],["/tag/rxjava-single/",{loader:()=>n(()=>import("./index.html-D5Dld7RA.js"),__vite__mapDeps([1093,1])),meta:{t:"标签: RxJava Single",I:!1}}],["/tag/deferred/",{loader:()=>n(()=>import("./index.html-C6QKREYM.js"),__vite__mapDeps([1094,1])),meta:{t:"标签: Deferred",I:!1}}],["/tag/prototype-scope/",{loader:()=>n(()=>import("./index.html-DgNUEI_H.js"),__vite__mapDeps([1095,1])),meta:{t:"标签: Prototype Scope",I:!1}}],["/tag/token/",{loader:()=>n(()=>import("./index.html-BeXoLq3B.js"),__vite__mapDeps([1096,1])),meta:{t:"标签: Token",I:!1}}],["/tag/eachcount/",{loader:()=>n(()=>import("./index.html-BzKZZRU5.js"),__vite__mapDeps([1097,1])),meta:{t:"标签: eachCount",I:!1}}],["/tag/eachcountto/",{loader:()=>n(()=>import("./index.html-Bdpin004.js"),__vite__mapDeps([1098,1])),meta:{t:"标签: eachCountTo",I:!1}}],["/tag/spring-kafka/",{loader:()=>n(()=>import("./index.html-CDSU4pKU.js"),__vite__mapDeps([853,1])),meta:{t:"标签: Spring Kafka",I:!1}}],["/tag/kafka-listeners/",{loader:()=>n(()=>import("./index.html-DceVYhSc.js"),__vite__mapDeps([1099,1])),meta:{t:"标签: Kafka Listeners",I:!1}}],["/tag/spring-beans/",{loader:()=>n(()=>import("./index.html-APDOFxNM.js"),__vite__mapDeps([1100,1])),meta:{t:"标签: Spring Beans",I:!1}}],["/tag/dynamic-registration/",{loader:()=>n(()=>import("./index.html-gQ-UucfU.js"),__vite__mapDeps([1101,1])),meta:{t:"标签: Dynamic Registration",I:!1}}],["/tag/css-selectors/",{loader:()=>n(()=>import("./index.html-BQLT9AoU.js"),__vite__mapDeps([1102,1])),meta:{t:"标签: CSS Selectors",I:!1}}],["/tag/web-testing/",{loader:()=>n(()=>import("./index.html-DOZcMQaN.js"),__vite__mapDeps([1103,1])),meta:{t:"标签: Web Testing",I:!1}}],["/tag/ambiguous-method-call/",{loader:()=>n(()=>import("./index.html-CoUi_Jz4.js"),__vite__mapDeps([1104,1])),meta:{t:"标签: Ambiguous Method Call",I:!1}}],["/tag/unit-testing/",{loader:()=>n(()=>import("./index.html-CpioN3Nl.js"),__vite__mapDeps([1105,1])),meta:{t:"标签: Unit Testing",I:!1}}],["/tag/map/",{loader:()=>n(()=>import("./index.html-tjjL8YlY.js"),__vite__mapDeps([1106,1])),meta:{t:"标签: Map",I:!1}}],["/tag/kclass/",{loader:()=>n(()=>import("./index.html-CKp4buaC.js"),__vite__mapDeps([1107,1])),meta:{t:"标签: KClass",I:!1}}],["/tag/duration/",{loader:()=>n(()=>import("./index.html-BjwO64Wx.js"),__vite__mapDeps([1108,1])),meta:{t:"标签: Duration",I:!1}}],["/tag/time-management/",{loader:()=>n(()=>import("./index.html-BPRcL1J_.js"),__vite__mapDeps([1109,1])),meta:{t:"标签: Time Management",I:!1}}],["/tag/hexadecimal/",{loader:()=>n(()=>import("./index.html-DymNgfNu.js"),__vite__mapDeps([1110,1])),meta:{t:"标签: Hexadecimal",I:!1}}],["/tag/parse/",{loader:()=>n(()=>import("./index.html-DysqOkuH.js"),__vite__mapDeps([1111,1])),meta:{t:"标签: Parse",I:!1}}],["/tag/apache-poi/",{loader:()=>n(()=>import("./index.html-ChcSaglM.js"),__vite__mapDeps([1112,1])),meta:{t:"标签: Apache POI",I:!1}}],["/tag/jackson/",{loader:()=>n(()=>import("./index.html-BMWUVoIy.js"),__vite__mapDeps([1113,1])),meta:{t:"标签: Jackson",I:!1}}],["/tag/caffeine/",{loader:()=>n(()=>import("./index.html-BqCKInE1.js"),__vite__mapDeps([1114,1])),meta:{t:"标签: Caffeine",I:!1}}],["/tag/redis/",{loader:()=>n(()=>import("./index.html-BhASKYEg.js"),__vite__mapDeps([1115,1])),meta:{t:"标签: Redis",I:!1}}],["/tag/json-serialization/",{loader:()=>n(()=>import("./index.html-3lfuh38j.js"),__vite__mapDeps([1116,1])),meta:{t:"标签: JSON Serialization",I:!1}}],["/tag/null-values/",{loader:()=>n(()=>import("./index.html-DUKeCkYl.js"),__vite__mapDeps([1117,1])),meta:{t:"标签: Null Values",I:!1}}],["/tag/xml/",{loader:()=>n(()=>import("./index.html-rOR2fYdd.js"),__vite__mapDeps([1118,1])),meta:{t:"标签: XML",I:!1}}],["/tag/invalid-characters/",{loader:()=>n(()=>import("./index.html-CUQujr9R.js"),__vite__mapDeps([1119,1])),meta:{t:"标签: Invalid Characters",I:!1}}],["/tag/iteration/",{loader:()=>n(()=>import("./index.html-CRIPKjzs.js"),__vite__mapDeps([1120,1])),meta:{t:"标签: Iteration",I:!1}}],["/tag/inputstreamreader/",{loader:()=>n(()=>import("./index.html-Bv3waq22.js"),__vite__mapDeps([1121,1])),meta:{t:"标签: InputStreamReader",I:!1}}],["/tag/eol-normalization/",{loader:()=>n(()=>import("./index.html-X5SetKTn.js"),__vite__mapDeps([1122,1])),meta:{t:"标签: EOL Normalization",I:!1}}],["/tag/string-replace/",{loader:()=>n(()=>import("./index.html-Eq5eR1Ex.js"),__vite__mapDeps([1123,1])),meta:{t:"标签: String Replace",I:!1}}],["/tag/java-8-stream-api/",{loader:()=>n(()=>import("./index.html-Bz2YqoQf.js"),__vite__mapDeps([1124,1])),meta:{t:"标签: Java 8 Stream API",I:!1}}],["/tag/%E5%B9%B6%E8%A1%8C%E6%B5%81/",{loader:()=>n(()=>import("./index.html-BuudiPsZ.js"),__vite__mapDeps([1125,1])),meta:{t:"标签: 并行流",I:!1}}],["/tag/%E5%8D%8F%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-DwcKIH4y.js"),__vite__mapDeps([1126,1])),meta:{t:"标签: 协程",I:!1}}],["/tag/generics/",{loader:()=>n(()=>import("./index.html-Dnl8C9e2.js"),__vite__mapDeps([1127,1])),meta:{t:"标签: Generics",I:!1}}],["/tag/kotlin-tutorial/",{loader:()=>n(()=>import("./index.html-Cjpce9FL.js"),__vite__mapDeps([1128,1])),meta:{t:"标签: Kotlin Tutorial",I:!1}}],["/tag/querydsl/",{loader:()=>n(()=>import("./index.html-BR2S_ZP0.js"),__vite__mapDeps([1129,1])),meta:{t:"标签: Querydsl",I:!1}}],["/tag/jpa-criteria/",{loader:()=>n(()=>import("./index.html-BeL4yN8n.js"),__vite__mapDeps([1130,1])),meta:{t:"标签: JPA Criteria",I:!1}}],["/tag/gzipinputstream/",{loader:()=>n(()=>import("./index.html-CuHATx03.js"),__vite__mapDeps([1131,1])),meta:{t:"标签: GZIPInputStream",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-DVgCqqCk.js"),__vite__mapDeps([1132,1])),meta:{t:"标签: 文件处理",I:!1}}],["/tag/%E4%BD%8D%E8%BF%90%E7%AE%97/",{loader:()=>n(()=>import("./index.html-BTOwJknX.js"),__vite__mapDeps([1133,1])),meta:{t:"标签: 位运算",I:!1}}],["/tag/distributed-transactions/",{loader:()=>n(()=>import("./index.html-DWox-T5t.js"),__vite__mapDeps([1134,1])),meta:{t:"标签: Distributed Transactions",I:!1}}],["/tag/enum/",{loader:()=>n(()=>import("./index.html-DOlkCr06.js"),__vite__mapDeps([1135,1])),meta:{t:"标签: Enum",I:!1}}],["/tag/kotlinx.serialization/",{loader:()=>n(()=>import("./index.html-CYYqxWc9.js"),__vite__mapDeps([1136,1])),meta:{t:"标签: kotlinx.serialization",I:!1}}],["/tag/backticks/",{loader:()=>n(()=>import("./index.html-CpzGJAr_.js"),__vite__mapDeps([1137,1])),meta:{t:"标签: Backticks",I:!1}}],["/tag/programming/",{loader:()=>n(()=>import("./index.html-DAC325zt.js"),__vite__mapDeps([1138,1])),meta:{t:"标签: Programming",I:!1}}],["/tag/value%E6%B3%A8%E8%A7%A3/",{loader:()=>n(()=>import("./index.html-CxaZmbWw.js"),__vite__mapDeps([1139,1])),meta:{t:"标签: Value注解",I:!1}}],["/tag/variable-shadowing/",{loader:()=>n(()=>import("./index.html-DSXF9G5d.js"),__vite__mapDeps([1140,1])),meta:{t:"标签: Variable Shadowing",I:!1}}],["/tag/vigen%C3%A8re%E5%AF%86%E7%A0%81/",{loader:()=>n(()=>import("./index.html-9DfhauZL.js"),__vite__mapDeps([1141,1])),meta:{t:"标签: Vigenère密码",I:!1}}],["/tag/%E5%8A%A0%E5%AF%86/",{loader:()=>n(()=>import("./index.html-DZaBC0ZO.js"),__vite__mapDeps([1142,1])),meta:{t:"标签: 加密",I:!1}}],["/tag/%E8%A7%A3%E5%AF%86/",{loader:()=>n(()=>import("./index.html-CX7hTb8K.js"),__vite__mapDeps([1143,1])),meta:{t:"标签: 解密",I:!1}}],["/tag/setter-methods/",{loader:()=>n(()=>import("./index.html-BY5m7EYQ.js"),__vite__mapDeps([1144,1])),meta:{t:"标签: Setter Methods",I:!1}}],["/tag/constructors/",{loader:()=>n(()=>import("./index.html-BraLTNRl.js"),__vite__mapDeps([1145,1])),meta:{t:"标签: Constructors",I:!1}}],["/tag/%E7%99%BE%E5%88%86%E4%BD%8D%E6%95%B0/",{loader:()=>n(()=>import("./index.html-IuQWGY1g.js"),__vite__mapDeps([1146,1])),meta:{t:"标签: 百分位数",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E9%9B%86/",{loader:()=>n(()=>import("./index.html-BxmwiK9m.js"),__vite__mapDeps([1147,1])),meta:{t:"标签: 数据集",I:!1}}],["/tag/%E7%BB%9F%E8%AE%A1%E5%88%86%E5%B8%83/",{loader:()=>n(()=>import("./index.html-BRbLI0Hy.js"),__vite__mapDeps([1148,1])),meta:{t:"标签: 统计分布",I:!1}}],["/tag/groovy/",{loader:()=>n(()=>import("./index.html-DanVfWOc.js"),__vite__mapDeps([1149,1])),meta:{t:"标签: Groovy",I:!1}}],["/tag/happy-number/",{loader:()=>n(()=>import("./index.html-CBuhH-Vb.js"),__vite__mapDeps([1150,1])),meta:{t:"标签: Happy Number",I:!1}}],["/tag/%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/",{loader:()=>n(()=>import("./index.html-B8_eGVpj.js"),__vite__mapDeps([1151,1])),meta:{t:"标签: 算法实现",I:!1}}],["/tag/offsets/",{loader:()=>n(()=>import("./index.html-CBqfh2Vf.js"),__vite__mapDeps([1152,1])),meta:{t:"标签: Offsets",I:!1}}],["/tag/commit/",{loader:()=>n(()=>import("./index.html-jFZs-Hwo.js"),__vite__mapDeps([1153,1])),meta:{t:"标签: Commit",I:!1}}],["/tag/largest-number/",{loader:()=>n(()=>import("./index.html-BOipJJ8v.js"),__vite__mapDeps([1154,1])),meta:{t:"标签: Largest Number",I:!1}}],["/tag/remove-digits/",{loader:()=>n(()=>import("./index.html-Cuy85al9.js"),__vite__mapDeps([1155,1])),meta:{t:"标签: Remove Digits",I:!1}}],["/tag/majority-element/",{loader:()=>n(()=>import("./index.html-CRbObuLt.js"),__vite__mapDeps([1156,1])),meta:{t:"标签: Majority Element",I:!1}}],["/tag/peak-elements/",{loader:()=>n(()=>import("./index.html-9ck3VDGM.js"),__vite__mapDeps([1157,1])),meta:{t:"标签: Peak Elements",I:!1}}],["/tag/binary-search/",{loader:()=>n(()=>import("./index.html-Bkia-V4-.js"),__vite__mapDeps([1158,1])),meta:{t:"标签: Binary Search",I:!1}}],["/tag/html/",{loader:()=>n(()=>import("./index.html-BmCnIk8i.js"),__vite__mapDeps([1159,1])),meta:{t:"标签: HTML",I:!1}}],["/tag/kotlinx.html/",{loader:()=>n(()=>import("./index.html-9lG82C7o.js"),__vite__mapDeps([1160,1])),meta:{t:"标签: kotlinx.html",I:!1}}],["/tag/servlet-filter/",{loader:()=>n(()=>import("./index.html-DHrIyvbT.js"),__vite__mapDeps([1161,1])),meta:{t:"标签: Servlet Filter",I:!1}}],["/tag/apache-commons-cli/",{loader:()=>n(()=>import("./index.html-CE4aIwsh.js"),__vite__mapDeps([1162,1])),meta:{t:"标签: Apache Commons CLI",I:!1}}],["/tag/cli-development/",{loader:()=>n(()=>import("./index.html-Ch9irjoH.js"),__vite__mapDeps([1163,1])),meta:{t:"标签: CLI Development",I:!1}}],["/tag/%E4%BA%8B%E4%BB%B6%E6%B5%81%E5%B9%B3%E5%8F%B0/",{loader:()=>n(()=>import("./index.html-US03gFiL.js"),__vite__mapDeps([1164,1])),meta:{t:"标签: 事件流平台",I:!1}}],["/tag/uri/",{loader:()=>n(()=>import("./index.html-CnA1xJOK.js"),__vite__mapDeps([1165,1])),meta:{t:"标签: URI",I:!1}}],["/tag/%E8%B7%AF%E5%BE%84/",{loader:()=>n(()=>import("./index.html-Ca2C4MgZ.js"),__vite__mapDeps([1166,1])),meta:{t:"标签: 路径",I:!1}}],["/tag/%E7%BD%91%E9%A1%B5%E6%8A%93%E5%8F%96/",{loader:()=>n(()=>import("./index.html-BXCcexDZ.js"),__vite__mapDeps([1167,1])),meta:{t:"标签: 网页抓取",I:!1}}],["/tag/refresh/",{loader:()=>n(()=>import("./index.html-Bue4Jiwx.js"),__vite__mapDeps([1168,1])),meta:{t:"标签: Refresh",I:!1}}],["/tag/fetch/",{loader:()=>n(()=>import("./index.html-sqxB7vxN.js"),__vite__mapDeps([1169,1])),meta:{t:"标签: Fetch",I:!1}}],["/tag/entity-management/",{loader:()=>n(()=>import("./index.html-CH1kOUDO.js"),__vite__mapDeps([1170,1])),meta:{t:"标签: Entity Management",I:!1}}],["/tag/authorizationmanager/",{loader:()=>n(()=>import("./index.html-CAmTgFpG.js"),__vite__mapDeps([1171,1])),meta:{t:"标签: AuthorizationManager",I:!1}}],["/tag/grpc/",{loader:()=>n(()=>import("./index.html-BO5Cj5i5.js"),__vite__mapDeps([1172,1])),meta:{t:"标签: gRPC",I:!1}}],["/tag/%E6%8B%A6%E6%88%AA%E5%99%A8/",{loader:()=>n(()=>import("./index.html-KKufWF7P.js"),__vite__mapDeps([1173,1])),meta:{t:"标签: 拦截器",I:!1}}],["/tag/%E5%BC%82%E5%B8%B8%E6%8B%A6%E6%88%AA%E5%99%A8/",{loader:()=>n(()=>import("./index.html-Bnl6ZdOC.js"),__vite__mapDeps([1174,1])),meta:{t:"标签: 异常拦截器",I:!1}}],["/tag/elasticsearch/",{loader:()=>n(()=>import("./index.html-fJ2aEFCb.js"),__vite__mapDeps([1175,1])),meta:{t:"标签: Elasticsearch",I:!1}}],["/tag/aggregation/",{loader:()=>n(()=>import("./index.html-BjGxbORg.js"),__vite__mapDeps([1176,1])),meta:{t:"标签: Aggregation",I:!1}}],["/tag/equals()/",{loader:()=>n(()=>import("./index.html-BbrIzwD9.js"),__vite__mapDeps([1177,1])),meta:{t:"标签: equals()",I:!1}}],["/tag/compareto()/",{loader:()=>n(()=>import("./index.html-BEHYQkwJ.js"),__vite__mapDeps([1178,1])),meta:{t:"标签: compareTo()",I:!1}}],["/tag/%E7%A7%BB%E5%8A%A8%E5%B9%B3%E5%9D%87/",{loader:()=>n(()=>import("./index.html-DQtycRi6.js"),__vite__mapDeps([1179,1])),meta:{t:"标签: 移动平均",I:!1}}],["/tag/asynchronous/",{loader:()=>n(()=>import("./index.html-CgfXO2wc.js"),__vite__mapDeps([1180,1])),meta:{t:"标签: Asynchronous",I:!1}}],["/tag/transactional/",{loader:()=>n(()=>import("./index.html-DEK-gcCP.js"),__vite__mapDeps([1181,1])),meta:{t:"标签: Transactional",I:!1}}],["/tag/permutation/",{loader:()=>n(()=>import("./index.html-BjBpCptW.js"),__vite__mapDeps([1182,1])),meta:{t:"标签: Permutation",I:!1}}],["/tag/anagram/",{loader:()=>n(()=>import("./index.html-Crwnxoay.js"),__vite__mapDeps([1183,1])),meta:{t:"标签: Anagram",I:!1}}],["/tag/%E6%8C%81%E4%B9%85%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87/",{loader:()=>n(()=>import("./index.html-CZySiLV0.js"),__vite__mapDeps([1184,1])),meta:{t:"标签: 持久化上下文",I:!1}}],["/tag/%E6%B8%85%E9%99%A4%E7%AE%A1%E7%90%86%E5%AE%9E%E4%BD%93/",{loader:()=>n(()=>import("./index.html-B4QAScXL.js"),__vite__mapDeps([1185,1])),meta:{t:"标签: 清除管理实体",I:!1}}],["/tag/code-coverage/",{loader:()=>n(()=>import("./index.html-DrArzeEV.js"),__vite__mapDeps([1186,1])),meta:{t:"标签: Code Coverage",I:!1}}],["/tag/test-coverage/",{loader:()=>n(()=>import("./index.html-97NjievP.js"),__vite__mapDeps([1187,1])),meta:{t:"标签: Test Coverage",I:!1}}],["/tag/collectors/",{loader:()=>n(()=>import("./index.html-D10dF-vD.js"),__vite__mapDeps([1188,1])),meta:{t:"标签: Collectors",I:!1}}],["/tag/%E6%95%B0%E5%AD%97%E6%AF%94%E8%BE%83/",{loader:()=>n(()=>import("./index.html-BVwgRAya.js"),__vite__mapDeps([1189,1])),meta:{t:"标签: 数字比较",I:!1}}],["/tag/%E6%B5%AE%E7%82%B9%E6%95%B0/",{loader:()=>n(()=>import("./index.html-Dxk8ArF6.js"),__vite__mapDeps([1190,1])),meta:{t:"标签: 浮点数",I:!1}}],["/tag/%E6%95%B4%E6%95%B0/",{loader:()=>n(()=>import("./index.html-Chi2bEnZ.js"),__vite__mapDeps([1191,1])),meta:{t:"标签: 整数",I:!1}}],["/tag/flux/",{loader:()=>n(()=>import("./index.html-C1b-Q0dl.js"),__vite__mapDeps([1192,1])),meta:{t:"标签: Flux",I:!1}}],["/tag/map/",{loader:()=>n(()=>import("./index.html-tjjL8YlY.js"),__vite__mapDeps([1106,1])),meta:{t:"标签: map",I:!1}}],["/tag/doonnext/",{loader:()=>n(()=>import("./index.html-3flZkii6.js"),__vite__mapDeps([1193,1])),meta:{t:"标签: doOnNext",I:!1}}],["/tag/mono/",{loader:()=>n(()=>import("./index.html-De1-NOBa.js"),__vite__mapDeps([1194,1])),meta:{t:"标签: Mono",I:!1}}],["/tag/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-BV1jfC9v.js"),__vite__mapDeps([1195,1])),meta:{t:"标签: 异步编程",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/",{loader:()=>n(()=>import("./index.html-CYiUruck.js"),__vite__mapDeps([1196,1])),meta:{t:"标签: 数据压缩",I:!1}}],["/tag/java-gzip/",{loader:()=>n(()=>import("./index.html-DMkJgkOC.js"),__vite__mapDeps([1197,1])),meta:{t:"标签: Java GZIP",I:!1}}],["/tag/%E9%87%8D%E8%AF%95%E7%AD%96%E7%95%A5/",{loader:()=>n(()=>import("./index.html-CiXJwgU6.js"),__vite__mapDeps([1198,1])),meta:{t:"标签: 重试策略",I:!1}}],["/tag/%E5%BE%AE%E6%9C%8D%E5%8A%A1/",{loader:()=>n(()=>import("./index.html-BB7NPvTp.js"),__vite__mapDeps([1199,1])),meta:{t:"标签: 微服务",I:!1}}],["/tag/consumer/",{loader:()=>n(()=>import("./index.html-BHYV8SP3.js"),__vite__mapDeps([1200,1])),meta:{t:"标签: Consumer",I:!1}}],["/tag/delay/",{loader:()=>n(()=>import("./index.html-D025IRyz.js"),__vite__mapDeps([1201,1])),meta:{t:"标签: Delay",I:!1}}],["/tag/testng/",{loader:()=>n(()=>import("./index.html-Bb8AE0oC.js"),__vite__mapDeps([1202,1])),meta:{t:"标签: TestNG",I:!1}}],["/tag/softassert/",{loader:()=>n(()=>import("./index.html-CMJf6HeT.js"),__vite__mapDeps([1203,1])),meta:{t:"标签: SoftAssert",I:!1}}],["/tag/1d%E6%95%B0%E7%BB%84/",{loader:()=>n(()=>import("./index.html-B0vi1LOS.js"),__vite__mapDeps([1204,1])),meta:{t:"标签: 1D数组",I:!1}}],["/tag/clob/",{loader:()=>n(()=>import("./index.html-zYbeXHkq.js"),__vite__mapDeps([1205,1])),meta:{t:"标签: CLOB",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/",{loader:()=>n(()=>import("./index.html-Cc_hTySE.js"),__vite__mapDeps([1206,1])),meta:{t:"标签: 数据库操作",I:!1}}],["/tag/%E5%8D%81%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%88%86%E6%95%B0/",{loader:()=>n(()=>import("./index.html-DHR4jvYr.js"),__vite__mapDeps([1207,1])),meta:{t:"标签: 十进制转分数",I:!1}}],["/tag/short/",{loader:()=>n(()=>import("./index.html-DRQbGM0R.js"),__vite__mapDeps([1208,1])),meta:{t:"标签: short",I:!1}}],["/tag/timestamp/",{loader:()=>n(()=>import("./index.html-xNB9Rd8A.js"),__vite__mapDeps([1209,1])),meta:{t:"标签: Timestamp",I:!1}}],["/tag/collection/",{loader:()=>n(()=>import("./index.html-DisUELmg.js"),__vite__mapDeps([1210,1])),meta:{t:"标签: Collection",I:!1}}],["/tag/%E9%98%9F%E5%88%97/",{loader:()=>n(()=>import("./index.html-GRqezYb6.js"),__vite__mapDeps([1211,1])),meta:{t:"标签: 队列",I:!1}}],["/tag/arraylist/",{loader:()=>n(()=>import("./index.html-DREFpjtj.js"),__vite__mapDeps([1212,1])),meta:{t:"标签: ArrayList",I:!1}}],["/tag/%E5%8E%9F%E5%A7%8B%E7%B1%BB%E5%9E%8B%E6%95%B0%E7%BB%84/",{loader:()=>n(()=>import("./index.html-AJFNnQJ9.js"),__vite__mapDeps([1213,1])),meta:{t:"标签: 原始类型数组",I:!1}}],["/tag/%E5%9B%BE%E5%83%8F%E8%BD%AC%E6%8D%A2/",{loader:()=>n(()=>import("./index.html-D6S4wCno.js"),__vite__mapDeps([1214,1])),meta:{t:"标签: 图像转换",I:!1}}],["/tag/java-nio/",{loader:()=>n(()=>import("./index.html-CwB82Dgx.js"),__vite__mapDeps([1215,1])),meta:{t:"标签: Java NIO",I:!1}}],["/tag/bytebuffer/",{loader:()=>n(()=>import("./index.html-D87w40rK.js"),__vite__mapDeps([1216,1])),meta:{t:"标签: ByteBuffer",I:!1}}],["/tag/dataoutputstream/",{loader:()=>n(()=>import("./index.html-DyOl-3d3.js"),__vite__mapDeps([1217,1])),meta:{t:"标签: DataOutputStream",I:!1}}],["/tag/hashmap/",{loader:()=>n(()=>import("./index.html-BH3HI7np.js"),__vite__mapDeps([1218,1])),meta:{t:"标签: HashMap",I:!1}}],["/tag/%E5%AD%97%E7%AC%A6%E8%AE%A1%E6%95%B0/",{loader:()=>n(()=>import("./index.html-CSwGepRB.js"),__vite__mapDeps([1219,1])),meta:{t:"标签: 字符计数",I:!1}}],["/tag/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/",{loader:()=>n(()=>import("./index.html-CdMTudHH.js"),__vite__mapDeps([1220,1])),meta:{t:"标签: 性能测试",I:!1}}],["/tag/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/",{loader:()=>n(()=>import("./index.html-CJtA30zg.js"),__vite__mapDeps([1221,1])),meta:{t:"标签: 自动化测试",I:!1}}],["/tag/java-enums/",{loader:()=>n(()=>import("./index.html-oXb5ZhNK.js"),__vite__mapDeps([1222,1])),meta:{t:"标签: Java Enums",I:!1}}],["/tag/inner-classes/",{loader:()=>n(()=>import("./index.html-DG7SlOCq.js"),__vite__mapDeps([1223,1])),meta:{t:"标签: Inner Classes",I:!1}}],["/tag/java-string/",{loader:()=>n(()=>import("./index.html-YyXDkQGW.js"),__vite__mapDeps([1224,1])),meta:{t:"标签: Java String",I:!1}}],["/tag/string-conversion/",{loader:()=>n(()=>import("./index.html-B5199Cw4.js"),__vite__mapDeps([1225,1])),meta:{t:"标签: String Conversion",I:!1}}],["/tag/iterator/",{loader:()=>n(()=>import("./index.html-B1nFmmRm.js"),__vite__mapDeps([944,1])),meta:{t:"标签: Iterator",I:!1}}],["/tag/iterable/",{loader:()=>n(()=>import("./index.html-0UA1Irbk.js"),__vite__mapDeps([1226,1])),meta:{t:"标签: Iterable",I:!1}}],["/tag/lombok/",{loader:()=>n(()=>import("./index.html-Bca5MU7h.js"),__vite__mapDeps([1227,1])),meta:{t:"标签: Lombok",I:!1}}],["/tag/annotations/",{loader:()=>n(()=>import("./index.html-Dk61wgZ3.js"),__vite__mapDeps([1228,1])),meta:{t:"标签: Annotations",I:!1}}],["/tag/optional.of()/",{loader:()=>n(()=>import("./index.html-SYEGaaAE.js"),__vite__mapDeps([1229,1])),meta:{t:"标签: Optional.of()",I:!1}}],["/tag/optional.ofnullable()/",{loader:()=>n(()=>import("./index.html-Bz7wbK7M.js"),__vite__mapDeps([1230,1])),meta:{t:"标签: Optional.ofNullable()",I:!1}}],["/tag/logback/",{loader:()=>n(()=>import("./index.html-DS5TnplL.js"),__vite__mapDeps([1231,1])),meta:{t:"标签: Logback",I:!1}}],["/tag/configuration/",{loader:()=>n(()=>import("./index.html-Bh0v4AtI.js"),__vite__mapDeps([1232,1])),meta:{t:"标签: Configuration",I:!1}}],["/tag/sdk/",{loader:()=>n(()=>import("./index.html-BwOgWts8.js"),__vite__mapDeps([1233,1])),meta:{t:"标签: SDK",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/",{loader:()=>n(()=>import("./index.html-Cxf1rAQo.js"),__vite__mapDeps([1234,1])),meta:{t:"标签: 文件下载",I:!1}}],["/tag/%E5%A4%8D%E6%95%B0/",{loader:()=>n(()=>import("./index.html-bF-S-egp.js"),__vite__mapDeps([1235,1])),meta:{t:"标签: 复数",I:!1}}],["/tag/%E8%BF%90%E7%AE%97/",{loader:()=>n(()=>import("./index.html-DdJcqwmR.js"),__vite__mapDeps([1236,1])),meta:{t:"标签: 运算",I:!1}}],["/tag/%E6%96%87%E6%9C%AC%E6%8F%90%E5%8F%96/",{loader:()=>n(()=>import("./index.html-BJnki9O1.js"),__vite__mapDeps([1237,1])),meta:{t:"标签: 文本提取",I:!1}}],["/tag/failsafe/",{loader:()=>n(()=>import("./index.html-qDZ-wJJ8.js"),__vite__mapDeps([1238,1])),meta:{t:"标签: Failsafe",I:!1}}],["/tag/%E5%AE%B9%E9%94%99/",{loader:()=>n(()=>import("./index.html-DQ2e7wmU.js"),__vite__mapDeps([1239,1])),meta:{t:"标签: 容错",I:!1}}],["/tag/easter/",{loader:()=>n(()=>import("./index.html-DnEVnv-H.js"),__vite__mapDeps([1240,1])),meta:{t:"标签: Easter",I:!1}}],["/tag/symmetric-substring/",{loader:()=>n(()=>import("./index.html-DvK2EGlq.js"),__vite__mapDeps([1241,1])),meta:{t:"标签: Symmetric Substring",I:!1}}],["/tag/string-manipulation/",{loader:()=>n(()=>import("./index.html-Dy-ac22l.js"),__vite__mapDeps([1242,1])),meta:{t:"标签: String Manipulation",I:!1}}],["/tag/%E6%9C%80%E5%B0%8F%E5%85%83%E7%B4%A0/",{loader:()=>n(()=>import("./index.html-BIsmcG3m.js"),__vite__mapDeps([1243,1])),meta:{t:"标签: 最小元素",I:!1}}],["/tag/%E7%B4%A2%E5%BC%95/",{loader:()=>n(()=>import("./index.html-DTB01CZG.js"),__vite__mapDeps([1244,1])),meta:{t:"标签: 索引",I:!1}}],["/tag/number/",{loader:()=>n(()=>import("./index.html-DCm8aZ5f.js"),__vite__mapDeps([1245,1])),meta:{t:"标签: Number",I:!1}}],["/tag/url-redirection/",{loader:()=>n(()=>import("./index.html-BeVs3dcH.js"),__vite__mapDeps([1246,1])),meta:{t:"标签: URL Redirection",I:!1}}],["/tag/httpurlconnection/",{loader:()=>n(()=>import("./index.html-DWxS-BZ6.js"),__vite__mapDeps([1247,1])),meta:{t:"标签: HttpURLConnection",I:!1}}],["/tag/httpclient/",{loader:()=>n(()=>import("./index.html-Cfb1jfat.js"),__vite__mapDeps([1248,1])),meta:{t:"标签: HttpClient",I:!1}}],["/tag/second-smallest/",{loader:()=>n(()=>import("./index.html-Bm6s1m9A.js"),__vite__mapDeps([1249,1])),meta:{t:"标签: Second Smallest",I:!1}}],["/tag/java-%E6%B5%81/",{loader:()=>n(()=>import("./index.html-DMNr_pvq.js"),__vite__mapDeps([1250,1])),meta:{t:"标签: Java 流",I:!1}}],["/tag/sql-syntax-error/",{loader:()=>n(()=>import("./index.html-DwnYB1c4.js"),__vite__mapDeps([1251,1])),meta:{t:"标签: SQL Syntax Error",I:!1}}],["/tag/table-not-found/",{loader:()=>n(()=>import("./index.html-Dh2Ewgqv.js"),__vite__mapDeps([1252,1])),meta:{t:"标签: Table Not Found",I:!1}}],["/tag/full-text-search/",{loader:()=>n(()=>import("./index.html-BSiATjMd.js"),__vite__mapDeps([1253,1])),meta:{t:"标签: Full-Text Search",I:!1}}],["/tag/partial-text-search/",{loader:()=>n(()=>import("./index.html-DRAlCjM0.js"),__vite__mapDeps([1254,1])),meta:{t:"标签: Partial-Text Search",I:!1}}],["/tag/apache-avro/",{loader:()=>n(()=>import("./index.html-CbBN41Ge.js"),__vite__mapDeps([1255,1])),meta:{t:"标签: Apache Avro",I:!1}}],["/tag/%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/",{loader:()=>n(()=>import("./index.html-BQ3Zc9K2.js"),__vite__mapDeps([1256,1])),meta:{t:"标签: 代码生成",I:!1}}],["/tag/%E4%BA%8C%E8%BF%9B%E5%88%B6/",{loader:()=>n(()=>import("./index.html-BYagPt6_.js"),__vite__mapDeps([1257,1])),meta:{t:"标签: 二进制",I:!1}}],["/tag/%E8%A1%A5%E7%A0%81/",{loader:()=>n(()=>import("./index.html-BKlkN3ey.js"),__vite__mapDeps([1258,1])),meta:{t:"标签: 补码",I:!1}}],["/tag/mockmvc/",{loader:()=>n(()=>import("./index.html-kABRsWzu.js"),__vite__mapDeps([1259,1])),meta:{t:"标签: MockMVC",I:!1}}],["/tag/sequence/",{loader:()=>n(()=>import("./index.html-BOtvGw6l.js"),__vite__mapDeps([1260,1])),meta:{t:"标签: Sequence",I:!1}}],["/tag/nextval/",{loader:()=>n(()=>import("./index.html-QQvEtr3A.js"),__vite__mapDeps([1261,1])),meta:{t:"标签: Nextval",I:!1}}],["/tag/%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F/",{loader:()=>n(()=>import("./index.html-CygMX_eN.js"),__vite__mapDeps([1262,1])),meta:{t:"标签: 数组排序",I:!1}}],["/tag/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/",{loader:()=>n(()=>import("./index.html-DF0P53H9.js"),__vite__mapDeps([1263,1])),meta:{t:"标签: 编程技巧",I:!1}}],["/tag/filter/",{loader:()=>n(()=>import("./index.html-BQCnzRqe.js"),__vite__mapDeps([1264,1])),meta:{t:"标签: Filter",I:!1}}],["/tag/response-body/",{loader:()=>n(()=>import("./index.html--ZgbkvYM.js"),__vite__mapDeps([1265,1])),meta:{t:"标签: Response Body",I:!1}}],["/tag/git/",{loader:()=>n(()=>import("./index.html-BqOycafv.js"),__vite__mapDeps([1266,1])),meta:{t:"标签: Git",I:!1}}],["/tag/null-handling/",{loader:()=>n(()=>import("./index.html-fOLvTHnn.js"),__vite__mapDeps([1267,1])),meta:{t:"标签: Null Handling",I:!1}}],["/tag/equals/",{loader:()=>n(()=>import("./index.html-B7CJsszW.js"),__vite__mapDeps([1268,1])),meta:{t:"标签: equals",I:!1}}],["/tag/get/",{loader:()=>n(()=>import("./index.html-2P766N3p.js"),__vite__mapDeps([1269,1])),meta:{t:"标签: get",I:!1}}],["/tag/webassembly/",{loader:()=>n(()=>import("./index.html-5FHttvku.js"),__vite__mapDeps([1270,1])),meta:{t:"标签: WebAssembly",I:!1}}],["/tag/java.sql.timestamp/",{loader:()=>n(()=>import("./index.html-BUDKd9kX.js"),__vite__mapDeps([1271,1])),meta:{t:"标签: java.sql.Timestamp",I:!1}}],["/tag/zoneddatetime/",{loader:()=>n(()=>import("./index.html-BrB8OHrC.js"),__vite__mapDeps([1272,1])),meta:{t:"标签: ZonedDateTime",I:!1}}],["/tag/xml-to-pdf/",{loader:()=>n(()=>import("./index.html-BgT6G8-b.js"),__vite__mapDeps([1273,1])),meta:{t:"标签: XML to PDF",I:!1}}],["/tag/apache-fop/",{loader:()=>n(()=>import("./index.html-hNtHL7iH.js"),__vite__mapDeps([1274,1])),meta:{t:"标签: Apache FOP",I:!1}}],["/tag/itext/",{loader:()=>n(()=>import("./index.html-Bf6p4bKX.js"),__vite__mapDeps([1275,1])),meta:{t:"标签: iText",I:!1}}],["/tag/xml%E8%BD%AC%E6%8D%A2/",{loader:()=>n(()=>import("./index.html-C3yJ2egs.js"),__vite__mapDeps([1276,1])),meta:{t:"标签: XML转换",I:!1}}],["/tag/dom/",{loader:()=>n(()=>import("./index.html-BVtPHnt7.js"),__vite__mapDeps([1277,1])),meta:{t:"标签: DOM",I:!1}}],["/tag/eofexception/",{loader:()=>n(()=>import("./index.html-D2DrsQTb.js"),__vite__mapDeps([1278,1])),meta:{t:"标签: EOFException",I:!1}}],["/tag/java%E5%BC%82%E5%B8%B8/",{loader:()=>n(()=>import("./index.html-Bdnwl4xV.js"),__vite__mapDeps([1279,1])),meta:{t:"标签: Java异常",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/",{loader:()=>n(()=>import("./index.html-BwDzGRge.js"),__vite__mapDeps([1280,1])),meta:{t:"标签: 文件读取",I:!1}}],["/tag/elvis-operator/",{loader:()=>n(()=>import("./index.html-Dg7UnI7c.js"),__vite__mapDeps([1281,1])),meta:{t:"标签: Elvis Operator",I:!1}}],["/tag/webflux/",{loader:()=>n(()=>import("./index.html-D0CrK8JU.js"),__vite__mapDeps([1282,1])),meta:{t:"标签: WebFlux",I:!1}}],["/tag/interceptor/",{loader:()=>n(()=>import("./index.html-Btir3a81.js"),__vite__mapDeps([1283,1])),meta:{t:"标签: Interceptor",I:!1}}],["/tag/headers/",{loader:()=>n(()=>import("./index.html-Bb_Tuw2l.js"),__vite__mapDeps([1284,1])),meta:{t:"标签: Headers",I:!1}}],["/tag/%E8%BF%AD%E4%BB%A3/",{loader:()=>n(()=>import("./index.html-BhvV2lUt.js"),__vite__mapDeps([1285,1])),meta:{t:"标签: 迭代",I:!1}}],["/tag/%E5%B9%B6%E8%A1%8C%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-DiMGg574.js"),__vite__mapDeps([1286,1])),meta:{t:"标签: 并行处理",I:!1}}],["/tag/jvm/",{loader:()=>n(()=>import("./index.html-BvPUh7Db.js"),__vite__mapDeps([1287,1])),meta:{t:"标签: JVM",I:!1}}],["/tag/pair/",{loader:()=>n(()=>import("./index.html-BFGMbhRE.js"),__vite__mapDeps([1288,1])),meta:{t:"标签: Pair",I:!1}}],["/tag/comparator/",{loader:()=>n(()=>import("./index.html-P9_REKE8.js"),__vite__mapDeps([1289,1])),meta:{t:"标签: Comparator",I:!1}}],["/tag/builder%E6%A8%A1%E5%BC%8F/",{loader:()=>n(()=>import("./index.html-BVMjGURP.js"),__vite__mapDeps([1290,1])),meta:{t:"标签: Builder模式",I:!1}}],["/tag/%E7%BB%A7%E6%89%BF/",{loader:()=>n(()=>import("./index.html-zjOEIOBJ.js"),__vite__mapDeps([1291,1])),meta:{t:"标签: 继承",I:!1}}],["/tag/%E7%BB%84%E5%90%88/",{loader:()=>n(()=>import("./index.html-Dpy9w0Wg.js"),__vite__mapDeps([1292,1])),meta:{t:"标签: 组合",I:!1}}],["/tag/java%E5%AE%89%E8%A3%85/",{loader:()=>n(()=>import("./index.html-WoMiORgm.js"),__vite__mapDeps([1293,1])),meta:{t:"标签: Java安装",I:!1}}],["/tag/macos/",{loader:()=>n(()=>import("./index.html-DoXNXau6.js"),__vite__mapDeps([659,1])),meta:{t:"标签: macOS",I:!1}}],["/tag/apache-commons-configuration/",{loader:()=>n(()=>import("./index.html-Cjd66fpd.js"),__vite__mapDeps([1294,1])),meta:{t:"标签: Apache Commons Configuration",I:!1}}],["/tag/compression/",{loader:()=>n(()=>import("./index.html-D4f0kCq5.js"),__vite__mapDeps([1295,1])),meta:{t:"标签: Compression",I:!1}}],["/tag/archiving/",{loader:()=>n(()=>import("./index.html-DPrGu-pz.js"),__vite__mapDeps([1296,1])),meta:{t:"标签: Archiving",I:!1}}],["/tag/brave/",{loader:()=>n(()=>import("./index.html-BxfGpb2D.js"),__vite__mapDeps([1297,1])),meta:{t:"标签: Brave",I:!1}}],["/tag/zipkin/",{loader:()=>n(()=>import("./index.html-DP60yvPt.js"),__vite__mapDeps([1298,1])),meta:{t:"标签: Zipkin",I:!1}}],["/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%BD%E8%B8%AA/",{loader:()=>n(()=>import("./index.html-B3gBAtaC.js"),__vite__mapDeps([1299,1])),meta:{t:"标签: 分布式追踪",I:!1}}],["/tag/duckdb/",{loader:()=>n(()=>import("./index.html-BEi0004g.js"),__vite__mapDeps([1300,1])),meta:{t:"标签: DuckDB",I:!1}}],["/tag/csv/",{loader:()=>n(()=>import("./index.html-BYTlwvWS.js"),__vite__mapDeps([1301,1])),meta:{t:"标签: CSV",I:!1}}],["/tag/jfreechart/",{loader:()=>n(()=>import("./index.html-BvJdMmKt.js"),__vite__mapDeps([1302,1])),meta:{t:"标签: JFreeChart",I:!1}}],["/tag/%E5%9B%BE%E8%A1%A8%E5%BA%93/",{loader:()=>n(()=>import("./index.html-Da9O9G7S.js"),__vite__mapDeps([1303,1])),meta:{t:"标签: 图表库",I:!1}}],["/tag/java-22/",{loader:()=>n(()=>import("./index.html-CCsPt45w.js"),__vite__mapDeps([1304,1])),meta:{t:"标签: Java 22",I:!1}}],["/tag/javaparser/",{loader:()=>n(()=>import("./index.html-BoQ3Pnc4.js"),__vite__mapDeps([1305,1])),meta:{t:"标签: JavaParser",I:!1}}],["/tag/ast/",{loader:()=>n(()=>import("./index.html-DBsJvYXS.js"),__vite__mapDeps([1306,1])),meta:{t:"标签: AST",I:!1}}],["/tag/ssh/",{loader:()=>n(()=>import("./index.html-Cih3oCGz.js"),__vite__mapDeps([1307,1])),meta:{t:"标签: SSH",I:!1}}],["/tag/java%E5%BA%93/",{loader:()=>n(()=>import("./index.html-9NhIf7_z.js"),__vite__mapDeps([1308,1])),meta:{t:"标签: Java库",I:!1}}],["/tag/simple-java-mail/",{loader:()=>n(()=>import("./index.html-DSmoEZgh.js"),__vite__mapDeps([1309,1])),meta:{t:"标签: Simple Java Mail",I:!1}}],["/tag/javamail-api/",{loader:()=>n(()=>import("./index.html-C7eU4E5l.js"),__vite__mapDeps([1310,1])),meta:{t:"标签: JavaMail API",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E6%AF%94%E8%BE%83/",{loader:()=>n(()=>import("./index.html-BluWckDk.js"),__vite__mapDeps([1311,1])),meta:{t:"标签: 数据比较",I:!1}}],["/tag/%E6%97%A0%E7%AC%A6%E5%8F%B7%E5%AD%97%E8%8A%82/",{loader:()=>n(()=>import("./index.html-BzGG5QEB.js"),__vite__mapDeps([1312,1])),meta:{t:"标签: 无符号字节",I:!1}}],["/tag/offsetdatetime/",{loader:()=>n(()=>import("./index.html-BYQtEyGQ.js"),__vite__mapDeps([1313,1])),meta:{t:"标签: OffsetDateTime",I:!1}}],["/tag/jooq/",{loader:()=>n(()=>import("./index.html-DseknJDa.js"),__vite__mapDeps([1314,1])),meta:{t:"标签: jOOQ",I:!1}}],["/tag/mapstruct/",{loader:()=>n(()=>import("./index.html-DAQxhul4.js"),__vite__mapDeps([1315,1])),meta:{t:"标签: MapStruct",I:!1}}],["/tag/localdatetime/",{loader:()=>n(()=>import("./index.html-DqY_By7E.js"),__vite__mapDeps([1316,1])),meta:{t:"标签: LocalDateTime",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E6%98%A0%E5%B0%84/",{loader:()=>n(()=>import("./index.html-CGKEVWLc.js"),__vite__mapDeps([1317,1])),meta:{t:"标签: 数据映射",I:!1}}],["/tag/apache-pdfbox/",{loader:()=>n(()=>import("./index.html-CNMmWaFv.js"),__vite__mapDeps([1318,1])),meta:{t:"标签: Apache PDFBox",I:!1}}],["/tag/monads/",{loader:()=>n(()=>import("./index.html-BQVJy6d6.js"),__vite__mapDeps([1319,1])),meta:{t:"标签: Monads",I:!1}}],["/tag/functional-programming/",{loader:()=>n(()=>import("./index.html-CWucrevh.js"),__vite__mapDeps([1320,1])),meta:{t:"标签: Functional Programming",I:!1}}],["/tag/%E7%9B%91%E6%8E%A7/",{loader:()=>n(()=>import("./index.html-inBp27l3.js"),__vite__mapDeps([1321,1])),meta:{t:"标签: 监控",I:!1}}],["/tag/ai/",{loader:()=>n(()=>import("./index.html-FYi3eC_s.js"),__vite__mapDeps([1322,1])),meta:{t:"标签: AI",I:!1}}],["/tag/chatgpt/",{loader:()=>n(()=>import("./index.html-CDNpsmZk.js"),__vite__mapDeps([1323,1])),meta:{t:"标签: ChatGPT",I:!1}}],["/tag/api/",{loader:()=>n(()=>import("./index.html-CX1IMgHF.js"),__vite__mapDeps([1324,1])),meta:{t:"标签: API",I:!1}}],["/tag/parallel-collectors/",{loader:()=>n(()=>import("./index.html-BGeJU6AB.js"),__vite__mapDeps([1325,1])),meta:{t:"标签: Parallel Collectors",I:!1}}],["/tag/persistenceunit/",{loader:()=>n(()=>import("./index.html-CjiTb6G8.js"),__vite__mapDeps([1326,1])),meta:{t:"标签: PersistenceUnit",I:!1}}],["/tag/persistencecontext/",{loader:()=>n(()=>import("./index.html-DD8M2YqL.js"),__vite__mapDeps([1327,1])),meta:{t:"标签: PersistenceContext",I:!1}}],["/tag/polymorphism/",{loader:()=>n(()=>import("./index.html-B_yBdF-i.js"),__vite__mapDeps([1328,1])),meta:{t:"标签: Polymorphism",I:!1}}],["/tag/java%E7%BC%96%E7%A8%8B/",{loader:()=>n(()=>import("./index.html-DSKvdDmS.js"),__vite__mapDeps([1329,1])),meta:{t:"标签: Java编程",I:!1}}],["/tag/tostring%E6%96%B9%E6%B3%95/",{loader:()=>n(()=>import("./index.html-BkKRDJkJ.js"),__vite__mapDeps([1330,1])),meta:{t:"标签: toString方法",I:!1}}],["/tag/%E7%A9%BA%E5%80%BC%E5%A4%84%E7%90%86/",{loader:()=>n(()=>import("./index.html-D9kVj6uu.js"),__vite__mapDeps([1331,1])),meta:{t:"标签: 空值处理",I:!1}}],["/tag/printwriter/",{loader:()=>n(()=>import("./index.html-S2YvVFoK.js"),__vite__mapDeps([1332,1])),meta:{t:"标签: PrintWriter",I:!1}}],["/tag/write()/",{loader:()=>n(()=>import("./index.html-BHNA_GLE.js"),__vite__mapDeps([1333,1])),meta:{t:"标签: write()",I:!1}}],["/tag/print()/",{loader:()=>n(()=>import("./index.html-Bg2onfhf.js"),__vite__mapDeps([1334,1])),meta:{t:"标签: print()",I:!1}}],["/tag/opencsv/",{loader:()=>n(()=>import("./index.html-e4PAQQPp.js"),__vite__mapDeps([1335,1])),meta:{t:"标签: OpenCSV",I:!1}}],["/tag/apache-commons-csv/",{loader:()=>n(()=>import("./index.html-Dn_Z4pbh.js"),__vite__mapDeps([1336,1])),meta:{t:"标签: Apache Commons CSV",I:!1}}],["/tag/%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/",{loader:()=>n(()=>import("./index.html-BIqjDo3M.js"),__vite__mapDeps([1337,1])),meta:{t:"标签: 子字符串",I:!1}}],["/tag/regex/",{loader:()=>n(()=>import("./index.html-Ctecdz2t.js"),__vite__mapDeps([710,1])),meta:{t:"标签: Regex",I:!1}}],["/tag/back-reference/",{loader:()=>n(()=>import("./index.html-CpXREOyA.js"),__vite__mapDeps([1338,1])),meta:{t:"标签: Back Reference",I:!1}}],["/tag/lookaround/",{loader:()=>n(()=>import("./index.html-Cz7kd5to.js"),__vite__mapDeps([1339,1])),meta:{t:"标签: Lookaround",I:!1}}],["/tag/java%E5%AE%89%E5%85%A8/",{loader:()=>n(()=>import("./index.html-DDUcJOR1.js"),__vite__mapDeps([1340,1])),meta:{t:"标签: Java安全",I:!1}}],["/tag/unrecoverablekeyexception/",{loader:()=>n(()=>import("./index.html-Ikrusn8p.js"),__vite__mapDeps([1341,1])),meta:{t:"标签: UnrecoverableKeyException",I:!1}}],["/tag/java-stream-api/",{loader:()=>n(()=>import("./index.html-DkAJOgMo.js"),__vite__mapDeps([1342,1])),meta:{t:"标签: Java Stream API",I:!1}}],["/tag/filter/",{loader:()=>n(()=>import("./index.html-BQCnzRqe.js"),__vite__mapDeps([1264,1])),meta:{t:"标签: filter",I:!1}}],["/tag/quarkus/",{loader:()=>n(()=>import("./index.html-CfKJAe-0.js"),__vite__mapDeps([1343,1])),meta:{t:"标签: Quarkus",I:!1}}],["/tag/rbac/",{loader:()=>n(()=>import("./index.html-BMxoQ4dM.js"),__vite__mapDeps([1344,1])),meta:{t:"标签: RBAC",I:!1}}],["/tag/%E6%8C%81%E4%B9%85%E5%8C%96/",{loader:()=>n(()=>import("./index.html-C9Aw-Blt.js"),__vite__mapDeps([1345,1])),meta:{t:"标签: 持久化",I:!1}}],["/tag/%E7%BA%A7%E8%81%94/",{loader:()=>n(()=>import("./index.html-cOdy381F.js"),__vite__mapDeps([1346,1])),meta:{t:"标签: 级联",I:!1}}],["/tag/matrix/",{loader:()=>n(()=>import("./index.html-zWC8gZ3c.js"),__vite__mapDeps([1347,1])),meta:{t:"标签: Matrix",I:!1}}],["/tag/zero/",{loader:()=>n(()=>import("./index.html-Du8KqSrz.js"),__vite__mapDeps([965,1])),meta:{t:"标签: Zero",I:!1}}],["/tag/optimization/",{loader:()=>n(()=>import("./index.html-C-D-WKg2.js"),__vite__mapDeps([1348,1])),meta:{t:"标签: Optimization",I:!1}}],["/tag/converter/",{loader:()=>n(()=>import("./index.html-DUluk-dk.js"),__vite__mapDeps([1349,1])),meta:{t:"标签: Converter",I:!1}}],["/tag/web-client/",{loader:()=>n(()=>import("./index.html-D4zgoeME.js"),__vite__mapDeps([1350,1])),meta:{t:"标签: Web Client",I:!1}}],["/tag/static-code-analysis/",{loader:()=>n(()=>import("./index.html-CD18j_-x.js"),__vite__mapDeps([1351,1])),meta:{t:"标签: Static Code Analysis",I:!1}}],["/tag/infer/",{loader:()=>n(()=>import("./index.html-fA0lfM7o.js"),__vite__mapDeps([1352,1])),meta:{t:"标签: Infer",I:!1}}],["/tag/junit/",{loader:()=>n(()=>import("./index.html-BaN7o8Fq.js"),__vite__mapDeps([1353,1])),meta:{t:"标签: JUnit",I:!1}}],["/tag/doanswer/",{loader:()=>n(()=>import("./index.html-DrXsZhNg.js"),__vite__mapDeps([1354,1])),meta:{t:"标签: doAnswer",I:!1}}],["/tag/thenreturn/",{loader:()=>n(()=>import("./index.html-B4SOQdf0.js"),__vite__mapDeps([1355,1])),meta:{t:"标签: thenReturn",I:!1}}],["/tag/%E4%BE%9D%E8%B5%96%E6%A0%91/",{loader:()=>n(()=>import("./index.html-DA1ZKxos.js"),__vite__mapDeps([1356,1])),meta:{t:"标签: 依赖树",I:!1}}],["/tag/%E4%BE%9D%E8%B5%96%E5%9B%BE/",{loader:()=>n(()=>import("./index.html-DdrGYCfy.js"),__vite__mapDeps([1357,1])),meta:{t:"标签: 依赖图",I:!1}}],["/tag/hashcode/",{loader:()=>n(()=>import("./index.html-DThf3w-l.js"),__vite__mapDeps([1358,1])),meta:{t:"标签: hashCode",I:!1}}],["/tag/unit-test/",{loader:()=>n(()=>import("./index.html-Bz_Ya7bA.js"),__vite__mapDeps([1359,1])),meta:{t:"标签: Unit Test",I:!1}}],["/tag/autowired/",{loader:()=>n(()=>import("./index.html-9sVsaX4A.js"),__vite__mapDeps([1360,1])),meta:{t:"标签: Autowired",I:!1}}],["/tag/injectmocks/",{loader:()=>n(()=>import("./index.html-rVvVsK_w.js"),__vite__mapDeps([1361,1])),meta:{t:"标签: InjectMocks",I:!1}}],["/tag/sorting/",{loader:()=>n(()=>import("./index.html-XeIfqG5q.js"),__vite__mapDeps([1362,1])),meta:{t:"标签: Sorting",I:!1}}],["/tag/cache/",{loader:()=>n(()=>import("./index.html-BiiRnJ70.js"),__vite__mapDeps([1363,1])),meta:{t:"标签: Cache",I:!1}}],["/tag/%E6%B3%A8%E8%A7%A3/",{loader:()=>n(()=>import("./index.html-DIuBoFId.js"),__vite__mapDeps([1364,1])),meta:{t:"标签: 注解",I:!1}}],["/article/",{loader:()=>n(()=>import("./index.html-09cqAFre.js"),__vite__mapDeps([1365,1])),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>n(()=>import("./index.html-CdBxTaoc.js"),__vite__mapDeps([1366,1])),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>n(()=>import("./index.html-CDEererH.js"),__vite__mapDeps([1367,1])),meta:{t:"时间轴",I:!1}}]]);/*!
  * vue-router v4.3.2
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const ye=typeof document<"u";function _d(a){return a.__esModule||a[Symbol.toStringTag]==="Module"}const ma=Object.assign;function zs(a,t){const e={};for(const s in t){const o=t[s];e[s]=ft(o)?o.map(a):a(o)}return e}const nn=()=>{},ft=Array.isArray,hl=/#/g,hd=/&/g,vd=/\//g,fd=/=/g,Ed=/\?/g,vl=/\+/g,kd=/%5B/g,Ad=/%5D/g,fl=/%5E/g,yd=/%60/g,El=/%7B/g,Id=/%7C/g,kl=/%7D/g,bd=/%20/g;function or(a){return encodeURI(""+a).replace(Id,"|").replace(kd,"[").replace(Ad,"]")}function Sd(a){return or(a).replace(El,"{").replace(kl,"}").replace(fl,"^")}function fo(a){return or(a).replace(vl,"%2B").replace(bd,"+").replace(hl,"%23").replace(hd,"%26").replace(yd,"`").replace(El,"{").replace(kl,"}").replace(fl,"^")}function Pd(a){return fo(a).replace(fd,"%3D")}function Dd(a){return or(a).replace(hl,"%23").replace(Ed,"%3F")}function Td(a){return a==null?"":Dd(a).replace(vd,"%2F")}function mn(a){try{return decodeURIComponent(""+a)}catch{}return""+a}const Ld=/\/$/,xd=a=>a.replace(Ld,"");function $s(a,t,e="/"){let s,o={},r="",i="";const l=t.indexOf("#");let c=t.indexOf("?");return l<c&&l>=0&&(c=-1),c>-1&&(s=t.slice(0,c),r=t.slice(c+1,l>-1?l:t.length),o=a(r)),l>-1&&(s=s||t.slice(0,l),i=t.slice(l,t.length)),s=Cd(s??t,e),{fullPath:s+(r&&"?")+r+i,path:s,query:o,hash:mn(i)}}function Rd(a,t){const e=t.query?a(t.query):"";return t.path+(e&&"?")+e+(t.hash||"")}function vi(a,t){return!t||!a.toLowerCase().startsWith(t.toLowerCase())?a:a.slice(t.length)||"/"}function Od(a,t,e){const s=t.matched.length-1,o=e.matched.length-1;return s>-1&&s===o&&Ce(t.matched[s],e.matched[o])&&Al(t.params,e.params)&&a(t.query)===a(e.query)&&t.hash===e.hash}function Ce(a,t){return(a.aliasOf||a)===(t.aliasOf||t)}function Al(a,t){if(Object.keys(a).length!==Object.keys(t).length)return!1;for(const e in a)if(!Jd(a[e],t[e]))return!1;return!0}function Jd(a,t){return ft(a)?fi(a,t):ft(t)?fi(t,a):a===t}function fi(a,t){return ft(t)?a.length===t.length&&a.every((e,s)=>e===t[s]):a.length===1&&a[0]===t}function Cd(a,t){if(a.startsWith("/"))return a;if(!a)return t;const e=t.split("/"),s=a.split("/"),o=s[s.length-1];(o===".."||o===".")&&s.push("");let r=e.length-1,i,l;for(i=0;i<s.length;i++)if(l=s[i],l!==".")if(l==="..")r>1&&r--;else break;return e.slice(0,r).join("/")+"/"+s.slice(i).join("/")}var _n;(function(a){a.pop="pop",a.push="push"})(_n||(_n={}));var sn;(function(a){a.back="back",a.forward="forward",a.unknown=""})(sn||(sn={}));function Bd(a){if(!a)if(ye){const t=document.querySelector("base");a=t&&t.getAttribute("href")||"/",a=a.replace(/^\w+:\/\/[^\/]+/,"")}else a="/";return a[0]!=="/"&&a[0]!=="#"&&(a="/"+a),xd(a)}const wd=/^[^#]+#/;function Vd(a,t){return a.replace(wd,"#")+t}function Md(a,t){const e=document.documentElement.getBoundingClientRect(),s=a.getBoundingClientRect();return{behavior:t.behavior,left:s.left-e.left-(t.left||0),top:s.top-e.top-(t.top||0)}}const Ps=()=>({left:window.scrollX,top:window.scrollY});function Fd(a){let t;if("el"in a){const e=a.el,s=typeof e=="string"&&e.startsWith("#"),o=typeof e=="string"?s?document.getElementById(e.slice(1)):document.querySelector(e):e;if(!o)return;t=Md(o,a)}else t=a;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.scrollX,t.top!=null?t.top:window.scrollY)}function Ei(a,t){return(history.state?history.state.position-t:-1)+a}const Eo=new Map;function jd(a,t){Eo.set(a,t)}function Nd(a){const t=Eo.get(a);return Eo.delete(a),t}let Hd=()=>location.protocol+"//"+location.host;function yl(a,t){const{pathname:e,search:s,hash:o}=t,r=a.indexOf("#");if(r>-1){let l=o.includes(a.slice(r))?a.slice(r).length:1,c=o.slice(l);return c[0]!=="/"&&(c="/"+c),vi(c,"")}return vi(e,a)+s+o}function Ud(a,t,e,s){let o=[],r=[],i=null;const l=({state:m})=>{const _=yl(a,location),v=e.value,k=t.value;let b=0;if(m){if(e.value=_,t.value=m,i&&i===v){i=null;return}b=k?m.position-k.position:0}else s(_);o.forEach(A=>{A(e.value,v,{delta:b,type:_n.pop,direction:b?b>0?sn.forward:sn.back:sn.unknown})})};function c(){i=e.value}function u(m){o.push(m);const _=()=>{const v=o.indexOf(m);v>-1&&o.splice(v,1)};return r.push(_),_}function d(){const{history:m}=window;m.state&&m.replaceState(ma({},m.state,{scroll:Ps()}),"")}function g(){for(const m of r)m();r=[],window.removeEventListener("popstate",l),window.removeEventListener("beforeunload",d)}return window.addEventListener("popstate",l),window.addEventListener("beforeunload",d,{passive:!0}),{pauseListeners:c,listen:u,destroy:g}}function ki(a,t,e,s=!1,o=!1){return{back:a,current:t,forward:e,replaced:s,position:window.history.length,scroll:o?Ps():null}}function Kd(a){const{history:t,location:e}=window,s={value:yl(a,e)},o={value:t.state};o.value||r(s.value,{back:null,current:s.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function r(c,u,d){const g=a.indexOf("#"),m=g>-1?(e.host&&document.querySelector("base")?a:a.slice(g))+c:Hd()+a+c;try{t[d?"replaceState":"pushState"](u,"",m),o.value=u}catch(_){console.error(_),e[d?"replace":"assign"](m)}}function i(c,u){const d=ma({},t.state,ki(o.value.back,c,o.value.forward,!0),u,{position:o.value.position});r(c,d,!0),s.value=c}function l(c,u){const d=ma({},o.value,t.state,{forward:c,scroll:Ps()});r(d.current,d,!0);const g=ma({},ki(s.value,c,null),{position:d.position+1},u);r(c,g,!1),s.value=c}return{location:s,state:o,push:l,replace:i}}function Gd(a){a=Bd(a);const t=Kd(a),e=Ud(a,t.state,t.location,t.replace);function s(r,i=!0){i||e.pauseListeners(),history.go(r)}const o=ma({location:"",base:a,go:s,createHref:Vd.bind(null,a)},t,e);return Object.defineProperty(o,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(o,"state",{enumerable:!0,get:()=>t.state.value}),o}function Wd(a){return typeof a=="string"||a&&typeof a=="object"}function Il(a){return typeof a=="string"||typeof a=="symbol"}const Rt={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},bl=Symbol("");var Ai;(function(a){a[a.aborted=4]="aborted",a[a.cancelled=8]="cancelled",a[a.duplicated=16]="duplicated"})(Ai||(Ai={}));function Be(a,t){return ma(new Error,{type:a,[bl]:!0},t)}function Lt(a,t){return a instanceof Error&&bl in a&&(t==null||!!(a.type&t))}const yi="[^/]+?",zd={sensitive:!1,strict:!1,start:!0,end:!0},$d=/[.+*?^${}()[\]/\\]/g;function qd(a,t){const e=ma({},zd,t),s=[];let o=e.start?"^":"";const r=[];for(const u of a){const d=u.length?[]:[90];e.strict&&!u.length&&(o+="/");for(let g=0;g<u.length;g++){const m=u[g];let _=40+(e.sensitive?.25:0);if(m.type===0)g||(o+="/"),o+=m.value.replace($d,"\\$&"),_+=40;else if(m.type===1){const{value:v,repeatable:k,optional:b,regexp:A}=m;r.push({name:v,repeatable:k,optional:b});const I=A||yi;if(I!==yi){_+=10;try{new RegExp(`(${I})`)}catch(P){throw new Error(`Invalid custom RegExp for param "${v}" (${I}): `+P.message)}}let E=k?`((?:${I})(?:/(?:${I}))*)`:`(${I})`;g||(E=b&&u.length<2?`(?:/${E})`:"/"+E),b&&(E+="?"),o+=E,_+=20,b&&(_+=-8),k&&(_+=-20),I===".*"&&(_+=-50)}d.push(_)}s.push(d)}if(e.strict&&e.end){const u=s.length-1;s[u][s[u].length-1]+=.7000000000000001}e.strict||(o+="/?"),e.end?o+="$":e.strict&&(o+="(?:/|$)");const i=new RegExp(o,e.sensitive?"":"i");function l(u){const d=u.match(i),g={};if(!d)return null;for(let m=1;m<d.length;m++){const _=d[m]||"",v=r[m-1];g[v.name]=_&&v.repeatable?_.split("/"):_}return g}function c(u){let d="",g=!1;for(const m of a){(!g||!d.endsWith("/"))&&(d+="/"),g=!1;for(const _ of m)if(_.type===0)d+=_.value;else if(_.type===1){const{value:v,repeatable:k,optional:b}=_,A=v in u?u[v]:"";if(ft(A)&&!k)throw new Error(`Provided param "${v}" is an array but it is not repeatable (* or + modifiers)`);const I=ft(A)?A.join("/"):A;if(!I)if(b)m.length<2&&(d.endsWith("/")?d=d.slice(0,-1):g=!0);else throw new Error(`Missing required param "${v}"`);d+=I}}return d||"/"}return{re:i,score:s,keys:r,parse:l,stringify:c}}function Qd(a,t){let e=0;for(;e<a.length&&e<t.length;){const s=t[e]-a[e];if(s)return s;e++}return a.length<t.length?a.length===1&&a[0]===80?-1:1:a.length>t.length?t.length===1&&t[0]===80?1:-1:0}function Xd(a,t){let e=0;const s=a.score,o=t.score;for(;e<s.length&&e<o.length;){const r=Qd(s[e],o[e]);if(r)return r;e++}if(Math.abs(o.length-s.length)===1){if(Ii(s))return 1;if(Ii(o))return-1}return o.length-s.length}function Ii(a){const t=a[a.length-1];return a.length>0&&t[t.length-1]<0}const Zd={type:0,value:""},Yd=/[a-zA-Z0-9_]/;function ag(a){if(!a)return[[]];if(a==="/")return[[Zd]];if(!a.startsWith("/"))throw new Error(`Invalid path "${a}"`);function t(_){throw new Error(`ERR (${e})/"${u}": ${_}`)}let e=0,s=e;const o=[];let r;function i(){r&&o.push(r),r=[]}let l=0,c,u="",d="";function g(){u&&(e===0?r.push({type:0,value:u}):e===1||e===2||e===3?(r.length>1&&(c==="*"||c==="+")&&t(`A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`),r.push({type:1,value:u,regexp:d,repeatable:c==="*"||c==="+",optional:c==="*"||c==="?"})):t("Invalid state to consume buffer"),u="")}function m(){u+=c}for(;l<a.length;){if(c=a[l++],c==="\\"&&e!==2){s=e,e=4;continue}switch(e){case 0:c==="/"?(u&&g(),i()):c===":"?(g(),e=1):m();break;case 4:m(),e=s;break;case 1:c==="("?e=2:Yd.test(c)?m():(g(),e=0,c!=="*"&&c!=="?"&&c!=="+"&&l--);break;case 2:c===")"?d[d.length-1]=="\\"?d=d.slice(0,-1)+c:e=3:d+=c;break;case 3:g(),e=0,c!=="*"&&c!=="?"&&c!=="+"&&l--,d="";break;default:t("Unknown state");break}}return e===2&&t(`Unfinished custom RegExp for param "${u}"`),g(),i(),o}function tg(a,t,e){const s=qd(ag(a.path),e),o=ma(s,{record:a,parent:t,children:[],alias:[]});return t&&!o.record.aliasOf==!t.record.aliasOf&&t.children.push(o),o}function eg(a,t){const e=[],s=new Map;t=Pi({strict:!1,end:!0,sensitive:!1},t);function o(d){return s.get(d)}function r(d,g,m){const _=!m,v=ng(d);v.aliasOf=m&&m.record;const k=Pi(t,d),b=[v];if("alias"in d){const E=typeof d.alias=="string"?[d.alias]:d.alias;for(const P of E)b.push(ma({},v,{components:m?m.record.components:v.components,path:P,aliasOf:m?m.record:v}))}let A,I;for(const E of b){const{path:P}=E;if(g&&P[0]!=="/"){const M=g.record.path,C=M[M.length-1]==="/"?"":"/";E.path=g.record.path+(P&&C+P)}if(A=tg(E,g,k),m?m.alias.push(A):(I=I||A,I!==A&&I.alias.push(A),_&&d.name&&!Si(A)&&i(d.name)),v.children){const M=v.children;for(let C=0;C<M.length;C++)r(M[C],A,m&&m.children[C])}m=m||A,(A.record.components&&Object.keys(A.record.components).length||A.record.name||A.record.redirect)&&c(A)}return I?()=>{i(I)}:nn}function i(d){if(Il(d)){const g=s.get(d);g&&(s.delete(d),e.splice(e.indexOf(g),1),g.children.forEach(i),g.alias.forEach(i))}else{const g=e.indexOf(d);g>-1&&(e.splice(g,1),d.record.name&&s.delete(d.record.name),d.children.forEach(i),d.alias.forEach(i))}}function l(){return e}function c(d){let g=0;for(;g<e.length&&Xd(d,e[g])>=0&&(d.record.path!==e[g].record.path||!Sl(d,e[g]));)g++;e.splice(g,0,d),d.record.name&&!Si(d)&&s.set(d.record.name,d)}function u(d,g){let m,_={},v,k;if("name"in d&&d.name){if(m=s.get(d.name),!m)throw Be(1,{location:d});k=m.record.name,_=ma(bi(g.params,m.keys.filter(I=>!I.optional).concat(m.parent?m.parent.keys.filter(I=>I.optional):[]).map(I=>I.name)),d.params&&bi(d.params,m.keys.map(I=>I.name))),v=m.stringify(_)}else if(d.path!=null)v=d.path,m=e.find(I=>I.re.test(v)),m&&(_=m.parse(v),k=m.record.name);else{if(m=g.name?s.get(g.name):e.find(I=>I.re.test(g.path)),!m)throw Be(1,{location:d,currentLocation:g});k=m.record.name,_=ma({},g.params,d.params),v=m.stringify(_)}const b=[];let A=m;for(;A;)b.unshift(A.record),A=A.parent;return{name:k,path:v,params:_,matched:b,meta:og(b)}}return a.forEach(d=>r(d)),{addRoute:r,resolve:u,removeRoute:i,getRoutes:l,getRecordMatcher:o}}function bi(a,t){const e={};for(const s of t)s in a&&(e[s]=a[s]);return e}function ng(a){return{path:a.path,redirect:a.redirect,name:a.name,meta:a.meta||{},aliasOf:void 0,beforeEnter:a.beforeEnter,props:sg(a),children:a.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in a?a.components||null:a.component&&{default:a.component}}}function sg(a){const t={},e=a.props||!1;if("component"in a)t.default=e;else for(const s in a.components)t[s]=typeof e=="object"?e[s]:e;return t}function Si(a){for(;a;){if(a.record.aliasOf)return!0;a=a.parent}return!1}function og(a){return a.reduce((t,e)=>ma(t,e.meta),{})}function Pi(a,t){const e={};for(const s in a)e[s]=s in t?t[s]:a[s];return e}function Sl(a,t){return t.children.some(e=>e===a||Sl(a,e))}function rg(a){const t={};if(a===""||a==="?")return t;const s=(a[0]==="?"?a.slice(1):a).split("&");for(let o=0;o<s.length;++o){const r=s[o].replace(vl," "),i=r.indexOf("="),l=mn(i<0?r:r.slice(0,i)),c=i<0?null:mn(r.slice(i+1));if(l in t){let u=t[l];ft(u)||(u=t[l]=[u]),u.push(c)}else t[l]=c}return t}function Di(a){let t="";for(let e in a){const s=a[e];if(e=Pd(e),s==null){s!==void 0&&(t+=(t.length?"&":"")+e);continue}(ft(s)?s.map(r=>r&&fo(r)):[s&&fo(s)]).forEach(r=>{r!==void 0&&(t+=(t.length?"&":"")+e,r!=null&&(t+="="+r))})}return t}function ig(a){const t={};for(const e in a){const s=a[e];s!==void 0&&(t[e]=ft(s)?s.map(o=>o==null?null:""+o):s==null?s:""+s)}return t}const pg=Symbol(""),Ti=Symbol(""),Ds=Symbol(""),rr=Symbol(""),ko=Symbol("");function We(){let a=[];function t(s){return a.push(s),()=>{const o=a.indexOf(s);o>-1&&a.splice(o,1)}}function e(){a=[]}return{add:t,list:()=>a.slice(),reset:e}}function $t(a,t,e,s,o,r=i=>i()){const i=s&&(s.enterCallbacks[o]=s.enterCallbacks[o]||[]);return()=>new Promise((l,c)=>{const u=m=>{m===!1?c(Be(4,{from:e,to:t})):m instanceof Error?c(m):Wd(m)?c(Be(2,{from:t,to:m})):(i&&s.enterCallbacks[o]===i&&typeof m=="function"&&i.push(m),l())},d=r(()=>a.call(s&&s.instances[o],t,e,u));let g=Promise.resolve(d);a.length<3&&(g=g.then(u)),g.catch(m=>c(m))})}function qs(a,t,e,s,o=r=>r()){const r=[];for(const i of a)for(const l in i.components){let c=i.components[l];if(!(t!=="beforeRouteEnter"&&!i.instances[l]))if(lg(c)){const d=(c.__vccOpts||c)[t];d&&r.push($t(d,e,s,i,l,o))}else{let u=c();r.push(()=>u.then(d=>{if(!d)return Promise.reject(new Error(`Couldn't resolve component "${l}" at "${i.path}"`));const g=_d(d)?d.default:d;i.components[l]=g;const _=(g.__vccOpts||g)[t];return _&&$t(_,e,s,i,l,o)()}))}}return r}function lg(a){return typeof a=="object"||"displayName"in a||"props"in a||"__vccOpts"in a}function Li(a){const t=Sa(Ds),e=Sa(rr),s=y(()=>{const c=me(a.to);return t.resolve(c)}),o=y(()=>{const{matched:c}=s.value,{length:u}=c,d=c[u-1],g=e.matched;if(!d||!g.length)return-1;const m=g.findIndex(Ce.bind(null,d));if(m>-1)return m;const _=xi(c[u-2]);return u>1&&xi(d)===_&&g[g.length-1].path!==_?g.findIndex(Ce.bind(null,c[u-2])):m}),r=y(()=>o.value>-1&&gg(e.params,s.value.params)),i=y(()=>o.value>-1&&o.value===e.matched.length-1&&Al(e.params,s.value.params));function l(c={}){return dg(c)?t[me(a.replace)?"replace":"push"](me(a.to)).catch(nn):Promise.resolve()}return{route:s,href:y(()=>s.value.href),isActive:r,isExactActive:i,navigate:l}}const cg=j({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Li,setup(a,{slots:t}){const e=bn(Li(a)),{options:s}=Sa(Ds),o=y(()=>({[Ri(a.activeClass,s.linkActiveClass,"router-link-active")]:e.isActive,[Ri(a.exactActiveClass,s.linkExactActiveClass,"router-link-exact-active")]:e.isExactActive}));return()=>{const r=t.default&&t.default(e);return a.custom?r:p("a",{"aria-current":e.isExactActive?a.ariaCurrentValue:null,href:e.href,onClick:e.navigate,class:o.value},r)}}}),ug=cg;function dg(a){if(!(a.metaKey||a.altKey||a.ctrlKey||a.shiftKey)&&!a.defaultPrevented&&!(a.button!==void 0&&a.button!==0)){if(a.currentTarget&&a.currentTarget.getAttribute){const t=a.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return a.preventDefault&&a.preventDefault(),!0}}function gg(a,t){for(const e in t){const s=t[e],o=a[e];if(typeof s=="string"){if(s!==o)return!1}else if(!ft(o)||o.length!==s.length||s.some((r,i)=>r!==o[i]))return!1}return!0}function xi(a){return a?a.aliasOf?a.aliasOf.path:a.path:""}const Ri=(a,t,e)=>a??t??e,mg=j({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(a,{attrs:t,slots:e}){const s=Sa(ko),o=y(()=>a.route||s.value),r=Sa(Ti,0),i=y(()=>{let u=me(r);const{matched:d}=o.value;let g;for(;(g=d[u])&&!g.components;)u++;return u}),l=y(()=>o.value.matched[i.value]);vt(Ti,y(()=>i.value+1)),vt(pg,l),vt(ko,o);const c=X();return ua(()=>[c.value,l.value,a.name],([u,d,g],[m,_,v])=>{d&&(d.instances[g]=u,_&&_!==d&&u&&u===m&&(d.leaveGuards.size||(d.leaveGuards=_.leaveGuards),d.updateGuards.size||(d.updateGuards=_.updateGuards))),u&&d&&(!_||!Ce(d,_)||!m)&&(d.enterCallbacks[g]||[]).forEach(k=>k(u))},{flush:"post"}),()=>{const u=o.value,d=a.name,g=l.value,m=g&&g.components[d];if(!m)return Oi(e.default,{Component:m,route:u});const _=g.props[d],v=_?_===!0?u.params:typeof _=="function"?_(u):_:null,b=p(m,ma({},v,t,{onVnodeUnmounted:A=>{A.component.isUnmounted&&(g.instances[d]=null)},ref:c}));return Oi(e.default,{Component:b,route:u})||b}}});function Oi(a,t){if(!a)return null;const e=a(t);return e.length===1?e[0]:e}const _g=mg;function hg(a){const t=eg(a.routes,a),e=a.parseQuery||rg,s=a.stringifyQuery||Di,o=a.history,r=We(),i=We(),l=We(),c=xa(Rt);let u=Rt;ye&&a.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const d=zs.bind(null,D=>""+D),g=zs.bind(null,Td),m=zs.bind(null,mn);function _(D,U){let N,q;return Il(D)?(N=t.getRecordMatcher(D),q=U):q=D,t.addRoute(q,N)}function v(D){const U=t.getRecordMatcher(D);U&&t.removeRoute(U)}function k(){return t.getRoutes().map(D=>D.record)}function b(D){return!!t.getRecordMatcher(D)}function A(D,U){if(U=ma({},U||c.value),typeof D=="string"){const f=$s(e,D,U.path),S=t.resolve({path:f.path},U),L=o.createHref(f.fullPath);return ma(f,S,{params:m(S.params),hash:mn(f.hash),redirectedFrom:void 0,href:L})}let N;if(D.path!=null)N=ma({},D,{path:$s(e,D.path,U.path).path});else{const f=ma({},D.params);for(const S in f)f[S]==null&&delete f[S];N=ma({},D,{params:g(f)}),U.params=g(U.params)}const q=t.resolve(N,U),ia=D.hash||"";q.params=d(m(q.params));const va=Rd(s,ma({},D,{hash:Sd(ia),path:q.path})),h=o.createHref(va);return ma({fullPath:va,hash:ia,query:s===Di?ig(D.query):D.query||{}},q,{redirectedFrom:void 0,href:h})}function I(D){return typeof D=="string"?$s(e,D,c.value.path):ma({},D)}function E(D,U){if(u!==D)return Be(8,{from:U,to:D})}function P(D){return x(D)}function M(D){return P(ma(I(D),{replace:!0}))}function C(D){const U=D.matched[D.matched.length-1];if(U&&U.redirect){const{redirect:N}=U;let q=typeof N=="function"?N(D):N;return typeof q=="string"&&(q=q.includes("?")||q.includes("#")?q=I(q):{path:q},q.params={}),ma({query:D.query,hash:D.hash,params:q.path!=null?{}:D.params},q)}}function x(D,U){const N=u=A(D),q=c.value,ia=D.state,va=D.force,h=D.replace===!0,f=C(N);if(f)return x(ma(I(f),{state:typeof f=="object"?ma({},ia,f.state):ia,force:va,replace:h}),U||N);const S=N;S.redirectedFrom=U;let L;return!va&&Od(s,q,N)&&(L=Be(16,{to:S,from:q}),et(q,q,!0,!1)),(L?Promise.resolve(L):J(S,q)).catch(T=>Lt(T)?Lt(T,2)?T:At(T):$(T,S,q)).then(T=>{if(T){if(Lt(T,2))return x(ma({replace:h},I(T.to),{state:typeof T.to=="object"?ma({},ia,T.to.state):ia,force:va}),U||S)}else T=B(S,q,!0,h,ia);return G(S,q,T),T})}function O(D,U){const N=E(D,U);return N?Promise.reject(N):Promise.resolve()}function W(D){const U=Tt.values().next().value;return U&&typeof U.runWithContext=="function"?U.runWithContext(D):D()}function J(D,U){let N;const[q,ia,va]=vg(D,U);N=qs(q.reverse(),"beforeRouteLeave",D,U);for(const f of q)f.leaveGuards.forEach(S=>{N.push($t(S,D,U))});const h=O.bind(null,D,U);return N.push(h),Oa(N).then(()=>{N=[];for(const f of r.list())N.push($t(f,D,U));return N.push(h),Oa(N)}).then(()=>{N=qs(ia,"beforeRouteUpdate",D,U);for(const f of ia)f.updateGuards.forEach(S=>{N.push($t(S,D,U))});return N.push(h),Oa(N)}).then(()=>{N=[];for(const f of va)if(f.beforeEnter)if(ft(f.beforeEnter))for(const S of f.beforeEnter)N.push($t(S,D,U));else N.push($t(f.beforeEnter,D,U));return N.push(h),Oa(N)}).then(()=>(D.matched.forEach(f=>f.enterCallbacks={}),N=qs(va,"beforeRouteEnter",D,U,W),N.push(h),Oa(N))).then(()=>{N=[];for(const f of i.list())N.push($t(f,D,U));return N.push(h),Oa(N)}).catch(f=>Lt(f,8)?f:Promise.reject(f))}function G(D,U,N){l.list().forEach(q=>W(()=>q(D,U,N)))}function B(D,U,N,q,ia){const va=E(D,U);if(va)return va;const h=U===Rt,f=ye?history.state:{};N&&(q||h?o.replace(D.fullPath,ma({scroll:h&&f&&f.scroll},ia)):o.push(D.fullPath,ia)),c.value=D,et(D,U,N,h),At()}let aa;function Da(){aa||(aa=o.listen((D,U,N)=>{if(!yt.listening)return;const q=A(D),ia=C(q);if(ia){x(ma(ia,{replace:!0}),q).catch(nn);return}u=q;const va=c.value;ye&&jd(Ei(va.fullPath,N.delta),Ps()),J(q,va).catch(h=>Lt(h,12)?h:Lt(h,2)?(x(h.to,q).then(f=>{Lt(f,20)&&!N.delta&&N.type===_n.pop&&o.go(-1,!1)}).catch(nn),Promise.reject()):(N.delta&&o.go(-N.delta,!1),$(h,q,va))).then(h=>{h=h||B(q,va,!1),h&&(N.delta&&!Lt(h,8)?o.go(-N.delta,!1):N.type===_n.pop&&Lt(h,20)&&o.go(-1,!1)),G(q,va,h)}).catch(nn)}))}let ya=We(),z=We(),ta;function $(D,U,N){At(D);const q=z.list();return q.length?q.forEach(ia=>ia(D,U,N)):console.error(D),Promise.reject(D)}function Ra(){return ta&&c.value!==Rt?Promise.resolve():new Promise((D,U)=>{ya.add([D,U])})}function At(D){return ta||(ta=!D,Da(),ya.list().forEach(([U,N])=>D?N(D):U()),ya.reset()),D}function et(D,U,N,q){const{scrollBehavior:ia}=a;if(!ye||!ia)return Promise.resolve();const va=!N&&Nd(Ei(D.fullPath,0))||(q||!N)&&history.state&&history.state.scroll||null;return Bt().then(()=>ia(D,U,va)).then(h=>h&&Fd(h)).catch(h=>$(h,D,U))}const wa=D=>o.go(D);let Qa;const Tt=new Set,yt={currentRoute:c,listening:!0,addRoute:_,removeRoute:v,hasRoute:b,getRoutes:k,resolve:A,options:a,push:P,replace:M,go:wa,back:()=>wa(-1),forward:()=>wa(1),beforeEach:r.add,beforeResolve:i.add,afterEach:l.add,onError:z.add,isReady:Ra,install(D){const U=this;D.component("RouterLink",ug),D.component("RouterView",_g),D.config.globalProperties.$router=U,Object.defineProperty(D.config.globalProperties,"$route",{enumerable:!0,get:()=>me(c)}),ye&&!Qa&&c.value===Rt&&(Qa=!0,P(o.location).catch(ia=>{}));const N={};for(const ia in Rt)Object.defineProperty(N,ia,{get:()=>c.value[ia],enumerable:!0});D.provide(Ds,U),D.provide(rr,yp(N)),D.provide(ko,c);const q=D.unmount;Tt.add(D),D.unmount=function(){Tt.delete(D),Tt.size<1&&(u=Rt,aa&&aa(),aa=null,c.value=Rt,Qa=!1,ta=!1),q()}}};function Oa(D){return D.reduce((U,N)=>U.then(()=>W(N)),Promise.resolve())}return yt}function vg(a,t){const e=[],s=[],o=[],r=Math.max(t.matched.length,a.matched.length);for(let i=0;i<r;i++){const l=t.matched[i];l&&(a.matched.find(u=>Ce(u,l))?s.push(l):e.push(l));const c=a.matched[i];c&&(t.matched.find(u=>Ce(u,c))||o.push(c))}return[e,s,o]}function fe(){return Sa(Ds)}function Vt(){return Sa(rr)}var ir=Symbol(""),Et=()=>{const a=Sa(ir);if(!a)throw new Error("useClientData() is called without provider.");return a},fg=()=>Et().pageComponent,Aa=()=>Et().pageData,da=()=>Et().pageFrontmatter,Eg=()=>Et().pageHead,Pl=()=>Et().pageLang,kg=()=>Et().pageLayout,ne=()=>Et().routeLocale,Ag=()=>Et().routePath,yg=()=>Et().routes,Dl=()=>Et().siteData,xn=()=>Et().siteLocaleData,Ig=Symbol(""),Ao=xa(gd),hn=xa(md),Tl=a=>{const t=ld(a);if(hn.value[t])return t;const e=encodeURI(t);return hn.value[e]?e:Ao.value[t]||Ao.value[e]||t},Pt=a=>{const t=Tl(a),e=hn.value[t]??{...hn.value["/404.html"],notFound:!0};return{path:t,notFound:!1,...e}},Ts=j({name:"ClientOnly",setup(a,t){const e=X(!1);return fa(()=>{e.value=!0}),()=>{var s,o;return e.value?(o=(s=t.slots).default)==null?void 0:o.call(s):null}}}),Ll=j({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(a){const t=fg(),e=y(()=>{if(!a.path)return t.value;const s=Pt(a.path);return R0(()=>s.loader().then(({comp:o})=>o))});return()=>p(e.value)}}),Dt=(a={})=>a,ha=a=>ee(a)?a:`/${_l(a)}`,bg=a=>{if(!(a.metaKey||a.altKey||a.ctrlKey||a.shiftKey)&&!a.defaultPrevented&&!(a.button!==void 0&&a.button!==0)){if(a.currentTarget){const t=a.currentTarget.getAttribute("target");if(t!=null&&t.match(/\b_blank\b/i))return}return a.preventDefault(),!0}},Ta=({active:a=!1,activeClass:t="route-link-active",to:e,...s},{slots:o})=>{var c;const r=fe(),i=Tl(e),l=i.startsWith("#")||i.startsWith("?")?i:ha(i);return p("a",{...s,class:["route-link",{[t]:a}],href:l,onClick:(u={})=>{bg(u)?r.push(e).catch():Promise.resolve()}},(c=o.default)==null?void 0:c.call(o))};Ta.displayName="RouteLink";Ta.props={active:Boolean,activeClass:String,to:String};var Sg="Layout",Pg="en-US",pe=bn({resolveLayouts:a=>a.reduce((t,e)=>({...t,...e.layouts}),{}),resolvePageHead:(a,t,e)=>{const s=Pa(t.description)?t.description:e.description,o=[...Array.isArray(t.head)?t.head:[],...e.head,["title",{},a],["meta",{name:"description",content:s}]];return rd(o)},resolvePageHeadTitle:(a,t)=>[a.title,t.title].filter(e=>!!e).join(" | "),resolvePageLang:(a,t)=>a.lang||t.lang||Pg,resolvePageLayout:(a,t)=>{const e=Pa(a.frontmatter.layout)?a.frontmatter.layout:Sg;if(!t[e])throw new Error(`[vuepress] Cannot resolve layout: ${e}`);return t[e]},resolveRouteLocale:(a,t)=>cd(a,t),resolveSiteLocaleData:(a,t)=>{var e;return{...a,...a.locales[t],head:[...((e=a.locales[t])==null?void 0:e.head)??[],...a.head??[]]}}});const Dg={},Rn=a=>{const t=ne();return y(()=>a[t.value]??{})};var at=Uint8Array,Se=Uint16Array,Tg=Int32Array,xl=new at([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Rl=new at([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Lg=new at([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Ol=function(a,t){for(var e=new Se(31),s=0;s<31;++s)e[s]=t+=1<<a[s-1];for(var o=new Tg(e[30]),s=1;s<30;++s)for(var r=e[s];r<e[s+1];++r)o[r]=r-e[s]<<5|s;return{b:e,r:o}},Jl=Ol(xl,2),Cl=Jl.b,xg=Jl.r;Cl[28]=258,xg[258]=28;var Rg=Ol(Rl,0),Og=Rg.b,yo=new Se(32768);for(var Ea=0;Ea<32768;++Ea){var Nt=(Ea&43690)>>1|(Ea&21845)<<1;Nt=(Nt&52428)>>2|(Nt&13107)<<2,Nt=(Nt&61680)>>4|(Nt&3855)<<4,yo[Ea]=((Nt&65280)>>8|(Nt&255)<<8)>>1}var on=function(a,t,e){for(var s=a.length,o=0,r=new Se(t);o<s;++o)a[o]&&++r[a[o]-1];var i=new Se(t);for(o=1;o<t;++o)i[o]=i[o-1]+r[o-1]<<1;var l;if(e){l=new Se(1<<t);var c=15-t;for(o=0;o<s;++o)if(a[o])for(var u=o<<4|a[o],d=t-a[o],g=i[a[o]-1]++<<d,m=g|(1<<d)-1;g<=m;++g)l[yo[g]>>c]=u}else for(l=new Se(s),o=0;o<s;++o)a[o]&&(l[o]=yo[i[a[o]-1]++]>>15-a[o]);return l},On=new at(288);for(var Ea=0;Ea<144;++Ea)On[Ea]=8;for(var Ea=144;Ea<256;++Ea)On[Ea]=9;for(var Ea=256;Ea<280;++Ea)On[Ea]=7;for(var Ea=280;Ea<288;++Ea)On[Ea]=8;var Bl=new at(32);for(var Ea=0;Ea<32;++Ea)Bl[Ea]=5;var Jg=on(On,9,1),Cg=on(Bl,5,1),Qs=function(a){for(var t=a[0],e=1;e<a.length;++e)a[e]>t&&(t=a[e]);return t},gt=function(a,t,e){var s=t/8|0;return(a[s]|a[s+1]<<8)>>(t&7)&e},Xs=function(a,t){var e=t/8|0;return(a[e]|a[e+1]<<8|a[e+2]<<16)>>(t&7)},Bg=function(a){return(a+7)/8|0},wl=function(a,t,e){return(t==null||t<0)&&(t=0),(e==null||e>a.length)&&(e=a.length),new at(a.subarray(t,e))},wg=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],ot=function(a,t,e){var s=new Error(t||wg[a]);if(s.code=a,Error.captureStackTrace&&Error.captureStackTrace(s,ot),!e)throw s;return s},Vg=function(a,t,e,s){var o=a.length,r=0;if(!o||t.f&&!t.l)return e||new at(0);var i=!e,l=i||t.i!=2,c=t.i;i&&(e=new at(o*3));var u=function(ia){var va=e.length;if(ia>va){var h=new at(Math.max(va*2,ia));h.set(e),e=h}},d=t.f||0,g=t.p||0,m=t.b||0,_=t.l,v=t.d,k=t.m,b=t.n,A=o*8;do{if(!_){d=gt(a,g,1);var I=gt(a,g+1,3);if(g+=3,I)if(I==1)_=Jg,v=Cg,k=9,b=5;else if(I==2){var C=gt(a,g,31)+257,x=gt(a,g+10,15)+4,O=C+gt(a,g+5,31)+1;g+=14;for(var W=new at(O),J=new at(19),G=0;G<x;++G)J[Lg[G]]=gt(a,g+G*3,7);g+=x*3;for(var B=Qs(J),aa=(1<<B)-1,Da=on(J,B,1),G=0;G<O;){var ya=Da[gt(a,g,aa)];g+=ya&15;var E=ya>>4;if(E<16)W[G++]=E;else{var z=0,ta=0;for(E==16?(ta=3+gt(a,g,3),g+=2,z=W[G-1]):E==17?(ta=3+gt(a,g,7),g+=3):E==18&&(ta=11+gt(a,g,127),g+=7);ta--;)W[G++]=z}}var $=W.subarray(0,C),Ra=W.subarray(C);k=Qs($),b=Qs(Ra),_=on($,k,1),v=on(Ra,b,1)}else ot(1);else{var E=Bg(g)+4,P=a[E-4]|a[E-3]<<8,M=E+P;if(M>o){c&&ot(0);break}l&&u(m+P),e.set(a.subarray(E,M),m),t.b=m+=P,t.p=g=M*8,t.f=d;continue}if(g>A){c&&ot(0);break}}l&&u(m+131072);for(var At=(1<<k)-1,et=(1<<b)-1,wa=g;;wa=g){var z=_[Xs(a,g)&At],Qa=z>>4;if(g+=z&15,g>A){c&&ot(0);break}if(z||ot(2),Qa<256)e[m++]=Qa;else if(Qa==256){wa=g,_=null;break}else{var Tt=Qa-254;if(Qa>264){var G=Qa-257,yt=xl[G];Tt=gt(a,g,(1<<yt)-1)+Cl[G],g+=yt}var Oa=v[Xs(a,g)&et],D=Oa>>4;Oa||ot(3),g+=Oa&15;var Ra=Og[D];if(D>3){var yt=Rl[D];Ra+=Xs(a,g)&(1<<yt)-1,g+=yt}if(g>A){c&&ot(0);break}l&&u(m+131072);var U=m+Tt;if(m<Ra){var N=r-Ra,q=Math.min(Ra,U);for(N+m<0&&ot(3);m<q;++m)e[m]=s[N+m]}for(;m<U;++m)e[m]=e[m-Ra]}}t.l=_,t.p=wa,t.b=m,t.f=d,_&&(d=1,t.m=k,t.d=v,t.n=b)}while(!d);return m!=e.length&&i?wl(e,0,m):e.subarray(0,m)},Mg=new at(0),Fg=function(a,t){return((a[0]&15)!=8||a[0]>>4>7||(a[0]<<8|a[1])%31)&&ot(6,"invalid zlib data"),(a[1]>>5&1)==+!t&&ot(6,"invalid zlib data: "+(a[1]&32?"need":"unexpected")+" dictionary"),(a[1]>>3&4)+2};function jg(a,t){return Vg(a.subarray(Fg(a,t),-4),{i:2},t,t)}var Io=typeof TextDecoder<"u"&&new TextDecoder,Ng=0;try{Io.decode(Mg,{stream:!0}),Ng=1}catch{}var Hg=function(a){for(var t="",e=0;;){var s=a[e++],o=(s>127)+(s>223)+(s>239);if(e+o>a.length)return{s:t,r:wl(a,e-1)};o?o==3?(s=((s&15)<<18|(a[e++]&63)<<12|(a[e++]&63)<<6|a[e++]&63)-65536,t+=String.fromCharCode(55296|s>>10,56320|s&1023)):o&1?t+=String.fromCharCode((s&31)<<6|a[e++]&63):t+=String.fromCharCode((s&15)<<12|(a[e++]&63)<<6|a[e++]&63):t+=String.fromCharCode(s)}};function Ug(a,t){{for(var e=new at(a.length),s=0;s<a.length;++s)e[s]=a.charCodeAt(s);return e}for(var o=a.length,s=0;s<o;++s);}function Kg(a,t){var e;if(Io)return Io.decode(a);var s=Hg(a),o=s.s,e=s.r;return e.length&&ot(8),o}const Ji=a=>{const t=atob(a);return Kg(jg(Ug(t)))},tt=(a,t)=>{var s;const e=(s=(t==null?void 0:t._instance)||Dn())==null?void 0:s.appContext.components;return e?a in e||ct(a)in e||In(ct(a))in e:!1},Vl=a=>typeof a<"u",Zs=a=>typeof a=="number",bo=Array.isArray,we=(a,t)=>Pa(a)&&a.startsWith(t),Gg=(a,t)=>Pa(a)&&a.endsWith(t),Jn=Object.entries,ut=Object.keys,pr=a=>{if(a){if(typeof a=="number")return new Date(a);const t=Date.parse(a.toString());if(!Number.isNaN(t))return new Date(t)}return null},Cn=a=>we(a,"/"),Wg="http://.",zg=(a,t)=>{if(Cn(a)||typeof t!="string")return Pt(a);const e=t.slice(0,t.lastIndexOf("/"));return Pt(new URL(`${e}/${encodeURI(a)}`,Wg).pathname)},Ml=a=>new Promise(t=>setTimeout(t,a));function He(a){return cp()?(V2(a),!0):!1}function ja(a){return typeof a=="function"?a():me(a)}const Bn=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const $g=Object.prototype.toString,qg=a=>$g.call(a)==="[object Object]",_e=()=>{},Ci=Qg();function Qg(){var a,t;return Bn&&((a=window==null?void 0:window.navigator)==null?void 0:a.userAgent)&&(/iP(ad|hone|od)/.test(window.navigator.userAgent)||((t=window==null?void 0:window.navigator)==null?void 0:t.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function lr(a,t){function e(...s){return new Promise((o,r)=>{Promise.resolve(a(()=>t.apply(this,s),{fn:t,thisArg:this,args:s})).then(o).catch(r)})}return e}const Fl=a=>a();function Xg(a,t={}){let e,s,o=_e;const r=l=>{clearTimeout(l),o(),o=_e};return l=>{const c=ja(a),u=ja(t.maxWait);return e&&r(e),c<=0||u!==void 0&&u<=0?(s&&(r(s),s=null),Promise.resolve(l())):new Promise((d,g)=>{o=t.rejectOnCancel?g:d,u&&!s&&(s=setTimeout(()=>{e&&r(e),s=null,d(l())},u)),e=setTimeout(()=>{s&&r(s),s=null,d(l())},c)})}}function Zg(...a){let t=0,e,s=!0,o=_e,r,i,l,c,u;!Fa(a[0])&&typeof a[0]=="object"?{delay:i,trailing:l=!0,leading:c=!0,rejectOnCancel:u=!1}=a[0]:[i,l=!0,c=!0,u=!1]=a;const d=()=>{e&&(clearTimeout(e),e=void 0,o(),o=_e)};return m=>{const _=ja(i),v=Date.now()-t,k=()=>r=m();return d(),_<=0?(t=Date.now(),k()):(v>_&&(c||!s)?(t=Date.now(),k()):l&&(r=new Promise((b,A)=>{o=u?A:b,e=setTimeout(()=>{t=Date.now(),s=!0,b(k()),d()},Math.max(0,_-v))})),!c&&!e&&(e=setTimeout(()=>s=!0,_)),s=!1,r)}}function Yg(a=Fl){const t=X(!0);function e(){t.value=!1}function s(){t.value=!0}const o=(...r)=>{t.value&&a(...r)};return{isActive:ve(t),pause:e,resume:s,eventFilter:o}}function am(a){let t;function e(){return t||(t=a()),t}return e.reset=async()=>{const s=t;t=void 0,s&&await s},e}function jl(a){return Dn()}function tm(...a){if(a.length!==1)return Fe(...a);const t=a[0];return typeof t=="function"?ve(Dp(()=>({get:t,set:_e}))):X(t)}function em(a,t=200,e={}){return lr(Xg(t,e),a)}function nm(a,t=200,e=!1,s=!0,o=!1){return lr(Zg(t,e,s,o),a)}function sm(a,t,e={}){const{eventFilter:s=Fl,...o}=e;return ua(a,lr(s,t),o)}function om(a,t,e={}){const{eventFilter:s,...o}=e,{eventFilter:r,pause:i,resume:l,isActive:c}=Yg(s);return{stop:sm(a,t,{...o,eventFilter:r}),pause:i,resume:l,isActive:c}}function Ls(a,t=!0,e){jl()?fa(a,e):t?a():Bt(a)}function rm(a,t){jl()&&je(a,t)}function im(a,t,e={}){const{immediate:s=!0}=e,o=X(!1);let r=null;function i(){r&&(clearTimeout(r),r=null)}function l(){o.value=!1,i()}function c(...u){i(),o.value=!0,r=setTimeout(()=>{o.value=!1,r=null,a(...u)},ja(t))}return s&&(o.value=!0,Bn&&c()),He(l),{isPending:ve(o),start:c,stop:l}}function vn(a=!1,t={}){const{truthyValue:e=!0,falsyValue:s=!1}=t,o=Fa(a),r=X(a);function i(l){if(arguments.length)return r.value=l,r.value;{const c=ja(e);return r.value=r.value===c?ja(s):c,r.value}}return o?i:[r,i]}function Ot(a){var t;const e=ja(a);return(t=e==null?void 0:e.$el)!=null?t:e}const Ct=Bn?window:void 0,Nl=Bn?window.document:void 0,Hl=Bn?window.navigator:void 0;function Ba(...a){let t,e,s,o;if(typeof a[0]=="string"||Array.isArray(a[0])?([e,s,o]=a,t=Ct):[t,e,s,o]=a,!t)return _e;Array.isArray(e)||(e=[e]),Array.isArray(s)||(s=[s]);const r=[],i=()=>{r.forEach(d=>d()),r.length=0},l=(d,g,m,_)=>(d.addEventListener(g,m,_),()=>d.removeEventListener(g,m,_)),c=ua(()=>[Ot(t),ja(o)],([d,g])=>{if(i(),!d)return;const m=qg(g)?{...g}:g;r.push(...e.flatMap(_=>s.map(v=>l(d,_,v,m))))},{immediate:!0,flush:"post"}),u=()=>{c(),i()};return He(u),u}function pm(){const a=X(!1),t=Dn();return t&&fa(()=>{a.value=!0},t),a}function wn(a){const t=pm();return y(()=>(t.value,!!a()))}function Ul(a,t={}){const{window:e=Ct}=t,s=wn(()=>e&&"matchMedia"in e&&typeof e.matchMedia=="function");let o;const r=X(!1),i=u=>{r.value=u.matches},l=()=>{o&&("removeEventListener"in o?o.removeEventListener("change",i):o.removeListener(i))},c=Bp(()=>{s.value&&(l(),o=e.matchMedia(ja(a)),"addEventListener"in o?o.addEventListener("change",i):o.addListener(i),r.value=o.matches)});return He(()=>{c(),l(),o=void 0}),r}function Bi(a,t={}){const{controls:e=!1,navigator:s=Hl}=t,o=wn(()=>s&&"permissions"in s);let r;const i=typeof a=="string"?{name:a}:a,l=X(),c=()=>{r&&(l.value=r.state)},u=am(async()=>{if(o.value){if(!r)try{r=await s.permissions.query(i),Ba(r,"change",c),c()}catch{l.value="prompt"}return r}});return u(),e?{state:l,isSupported:o,query:u}:l}function lm(a={}){const{navigator:t=Hl,read:e=!1,source:s,copiedDuring:o=1500,legacy:r=!1}=a,i=wn(()=>t&&"clipboard"in t),l=Bi("clipboard-read"),c=Bi("clipboard-write"),u=y(()=>i.value||r),d=X(""),g=X(!1),m=im(()=>g.value=!1,o);function _(){i.value&&A(l.value)?t.clipboard.readText().then(I=>{d.value=I}):d.value=b()}u.value&&e&&Ba(["copy","cut"],_);async function v(I=ja(s)){u.value&&I!=null&&(i.value&&A(c.value)?await t.clipboard.writeText(I):k(I),d.value=I,g.value=!0,m.start())}function k(I){const E=document.createElement("textarea");E.value=I??"",E.style.position="absolute",E.style.opacity="0",document.body.appendChild(E),E.select(),document.execCommand("copy"),E.remove()}function b(){var I,E,P;return(P=(E=(I=document==null?void 0:document.getSelection)==null?void 0:I.call(document))==null?void 0:E.toString())!=null?P:""}function A(I){return I==="granted"||I==="prompt"}return{isSupported:u,text:d,copied:g,copy:v}}const as=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},ts="__vueuse_ssr_handlers__",cm=um();function um(){return ts in as||(as[ts]=as[ts]||{}),as[ts]}function dm(a,t){return cm[a]||t}function gm(a){return a==null?"any":a instanceof Set?"set":a instanceof Map?"map":a instanceof Date?"date":typeof a=="boolean"?"boolean":typeof a=="string"?"string":typeof a=="object"?"object":Number.isNaN(a)?"any":"number"}const mm={boolean:{read:a=>a==="true",write:a=>String(a)},object:{read:a=>JSON.parse(a),write:a=>JSON.stringify(a)},number:{read:a=>Number.parseFloat(a),write:a=>String(a)},any:{read:a=>a,write:a=>String(a)},string:{read:a=>a,write:a=>String(a)},map:{read:a=>new Map(JSON.parse(a)),write:a=>JSON.stringify(Array.from(a.entries()))},set:{read:a=>new Set(JSON.parse(a)),write:a=>JSON.stringify(Array.from(a))},date:{read:a=>new Date(a),write:a=>a.toISOString()}},wi="vueuse-storage";function Ue(a,t,e,s={}){var o;const{flush:r="pre",deep:i=!0,listenToStorageChanges:l=!0,writeDefaults:c=!0,mergeDefaults:u=!1,shallow:d,window:g=Ct,eventFilter:m,onError:_=J=>{console.error(J)},initOnMounted:v}=s,k=(d?xa:X)(typeof t=="function"?t():t);if(!e)try{e=dm("getDefaultStorage",()=>{var J;return(J=Ct)==null?void 0:J.localStorage})()}catch(J){_(J)}if(!e)return k;const b=ja(t),A=gm(b),I=(o=s.serializer)!=null?o:mm[A],{pause:E,resume:P}=om(k,()=>C(k.value),{flush:r,deep:i,eventFilter:m});g&&l&&Ls(()=>{Ba(g,"storage",O),Ba(g,wi,W),v&&O()}),v||O();function M(J,G){g&&g.dispatchEvent(new CustomEvent(wi,{detail:{key:a,oldValue:J,newValue:G,storageArea:e}}))}function C(J){try{const G=e.getItem(a);if(J==null)M(G,null),e.removeItem(a);else{const B=I.write(J);G!==B&&(e.setItem(a,B),M(G,B))}}catch(G){_(G)}}function x(J){const G=J?J.newValue:e.getItem(a);if(G==null)return c&&b!=null&&e.setItem(a,I.write(b)),b;if(!J&&u){const B=I.read(G);return typeof u=="function"?u(B,b):A==="object"&&!Array.isArray(B)?{...b,...B}:B}else return typeof G!="string"?G:I.read(G)}function O(J){if(!(J&&J.storageArea!==e)){if(J&&J.key==null){k.value=b;return}if(!(J&&J.key!==a)){E();try{(J==null?void 0:J.newValue)!==I.write(k.value)&&(k.value=x(J))}catch(G){_(G)}finally{J?Bt(P):P()}}}}function W(J){O(J.detail)}return k}function _m(a){return Ul("(prefers-color-scheme: dark)",a)}function hm(a,t,e={}){const{window:s=Ct,...o}=e;let r;const i=wn(()=>s&&"ResizeObserver"in s),l=()=>{r&&(r.disconnect(),r=void 0)},c=y(()=>Array.isArray(a)?a.map(g=>Ot(g)):[Ot(a)]),u=ua(c,g=>{if(l(),i.value&&s){r=new ResizeObserver(t);for(const m of g)m&&r.observe(m,o)}},{immediate:!0,flush:"post"}),d=()=>{l(),u()};return He(d),{isSupported:i,stop:d}}function vm(a,t={width:0,height:0},e={}){const{window:s=Ct,box:o="content-box"}=e,r=y(()=>{var g,m;return(m=(g=Ot(a))==null?void 0:g.namespaceURI)==null?void 0:m.includes("svg")}),i=X(t.width),l=X(t.height),{stop:c}=hm(a,([g])=>{const m=o==="border-box"?g.borderBoxSize:o==="content-box"?g.contentBoxSize:g.devicePixelContentBoxSize;if(s&&r.value){const _=Ot(a);if(_){const v=s.getComputedStyle(_);i.value=Number.parseFloat(v.width),l.value=Number.parseFloat(v.height)}}else if(m){const _=Array.isArray(m)?m:[m];i.value=_.reduce((v,{inlineSize:k})=>v+k,0),l.value=_.reduce((v,{blockSize:k})=>v+k,0)}else i.value=g.contentRect.width,l.value=g.contentRect.height},e);Ls(()=>{const g=Ot(a);g&&(i.value="offsetWidth"in g?g.offsetWidth:t.width,l.value="offsetHeight"in g?g.offsetHeight:t.height)});const u=ua(()=>Ot(a),g=>{i.value=g?t.width:0,l.value=g?t.height:0});function d(){c(),u()}return{width:i,height:l,stop:d}}const Vi=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function cr(a,t={}){const{document:e=Nl,autoExit:s=!1}=t,o=y(()=>{var A;return(A=Ot(a))!=null?A:e==null?void 0:e.querySelector("html")}),r=X(!1),i=y(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(A=>e&&A in e||o.value&&A in o.value)),l=y(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(A=>e&&A in e||o.value&&A in o.value)),c=y(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(A=>e&&A in e||o.value&&A in o.value)),u=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(A=>e&&A in e),d=wn(()=>o.value&&e&&i.value!==void 0&&l.value!==void 0&&c.value!==void 0),g=()=>u?(e==null?void 0:e[u])===o.value:!1,m=()=>{if(c.value){if(e&&e[c.value]!=null)return e[c.value];{const A=o.value;if((A==null?void 0:A[c.value])!=null)return!!A[c.value]}}return!1};async function _(){if(!(!d.value||!r.value)){if(l.value)if((e==null?void 0:e[l.value])!=null)await e[l.value]();else{const A=o.value;(A==null?void 0:A[l.value])!=null&&await A[l.value]()}r.value=!1}}async function v(){if(!d.value||r.value)return;m()&&await _();const A=o.value;i.value&&(A==null?void 0:A[i.value])!=null&&(await A[i.value](),r.value=!0)}async function k(){await(r.value?_():v())}const b=()=>{const A=m();(!A||A&&g())&&(r.value=A)};return Ba(e,Vi,b,!1),Ba(()=>Ot(o),Vi,b,!1),s&&He(_),{isSupported:d,isFullscreen:r,enter:v,exit:_,toggle:k}}function Ys(a){return typeof Window<"u"&&a instanceof Window?a.document.documentElement:typeof Document<"u"&&a instanceof Document?a.documentElement:a}function ao(a,t=_e,e={}){const{immediate:s=!0,manual:o=!1,type:r="text/javascript",async:i=!0,crossOrigin:l,referrerPolicy:c,noModule:u,defer:d,document:g=Nl,attrs:m={}}=e,_=X(null);let v=null;const k=I=>new Promise((E,P)=>{const M=O=>(_.value=O,E(O),O);if(!g){E(!1);return}let C=!1,x=g.querySelector(`script[src="${ja(a)}"]`);x?x.hasAttribute("data-loaded")&&M(x):(x=g.createElement("script"),x.type=r,x.async=i,x.src=ja(a),d&&(x.defer=d),l&&(x.crossOrigin=l),u&&(x.noModule=u),c&&(x.referrerPolicy=c),Object.entries(m).forEach(([O,W])=>x==null?void 0:x.setAttribute(O,W)),C=!0),x.addEventListener("error",O=>P(O)),x.addEventListener("abort",O=>P(O)),x.addEventListener("load",()=>{x.setAttribute("data-loaded","true"),t(x),M(x)}),C&&(x=g.head.appendChild(x)),I||M(x)}),b=(I=!0)=>(v||(v=k(I)),v),A=()=>{if(!g)return;v=null,_.value&&(_.value=null);const I=g.querySelector(`script[src="${ja(a)}"]`);I&&g.head.removeChild(I)};return s&&!o&&Ls(b),o||rm(A),{scriptTag:_,load:b,unload:A}}function Kl(a){const t=window.getComputedStyle(a);if(t.overflowX==="scroll"||t.overflowY==="scroll"||t.overflowX==="auto"&&a.clientWidth<a.scrollWidth||t.overflowY==="auto"&&a.clientHeight<a.scrollHeight)return!0;{const e=a.parentNode;return!e||e.tagName==="BODY"?!1:Kl(e)}}function fm(a){const t=a||window.event,e=t.target;return Kl(e)?!1:t.touches.length>1?!0:(t.preventDefault&&t.preventDefault(),!1)}const es=new WeakMap;function Gl(a,t=!1){const e=X(t);let s=null;ua(tm(a),i=>{const l=Ys(ja(i));if(l){const c=l;es.get(c)||es.set(c,c.style.overflow),e.value&&(c.style.overflow="hidden")}},{immediate:!0});const o=()=>{const i=Ys(ja(a));!i||e.value||(Ci&&(s=Ba(i,"touchmove",l=>{fm(l)},{passive:!1})),i.style.overflow="hidden",e.value=!0)},r=()=>{var i;const l=Ys(ja(a));!l||!e.value||(Ci&&(s==null||s()),l.style.overflow=(i=es.get(l))!=null?i:"",es.delete(l),e.value=!1)};return He(r),y({get(){return e.value},set(i){i?o():r()}})}function Wl(a,t,e={}){const{window:s=Ct}=e;return Ue(a,t,s==null?void 0:s.sessionStorage,e)}function Em(a={}){const{window:t=Ct,behavior:e="auto"}=a;if(!t)return{x:X(0),y:X(0)};const s=X(t.scrollX),o=X(t.scrollY),r=y({get(){return s.value},set(l){scrollTo({left:l,behavior:e})}}),i=y({get(){return o.value},set(l){scrollTo({top:l,behavior:e})}});return Ba(t,"scroll",()=>{s.value=t.scrollX,o.value=t.scrollY},{capture:!1,passive:!0}),{x:r,y:i}}function km(a={}){const{window:t=Ct,initialWidth:e=Number.POSITIVE_INFINITY,initialHeight:s=Number.POSITIVE_INFINITY,listenOrientation:o=!0,includeScrollbar:r=!0}=a,i=X(e),l=X(s),c=()=>{t&&(r?(i.value=t.innerWidth,l.value=t.innerHeight):(i.value=t.document.documentElement.clientWidth,l.value=t.document.documentElement.clientHeight))};if(c(),Ls(c),Ba("resize",c,{passive:!0}),o){const u=Ul("(orientation: portrait)");ua(u,()=>c())}return{width:i,height:l}}var Am=j({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(a){const t=y(()=>{const s=["font-icon icon"],o=`fas fa-${a.icon}`;return s.push("fa-fw fa-sm"),s.push(a.icon.includes(" ")?a.icon:o),s}),e=y(()=>{const s={};return a.color&&(s.color=a.color),a.size&&(s["font-size"]=Number.isNaN(Number(a.size))?a.size:`${a.size}px`),ut(s).length?s:null});return()=>a.icon?p("span",{key:a.icon,class:t.value,style:e.value}):null}});const zl=({type:a="info",text:t="",vertical:e,color:s},{slots:o})=>{var r;return p("span",{class:["vp-badge",a,{diy:s}],style:{verticalAlign:e??!1,backgroundColor:s??!1}},((r=o.default)==null?void 0:r.call(o))??t)};zl.displayName="Badge";const $l=({title:a,desc:t="",logo:e,background:s,color:o,link:r})=>{const i=[e?p("img",{class:"vp-card-logo",src:ha(e),loading:"lazy","no-view":""}):null,p("div",{class:"vp-card-content"},[p("div",{class:"vp-card-title",innerHTML:a}),p("hr"),p("div",{class:"vp-card-desc",innerHTML:t})])],l={};return s&&(l.background=s),o&&(l.color=o),r?bs(r)?p("a",{class:"vp-card",href:r,target:"_blank",style:l},i):p(Ta,{to:r,class:"vp-card",style:l},()=>i):p("div",{class:"vp-card",style:l},i)};$l.displayName="VPCard";const ym=Dt({enhance:({app:a})=>{tt("FontIcon")||a.component("FontIcon",Am),tt("Badge")||a.component("Badge",zl),tt("VPCard")||a.component("VPCard",$l)},setup:()=>{ao("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}}),ao("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}}),ao("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]}),Mi=async(a,t)=>{const{path:e,query:s}=a.currentRoute.value,{scrollBehavior:o}=a.options;a.options.scrollBehavior=void 0,await a.replace({path:e,query:s,hash:t}),a.options.scrollBehavior=o},Im=({headerLinkSelector:a,headerAnchorSelector:t,delay:e,offset:s=5})=>{const o=fe();Ba("scroll",em(()=>{var v,k;const i=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(i-0)<s){Mi(o,"");return}const c=window.innerHeight+i,u=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),d=Math.abs(u-c)<s,g=Array.from(document.querySelectorAll(a)),_=Array.from(document.querySelectorAll(t)).filter(b=>g.some(A=>A.hash===b.hash));for(let b=0;b<_.length;b++){const A=_[b],I=_[b+1],E=i>=(((v=A.parentElement)==null?void 0:v.offsetTop)??0)-s,P=!I||i<(((k=I.parentElement)==null?void 0:k.offsetTop)??0)-s;if(!(E&&P))continue;const C=decodeURIComponent(o.currentRoute.value.hash),x=decodeURIComponent(A.hash);if(C===x)return;if(d){for(let O=b+1;O<_.length;O++)if(C===decodeURIComponent(_[O].hash))return}Mi(o,x);return}},e))},bm=".vp-sidebar-link, .vp-toc-link",Sm=".header-anchor",Pm=200,Dm=5,Tm=Dt({setup(){Im({headerLinkSelector:bm,headerAnchorSelector:Sm,delay:Pm,offset:Dm})}});let ql=a=>Pa(a.title)?{title:a.title}:null;const Ql=Symbol(""),Lm=a=>{ql=a},xm=()=>Sa(Ql),Rm=a=>{a.provide(Ql,ql)};var Om={"/":{title:"目录",empty:"暂无目录"}};const Jm=j({name:"Catalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(a){const t=xm(),e=Rn(Om),s=Aa(),o=yg(),r=Dl(),l=xa(Jn(o.value).map(([u,{meta:d}])=>{const g=t(d);if(!g)return null;const m=u.split("/").length;return{level:Gg(u,"/")?m-2:m-1,base:u.replace(/\/[^/]+\/?$/,"/"),path:u,...g}}).filter(u=>Ne(u)&&Pa(u.title))),c=y(()=>{const u=a.base?id(ml(a.base)):s.value.path.replace(/\/[^/]+$/,"/"),d=u.split("/").length-2,g=[];return l.value.filter(({level:m,path:_})=>{if(!we(_,u)||_===u)return!1;if(u==="/"){const v=ut(r.value.locales).filter(k=>k!=="/");if(_==="/404.html"||v.some(k=>we(_,k)))return!1}return m-d<=a.level}).sort(({title:m,level:_,order:v},{title:k,level:b,order:A})=>{const I=_-b;return I||(Zs(v)?Zs(A)?v>0?A>0?v-A:-1:A<0?v-A:1:v:Zs(A)?A:m.localeCompare(k))}).forEach(m=>{var k;const{base:_,level:v}=m;switch(v-d){case 1:{g.push(m);break}case 2:{const b=g.find(A=>A.path===_);b&&(b.children??(b.children=[])).push(m);break}default:{const b=g.find(A=>A.path===_.replace(/\/[^/]+\/$/,"/"));if(b){const A=(k=b.children)==null?void 0:k.find(I=>I.path===_);A&&(A.children??(A.children=[])).push(m)}}}}),g});return()=>{const u=c.value.some(d=>d.children);return p("div",{class:["vp-catalog-wrapper",{index:a.index}]},[a.hideHeading?null:p("h2",{class:"vp-catalog-main-title"},e.value.title),c.value.length?p(a.index?"ol":"ul",{class:["vp-catalogs",{deep:u}]},c.value.map(({children:d=[],title:g,path:m,content:_})=>{const v=p(Ta,{class:"vp-catalog-title",to:m},()=>_?p(_):g);return p("li",{class:"vp-catalog"},u?[p("h3",{id:g,class:["vp-catalog-child-title",{"has-children":d.length}]},[p("a",{href:`#${g}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),v]),d.length?p(a.index?"ol":"ul",{class:"vp-child-catalogs"},d.map(({children:k=[],content:b,path:A,title:I})=>p("li",{class:"vp-child-catalog"},[p("div",{class:["vp-catalog-sub-title",{"has-children":k.length}]},[p("a",{href:`#${I}`,class:"vp-catalog-header-anchor"},"#"),p(Ta,{class:"vp-catalog-title",to:A},()=>b?p(b):I)]),k.length?p(a.index?"ol":"div",{class:a.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},k.map(({content:E,path:P,title:M})=>a.index?p("li",{class:"vp-sub-catalog"},p(Ta,{to:P},()=>E?p(E):M)):p(Ta,{class:"vp-sub-catalog-link",to:P},()=>E?p(E):M))):null]))):null]:p("div",{class:"vp-catalog-child-title"},v))})):p("p",{class:"vp-empty-catalog"},e.value.empty)])}}}),Cm=Dt({enhance:({app:a})=>{Rm(a),tt("Catalog",a)||a.component("Catalog",Jm)}});var Bm={"/":{backToTop:"返回顶部"}};const wm=j({name:"BackToTop",setup(){const a=da(),t=Rn(Bm),e=xa(),{height:s}=vm(e),{height:o}=km(),{y:r}=Em(),i=y(()=>a.value.backToTop!==!1&&r.value>100),l=y(()=>r.value/(s.value-o.value)*100);return fa(()=>{e.value=document.body}),()=>p(Yt,{name:"back-to-top"},()=>i.value?p("button",{type:"button",class:"vp-back-to-top-button","aria-label":t.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[p("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":l.value},p("svg",p("circle",{cx:"26",cy:"26",r:"24",fill:"none",stroke:"currentColor","stroke-width":"4","stroke-dasharray":`${Math.PI*l.value*.48} ${Math.PI*(100-l.value)*.48}`}))),p("div",{class:"back-to-top-icon"})]):null)}}),Vm=Dt({rootComponents:[wm]});/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const pa={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:a=>{const t=pa.isStarted();a=to(a,pa.settings.minimum,1),pa.status=a===1?null:a;const e=pa.render(!t),s=e.querySelector(pa.settings.barSelector),o=pa.settings.speed,r=pa.settings.easing;return e.offsetWidth,Mm(i=>{ns(s,{transform:"translate3d("+Fi(a)+"%,0,0)",transition:"all "+o+"ms "+r}),a===1?(ns(e,{transition:"none",opacity:"1"}),e.offsetWidth,setTimeout(function(){ns(e,{transition:"all "+o+"ms linear",opacity:"0"}),setTimeout(function(){pa.remove(),i()},o)},o)):setTimeout(()=>i(),o)}),pa},isStarted:()=>typeof pa.status=="number",start:()=>{pa.status||pa.set(0);const a=()=>{setTimeout(()=>{pa.status&&(pa.trickle(),a())},pa.settings.trickleSpeed)};return pa.settings.trickle&&a(),pa},done:a=>!a&&!pa.status?pa:pa.inc(.3+.5*Math.random()).set(1),inc:a=>{let t=pa.status;return t?(typeof a!="number"&&(a=(1-t)*to(Math.random()*t,.1,.95)),t=to(t+a,0,.994),pa.set(t)):pa.start()},trickle:()=>pa.inc(Math.random()*pa.settings.trickleRate),render:a=>{if(pa.isRendered())return document.getElementById("nprogress");ji(document.documentElement,"nprogress-busy");const t=document.createElement("div");t.id="nprogress",t.innerHTML=pa.settings.template;const e=t.querySelector(pa.settings.barSelector),s=a?"-100":Fi(pa.status||0),o=document.querySelector(pa.settings.parent);return ns(e,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),o!==document.body&&ji(o,"nprogress-custom-parent"),o==null||o.appendChild(t),t},remove:()=>{Ni(document.documentElement,"nprogress-busy"),Ni(document.querySelector(pa.settings.parent),"nprogress-custom-parent");const a=document.getElementById("nprogress");a&&Fm(a)},isRendered:()=>!!document.getElementById("nprogress")},to=(a,t,e)=>a<t?t:a>e?e:a,Fi=a=>(-1+a)*100,Mm=function(){const a=[];function t(){const e=a.shift();e&&e(t)}return function(e){a.push(e),a.length===1&&t()}}(),ns=function(){const a=["Webkit","O","Moz","ms"],t={};function e(i){return i.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(l,c){return c.toUpperCase()})}function s(i){const l=document.body.style;if(i in l)return i;let c=a.length;const u=i.charAt(0).toUpperCase()+i.slice(1);let d;for(;c--;)if(d=a[c]+u,d in l)return d;return i}function o(i){return i=e(i),t[i]??(t[i]=s(i))}function r(i,l,c){l=o(l),i.style[l]=c}return function(i,l){for(const c in l){const u=l[c];u!==void 0&&Object.prototype.hasOwnProperty.call(l,c)&&r(i,c,u)}}}(),Xl=(a,t)=>(typeof a=="string"?a:ur(a)).indexOf(" "+t+" ")>=0,ji=(a,t)=>{const e=ur(a),s=e+t;Xl(e,t)||(a.className=s.substring(1))},Ni=(a,t)=>{const e=ur(a);if(!Xl(a,t))return;const s=e.replace(" "+t+" "," ");a.className=s.substring(1,s.length-1)},ur=a=>(" "+(a.className||"")+" ").replace(/\s+/gi," "),Fm=a=>{a&&a.parentNode&&a.parentNode.removeChild(a)},jm=()=>{fa(()=>{const a=fe(),t=new Set;t.add(a.currentRoute.value.path),a.beforeEach(e=>{t.has(e.path)||pa.start()}),a.afterEach(e=>{t.add(e.path),pa.done()})})},Nm=Dt({setup(){jm()}}),Hm=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$6e06kvKnMNl52X2zdRbWbO30tJw9Ojy0smwowKvCovtUZHBuLOOEO"]}},"author":{"name":"Kahen","url":"https://www.kahen.xyz"},"logo":"logo.svg","repo":"https://www.kahen.xyz","docsDir":"src","footer":"粤ICP备2024249047号-2","displayFooter":true,"blog":{"description":"一个后端开发者","intro":"/intro.html","medias":{"Email":"mailto:free-forest@outlook.com"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":["/",{"text":"Baeldung","icon":"book","prefix":"/posts/baeldung/","link":"/posts/baeldung/"},{"text":"个人博客","icon":"pen-to-square","prefix":"/posts/articles/","link":"/posts/articles/"}],"sidebar":{"/":["",{"text":"BaelDung","icon":"book","prefix":"posts/baeldung/","children":"structure"},{"text":"个人博客","icon":"book","prefix":"posts/articles/","children":"structure"}]}}}}'),Um=X(Hm),Zl=()=>Um,Yl=Symbol(""),Km=()=>{const a=Sa(Yl);if(!a)throw new Error("useThemeLocaleData() is called without provider.");return a},Gm=(a,t)=>{const{locales:e,...s}=a;return{...s,...e==null?void 0:e[t]}},Wm=Dt({enhance({app:a}){const t=Zl(),e=a._context.provides[ir],s=y(()=>Gm(t.value,e.routeLocale.value));a.provide(Yl,s),Object.defineProperties(a.config.globalProperties,{$theme:{get(){return t.value}},$themeLocale:{get(){return s.value}}})}}),zm=/\b(?:Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini)/i,$m=()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator&&zm.test(navigator.userAgent),qm=({delay:a=500,duration:t=2e3,locales:e,selector:s,showInMobile:o})=>{const{copy:r,copied:i}=lm({legacy:!0,copiedDuring:t}),l=Rn(e),c=Aa(),u=m=>{if(!m.hasAttribute("copy-code-registered")){const _=document.createElement("button");_.type="button",_.classList.add("vp-copy-code-button"),_.innerHTML='<div class="vp-copy-icon" />',_.setAttribute("aria-label",l.value.copy),_.setAttribute("data-copied",l.value.copied),m.parentElement&&m.parentElement.insertBefore(_,m),m.setAttribute("copy-code-registered","")}},d=()=>{Bt().then(()=>Ml(a)).then(()=>{s.forEach(m=>{document.querySelectorAll(m).forEach(u)})})},g=(m,_,v)=>{let{innerText:k=""}=_;/language-(shellscript|shell|bash|sh|zsh)/.test(m.classList.toString())&&(k=k.replace(/^ *(\$|>) /gm,"")),r(k).then(()=>{v.classList.add("copied"),ua(i,()=>{v.classList.remove("copied"),v.blur()},{once:!0})})};fa(()=>{const m=!$m()||o;m&&d(),Ba("click",_=>{const v=_.target;if(v.matches('div[class*="language-"] > button.copy')){const k=v.parentElement,b=v.nextElementSibling;b&&g(k,b,v)}else if(v.matches('div[class*="language-"] div.vp-copy-icon')){const k=v.parentElement,b=k.parentElement,A=k.nextElementSibling;A&&g(b,A,k)}}),ua(()=>c.value.path,()=>{m&&d()})})};var Qm={"/":{copy:"复制代码",copied:"已复制"}},Xm=['.theme-hope-content div[class*="language-"] pre'];const Zm=Dt({setup:()=>{qm({selector:Xm,locales:Qm,duration:2e3,delay:500,showInMobile:!1})}}),ss=Ue("VUEPRESS_CODE_TAB_STORE",{});var Ym=j({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(a,{slots:t}){const e=X(a.active),s=xa([]),o=()=>{a.tabId&&(ss.value[a.tabId]=a.data[e.value].id)},r=(u=e.value)=>{e.value=u<s.value.length-1?u+1:0,s.value[e.value].focus()},i=(u=e.value)=>{e.value=u>0?u-1:s.value.length-1,s.value[e.value].focus()},l=(u,d)=>{u.key===" "||u.key==="Enter"?(u.preventDefault(),e.value=d):u.key==="ArrowRight"?(u.preventDefault(),r()):u.key==="ArrowLeft"&&(u.preventDefault(),i()),a.tabId&&(ss.value[a.tabId]=a.data[e.value].id)},c=()=>{if(a.tabId){const u=a.data.findIndex(({id:d})=>ss.value[a.tabId]===d);if(u!==-1)return u}return a.active};return fa(()=>{e.value=c(),ua(()=>ss.value[a.tabId],(u,d)=>{if(a.tabId&&u!==d){const g=a.data.findIndex(({id:m})=>m===u);g!==-1&&(e.value=g)}})}),()=>a.data.length?p("div",{class:"vp-code-tabs"},[p("div",{class:"vp-code-tabs-nav",role:"tablist"},a.data.map(({id:u},d)=>{const g=d===e.value;return p("button",{type:"button",ref:m=>{m&&(s.value[d]=m)},class:["vp-code-tab-nav",{active:g}],role:"tab","aria-controls":`codetab-${a.id}-${d}`,"aria-selected":g,onClick:()=>{e.value=d,o()},onKeydown:m=>l(m,d)},t[`title${d}`]({value:u,isActive:g}))})),a.data.map(({id:u},d)=>{const g=d===e.value;return p("div",{class:["vp-code-tab",{active:g}],id:`codetab-${a.id}-${d}`,role:"tabpanel","aria-expanded":g},[p("div",{class:"vp-code-tab-title"},t[`title${d}`]({value:u,isActive:g})),t[`tab${d}`]({value:u,isActive:g})])})]):null}});const ac=({active:a=!1},{slots:t})=>{var e;return p("div",{class:["code-group-item",{active:a}],"aria-selected":a},(e=t.default)==null?void 0:e.call(t))};ac.displayName="CodeGroupItem";const a1=j({name:"CodeGroup",slots:Object,setup(a,{slots:t}){const e=X(-1),s=xa([]),o=(l=e.value)=>{e.value=l<s.value.length-1?l+1:0,s.value[e.value].focus()},r=(l=e.value)=>{e.value=l>0?l-1:s.value.length-1,s.value[e.value].focus()},i=(l,c)=>{l.key===" "||l.key==="Enter"?(l.preventDefault(),e.value=c):l.key==="ArrowRight"?(l.preventDefault(),o(c)):l.key==="ArrowLeft"&&(l.preventDefault(),r(c))};return()=>{var c;const l=(((c=t.default)==null?void 0:c.call(t))||[]).filter(u=>u.type.name==="CodeGroupItem").map(u=>(u.props===null&&(u.props={}),u));return l.length===0?null:(e.value<0||e.value>l.length-1?(e.value=l.findIndex(u=>"active"in u.props),e.value===-1&&(e.value=0)):l.forEach((u,d)=>{u.props.active=d===e.value}),p("div",{class:"code-group"},[p("div",{class:"code-group-nav"},l.map((u,d)=>{const g=d===e.value;return p("button",{type:"button",ref:m=>{m&&(s.value[d]=m)},class:["code-group-nav-tab",{active:g}],"aria-pressed":g,"aria-expanded":g,onClick:()=>{e.value=d},onKeydown:m=>i(m,d)},u.props.title)})),l]))}}}),ga=({name:a="",color:t="currentColor",ariaLabel:e},{attrs:s,slots:o})=>{var r;return p("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${a}-icon`],viewBox:"0 0 1024 1024",fill:t,"aria-label":e??`${a} icon`,...s},(r=o.default)==null?void 0:r.call(o))};ga.displayName="IconBase";const tc=({size:a=48,stroke:t=4,wrapper:e=!0,height:s=2*a})=>{const o=p("svg",{xmlns:"http://www.w3.org/2000/svg",width:a,height:a,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[p("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),p("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":t,"stroke-linecap":"round"},[p("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),p("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return e?p("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${s}px`},o):o};tc.displayName="LoadingIcon";const xs=(a,{slots:t})=>{var e;return(e=t.default)==null?void 0:e.call(t)},t1=a=>ee(a)?a:`https://github.com/${a}`,dr=(a="")=>!ee(a)||/github\.com/.test(a)?"GitHub":/bitbucket\.org/.test(a)?"Bitbucket":/gitlab\.com/.test(a)?"GitLab":/gitee\.com/.test(a)?"Gitee":null,ec=()=>p(ga,{name:"github"},()=>p("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));ec.displayName="GitHubIcon";const nc=()=>p(ga,{name:"gitee"},()=>p("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));nc.displayName="GiteeIcon";const sc=()=>p(ga,{name:"bitbucket"},()=>p("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));sc.displayName="BitbucketIcon";const oc=()=>p(ga,{name:"source"},()=>p("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));oc.displayName="SourceIcon";const e1=({link:a,type:t=dr(a??"")})=>{if(!t)return null;const e=t.toLowerCase();return p(e==="bitbucket"?sc:e==="github"?ec:e==="gitlab"?"GitLab":e==="gitee"?nc:oc)},n1=(a,t=0)=>{let e=3735928559^t,s=1103547991^t;for(let o=0,r;o<a.length;o++)r=a.charCodeAt(o),e=Math.imul(e^r,2654435761),s=Math.imul(s^r,1597334677);return e=Math.imul(e^e>>>16,2246822507),e^=Math.imul(s^s>>>13,3266489909),s=Math.imul(s^s>>>16,2246822507),s^=Math.imul(e^e>>>13,3266489909),4294967296*(2097151&s)+(e>>>0)},Vn=(a,t)=>n1(a)%t;let s1=class{constructor(){Cs(this,"containerElement");Cs(this,"messageElements",{});const t="message-container",e=document.getElementById(t);e?this.containerElement=e:(this.containerElement=document.createElement("div"),this.containerElement.id=t,document.body.appendChild(this.containerElement))}pop(t,e=2e3){const s=document.createElement("div"),o=Date.now();return s.className="message move-in",s.innerHTML=t,this.containerElement.appendChild(s),this.messageElements[o]=s,e>0&&setTimeout(()=>{this.close(o)},e),o}close(t){if(t){const e=this.messageElements[t];e.classList.remove("move-in"),e.classList.add("move-out"),e.addEventListener("animationend",()=>{e.remove(),delete this.messageElements[t]})}else ut(this.messageElements).forEach(e=>this.close(Number(e)))}destroy(){document.body.removeChild(this.containerElement)}};const rc=/#.*$/u,o1=a=>{const t=rc.exec(a);return t?t[0]:""},Hi=a=>decodeURI(a).replace(rc,"").replace(/\/index\.html$/iu,"/").replace(/\.html$/iu,"").replace(/(README|index)?\.md$/iu,""),ic=(a,t)=>{if(!Vl(t))return!1;const e=Hi(a.path),s=Hi(t),o=o1(t);return o?o===a.hash&&(!s||e===s):e===s};var r1=a=>Object.prototype.toString.call(a)==="[object Object]",fn=a=>typeof a=="string";const pc=Array.isArray,Ui=a=>r1(a)&&fn(a.name),En=(a,t=!1)=>a?pc(a)?a.map(e=>fn(e)?{name:e}:Ui(e)?e:null).filter(e=>e!==null):fn(a)?[{name:a}]:Ui(a)?[a]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${t?"":"| false"} | undefined\`, but got`,a),[]):[],lc=(a,t)=>{if(a){if(pc(a)&&a.every(fn))return a;if(fn(a))return[a];console.error(`Expect ${t} to be \`string[] | string | undefined\`, but got`,a)}return[]},cc=a=>lc(a,"category"),uc=a=>lc(a,"tag"),i1='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',p1='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>';var l1={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const eo=l1,Ki={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},c1=(a,t,e)=>{const s=document.createElement(a);return Ne(t)&&ut(t).forEach(o=>{if(o.indexOf("data"))s[o]=t[o];else{const r=o.replace("data","");s.dataset[r]=t[o]}}),s},gr=a=>({...eo,...a,jsLib:Array.from(new Set([...eo.jsLib??[],...a.jsLib??[]])),cssLib:Array.from(new Set([...eo.cssLib??[],...a.cssLib??[]]))}),xe=(a,t)=>{if(Vl(a[t]))return a[t];const e=new Promise(s=>{var r;const o=document.createElement("script");o.src=t,(r=document.querySelector("body"))==null||r.appendChild(o),o.onload=()=>{s()}});return a[t]=e,e},u1=(a,t)=>{if(t.css&&Array.from(a.childNodes).every(e=>e.nodeName!=="STYLE")){const e=c1("style",{innerHTML:t.css});a.appendChild(e)}},d1=(a,t,e)=>{const s=e.getScript();if(s&&Array.from(t.childNodes).every(o=>o.nodeName!=="SCRIPT")){const o=document.createElement("script");o.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${a} .vp-code-demo-display').shadowRoot;
${s}}`)),t.appendChild(o)}},g1=["html","js","css"],m1=a=>{const t=ut(a),e={html:[],js:[],css:[],isLegal:!1};return g1.forEach(s=>{const o=t.filter(r=>Ki[s].types.includes(r));if(o.length){const r=o[0];e[s]=[a[r].replace(/^\n|\n$/g,""),Ki[s].map[r]??r]}}),e.isLegal=(!e.html.length||e.html[1]==="none")&&(!e.js.length||e.js[1]==="none")&&(!e.css.length||e.css[1]==="none"),e},dc=a=>a.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),gc=a=>`<div id="app">
${dc(a)}
</div>`,_1=a=>`${a.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,h1=a=>a.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),mc=a=>`(function(exports){var module={};module.exports=exports;${a};return module.exports.__esModule?module.exports.default:module.exports;})({})`,v1=(a,t)=>{const e=gr(t),s=a.js[0]??"";return{...e,html:dc(a.html[0]??""),js:s,css:a.css[0]??"",isLegal:a.isLegal,getScript:()=>{var o;return e.useBabel?((o=window.Babel.transform(s,{presets:["es2015"]}))==null?void 0:o.code)??"":s}}},f1=/<template>([\s\S]+)<\/template>/u,E1=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,k1=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,A1=(a,t)=>{const e=gr(t),s=a.html[0]??"",o=f1.exec(s),r=E1.exec(s),i=k1.exec(s),l=(o==null?void 0:o[1].replace(/^\n|\n$/g,""))??"",[c="",u=""]=r?[r[4].replace(/^\n|\n$/g,""),r[3]]:[],[d="",g=""]=i?[i[4].replace(/^\n|\n$/g,""),i[3]]:[],m=u===""&&(g===""||g==="css");return{...e,html:gc(l),js:h1(c),css:d,isLegal:m,jsLib:[e.vue,...e.jsLib],getScript:()=>{var v,k;const _=t.useBabel?((k=(v=window.Babel)==null?void 0:v.transform(c,{presets:["es2015"]}))==null?void 0:k.code)??"":c.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${mc(_)};appOptions.template=\`${l.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},y1=(a,t)=>{var o;const e=gr(t),s=a.js[0]??"";return{...e,html:gc(""),js:_1(s),css:a.css[0]??((o=a.js[0])==null?void 0:o.replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim())??"",isLegal:a.isLegal,jsLib:[e.react,e.reactDOM,...e.jsLib],jsx:!0,getScript:()=>{var i,l;const r=((l=(i=window.Babel)==null?void 0:i.transform(s,{presets:["es2015","react"]}))==null?void 0:l.code)??"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${mc(r)}))`}}},Re={},I1=a=>Promise.all([xe(Re,a.babel),xe(Re,a.react),xe(Re,a.reactDOM)]),b1=a=>{const t=[xe(Re,a.vue)];return a.useBabel&&t.push(xe(Re,a.babel)),Promise.all(t)},S1=a=>a.useBabel?xe(Re,a.babel):Promise.resolve();var P1=j({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},slots:Object,setup(a,{slots:t}){const[e,s]=vn(!1),o=xa(),r=xa(),i=X("0"),l=X(!1),c=y(()=>JSON.parse(a.config?Ji(a.config):"{}")),u=y(()=>{const v=JSON.parse(Ji(a.code));return m1(v)}),d=y(()=>a.type==="react"?y1(u.value,c.value):a.type==="vue"?A1(u.value,c.value):v1(u.value,c.value)),g=y(()=>d.value.isLegal),m=(v=!1)=>{const k=o.value.attachShadow({mode:"open"}),b=document.createElement("div");b.classList.add("code-demo-app"),k.appendChild(b),g.value?(v&&(b.innerHTML=d.value.html),u1(k,d.value),d1(a.id,k,d.value),i.value="0"):i.value="auto",l.value=!0},_=()=>{switch(a.type){case"react":return I1(d.value).then(()=>m());case"vue":return b1(d.value).then(()=>m());default:return S1(d.value).then(()=>m(!0))}};return Ba("beforeprint",()=>{s(!0)}),fa(()=>{setTimeout(()=>{_()},800)}),()=>{var v;return p("div",{class:"vp-code-demo",id:a.id},[p("div",{class:"vp-code-demo-header"},[d.value.isLegal?p("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-code-demo-toggle-button",e.value?"down":"end"],onClick:()=>{i.value=e.value?"0":`${r.value.clientHeight+13.8}px`,s()}}):null,a.title?p("span",{class:"vp-code-demo-title"},decodeURIComponent(a.title)):null,d.value.isLegal&&d.value.jsfiddle!==!1?p("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[p("input",{type:"hidden",name:"html",value:d.value.html}),p("input",{type:"hidden",name:"js",value:d.value.js}),p("input",{type:"hidden",name:"css",value:d.value.css}),p("input",{type:"hidden",name:"wrap",value:"1"}),p("input",{type:"hidden",name:"panel_js",value:"3"}),p("input",{type:"hidden",name:"resources",value:[...d.value.cssLib,...d.value.jsLib].join(",")}),p("button",{type:"submit",class:"jsfiddle-button",innerHTML:p1,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!d.value.isLegal||d.value.codepen!==!1?p("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[p("input",{type:"hidden",name:"data",value:JSON.stringify({html:d.value.html,js:d.value.js,css:d.value.css,js_external:d.value.jsLib.join(";"),css_external:d.value.cssLib.join(";"),layout:d.value.codepenLayout,html_pre_processor:u.value?u.value.html[1]:"none",js_pre_processor:u.value?u.value.js[1]:d.value.jsx?"babel":"none",css_pre_processor:u.value?u.value.css[1]:"none",editors:d.value.codepenEditors})}),p("button",{type:"submit",innerHTML:i1,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),l.value?null:p(tc,{class:"vp-code-demo-loading"}),p("div",{ref:o,class:"vp-code-demo-display",style:{display:g.value&&l.value?"block":"none"}}),p("div",{class:"vp-code-demo-code-wrapper",style:{height:i.value}},p("div",{ref:r,class:"vp-code-demo-codes"},(v=t.default)==null?void 0:v.call(t)))])}}}),D1=j({name:"MdDemo",props:{id:{type:String,required:!0},title:{type:String,default:""}},slots:Object,setup(a,{slots:t}){const[e,s]=vn(!1),o=xa(),r=X("0");return Ba("beforeprint",()=>{s(!0)}),()=>{var i,l;return p("div",{class:"vp-md-demo",id:a.id},[p("div",{class:"vp-md-demo-header"},[p("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-md-demo-toggle-button",e.value?"down":"end"],onClick:()=>{r.value=e.value?"0":`${o.value.clientHeight+13.8}px`,s()}}),a.title?decodeURIComponent(a.title):null]),p("div",{class:"vp-md-demo-display"},(i=t.default)==null?void 0:i.call(t)),p("div",{class:"vp-md-demo-code-wrapper",style:{height:r.value}},p("div",{ref:o,class:"vp-md-demo-codes"},(l=t.code)==null?void 0:l.call(t)))])}}});const T1=()=>{Ba("beforeprint",()=>{document.querySelectorAll("details").forEach(a=>{a.open=!0})})},no=Ue("VUEPRESS_TAB_STORE",{});var L1=j({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(a,{slots:t}){const e=X(a.active),s=xa([]),o=()=>{a.tabId&&(no.value[a.tabId]=a.data[e.value].id)},r=(u=e.value)=>{e.value=u<s.value.length-1?u+1:0,s.value[e.value].focus()},i=(u=e.value)=>{e.value=u>0?u-1:s.value.length-1,s.value[e.value].focus()},l=(u,d)=>{u.key===" "||u.key==="Enter"?(u.preventDefault(),e.value=d):u.key==="ArrowRight"?(u.preventDefault(),r()):u.key==="ArrowLeft"&&(u.preventDefault(),i()),o()},c=()=>{if(a.tabId){const u=a.data.findIndex(({id:d})=>no.value[a.tabId]===d);if(u!==-1)return u}return a.active};return fa(()=>{e.value=c(),ua(()=>no.value[a.tabId],(u,d)=>{if(a.tabId&&u!==d){const g=a.data.findIndex(({id:m})=>m===u);g!==-1&&(e.value=g)}})}),()=>a.data.length?p("div",{class:"vp-tabs"},[p("div",{class:"vp-tabs-nav",role:"tablist"},a.data.map(({id:u},d)=>{const g=d===e.value;return p("button",{type:"button",ref:m=>{m&&(s.value[d]=m)},class:["vp-tab-nav",{active:g}],role:"tab","aria-controls":`tab-${a.id}-${d}`,"aria-selected":g,onClick:()=>{e.value=d,o()},onKeydown:m=>l(m,d)},t[`title${d}`]({value:u,isActive:g}))})),a.data.map(({id:u},d)=>{const g=d===e.value;return p("div",{class:["vp-tab",{active:g}],id:`tab-${a.id}-${d}`,role:"tabpanel","aria-expanded":g},[p("div",{class:"vp-tab-title"},t[`title${d}`]({value:u,isActive:g})),t[`tab${d}`]({value:u,isActive:g})])})]):null}});const x1=Dt({enhance:({app:a})=>{a.component("CodeTabs",Ym),tt("CodeGroup",a)||a.component("CodeGroup",a1),tt("CodeGroupItem",a)||a.component("CodeGroupItem",ac),a.component("CodeDemo",P1),a.component("MdDemo",D1),a.component("Tabs",L1)},setup:()=>{T1()}}),R1=X({}),_c=Symbol(""),O1=()=>Sa(_c),J1=a=>{a.provide(_c,R1)},C1='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',B1=a=>Pa(a)?Array.from(document.querySelectorAll(a)):a.map(t=>Array.from(document.querySelectorAll(t))).flat(),hc=a=>new Promise((t,e)=>{a.complete?t({type:"image",element:a,src:a.src,width:a.naturalWidth,height:a.naturalHeight,alt:a.alt,msrc:a.src}):(a.onload=()=>t(hc(a)),a.onerror=s=>e(s))}),w1=a=>{const{isSupported:t,toggle:e}=cr();a.on("uiRegister",()=>{t.value&&a.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{e()}}),a.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(s,o)=>{s.setAttribute("download",""),s.setAttribute("target","_blank"),s.setAttribute("rel","noopener"),o.on("change",()=>{s.setAttribute("href",o.currSlide.data.src)})}}),a.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:(s,o)=>{const r=[];let i=-1;for(let l=0;l<o.getNumItems();l++){const c=document.createElement("div");c.className="photo-swipe-bullet",c.onclick=u=>{o.goTo(r.indexOf(u.target))},r.push(c),s.appendChild(c)}o.on("change",()=>{i>=0&&r[i].classList.remove("active"),r[o.currIndex].classList.add("active"),i=o.currIndex})}})})},V1=(a,t,e=!0)=>n(()=>import("./photoswipe.esm-SzV8tJDW.js"),[]).then(({default:s})=>{let o=null;const r=a.map(i=>({html:C1,element:i,msrc:i.src}));return a.forEach((i,l)=>{const c=()=>{o==null||o.destroy(),o=new s({preloaderDelay:0,showHideAnimationType:"zoom",...t,dataSource:r,index:l,...e?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),w1(o),o.addFilter("thumbEl",()=>i),o.addFilter("placeholderSrc",()=>i.src),o.init()};i.getAttribute("photo-swipe")||(i.style.cursor="zoom-in",i.addEventListener("click",()=>{c()}),i.addEventListener("keypress",({key:u})=>{u==="Enter"&&c()}),i.setAttribute("photo-swipe","")),hc(i).then(u=>{r.splice(l,1,u),o==null||o.refreshSlideContent(l)})}),e?Ba("wheel",()=>{o==null||o.close()}):()=>{}}),M1=({selector:a,locales:t,delay:e=500,scrollToClose:s=!0})=>{const o=O1(),r=Rn(t),i=Aa(),l=da();let c=null;const u=()=>{const{photoSwipe:d}=l.value;d!==!1&&Bt().then(()=>Ml(e)).then(async()=>{const g=Pa(d)?d:a;c=await V1(B1(g),{...o.value,...r.value},s)})};fa(()=>{u(),ua(()=>[i.value.path,o.value],()=>{c==null||c(),u()})}),je(()=>{c==null||c()})};var F1={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}};const j1=".theme-hope-content :not(a) > img:not([no-view])",N1=F1,H1=800,U1=!0,K1=Dt({enhance:({app:a})=>{J1(a)},setup:()=>{M1({selector:j1,delay:H1,locales:N1,scrollToClose:U1})}}),vc=()=>{const a=Aa();return y(()=>a.value.readingTime??null)},fc=(a,t)=>{const{minutes:e,words:s}=a,{less1Minute:o,word:r,time:i}=t;return{time:e<1?o:i.replace("$time",Math.round(e).toString()),words:r.replace("$word",s.toString())}};var Gi={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const Wi={words:"",time:""},So=typeof Gi>"u"?null:Gi,Ec=()=>So?Rn(So):y(()=>null),G1=()=>{if(typeof So>"u")return y(()=>Wi);const a=vc(),t=Ec();return y(()=>a.value&&t.value?fc(a.value,t.value):Wi)},kt=()=>Zl(),ra=()=>Km(),Ga=()=>{const a=kt();return y(()=>!!a.value.pure)},ls=()=>null,W1="719px",z1="1440px",$1="false",q1="9",se={mobileBreakPoint:W1,pcBreakPoint:z1,enableThemeColor:$1,colorNumber:q1},mr={"/posts/baeldung/":[{text:"2024 06 21",prefix:"2024-06-21/",collapsible:!0,children:["2024-06-21-Iterating All Fields of a Data Class Without Reflection in Kotlin","2024-06-21- DataJpaTest and Repository Class in JUnit","2024-06-21-Difference Between GroupId and ConsumerId in Apache Kafka","2024-06-21-Gson TypeToken With Dynamic List Item Type","2024-06-21-Simplified Array Operations on JsonNode Without Typecasting in Jackson","2024-06-21-Serialization with FlatBuffers in Java","2024-06-21-How to Pretty Print a Map in Java","2024-06-21-Generate Juggler Sequence in Java","2024-06-21-Get First n Characters in a String in Java","2024-06-21-Custom Event Handlers and Listeners in Netty","2024-06-21-Spring Data JPA Repository for Database View","2024-06-21-Skip Select Before Insert in Spring Data JPA","2024-06-21-Query Hints in Spring Data JPA","2024-06-21-Testcontainers Desktop","2024-06-21-Create JavaType From Class with Jackson","2024-06-21-Modify and Print List Items With Java Streams","2024-06-21-Count the Number of Unique Digits in an Integer using Java","2024-06-21-Document Query Parameters with Spring REST Docs","2024-06-21-Increase the Memory Size Limit on IntelliJ IDEA","2024-06-21-Remove Only Trailing Spaces or Whitespace From a String in Java","2024-06-21-Finding the Parent of a Node in a Binary Search Tree with Java","2024-06-21-Find an Unique Email Address in a List","2024-06-21-Get the Initials of a Name in Java","2024-06-21-Implementing GraphQL Mutation Without Returning Data","2024-06-21-How to Mock Amazon S3 for Integration Test","2024-06-21-Migrate Application from Spring Security 5 to Spring Security 6 Spring Boot 3","2024-06-21-Railway Oriented Programming in Kotlin"]},{text:"2024 06 22",prefix:"2024-06-22/",collapsible:!0,children:["2024-06-22-Understanding Kafka InstanceAlreadyExistsException in Java","2024-06-22-Difference Between thenApply   and thenApplyAsync   in CompletableFuture","2024-06-22-CountDownLatch vs. Semaphore","2024-06-22-A Guide to etcd","2024-06-22-A Guide to the  SoftDelete Annotation in Hibernate","2024-06-22-Simple Web Server in Java 18","2024-06-22-CompletableFuture runAsync   vs. supplyAsync   in Java","2024-06-22-Guide to System.in.read  ","2024-06-22-Translating Space Characters in URLEncoder","2024-06-22-Convert Infix to Postfix Expressions in Java","2024-06-22-Moves Zeros to the End of an Array in Java","2024-06-22-Convert Date to Unix Timestamp in Java","2024-06-22-Mutable vs. Immutable Objects in Java","2024-06-22-Solving Rod Cutting Problem in Java","2024-06-22-Pagination With JDBC","2024-06-22-Injecting  Mock and  Captor in JUnit 5 Method Parameters","2024-06-22-View Kafka Headers in Java","2024-06-22-Parse String With Thousands Separator in Kotlin","2024-06-22-Introduction to OpenGrok","2024-06-22-Quarkus and Virtual Threads","2024-06-22-Run Maven From Java Code","2024-06-22-Instantiate an Inner Class With Reflection in Java","2024-06-22-Logging With AOP in Spring","2024-06-22-OAuth2 Backend for Frontend With Spring Cloud Gateway","2024-06-22-Creating a Custom URL Connection","2024-06-22-Add Camel Route at Runtime in Java","2024-06-22-Storing UUID as Base64 String in Java","2024-06-22-Find the Equilibrium Indexes of an Array in Java","2024-06-22-Count Uppercase and Lowercase Letters in a String","2024-06-22-Calculate Weighted Mean in Java","2024-06-22-Mask an Email Address and Phone Number in Java","2024-06-22-Get a Range of Items from a Stream in Java","2024-06-22-Get All Results at Once in a Spring Boot Paged Query Method","2024-06-22-Install OpenJDK on Windows","2024-06-22-Find The Largest Number in a String","2024-06-22-Check if String is Base64 Encoded","2024-06-22-How To Use findBy   With Multiple Columns in JPA","2024-06-22-How to Check if a Variable Is Defined in Thymeleaf","2024-06-22-Check if Two Strings Are Rotations of Each Other","2024-06-22-Find the First Non repeating Element of a List","2024-06-22-Collect Stream of entrySet   to a LinkedHashMap","2024-06-22-Check if a String Is Equal to Its Mirror Reflection","2024-06-22-Understanding  Raw type. References to generic types should be parameterized  Error","2024-06-22-Preventing Gson from Expressing Integers as Floats"]},{text:"2024 06 23",prefix:"2024-06-23/",collapsible:!0,children:["2024-06-23-Difference Between mvn install and mvn verify","2024-06-23-Introduction to gRPC with Spring Boot","2024-06-23-N 1 Problem in Hibernate and Spring Data JPA","2024-06-23-Print a Java 2D Array","2024-06-23-JFR View Command in Java 21","2024-06-23-Convert byte to int Type in Java","2024-06-23-Normalize a URL in Java","2024-06-23-Calculating the Power of Any Number in Java Without Using Math pow   Method","2024-06-23-Read and Write Files in Java Using Separate Threads","2024-06-23-Regular Expression for Password Validation in Java","2024-06-23-Convert Long to Date in Java","2024-06-23-Convert Gregorian to Hijri Date in Java","2024-06-23-Convert String Date to XMLGregorianCalendar in Java","2024-06-23-Difference between ZoneOffset.UTC and ZoneId.of  UTC  ","2024-06-23-Run Length Encoding and Decoding in Java","2024-06-23-Monkey Patching in Java","2024-06-23-Structured Logging in Java","2024-06-23-Calculate Number of Weekdays Between Two Dates in Java","2024-06-23-Reset ListIterator to First Element of the List in Java","2024-06-23-Introduction to KotlinPoet","2024-06-23-Difference Between  mvn verify  and  mvn test ","2024-06-23-Setting up and Using Spock With Gradle","2024-06-23-Access Job Parameters From ItemReader in Spring Batch","2024-06-23-List vs. Set in  OneToMany JPA","2024-06-23-Event Externalization with Spring Modulith","2024-06-23-Creating Unicode Character From Its Code Point Hex String","2024-06-23-Apply Bold Text Style for an Entire Row Using Apache POI","2024-06-23-Generating Unique Positive Long Using SecureRandom in Java","2024-06-23-Using Current Time as Filename in Java","2024-06-23-Event Driven Microservices With Orkes Conductor","2024-06-23-Improving Test Coverage and Readability With Spock s Data Pipes and Tables","2024-06-23-Custom JSON Deserialization Using Spring WebClient","2024-06-23-Enable Java SSL Debug Logging","2024-06-23-Rotate a Vertex Around a Certain Point in Java","2024-06-23-Set an Environment Variable at Runtime in Java","2024-06-23-Shutting Down on OutOfMemoryError in Java","2024-06-23-How to Find the URL of a Service in Kubernetes","2024-06-23-How to Catch Deserialization Errors in Spring Kafka ","2024-06-23-How to Determine if a String Contains Invalid Encoded Characters","2024-06-23-Looking for a Backend Java Spring Team Lead with Integration Experience  Remote   Part Time    not open","2024-06-23-Builder Pattern and Inheritance","2024-06-23-Check if Two Date Ranges Overlap","2024-06-23-Simple Morse Code Translation in Java"]},{text:"2024 06 24",prefix:"2024-06-24/",collapsible:!0,children:["2024-06-24-Introduction to Apache Calcite","2024-06-24-Java 8 Stream Operation on the Empty List","2024-06-24-Generational ZGC in Java 21","2024-06-24-Difference Between a Future and a Promise in Java","2024-06-24-PriorityQueue iterator   Method in Java","2024-06-24-Difference Between Xmx and MaxRAM JVM Parameters","2024-06-24-Converting BigDecimal to Integer in Java","2024-06-24-Converting Integer to BigDecimal in Java","2024-06-24-Convert Null Value to a Default Value in Java","2024-06-24-Replace Non Printable Unicode Characters in Java","2024-06-24-Check if List Contains at Least One Enum","2024-06-24-Check if a Float Value is Equivalent to an Integer Value in Java","2024-06-24-What Is the Error   Non static method cannot be referenced from a static context  ","2024-06-24-Read Input Character by Character in Java","2024-06-24-Convert Joda Time DateTime to Date and Vice Versa","2024-06-24-What Happens When the JVM Runs Out of Memory to Allocate During Runtime ","2024-06-24-Maven Dependencies Failing With a 501 Error  HTTPS Required ","2024-06-24-Introduction to Postman","2024-06-24-Introduction to Spring AI","2024-06-24-Introduction to Spring Cloud AWS 3.0   SQS Integration","2024-06-24-Upload Multiple Files Using WebFlux","2024-06-24-Getting Query String Parameters from HttpServletRequest","2024-06-24-Remove Characters From a String That Are in the Other String","2024-06-24-Removing the Last Node in a Linked List","2024-06-24-Create Kubernetes Operators with the Java Operator SDK","2024-06-24-Creating Reactive APIs With Micronaut and MongoDB","2024-06-24-Using Static Methods Instead of Deprecated JsonParser","2024-06-24-Printing Message on Console without Using main   Method in Java","2024-06-24-Call a Method on Each Element of a List in Java","2024-06-24-Check if a Point Is Between Two Points Drawn on a Straight Line in Java","2024-06-24-Add Authorities as Custom Claims in JWT Access Tokens in Spring Authorization Server","2024-06-24-Solving the ParameterResolutionException in JUnit 5","2024-06-24-Accessing Private Java Fields via Kotlin Extension Functions"]},{text:"2024 06 25",prefix:"2024-06-25/",collapsible:!0,children:["2024-06-25-Sending Data to a Specific Partition in Kafka","2024-06-25-BigDecimal.ZERO vs. new BigDecimal 0 ","2024-06-25-Java System.currentTimeMillis   Vs. System.nanoTime  ","2024-06-25-Difference Between 1L and  long  1","2024-06-25-Difference Between execute   and submit   in Executor Service","2024-06-25-Comparison of for Loops and Iterators","2024-06-25-Callbacks in ListenableFuture and CompletableFuture","2024-06-25-Java s String.length   and String.getBytes  .length","2024-06-25-Lazy Field Initialization with Lambdas","2024-06-25-Format LocalDate to ISO 8601 With T and Z","2024-06-25-Convert String to long or Long in Java","2024-06-25-Convert a String to a List of Characters in Java","2024-06-25-Convert Byte Array to JSON and Vice Versa in Java","2024-06-25-Sorting One List Based on Another List in Java","2024-06-25-Detect the Last Iteration in for Loops in Java","2024-06-25-UTF 8 Validation in Java","2024-06-25-Calculate Months Between Two Dates in Java","2024-06-25-Read a File and Split It Into Multiple Files in Java","2024-06-25-Rotating a Java String By n Characters","2024-06-25-Dijkstra s Algorithm in Kotlin","2024-06-25-Reactor WebFlux vs Virtual Threads","2024-06-25- Query Definitions With SpEL Support in Spring Data JPA","2024-06-25-What Does It Mean to Hydrate an Object ","2024-06-25-Getting All Field Names of a Class Using Kotlin Reflection","2024-06-25-Convert Excel Files to PDF Using Java","2024-06-25-Get Client Information From HTTP Request in Java","2024-06-25-Find Missing Number From a Given Array in Java","2024-06-25-Comparing One String With Multiple Values in One Expression in Java","2024-06-25-Convert an OutputStream to a Byte Array in Java","2024-06-25-Print a Double Value Without Scientific Notation in Java","2024-06-25-Find Files by Extension in Specified Directory in Java","2024-06-25-When to Use the getReferenceById   and findById   Methods in Spring Data JPA","2024-06-25-Return Map Instead of List in Spring Data JPA","2024-06-25-How to Write Strings to OutputStream in Java","2024-06-25-How to Get Last Record in Spring Data JPA","2024-06-25-Check If a Java StringBuilder Object Contains a Character","2024-06-25-Fixing Hibernate QueryException  Named Parameter Not Bound"]},{text:"2024 06 26",prefix:"2024-06-26/",collapsible:!0,children:["2024-06-26-String vs StringBuffer Comparison in Java","2024-06-26-String s Maximum Length in Java","2024-06-26-Skip Bytes in InputStream in Java","2024-06-26-Inter Process Communication Methods in Java","2024-06-26-Static Final Variables in Java","2024-06-26-Spring Kafka Trusted Packages Feature","2024-06-26-A Guide to Timefold Solver for Employee Scheduling","2024-06-26-Deserializing JSON to Java Record using Gson","2024-06-26-Get Index of First Element Matching Boolean Using Java Streams","2024-06-26-Verify That Lambda Expression Was Called Using Mockito","2024-06-26-Extract Numbers From a String in Kotlin","2024-06-26-Handling NullPointerException in findFirst   When the First Element Is Null","2024-06-26-How to Effectively Unit Test CompletableFuture","2024-06-26-Differences Between Entities and DTOs","2024-06-26-Recursively Sum the Integers in an Array","2024-06-26-Connect to Database Through Intellij Data Sources and Drivers"]},{text:"Archive",prefix:"Archive/",collapsible:!0,children:["Can  Transactional and  Async Work Together ","2024-06-21-Intro to the Apache Commons CLI","Intro to the Apache Commons Compress Project","Intro to Apache Commons Configuration Project","Consumer Processing of Kafka Messages With Delay","Handling Nulls in ArrayList.addAll  ","BigDecimal equals   vs. compareTo  ","Introduction to Brave","CompletableFuture vs. Mono","Introduction to DuckDB","Add an Aggregation to an Elasticsearch Query","2024-06-20-Guide to ExecutorService vs. CompletableFuture","Configuring Retry Policy for gRPC Request","Polymorphism with Gson","2024-06-19-The  Struct Annotation Type in Hibernate   Structured User Defined Types","2024-06-20- Subselect Annotation in Hibernate","Git Integration in IntelliJ IDEA","Convert Jackson JsonNode to Typed Collection","Collecting into Map using Collectors.toMap   vs Collectors.groupingBy  ","Implement the Builder Pattern in Java 8","2024-06-19-New Features in Java 21","Introduction to Java 22","2024-06-20-Java InputStream vs. InputStreamReader","PrintWriter write   vs print   Method in Java","2024-06-20-Normalizing the EOL Character in Java","Introduction to JavaParser","2024-06-20-How to Convert Excel to JSON in Java","Unit Test for hashCode   in Java","Difference Between Iterator.forEachRemaining   and Iterable.forEach  ","Difference Between Optional.of   and Optional.ofNullable   in Java","2024-06-19-Statements Before super   in Java","2024-06-20-Converting UTF 8 to ISO 8859 1 in Java","Java中不同数值类型的比较","Compare the Numbers of Different Types","Convert From int to short in Java","Supply Enum Value to an Annotation From a Constant in Java","Fault Tolerance in Java Using Failsafe","2024-06-20-Reading a .gz File Line by Line Using GZIPInputStream","2024-06-21-Parsing HTML Table in Java With Jsoup","/posts/baeldung/Archive/Replacing%20Strings%20in%20Java%20Using%20Regex_%20Back%20Reference%20vs.%20Lookaround.html","2024-06-21-Check if a Number Is a Happy Number in Java","Difference Between Casting to String and String.valueOf  ","Converting Float ArrayList to Primitive Array in Java","Convert InputStream to Stream in Java","Java中将int转换为无符号字节","2024-06-20-Flatten a Stream of Maps to a Single Map in Java","Convert an Optional to an ArrayList in Java","Converting short to byte   in Java","2024-06-19-Convert TemporalAccessor to LocalDate","Convert 2D Array Into 1D Array","Convert Decimal to Fraction in Java","Converting Image to BufferedImage in Java","Java中将字符串转换为OffsetDateTime","2024-06-19-Convert a Phone Number in Words to Number with Java","Set Matrix Elements to Zero in Java","Pass a Class as a Parameter in Java","Convert a Queue to a List","Print Distinct Characters of a String in Java","Extracting Text Between Parentheses in Java","Get the Indices of an Array After Sorting in Java","2024-06-20-Representation of Integers at a Bit Level in Java","Check if Two Strings Are Permutations of Each Other in Java","Check if a Number Is Power of 2 in Java","2024-06-20-Checking if a Date Object Equals Yesterday","2024-06-19-Check if an Element Is Present in a Set in Java","2024-06-19-Internet Address Resolution SPI in Java","OpenAI API Client in Java","2024-06-19-Immutable vs Unmodifiable Collection in Java","Monads in Java","2024-06-21-Calculate Percentiles in Java","Calculating Moving Averages in Java","How to Iterate a List of Maps in Java","Print the Default Value When Overriding toString   Method","Return Non-null Elements From Java Map Operation","Parallel Collection Processing with Parallel Collectors and Virtual Threads","Introduction to JFreeChart","Clear Managed Entities in JPA Hibernate","Inheritance vs. Composition in JPA","2024-06-21-Commit Offsets in Kafka","2024-06-20-A Guide to Kotlin Context Receivers","2024-06-20-Guide to Duration in Kotlin","2024-06-20-Difference Between eachCount   and eachCountTo   Methods in Kotlin","2024-06-20-Guide to the HexFormat API","2024-06-20-Use of Backticks in Kotlin","2024-06-20-Passing a Type to Generic Method in Kotlin","2024-06-21-HTML Builder in Kotlin","2024-06-20-Variable Shadowing in Kotlin","2024-06-20-Avoiding the ConcurrentModificationException in Kotlin","2024-06-20-Parallel Operations on Kotlin Collections","2024-06-19-Introduction to Light 4J","Difference Between Lombok  AllArgsConstructor   RequiredArgsConstructor and  NoArgConstructor","Understanding Maven Dependency Graph or Tree","2024-06-19-Multiple Level Mock Injection Into Mockito Spy Objects","The Difference Between doAnswer   and thenReturn   in Mockito","Full and Partial Text Search in MongoDB","Role Based Access Control in Quarkus","2024-06-20-Querydsl vs. JPA Criteria","Comparison Between Flux.map() and Flux.doOnNext()","2024-06-21-Introduction to Redpanda","2024-06-20-Finding Element by Attribute in Selenium","Introduction to Simple Java Mail","2024-06-19-Logging in Spring Boot With Loki","2024-06-21-Spring Security AuthorizationManager","Spring WebClient exchange   vs retrieve  ","2024-06-19-The Difference Between Throwing an Exception and Mono.error   in Spring Webflux","Introduction to SSHJ","Continue the Test Even After Assertion Failure in TestNG","2024-06-20-Vigen re Cipher in Java","2024-06-20-Invalid Characters in XML","Perform Action Only if All Optionals Are Available","2024-06-20-Getting a Kotlin KClass from a Package Class Name String","2024-06-19-Get Last n Characters From a String","Code Coverage vs. Test Coverage","Using Reactor Mono.cache   for Memoization","Using Comparator.nullsLast() to Avoid NullPointerException When Sorting","Generate Java Classes From Avro Schemas Using Gradle","Compress and Create a Byte Array Using GZip","Static Code Analysis Using Infer","Download File from S3 Given a URL","Merge Multiple PDF Files Into a Single PDF Using Java","2024-06-19-Opening HTML File Using Java","Extract Text From a HTML Tag with Regex","Join Two Tables Using jOOQ","Save Child Objects Automatically Using JPA","Mapping Enum to String Using MapStruct","Map LocalDateTime to Instant in MapStruct","Get JSON Content as Object Using MockMVC","Monitor a Spring Boot App Using Prometheus","2024-06-21-Capturing Method Arguments When Running Spock Tests","Using @Autowired and @InjectMocks in Spring Boot Tests","Get Nextval From Sequence With Spring JPA","2024-06-20-Implement Two Level Cache With Spring","Get the Position of Key Value in LinkedHashMap Using Its Key","Fix Spring Boot H2 JdbcSQLSyntaxErrorException  Table not found ","2024-06-20-Creating a Spring Security Key for Signing a JWT Token","2024-06-19-Logging in Apache Camel","2024-06-19-Checking Which Java Version Is Running in Eclipse","Add Global Exception Interceptor in gRPC Server","2024-06-19-Get a Path to a Resource in a Java JAR File","2024-06-20-Include null Value in JSON Serialization","2024-06-20-When to Use Setter Methods or Constructors for Setting a Variable s Value in Java","Create HashMap with Character Count of a String in Java","2024-06-20-Add One Element to an Immutable List in Java","Declare an Enum in an Inner Class in Java","2024-06-21-Finding the Majority Element of an Array in Java","Convert Between CLOB and String in Java","How to Convert org.w3c.dom.Document to String in Java","Finding the Second Smallest Integer in an Array in Java","Finding the Redirected URL of a URL in Java","Finding the nth Last Occurrence of char in String","Mocking Protected Method in Java","Remove All Characters Before a Specific Character in Java","2024-06-21-Obtaining the Last Path Segment of a URI in Java","Get the First and the Last Elements From an Array in Java","Get 2 s Complement of a Number in Java","Reading CSV Headers Into a List","2024-06-21-Refresh and Fetch an Entity After Save in JPA","2024-06-20-Using the  Value Annotation in Kotlin","2024-06-20-Serialize Enum Property to JSON in Kotlin","2024-06-20-Iterating Over Components of Object in Kotlin","Disable Logging From a Specific Class in Logback","Install Java on macOS","Logging SQL Queries to the Console in Mybatis","Get the Response Body in Spring Boot Filter","2024-06-20-Dynamically Managing Kafka Listeners in Spring Boot","2024-06-19-Disable  Cacheable in Spring Boot","Implement Update Or Insert in Spring Data JPA","2024-06-20-Create Spring Prototype Scope Bean with Runtime Arguments","2024-06-19-Disable  EnableScheduling on Spring Tests","Finding Minimum and Maximum in a 2D Array","Finding the Index of the Smallest Element in an Array","2024-06-21-Adding Elements to a Collection During Iteration","2024-06-20-Dynamically Register Spring Beans Based on Properties","How to Intercept a Request and Add Headers in WebFlux","How to Make Multiple REST Calls in CompletableFuture","How to Set JVM Arguments in IntelliJ IDEA ","How to Implement Elvis Operator in Java 8","How to Use Pair With Java PriorityQueue","How to Convert XML to PDF","2024-06-19-How to Scale a Bufferedimage in Java ","How to Fix EOFException in Java","How to Convert Between java.sql.Timestamp and ZonedDateTime in Java","2024-06-21-How to Autowire a Spring Bean in a Servlet Filter","How to Unit Test an ExecutorService Without Using Thread.sleep  ","How to Compile Java to WASM  Web Assembly ","How to Specify the logback.xml Location","How to Check if Optional Contains Value Equal to T Object","2024-06-19-How to Check Number Perfection","How to Test a Spring AOP Aspect","2024-06-19-How to Test Spring Application Events","Find the Date of Easter Sunday for the Given Year","Finding the Next Higher Number With the Same Digits","Find the Length of the Longest Symmetric Substring","2024-06-21-Finding the Peak Elements of a List","Convert Google Protocol Buffer Timestamp to LocalDate","2024-06-20-Convert RxJava Single to Kotlin Coroutine Deferred","2024-06-20-Saga Pattern in a Microservices Architecture","PersistenceUnit vs. PersistenceContext","探索Java中将枚举值从常量传递到注解的可能性","Exploring Complex Number Arithmetic Operations in Java","2024-06-20-Check if a Given Time Lies Between Two Times Regardless of Date","2024-06-21-Find the Largest Number Possible After Removing k Digits of a Number","2024-06-20-Fix Ambiguous Method Call Error in Mockito","/posts/baeldung/Archive/Solving%20Spring%20Data%20JPA%20ConverterNotFoundException_%20No%20converter%20found.html","Resolving Security Exception  java.security.UnrecoverableKeyException  Cannot Recover Key","Create and Run Apache JMeter Test Scripts via Java Program"]}],"/posts/articles/":["gRPC Authentication in Java Using Application Layer Transport Security (ALTS)","mongo-share",{text:"Postgresql",prefix:"postgresql/",collapsible:!0,children:["在Mac说安装postgresql并且创建一个数据库单独给一个用户赋予权限"]}]},kc=a=>{const{icon:t="",color:e,size:s}=a,o=e||s?{}:null;return e&&(o.color=e),s&&(o.height=Number.isNaN(Number(s))?s:`${s}px`),ee(t)?p("img",{class:"icon",src:t,alt:"","no-view":"",style:o}):Cn(t)?p("img",{class:"icon",src:ha(t),alt:"","aria-hidden":"","no-view":"",style:o}):p(lt("FontIcon"),a)};kc.displayName="HopeIcon";var Na=kc;const Ac=()=>{const a=ra();return y(()=>a.value.author)},Q1="http://.",Ee=()=>{const a=fe(),t=Vt();return e=>{if(e)if(Cn(e))t.path!==e&&a.push(e);else if(Ss(e))window&&window.open(e);else{const s=t.path.slice(0,t.path.lastIndexOf("/"));a.push(new URL(`${s}/${encodeURI(e)}`,Q1).pathname)}}},yc=()=>{const a=da(),t=Ac();return y(()=>{const{author:e}=a.value;return e?En(e):e===!1?[]:En(t.value,!1)})},X1=()=>{const a=da(),t=Sa(Symbol.for("categoryMap"));return y(()=>cc(a.value.category??a.value.categories).map(e=>{var s;return{name:e,path:((s=t==null?void 0:t.value.map[e])==null?void 0:s.path)??""}}))},Z1=()=>{const a=da(),t=Sa(Symbol.for("tagMap"));return y(()=>uc(a.value.tag??a.value.tags).map(e=>{var s;return{name:e,path:((s=t==null?void 0:t.value.map[e])==null?void 0:s.path)??""}}))},Y1=()=>{const a=da(),t=Aa();return y(()=>{const e=pr(a.value.date);if(e)return e;const{createdTime:s}=t.value.git??{};return s?new Date(s):null})},a_=()=>{const a=ra(),t=Aa(),e=da(),s=yc(),o=X1(),r=Z1(),i=Y1(),l=vc(),c=G1(),u=y(()=>({author:s.value,category:o.value,date:i.value,localizedDate:t.value.localizedDate,tag:r.value,isOriginal:e.value.isOriginal??!1,readingTime:l.value,readingTimeLocale:c.value,pageview:e.value.pageview??!0})),d=y(()=>e.value.pageInfo??a.value.pageInfo??null);return{info:u,items:d}},{mobileBreakPoint:t_,pcBreakPoint:e_}=se,zi=a=>a.endsWith("px")?Number(a.slice(0,-2)):null,Mn=()=>{const a=X(!1),t=X(!1),e=()=>{a.value=window.innerWidth<=(zi(t_)??719),t.value=window.innerWidth>=(zi(e_)??1440)};return Ba("resize",e,!1),Ba("orientationchange",e,!1),fa(()=>{e()}),{isMobile:a,isPC:t}},Ic=Symbol(""),Fn=()=>{const a=Sa(Ic);if(!a)throw new Error("useDarkmode() is called without provider.");return a},n_=a=>{const t=kt(),e=_m(),s=y(()=>t.value.darkmode??"switch"),o=Ue("vuepress-theme-hope-scheme","auto"),r=y(()=>{const l=s.value;return l==="disable"?!1:l==="enable"?!0:l==="auto"?e.value:l==="toggle"?o.value==="dark":o.value==="dark"||o.value==="auto"&&e.value}),i=y(()=>{const l=s.value;return l==="switch"||l==="toggle"});a.provide(Ic,{canToggle:i,config:s,isDarkmode:r,status:o}),Object.defineProperties(a.config.globalProperties,{$isDarkmode:{get:()=>r.value}})},s_=()=>{const{config:a,isDarkmode:t,status:e}=Fn();Bp(()=>{a.value==="disable"?e.value="light":a.value==="enable"?e.value="dark":a.value==="toggle"&&e.value==="auto"&&(e.value="light")}),fa(()=>{ua(t,s=>document.documentElement.setAttribute("data-theme",s?"dark":"light"),{immediate:!0})})},kn=(a,t,e=!1)=>"activeMatch"in t?new RegExp(t.activeMatch,"u").test(a.path):ic(a,t.link)?!0:"children"in t&&!e?t.children.some(s=>kn(a,s)):!1,bc=(a,t)=>t.type==="group"?!!(t.prefix&&ic(a,t.prefix))||t.children.some(e=>e.type==="group"?bc(a,e):e.type==="page"&&kn(a,e,!0)):!1,Po=a=>!bs(a)&&!Ss(a);var za=(a=>(a.title="t",a.shortTitle="s",a.icon="i",a.index="I",a.order="O",a.breadcrumbExclude="b",a))(za||{}),Ua=(a=>(a.type="y",a.author="a",a.date="d",a.localizedDate="l",a.category="c",a.tag="g",a.isEncrypted="n",a.isOriginal="o",a.readingTime="r",a.excerpt="e",a.sticky="u",a.cover="v",a))(Ua||{}),Sc=(a=>(a.article="a",a.home="h",a.slide="s",a.page="p",a))(Sc||{});const _r=(a,t=!1,e)=>{const{meta:s,path:o,notFound:r}=zg(a,e);return r?{text:o,link:o}:{text:!t&&s[za.shortTitle]?s[za.shortTitle]:s[za.title]||o,link:o,...s[za.icon]?{icon:s[za.icon]}:{}}},ue=(a="",t="")=>Cn(t)||Ss(t)?t:`${ml(a)}${t}`,Do=({config:a,prefix:t=""})=>{const e=(s,o=t)=>{const r=Pa(s)?_r(ue(o,s)):s.link?{...s,link:Po(s.link)?Pt(ue(o,s.link)).path:s.link}:s;if("children"in r){const i=ue(o,r.prefix),l=r.children==="structure"?mr[i]:r.children;return{type:"group",...r,prefix:i,children:l.map(c=>e(c,i))}}return{type:"page",...r}};return a.map(s=>e(s))},o_=({config:a,routePath:t,headerDepth:e})=>{const s=ut(a).sort((o,r)=>r.length-o.length);for(const o of s)if(we(decodeURI(t),o)){const r=a[o];return r?Do({config:r==="structure"?mr[o]:r,headerDepth:e,prefix:o}):[]}return console.warn(`${decodeURI(t)} is missing sidebar config.`),[]},r_=({config:a,headerDepth:t,routeLocale:e,routePath:s})=>a==="structure"?Do({config:mr[e],headerDepth:t,prefix:e}):bo(a)?Do({config:a,headerDepth:t}):Ne(a)?o_({config:a,routePath:s,headerDepth:t}):[],Pc=Symbol(""),i_=()=>{const a=da(),t=ra(),e=ne(),s=Ag(),o=y(()=>a.value.home?!1:a.value.sidebar??t.value.sidebar??"structure"),r=y(()=>a.value.headerDepth??t.value.headerDepth??2),i=y(()=>r_({config:o.value,headerDepth:r.value,routeLocale:e.value,routePath:s.value}));vt(Pc,i)},hr=()=>{const a=Sa(Pc);if(!a)throw new Error("useSidebarItems() is called without provider.");return a};var p_=j({name:"PageFooter",setup(){const a=kt(),t=ra(),e=da(),s=yc(),o=y(()=>{const{copyright:u,footer:d}=e.value;return d!==!1&&!!(u||d||t.value.displayFooter)}),r=y(()=>{const{footer:u}=e.value;return u===!1?!1:Pa(u)?u:t.value.footer??""}),i=y(()=>s.value.map(({name:u})=>u).join(", ")),l=u=>`Copyright © ${new Date().getFullYear()} ${i.value} ${u?`${u} Licensed`:""}`,c=y(()=>{const{copyright:u,license:d=""}=e.value,{license:g}=a.value,{copyright:m}=t.value;return u??(d?l(d):Pa(m)?m:i.value||g?l(g):!1)});return()=>o.value?p("footer",{class:"vp-footer-wrapper"},[r.value?p("div",{class:"vp-footer",innerHTML:r.value}):null,c.value?p("div",{class:"vp-copyright",innerHTML:c.value}):null]):null}}),$a=j({name:"AutoLink",props:{config:{type:Object,required:!0},exact:Boolean,noExternalLinkIcon:Boolean},emits:["focusout"],slots:Object,setup(a,{emit:t,slots:e}){const s=da(),o=kt(),r=Vt(),i=Dl(),l=Fe(a,"config"),c=y(()=>ee(l.value.link)),u=y(()=>!c.value&&Ss(l.value.link)),d=y(()=>l.value.target??(c.value?"_blank":void 0)),g=y(()=>d.value==="_blank"),m=y(()=>!c.value&&!u.value&&!g.value),_=y(()=>l.value.rel??(g.value?"noopener noreferrer":"")),v=y(()=>l.value.ariaLabel??l.value.text),k=y(()=>{if(a.exact)return!1;const I=ut(i.value.locales);return I.length?I.every(E=>E!==l.value.link):l.value.link!=="/"}),b=y(()=>m.value?l.value.activeMatch?new RegExp(l.value.activeMatch,"u").test(r.path):k.value?we(r.path,l.value.link):r.path===l.value.link:!1),A=y(()=>a.noExternalLinkIcon===!1&&(s.value.externalLinkIcon??o.value.externalLinkIcon??!0));return()=>{const{before:I,after:E,default:P}=e,{text:M,icon:C,link:x}=l.value;return m.value?p(Ta,{class:"vp-link",to:x,active:b.value,activeClass:"active","aria-label":v.value,onFocusout:()=>t("focusout")},()=>P?P():[I?I():p(Na,{icon:C}),M,E==null?void 0:E()]):p("a",{class:["vp-link",{"vp-external-link-icon":A}],href:x,rel:_.value,target:d.value,"aria-label":v.value,onFocusout:()=>t("focusout")},P?P():[I?I():p(Na,{icon:C}),M,E==null?void 0:E()])}}}),l_=j({name:"NavbarDropdown",props:{config:{type:Object,required:!0}},slots:Object,setup(a,{slots:t}){const e=Aa(),s=Fe(a,"config"),o=y(()=>s.value.ariaLabel??s.value.text),r=X(!1);ua(()=>e.value.path,()=>{r.value=!1});const i=l=>{l.detail===0&&(r.value=!r.value)};return()=>{var l;return p("div",{class:["vp-dropdown-wrapper",{open:r.value}]},[p("button",{type:"button",class:"vp-dropdown-title","aria-label":o.value,onClick:i},[((l=t.title)==null?void 0:l.call(t))||[p(Na,{icon:s.value.icon}),a.config.text],p("span",{class:"arrow"}),p("ul",{class:"vp-dropdown"},s.value.children.map((c,u)=>{const d=u===s.value.children.length-1;return p("li",{class:"vp-dropdown-item"},"children"in c?[p("h4",{class:"vp-dropdown-subtitle"},c.link?p($a,{config:c,onFocusout:()=>{c.children.length===0&&d&&(r.value=!1)}}):c.text),p("ul",{class:"vp-dropdown-subitems"},c.children.map((g,m)=>p("li",{class:"vp-dropdown-subitem"},p($a,{config:g,onFocusout:()=>{m===c.children.length-1&&d&&(r.value=!1)}}))))]:p($a,{config:c,onFocusout:()=>{d&&(r.value=!1)}}))}))])])}}});const Dc=(a,t="")=>Pa(a)?_r(ue(t,a)):"children"in a?{...a,...a.link&&Po(a.link)?{link:Pt(ue(t,a.link)).path}:{},children:a.children.map(e=>Dc(e,ue(t,a.prefix)))}:{...a,link:Po(a.link)?Pt(ue(t,a.link)).path:a.link},Tc=()=>{const a=ra();return y(()=>(a.value.navbar||[]).map(t=>Dc(t)))},c_=()=>{const a=ra(),t=y(()=>a.value.repo),e=y(()=>t.value?t1(t.value):null),s=y(()=>t.value?dr(t.value):null),o=y(()=>e.value?a.value.repoLabel??s.value??"Source":null);return y(()=>!e.value||!o.value||a.value.repoDisplay===!1?null:{type:s.value??"Source",label:o.value,link:e.value})};var u_=j({name:"NavScreenMenu",props:{config:{type:Object,required:!0}},setup(a){const t=Aa(),e=Fe(a,"config"),s=y(()=>e.value.ariaLabel??e.value.text),o=X(!1);ua(()=>t.value.path,()=>{o.value=!1});const r=(i,l)=>l[l.length-1]===i;return()=>[p("button",{type:"button",class:["vp-nav-screen-menu-title",{active:o.value}],"aria-label":s.value,onClick:()=>{o.value=!o.value}},[p("span",{class:"text"},[p(Na,{icon:e.value.icon}),a.config.text]),p("span",{class:["arrow",o.value?"down":"end"]})]),p("ul",{class:["vp-nav-screen-menu",{hide:!o.value}]},e.value.children.map(i=>p("li",{class:"vp-nav-screen-menu-item"},"children"in i?[p("h4",{class:"vp-nav-screen-menu-subtitle"},i.link?p($a,{config:i,onFocusout:()=>{r(i,e.value.children)&&i.children.length===0&&(o.value=!1)}}):i.text),p("ul",{class:"vp-nav-screen-menu-subitems"},i.children.map(l=>p("li",{class:"vp-nav-screen-menu-subitem"},p($a,{config:l,onFocusout:()=>{r(l,i.children)&&r(i,e.value.children)&&(o.value=!1)}}))))]:p($a,{config:i,onFocusout:()=>{r(i,e.value.children)&&(o.value=!1)}}))))]}}),d_=j({name:"NavScreenLinks",setup(){const a=Tc();return()=>a.value.length?p("nav",{class:"nav-screen-links"},a.value.map(t=>p("div",{class:"navbar-links-item"},"children"in t?p(u_,{config:t}):p($a,{config:t})))):null}});const Lc=()=>p(ga,{name:"dark"},()=>p("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));Lc.displayName="DarkIcon";const xc=()=>p(ga,{name:"light"},()=>p("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));xc.displayName="LightIcon";const Rc=()=>p(ga,{name:"auto"},()=>p("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));Rc.displayName="AutoIcon";const Oc=()=>p(ga,{name:"enter-fullscreen"},()=>p("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));Oc.displayName="EnterFullScreenIcon";const Jc=()=>p(ga,{name:"cancel-fullscreen"},()=>p("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));Jc.displayName="CancelFullScreenIcon";const Cc=()=>p(ga,{name:"outlook"},()=>[p("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);Cc.displayName="OutlookIcon";var Bc=j({name:"ColorModeSwitch",setup(){const{config:a,isDarkmode:t,status:e}=Fn(),s=Ga(),o=()=>{a.value==="switch"?e.value={light:"dark",dark:"auto",auto:"light"}[e.value]:e.value=e.value==="light"?"dark":"light"},r=async i=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!s.value)||!i){o();return}const l=i.clientX,c=i.clientY,u=Math.hypot(Math.max(l,innerWidth-l),Math.max(c,innerHeight-c)),d=t.value;await document.startViewTransition(async()=>{o(),await Bt()}).ready,t.value!==d&&document.documentElement.animate({clipPath:t.value?[`circle(${u}px at ${l}px ${c}px)`,`circle(0px at ${l}px ${c}px)`]:[`circle(0px at ${l}px ${c}px)`,`circle(${u}px at ${l}px ${c}px)`]},{duration:400,pseudoElement:t.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>p("button",{type:"button",class:"vp-color-mode-switch",id:"color-mode-switch",onClick:r},[p(Rc,{style:{display:e.value==="auto"?"block":"none"}}),p(Lc,{style:{display:e.value==="dark"?"block":"none"}}),p(xc,{style:{display:e.value==="light"?"block":"none"}})])}}),g_=j({name:"ColorMode",setup(){const a=ra(),{canToggle:t}=Fn(),e=y(()=>a.value.outlookLocales.darkmode);return()=>t.value?p("div",{class:"vp-color-mode"},[p("label",{class:"vp-color-mode-title",for:"color-mode-switch"},e.value),p(Bc)]):null}});const $i=se.enableThemeColor==="true";var wc=j({name:"ToggleFullScreenButton",setup(){const a=ra(),{isSupported:t,isFullscreen:e,toggle:s}=cr(),o=y(()=>a.value.outlookLocales.fullscreen);return()=>t?p("div",{class:"full-screen-wrapper"},[p("label",{class:"full-screen-title",for:"full-screen-switch"},o.value),p("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:e.value,onClick:()=>s()},e.value?p(Jc):p(Oc))]):null}}),Vc=j({name:"OutlookSettings",setup(){const a=kt(),t=Ga(),e=y(()=>!t.value&&a.value.fullscreen);return()=>p(Ts,()=>[null,p(g_),e.value?p(wc):null])}}),m_=j({name:"NavScreen",props:{show:Boolean},emits:["close"],slots:Object,setup(a,{emit:t,slots:e}){const s=Aa(),{isMobile:o}=Mn(),r=xa(),i=Gl(r);return fa(()=>{r.value=document.body,ua(o,l=>{!l&&a.show&&(i.value=!1,t("close"))}),ua(()=>s.value.path,()=>{i.value=!1,t("close")})}),je(()=>{i.value=!1}),()=>p(Yt,{name:"fade",onEnter:()=>{i.value=!0},onAfterLeave:()=>{i.value=!1}},()=>{var l,c;return a.show?p("div",{id:"nav-screen",class:"vp-nav-screen"},p("div",{class:"vp-nav-screen-container"},[(l=e.before)==null?void 0:l.call(e),p(d_),p("div",{class:"vp-outlook-wrapper"},p(Vc)),(c=e.after)==null?void 0:c.call(e)])):null})}}),__=j({name:"NavbarBrand",setup(){const a=ne(),t=xn(),e=ra(),s=y(()=>e.value.home??a.value),o=y(()=>t.value.title),r=y(()=>e.value.navbarTitle??o.value),i=y(()=>e.value.logo?ha(e.value.logo):null),l=y(()=>e.value.logoDark?ha(e.value.logoDark):null);return()=>p(Ta,{to:s.value,class:"vp-brand"},()=>[i.value?p("img",{class:["vp-nav-logo",{light:!!l.value}],src:i.value,alt:""}):null,l.value?p("img",{class:["vp-nav-logo dark"],src:l.value,alt:""}):null,r.value?p("span",{class:["vp-site-name",{"hide-in-pad":i.value&&(e.value.hideSiteNameOnMobile??!0)}]},r.value):null])}}),h_=j({name:"NavbarLinks",setup(){const a=Tc();return()=>a.value.length?p("nav",{class:"vp-nav-links"},a.value.map(t=>p("div",{class:"vp-nav-item hide-in-mobile"},"children"in t?p(l_,{config:t}):p($a,{config:t})))):null}}),v_=j({name:"RepoLink",setup(){const a=c_();return()=>a.value?p("div",{class:"vp-nav-item vp-action"},p("a",{class:"vp-action-link",href:a.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":a.value.label},p(e1,{type:a.value.type,style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const Mc=({active:a=!1},{emit:t})=>p("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":a}],"aria-label":"Toggle Navbar","aria-expanded":a,"aria-controls":"nav-screen",onClick:()=>t("toggle")},p("span",[p("span",{class:"vp-top"}),p("span",{class:"vp-middle"}),p("span",{class:"vp-bottom"})]));Mc.displayName="ToggleNavbarButton";const To=(a,{emit:t})=>p("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>t("toggle")},p("span",{class:"icon"}));To.displayName="ToggleSidebarButton",To.emits=["toggle"];var f_=j({name:"OutlookButton",setup(){const a=kt(),t=Aa(),{canToggle:e}=Fn(),{isSupported:s}=cr(),o=Ga(),r=X(!1),i=y(()=>!o.value&&a.value.fullscreen&&s),l=y(()=>e.value||i.value);return ua(()=>t.value.path,()=>{r.value=!1}),()=>l.value?p("div",{class:"vp-nav-item hide-in-mobile"},e.value&&!i.value&&!$i?p(Bc):i.value&&!e.value&&!$i?p(wc):p("button",{type:"button",class:["vp-outlook-button",{open:r.value}],tabindex:"-1","aria-hidden":!0},[p(Cc),p("div",{class:"vp-outlook-dropdown"},p(Vc))])):null}}),E_=j({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(a,{emit:t,slots:e}){const s=ra(),{isMobile:o}=Mn(),r=X(!1),i=y(()=>{const{navbarAutoHide:d="mobile"}=s.value;return d!=="none"&&(d==="always"||o.value)}),l=y(()=>s.value.navbarLayout??{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),c={Brand:__,Language:ls,Links:h_,Repo:v_,Outlook:f_,Search:tt("Docsearch")?lt("Docsearch"):tt("SearchBox")?lt("SearchBox"):ls},u=d=>c[d]??(tt(d)?lt(d):ls);return()=>{var d,g,m,_,v,k,b,A,I;return[p("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":i.value}]},[p("div",{class:"vp-navbar-start"},[p(To,{onToggle:()=>{r.value&&(r.value=!1),t("toggleSidebar")}}),(d=e.startBefore)==null?void 0:d.call(e),(g=l.value.start)==null?void 0:g.map(E=>p(u(E))),(m=e.startAfter)==null?void 0:m.call(e)]),p("div",{class:"vp-navbar-center"},[(_=e.centerBefore)==null?void 0:_.call(e),(v=l.value.center)==null?void 0:v.map(E=>p(u(E))),(k=e.centerAfter)==null?void 0:k.call(e)]),p("div",{class:"vp-navbar-end"},[(b=e.endBefore)==null?void 0:b.call(e),(A=l.value.end)==null?void 0:A.map(E=>p(u(E))),(I=e.endAfter)==null?void 0:I.call(e),p(Mc,{active:r.value,onToggle:()=>{r.value=!r.value}})])]),p(m_,{show:r.value,onClose:()=>{r.value=!1}},{before:e.screenTop?()=>e.screenTop():null,after:e.screenBottom?()=>e.screenBottom():null})]}}}),k_=j({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(a){const t=Vt();return()=>Pa(a.config.link)?p($a,{class:["vp-sidebar-link","vp-sidebar-page",{active:kn(t,a.config,!0)}],exact:!0,config:a.config}):p("p",a,[p(Na,{icon:a.config.icon}),a.config.text])}}),A_=j({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(a,{emit:t}){const e=Vt(),s=y(()=>kn(e,a.config)),o=y(()=>kn(e,a.config,!0));return()=>{const{collapsible:r,children:i=[],icon:l,prefix:c,link:u,text:d}=a.config;return p("section",{class:"vp-sidebar-group"},[p(r?"button":"p",{class:["vp-sidebar-header",{clickable:r||u,exact:o.value,active:s.value}],...r?{type:"button",onClick:()=>t("toggle"),onKeydown:g=>{g.key==="Enter"&&t("toggle")}}:{}},[p(Na,{icon:l}),u?p($a,{class:"vp-sidebar-title",config:{text:d,link:u},noExternalLinkIcon:!0}):p("span",{class:"vp-sidebar-title"},d),r?p("span",{class:["vp-arrow",a.open?"down":"end"]}):null]),a.open||!r?p(Fc,{key:c,config:i}):null])}}}),Fc=j({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(a){const t=Vt(),e=X(-1),s=o=>{e.value=o===e.value?-1:o};return ua(()=>t.path,()=>{const o=a.config.findIndex(r=>bc(t,r));e.value=o},{immediate:!0,flush:"post"}),()=>p("ul",{class:"vp-sidebar-links"},a.config.map((o,r)=>p("li",o.type==="group"?p(A_,{config:o,open:r===e.value,onToggle:()=>s(r)}):p(k_,{config:o}))))}}),y_=j({name:"SideBar",slots:Object,setup(a,{slots:t}){const e=Vt(),s=hr(),o=xa();return fa(()=>{ua(()=>e.hash,r=>{const i=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${e.path}${r}"]`);if(!i)return;const{top:l,height:c}=o.value.getBoundingClientRect(),{top:u,height:d}=i.getBoundingClientRect();u<l?i.scrollIntoView(!0):u+d>l+c&&i.scrollIntoView(!1)},{immediate:!0})}),()=>{var r,i,l;return p("aside",{ref:o,key:"sidebar",id:"sidebar",class:"vp-sidebar"},[(r=t.top)==null?void 0:r.call(t),((i=t.default)==null?void 0:i.call(t))??p(Fc,{config:s.value}),(l=t.bottom)==null?void 0:l.call(t)])}}}),vr=j({name:"CommonWrapper",props:{containerClass:{type:String,default:""},noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(a,{slots:t}){const e=fe(),s=da(),o=kt(),r=ra(),{isMobile:i,isPC:l}=Mn(),c=Ga(),[u,d]=vn(!1),[g,m]=vn(!1),_=hr(),v=X(!1),k=y(()=>a.noNavbar||s.value.navbar===!1||r.value.navbar===!1?!1:!!(r.value.logo??r.value.repo??r.value.navbar)),b=y(()=>a.noSidebar?!1:s.value.sidebar!==!1&&_.value.length!==0&&!s.value.home),A=y(()=>s.value.externalLinkIcon??o.value.externalLinkIcon??!0),I=y(()=>!a.noToc&&!s.value.home&&(s.value.toc??r.value.toc??!0)),E={x:0,y:0},P=x=>{E.x=x.changedTouches[0].clientX,E.y=x.changedTouches[0].clientY},M=x=>{const O=x.changedTouches[0].clientX-E.x,W=x.changedTouches[0].clientY-E.y;Math.abs(O)>Math.abs(W)*1.5&&Math.abs(O)>40&&(O>0&&E.x<=80?d(!0):d(!1))};let C=0;return Ba("scroll",nm(()=>{const x=window.scrollY;x<=58||x<C?v.value=!1:C+200<x&&!u.value&&(v.value=!0),C=x},300,!0)),ua(i,x=>{x||d(!1)}),fa(()=>{const x=Gl(document.body);ua(u,W=>{x.value=W});const O=e.afterEach(()=>{d(!1)});je(()=>{x.value=!1,O()})}),()=>p(tt("GlobalEncrypt")?lt("GlobalEncrypt"):xs,()=>p("div",{class:["theme-container",{"hide-navbar":v.value,"no-navbar":!k.value,"sidebar-collapsed":!i.value&&!l.value&&g.value,"sidebar-open":i.value&&u.value,"no-sidebar":!b.value&&!t.sidebar&&!t.sidebarTop&&!t.sidebarBottom,"external-link-icon":A.value,pure:c.value,"has-toc":I.value},a.containerClass,s.value.containerClass??""],onTouchStart:P,onTouchEnd:M},[k.value?p(E_,{onToggleSidebar:()=>d()},{startBefore:t.navbarStartBefore?()=>t.navbarStartBefore():null,startAfter:t.navbarStartAfter?()=>t.navbarStartAfter():null,centerBefore:t.navbarCenterBefore?()=>t.navbarCenterBefore():null,centerAfter:t.navbarCenterAfter?()=>t.navbarCenterAfter():null,endBefore:t.navbarEndBefore?()=>t.navbarEndBefore():null,endAfter:t.navbarEndAfter?()=>t.navbarEndAfter():null,screenTop:t.navScreenTop?()=>t.navScreenTop():null,screenBottom:t.navScreenBottom?()=>t.navScreenBottom():null}):null,p(Yt,{name:"fade"},()=>u.value?p("div",{class:"vp-sidebar-mask",onClick:()=>d(!1)}):null),p(Yt,{name:"fade"},()=>i.value?null:p("div",{class:"toggle-sidebar-wrapper",onClick:()=>m()},p("span",{class:["arrow",g.value?"end":"start"]}))),p(y_,{},{default:t.sidebar?()=>t.sidebar():null,top:t.sidebarTop?()=>t.sidebarTop():null,bottom:t.sidebarBottom?()=>t.sidebarBottom():null}),t.default(),p(p_)]))}});const sa=j({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(a,{slots:t}){const e=o=>{o.style.transition=`transform ${a.duration}s ease-in-out ${a.delay}s, opacity ${a.duration}s ease-in-out ${a.delay}s`,o.style.transform="translateY(-20px)",o.style.opacity="0"},s=o=>{o.style.transform="translateY(0)",o.style.opacity="1"};return()=>{const o={name:"drop",appear:a.appear,onAppear:e,onAfterAppear:s,onEnter:e,onAfterEnter:s,onBeforeLeave:e},r=()=>t.default();return a.type==="group"?p(zu,o,r):p(Yt,o,r)}}}),Ve=({custom:a})=>p(Ll,{class:["theme-hope-content",{custom:a}]});Ve.displayName="MarkdownContent",Ve.props={custom:Boolean};const jc=()=>p(ga,{name:"author"},()=>p("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));jc.displayName="AuthorIcon";const Nc=()=>p(ga,{name:"calendar"},()=>p("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));Nc.displayName="CalendarIcon";const Hc=()=>p(ga,{name:"category"},()=>p("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Hc.displayName="CategoryIcon";const Uc=()=>p(ga,{name:"print"},()=>p("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));Uc.displayName="PrintIcon";const Kc=()=>p(ga,{name:"tag"},()=>p("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Kc.displayName="TagIcon";const Gc=()=>p(ga,{name:"timer"},()=>p("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));Gc.displayName="TimerIcon";const Wc=()=>p(ga,{name:"word"},()=>[p("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),p("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);Wc.displayName="WordIcon";const oe=()=>{const a=ra();return y(()=>a.value.metaLocales)};var I_=j({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0}},setup(a){const t=oe(),e=Ga();return()=>a.author.length?p("span",{class:"page-author-info","aria-label":`${t.value.author}${e.value?"":"🖊"}`,...e.value?{}:{"data-balloon-pos":"up"}},[p(jc),p("span",a.author.map(s=>s.url?p("a",{class:"page-author-item",href:s.url,target:"_blank",rel:"noopener noreferrer"},s.name):p("span",{class:"page-author-item"},s.name))),p("span",{property:"author",content:a.author.map(s=>s.name).join(", ")})]):null}}),b_=j({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0}},setup(a){const t=oe(),e=Ee(),s=Ga();return()=>a.category.length?p("span",{class:"page-category-info","aria-label":`${t.value.category}${s.value?"":"🌈"}`,...s.value?{}:{"data-balloon-pos":"up"}},[p(Hc),a.category.map(({name:o,path:r})=>p("span",{class:["page-category-item",{[`color${Vn(o,Number(se.colorNumber))}`]:!s.value,clickable:r}],role:r?"navigation":"",onClick:()=>{r&&e(r)}},o)),p("meta",{property:"articleSection",content:a.category.map(({name:o})=>o).join(",")})]):null}}),S_=j({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""}},setup(a){const t=Pl(),e=oe(),s=Ga();return()=>a.date?p("span",{class:"page-date-info","aria-label":`${e.value.date}${s.value?"":"📅"}`,...s.value?{}:{"data-balloon-pos":"up"}},[p(Nc),p("span",p(Ts,()=>a.localizedDate||a.date.toLocaleDateString(t.value))),p("meta",{property:"datePublished",content:a.date.toISOString()||""})]):null}}),P_=j({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(a){const t=oe();return()=>a.isOriginal?p("span",{class:"page-original-info"},t.value.origin):null}}),D_=j({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(a){const t=oe(),e=Ga(),s=y(()=>{if(!a.readingTime)return null;const{minutes:o}=a.readingTime;return o<1?"PT1M":`PT${Math.round(o)}M`});return()=>{var o,r;return(o=a.readingTimeLocale)!=null&&o.time?p("span",{class:"page-reading-time-info","aria-label":`${t.value.readingTime}${e.value?"":"⌛"}`,...e.value?{}:{"data-balloon-pos":"up"}},[p(Gc),p("span",(r=a.readingTimeLocale)==null?void 0:r.time),p("meta",{property:"timeRequired",content:s.value})]):null}}}),T_=j({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]}},setup(a){const t=oe(),e=Ee(),s=Ga();return()=>a.tag.length?p("span",{class:"page-tag-info","aria-label":`${t.value.tag}${s.value?"":"🏷"}`,...s.value?{}:{"data-balloon-pos":"up"}},[p(Kc),a.tag.map(({name:o,path:r})=>p("span",{class:["page-tag-item",{[`color${Vn(o,Number(se.colorNumber))}`]:!s.value,clickable:r}],role:r?"navigation":"",onClick:()=>{r&&e(r)}},o)),p("meta",{property:"keywords",content:a.tag.map(({name:o})=>o).join(",")})]):null}}),L_=j({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(a){const t=oe(),e=Ga();return()=>{var s,o,r;return(s=a.readingTimeLocale)!=null&&s.words?p("span",{class:"page-word-info","aria-label":`${t.value.words}${e.value?"":"🔠"}`,...e.value?{}:{"data-balloon-pos":"up"}},[p(Wc),p("span",(o=a.readingTimeLocale)==null?void 0:o.words),p("meta",{property:"wordCount",content:(r=a.readingTime)==null?void 0:r.words})]):null}}}),zc=j({name:"PageInfo",components:{AuthorInfo:I_,CategoryInfo:b_,DateInfo:S_,OriginalInfo:P_,PageViewInfo:ls,ReadingTimeInfo:D_,TagInfo:T_,WordInfo:L_},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(a){const t=Ga();return()=>a.items?p("div",{class:"page-info"},a.items.map(e=>p(lt(`${e}Info`),{...a.info,isPure:t.value}))):null}}),x_=j({name:"PrintButton",setup(){const a=kt(),t=ra();return()=>a.value.print===!1?null:p("button",{type:"button",class:"print-button",title:t.value.metaLocales.print,onClick:()=>{window.print()}},p(Uc))}}),$c=j({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},slots:Object,setup(a,{slots:t}){const e=Vt(),s=Aa(),o=oe(),[r,i]=vn(),l=xa(),c=X("-1.7rem"),u=g=>{var m;(m=l.value)==null||m.scrollTo({top:g,behavior:"smooth"})},d=()=>{if(l.value){const g=document.querySelector(".vp-toc-item.active");g?c.value=`${g.getBoundingClientRect().top-l.value.getBoundingClientRect().top+l.value.scrollTop}px`:c.value="-1.7rem"}else c.value="-1.7rem"};return fa(()=>{ua(()=>e.hash,g=>{if(l.value){const m=document.querySelector(`#toc a.vp-toc-link[href$="${g}"]`);if(!m)return;const{top:_,height:v}=l.value.getBoundingClientRect(),{top:k,height:b}=m.getBoundingClientRect();k<_?u(l.value.scrollTop+k-_):k+b>_+v&&u(l.value.scrollTop+k+b-_-v)}}),ua(()=>e.fullPath,d,{flush:"post",immediate:!0})}),()=>{var v,k;const g=({title:b,level:A,slug:I})=>p(Ta,{to:`#${I}`,class:["vp-toc-link",`level${A}`],onClick:()=>{i()}},()=>b),m=(b,A)=>b.length&&A>0?p("ul",{class:"vp-toc-list"},b.map(I=>{const E=m(I.children,A-1);return[p("li",{class:["vp-toc-item",{active:e.hash===`#${I.slug}`}]},g(I)),E?p("li",E):null]})):null,_=a.items.length?m(a.items,a.headerDepth):s.value.headers?m(s.value.headers,a.headerDepth):null;return _?p("div",{class:"vp-toc-placeholder"},[p("aside",{id:"toc"},[(v=t.before)==null?void 0:v.call(t),p("div",{class:"vp-toc-header",onClick:()=>{i()}},[o.value.toc,p(x_),p("div",{class:["arrow",r.value?"down":"end"]})]),p("div",{class:["vp-toc-wrapper",r.value?"open":""],ref:l},[_,p("div",{class:"vp-toc-marker",style:{top:c.value}})]),(k=t.after)==null?void 0:k.call(t)])]):null}}}),fr=j({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(a){const t=Aa(),e=ra(),s=xa(),o=({target:r})=>{const i=document.querySelector(r.hash);if(i){const l=()=>{i.removeAttribute("tabindex"),i.removeEventListener("blur",l)};i.setAttribute("tabindex","-1"),i.addEventListener("blur",l),i.focus(),window.scrollTo(0,0)}};return fa(()=>{ua(()=>t.value.path,()=>s.value.focus())}),()=>[p("span",{ref:s,tabindex:"-1"}),p("a",{href:`#${a.content}`,class:"vp-skip-link sr-only",onClick:o},e.value.routeLocales.skipToContent)]}});let so=null,ze=null;const Lo={wait:()=>so,pending:()=>{so=new Promise(a=>{ze=a})},resolve:()=>{ze==null||ze(),so=null,ze=null}},Er=(a,{slots:t})=>p(Yt,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:Lo.resolve,onBeforeLeave:Lo.pending},()=>t.default());Er.displayName="FadeSlideY";const R_=(a,t)=>{const e=a.replace(t,"/").split("/"),s=[];let o=sr(t);return e.forEach((r,i)=>{i!==e.length-1?(o+=`${r}/`,s.push({link:o,name:r||"Home"})):r!==""&&(o+=r,s.push({link:o,name:r}))}),s},xo=(a,{slots:t})=>{var g,m;const{bgImage:e,bgImageDark:s,bgImageStyle:o,color:r,description:i,image:l,imageDark:c,header:u,features:d=[]}=a;return p("div",{class:"vp-feature-wrapper"},[e?p("div",{class:["vp-feature-bg",{light:s}],style:[{"background-image":`url(${e})`},o]}):null,s?p("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${s})`},o]}):null,p("div",{class:"vp-feature",style:r?{color:r}:{}},[((g=t.image)==null?void 0:g.call(t,a))??[l?p("img",{class:["vp-feature-image",{light:c}],src:ha(l),alt:""}):null,c?p("img",{class:"vp-feature-image dark",src:ha(c),alt:""}):null],((m=t.info)==null?void 0:m.call(t,a))??[u?p("h2",{class:"vp-feature-header"},u):null,i?p("p",{class:"vp-feature-description",innerHTML:i}):null],d.length?p("div",{class:"vp-features"},d.map(({icon:_,title:v,details:k,link:b})=>{const A=[p("h3",{class:"vp-feature-title"},[p(Na,{icon:_}),p("span",{innerHTML:v})]),p("p",{class:"vp-feature-details",innerHTML:k})];return b?bs(b)?p("a",{class:"vp-feature-item link",href:b,"aria-label":v,target:"_blank"},A):p(Ta,{class:"vp-feature-item link",to:b,"aria-label":v},()=>A):p("div",{class:"vp-feature-item"},A)})):null])])};xo.displayName="FeaturePanel";var O_=j({name:"HeroInfo",slots:Object,setup(a,{slots:t}){const e=da(),s=xn(),o=y(()=>e.value.heroFullScreen??!1),r=y(()=>{const{heroText:u,tagline:d}=e.value;return{text:u??s.value.title??"Hello",tagline:d??s.value.description??"",isFullScreen:o.value}}),i=y(()=>{const{heroText:u,heroImage:d,heroImageDark:g,heroAlt:m,heroImageStyle:_}=e.value;return{image:d?ha(d):null,imageDark:g?ha(g):null,imageStyle:_,alt:m??u??"",isFullScreen:o.value}}),l=y(()=>{const{bgImage:u,bgImageDark:d,bgImageStyle:g}=e.value;return{image:Pa(u)?ha(u):null,imageDark:Pa(d)?ha(d):null,bgStyle:g,isFullScreen:o.value}}),c=y(()=>e.value.actions??[]);return()=>{var u,d,g;return p("header",{class:["vp-hero-info-wrapper",{fullscreen:o.value}]},[((u=t.bg)==null?void 0:u.call(t,l.value))??[l.value.image?p("div",{class:["vp-hero-mask",{light:l.value.imageDark}],style:[{"background-image":`url(${l.value.image})`},l.value.bgStyle]}):null,l.value.imageDark?p("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${l.value.imageDark})`},l.value.bgStyle]}):null],p("div",{class:"vp-hero-info"},[((d=t.logo)==null?void 0:d.call(t,i.value))??p(sa,{appear:!0,type:"group"},()=>{const{image:m,imageDark:_,imageStyle:v,alt:k}=i.value;return[m?p("img",{key:"light",class:["vp-hero-image",{light:_}],style:v,src:m,alt:k}):null,_?p("img",{key:"dark",class:"vp-hero-image dark",style:v,src:_,alt:k}):null]}),((g=t.info)==null?void 0:g.call(t,r.value))??p("div",{class:"vp-hero-infos"},[r.value.text?p(sa,{appear:!0,delay:.04},()=>p("h1",{id:"main-title",class:"vp-hero-title"},r.value.text)):null,r.value.tagline?p(sa,{appear:!0,delay:.08},()=>p("p",{id:"main-description",innerHTML:r.value.tagline})):null,c.value.length?p(sa,{appear:!0,delay:.12},()=>p("p",{class:"vp-hero-actions"},c.value.map(m=>p($a,{class:["vp-hero-action",m.type??"default"],config:m,noExternalLinkIcon:!0},m.icon?{before:()=>p(Na,{icon:m.icon})}:{})))):null])])])}}});const qc=(a,{slots:t})=>{var m,_,v;const{bgImage:e,bgImageDark:s,bgImageStyle:o,color:r,description:i,image:l,imageDark:c,header:u,highlights:d=[],type:g="un-order"}=a;return p("div",{class:"vp-highlight-wrapper",style:r?{color:r}:{}},[e?p("div",{class:["vp-highlight-bg",{light:s}],style:[{"background-image":`url(${e})`},o]}):null,s?p("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${s})`},o]}):null,p("div",{class:"vp-highlight"},[((m=t.image)==null?void 0:m.call(t,a))??[l?p("img",{class:["vp-highlight-image",{light:c}],src:ha(l),alt:""}):null,c?p("img",{class:"vp-highlight-image dark",src:ha(c),alt:""}):null],((_=t.info)==null?void 0:_.call(t,a))??[p("div",{class:"vp-highlight-info-wrapper"},p("div",{class:"vp-highlight-info"},[u?p("h2",{class:"vp-highlight-header",innerHTML:u}):null,i?p("p",{class:"vp-highlight-description",innerHTML:i}):null,((v=t.highlights)==null?void 0:v.call(t,d))??p(g==="order"?"ol":g==="no-order"?"dl":"ul",{class:"vp-highlights"},d.map(({icon:k,title:b,details:A,link:I})=>{const E=[p(g==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[k?p(Na,{class:"vp-highlight-icon",icon:k}):null,p("span",{innerHTML:b})]),A?p(g==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:A}):null];return p(g==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:I}]},I?bs(I)?p("a",{class:"vp-highlight-item link",href:I,"aria-label":b,target:"_blank"},E):p(Ta,{class:"vp-highlight-item link",to:I,"aria-label":b},()=>E):p("div",{class:"vp-highlight-item"},E))}))]))]])])};qc.displayName="HighlightPanel";var J_=j({name:"HomePage",slots:Object,setup(a,{slots:t}){const e=da(),s=y(()=>{const{features:r}=e.value;return bo(r)?r:null}),o=y(()=>{const{highlights:r}=e.value;return bo(r)?r:null});return()=>{var r,i,l,c;return p("main",{id:"main-content",class:"vp-page vp-project-home","aria-labelledby":e.value.heroText===null?"":"main-title"},[(r=t.top)==null?void 0:r.call(t),p(O_),((i=o.value)==null?void 0:i.map(u=>"features"in u?p(xo,u):p(qc,u)))??(s.value?p(sa,{appear:!0,delay:.24},()=>p(xo,{features:s.value})):null),(l=t.center)==null?void 0:l.call(t),p(sa,{appear:!0,delay:.32},()=>p(Ve)),(c=t.bottom)==null?void 0:c.call(t)])}}}),C_=j({name:"BreadCrumb",setup(){const a=Aa(),t=ne(),e=da(),s=ra(),o=xa([]),r=y(()=>(e.value.breadcrumb??s.value.breadcrumb??!0)&&o.value.length>1),i=y(()=>e.value.breadcrumbIcon??s.value.breadcrumbIcon??!0),l=()=>{const c=R_(a.value.path,t.value).map(({link:u,name:d})=>{const{path:g,meta:m,notFound:_}=Pt(u);return _||m[za.breadcrumbExclude]?null:{title:m[za.shortTitle]||m[za.title]||d,icon:m[za.icon],path:g}}).filter(u=>u!==null);c.length>1&&(o.value=c)};return fa(()=>{ua(()=>a.value.path,l,{immediate:!0})}),()=>p("nav",{class:["vp-breadcrumb",{disable:!r.value}]},r.value?p("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},o.value.map((c,u)=>p("li",{class:{"is-active":o.value.length-1===u},property:"itemListElement",typeof:"ListItem"},[p(Ta,{to:c.path,property:"item",typeof:"WebPage"},()=>[i.value?p(Na,{icon:c.icon}):null,p("span",{property:"name"},c.title||"Unknown")]),p("meta",{property:"position",content:u+1})]))):[])}});const qi=(a,t)=>a===!1||Ne(a)?a:Pa(a)?_r(a,!0,t):null,Ro=(a,t,e)=>{const s=a.findIndex(o=>o.link===t);if(s!==-1){const o=a[s+e];return o!=null&&o.link?o:null}for(const o of a)if("children"in o){const r=Ro(o.children,t,e);if(r)return r}return null};var B_=j({name:"PageNav",setup(){const a=ra(),t=da(),e=hr(),s=Aa(),o=Ee(),r=Vt(),i=y(()=>{const c=qi(t.value.prev,r.path);return c===!1?null:c||(a.value.prevLink===!1?null:Ro(e.value,s.value.path,-1))}),l=y(()=>{const c=qi(t.value.next,r.path);return c===!1?null:c??(a.value.nextLink===!1?null:Ro(e.value,s.value.path,1))});return Ba("keydown",c=>{c.altKey&&(c.key==="ArrowRight"?l.value&&(o(l.value.link),c.preventDefault()):c.key==="ArrowLeft"&&i.value&&(o(i.value.link),c.preventDefault()))}),()=>i.value||l.value?p("nav",{class:"vp-page-nav"},[i.value?p($a,{class:"prev",config:i.value},()=>{var c,u;return[p("div",{class:"hint"},[p("span",{class:"arrow start"}),a.value.metaLocales.prev]),p("div",{class:"link"},[p(Na,{icon:(c=i.value)==null?void 0:c.icon}),(u=i.value)==null?void 0:u.text])]}):null,l.value?p($a,{class:"next",config:l.value},()=>{var c,u;return[p("div",{class:"hint"},[a.value.metaLocales.next,p("span",{class:"arrow end"})]),p("div",{class:"link"},[(c=l.value)==null?void 0:c.text,p(Na,{icon:(u=l.value)==null?void 0:u.icon})])]}):null]):null}});const w_=()=>{const a=ra(),t=Aa(),e=da();return y(()=>{var s;return e.value.contributors??a.value.contributors??!0?((s=t.value.git)==null?void 0:s.contributors)??null:null})},V_={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},M_=({docsRepo:a,docsBranch:t,docsDir:e,filePathRelative:s,editLinkPattern:o})=>{if(!s)return null;const r=dr(a);let i;return o?i=o:r!==null&&(i=V_[r]),i?i.replace(/:repo/u,ee(a)?a:`https://github.com/${a}`).replace(/:branch/u,t).replace(/:path/u,_l(`${sr(e)}/${s}`)):null},F_=()=>{const a=ra(),t=Aa(),e=da();return y(()=>{const{repo:s,docsRepo:o=s,docsBranch:r="main",docsDir:i="",editLink:l,editLinkPattern:c=""}=a.value;if(!(e.value.editLink??l??!0)||!o)return null;const u=M_({docsRepo:o,docsBranch:r,docsDir:i,editLinkPattern:c,filePathRelative:t.value.filePathRelative});return u?{text:a.value.metaLocales.editLink,link:u}:null})},j_=()=>{const a=xn(),t=ra(),e=Aa(),s=da();return y(()=>{var o,r;return!(s.value.lastUpdated??t.value.lastUpdated??!0)||!((o=e.value.git)!=null&&o.updatedTime)?null:new Date((r=e.value.git)==null?void 0:r.updatedTime).toLocaleString(a.value.lang)})};var N_=j({name:"PageTitle",setup(){const a=Aa(),t=da(),e=ra(),{info:s,items:o}=a_();return()=>p("div",{class:"vp-page-title"},[p("h1",[e.value.titleIcon===!1?null:p(Na,{icon:t.value.icon}),a.value.title]),p(zc,{info:s.value,...o.value===null?{}:{items:o.value}}),p("hr")])}});const Qc=()=>p(ga,{name:"edit"},()=>[p("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),p("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);Qc.displayName="EditIcon";var H_=j({name:"PageMeta",setup(){const a=ra(),t=F_(),e=j_(),s=w_();return()=>{var r;const{metaLocales:o}=a.value;return p("footer",{class:"vp-page-meta"},[t.value?p("div",{class:"vp-meta-item edit-link"},p($a,{class:"vp-meta-label",config:t.value},{before:()=>p(Qc)})):null,p("div",{class:"vp-meta-item git-info"},[e.value?p("div",{class:"update-time"},[p("span",{class:"vp-meta-label"},`${o.lastUpdated}: `),p(Ts,()=>p("span",{class:"vp-meta-info"},e.value))]):null,(r=s.value)!=null&&r.length?p("div",{class:"contributors"},[p("span",{class:"vp-meta-label"},`${o.contributors}: `),s.value.map(({email:i,name:l},c)=>[p("span",{class:"vp-meta-info",title:`email: ${i}`},l),c!==s.value.length-1?",":""])]):null])])}}}),U_=j({name:"NormalPage",slots:Object,setup(a,{slots:t}){const e=da(),{isDarkmode:s}=Fn(),o=ra(),r=y(()=>e.value.toc??o.value.toc??!0),i=y(()=>e.value.headerDepth??o.value.headerDepth??2);return()=>p("main",{id:"main-content",class:"vp-page"},p(tt("LocalEncrypt")?lt("LocalEncrypt"):xs,()=>{var l,c,u,d;return[(l=t.top)==null?void 0:l.call(t),e.value.cover?p("div",{class:"page-cover"},p("img",{src:ha(e.value.cover),alt:"","no-view":""})):null,p(C_),p(N_),r.value?p($c,{headerDepth:i.value},{before:t.tocBefore?()=>t.tocBefore():null,after:t.tocAfter?()=>t.tocAfter():null}):null,(c=t.contentBefore)==null?void 0:c.call(t),p(Ve),(u=t.contentAfter)==null?void 0:u.call(t),p(H_),p(B_),tt("CommentService")?p(lt("CommentService"),{darkmode:s.value}):null,(d=t.bottom)==null?void 0:d.call(t)]}))}}),K_=j({name:"PortfolioHero",slots:Object,setup(a,{slots:t}){const e=Ac(),s=da(),o=X(0),r=y(()=>{var m;return((m=s.value.titles)==null?void 0:m[o.value])??""}),i=X(""),l=y(()=>{const{name:m,avatar:_,avatarDark:v,avatarAlt:k,avatarStyle:b}=s.value;return{name:m??e.value.name,avatar:_?ha(_):null,avatarDark:v?ha(v):null,avatarStyle:b,alt:(k||m)??""}}),c=y(()=>{const{bgImage:m,bgImageDark:_,bgImageStyle:v}=s.value;return{image:Pa(m)?ha(m):null,imageDark:Pa(_)?ha(_):null,bgStyle:v}}),u=y(()=>{const{welcome:m,name:_,titles:v,medias:k}=s.value;return{name:_??e.value.name,welcome:m??"👋 Hi There, I'm",title:i.value,titles:v??[],medias:k??[]}}),d=()=>{i.value="";let m=0,_=!1;const v=async()=>{if(!_)if(i.value+=r.value[m],m+=1,await Bt(),m<r.value.length)setTimeout(()=>{v()},150);else{const k=u.value.titles.length;setTimeout(()=>{o.value=k<=1||o.value===u.value.titles.length-1?0:o.value+1},1e3)}};return v(),()=>{_=!0}};let g;return fa(()=>{ua(r,()=>{g==null||g(),g=d()},{immediate:!0})}),()=>{var m,_,v;return p("section",{id:"portfolio",class:["vp-portfolio",{bg:c.value.image}]},[((m=t.bg)==null?void 0:m.call(t,c.value))??[c.value.image?p("div",{class:["vp-portfolio-mask",{light:c.value.imageDark}],style:[{background:`url(${c.value.image}) center/cover no-repeat`},c.value.bgStyle]}):null,c.value.imageDark?p("div",{class:"vp-portfolio-mask dark",style:[{background:`url(${c.value.imageDark}) center/cover no-repeat`},c.value.bgStyle]}):null],((_=t.avatar)==null?void 0:_.call(t,l.value))??p("div",{class:"vp-portfolio-avatar"},[p(sa,{delay:.04},()=>{const{avatarDark:k,name:b,alt:A,avatarStyle:I}=l.value;return[p("img",{key:"light",class:{light:k},src:l.value.avatar,title:b,alt:A,style:I}),k?p("img",{key:"dark",class:"dark",src:k,title:b,alt:A,style:I}):null]})]),p("div",{class:"vp-portfolio-container"},((v=t.info)==null?void 0:v.call(t,u.value))??p("div",{class:"vp-portfolio-info"},[p(sa,{appear:!0,delay:.08},()=>p("h6",{class:"vp-portfolio-welcome"},u.value.welcome)),p(sa,{appear:!0,delay:.12},()=>p("h1",{class:"vp-portfolio-name",id:"main-title"},u.value.name)),p(sa,{appear:!0,delay:.16},()=>p("h2",{class:"vp-portfolio-title"},i.value)),p(sa,{appear:!0,delay:.2},()=>u.value.medias.length?p("div",{class:"vp-portfolio-medias"},u.value.medias.map(({name:k,url:b,icon:A})=>p("a",{class:"vp-portfolio-media",href:b,rel:"noopener noreferrer",target:"_blank",title:k},p(Na,{icon:A})))):tt("SocialMedias")?p(lt("SocialMedias")):null)]))])}}}),G_=j({name:"PortfolioHome",setup(){const a=da(),t=y(()=>a.value.content??"portfolio");return()=>p("main",{id:"main-content",class:"vp-page vp-portfolio-home","aria-labelledby":"main-title"},[p(K_),t.value==="none"?null:p("div",{},p(sa,{appear:!0,delay:.24},()=>p(Ve,{class:{"vp-portfolio-content":t.value==="portfolio"}})))])}}),W_=j({name:"Layout",slots:Object,setup(a,{slots:t}){const e=kt(),s=ra(),o=Aa(),r=da(),i=Ga(),{isMobile:l}=Mn(),c=y(()=>{var u,d;return((u=s.value.blog)==null?void 0:u.sidebarDisplay)??((d=e.value.blog)==null?void 0:d.sidebarDisplay)??"mobile"});return()=>[p(fr),p(vr,{},{default:()=>{var u;return((u=t.default)==null?void 0:u.call(t))??(r.value.portfolio?p(G_):r.value.home?p(J_):p(i.value?xs:Er,()=>p(U_,{key:o.value.path},{top:t.top?()=>t.top():null,bottom:t.bottom?()=>t.bottom():null,contentBefore:t.contentBefore?()=>t.contentBefore():null,contentAfter:t.contentAfter?()=>t.contentAfter():null,tocBefore:t.tocBefore?()=>t.tocBefore():null,tocAfter:t.tocAfter?()=>t.tocAfter():null})))},navScreenBottom:c.value==="none"?()=>p(lt("BloggerInfo")):null,sidebar:!l.value&&c.value==="always"?()=>p(lt("BloggerInfo")):null})]}}),z_=j({name:"NotFoundHint",setup(){const a=ra(),t=()=>{const e=a.value.routeLocales.notFoundMsg;return e[Math.floor(Math.random()*e.length)]};return()=>p("div",{class:"not-found-hint"},[p("p",{class:"error-code"},"404"),p("h1",{class:"error-title"},a.value.routeLocales.notFoundTitle),p("p",{class:"error-hint"},t())])}}),$_=j({name:"NotFound",slots:Object,setup(a,{slots:t}){const e=fe(),s=ne(),o=ra();return()=>[p(fr),p(vr,{noSidebar:!0},()=>{var r;return p("main",{id:"main-content",class:"vp-page not-found"},((r=t.default)==null?void 0:r.call(t))??[p(z_),p("div",{class:"actions"},[p("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},o.value.routeLocales.back),p("button",{type:"button",class:"action-button",onClick:()=>{e.push(o.value.home??s.value)}},o.value.routeLocales.home)])])})]}});const q_={Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>'},Q_={category:{"/":{path:"/category/",map:{Java:{path:"/category/java/",indexes:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284]},gRPC:{path:"/category/grpc/",indexes:[285,286,247,272]},PostgreSQL:{path:"/category/postgresql/",indexes:[287]},MacOS:{path:"/category/macos/",indexes:[287]},"Spring Boot":{path:"/category/spring-boot/",indexes:[288,285,289,290,291,292,293,294,185,210,295,296,254,297,298]},JUnit:{path:"/category/junit/",indexes:[71,289]},数字处理:{path:"/category/%E6%95%B0%E5%AD%97%E5%A4%84%E7%90%86/",indexes:[132]},Jackson:{path:"/category/jackson/",indexes:[107,139]},Netty:{path:"/category/netty/",indexes:[299]},编程:{path:"/category/%E7%BC%96%E7%A8%8B/",indexes:[3,5,300,17,18,20,21,22,24,26,30,34,36,45,52,54,58,60,61,75,80,86,94,98,100,105,301,124,125,127,135,137,147,172,189,198,207,213,214,218,220,221,223,230,232,236,239,246,265,267,274,299]},"Apache Kafka":{path:"/category/apache-kafka/",indexes:[302,292]},"GroupId vs ConsumerId":{path:"/category/groupid-vs-consumerid/",indexes:[302]},Spring:{path:"/category/spring/",indexes:[303,304,305,143,156,306,169,307,181,187,194,295,233,308,309,310,311]},"REST Docs":{path:"/category/rest-docs/",indexes:[305]},数据结构:{path:"/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",indexes:[49,133]},算法:{path:"/category/%E7%AE%97%E6%B3%95/",indexes:[120,123,129,134,152,178]},"String Manipulation":{path:"/category/string-manipulation/",indexes:[106,108,112,161]},Gson:{path:"/category/gson/",indexes:[109,128]},AWS:{path:"/category/aws/",indexes:[136,203]},教程:{path:"/category/%E6%95%99%E7%A8%8B/",indexes:[51,110]},GraphQL:{path:"/category/graphql/",indexes:[111]},"REST with Spring Boot":{path:"/category/rest-with-spring-boot/",indexes:[312,313,314,315,316]},"Learn Spring Security":{path:"/category/learn-spring-security/",indexes:[312,313,314,316]},"Spring Security":{path:"/category/spring-security/",indexes:[317,291,318,319]},"Spring Data JPA":{path:"/category/spring-data-jpa/",indexes:[320,321,44,322,323,324,325,326,327,328,329,330]},"Query Optimization":{path:"/category/query-optimization/",indexes:[325]},Kotlin:{path:"/category/kotlin/",indexes:[331,300,332,59,333,334,301,335,336,337,338,339,340,341,342,343,344,345,346,347,307,348]},Serialization:{path:"/category/serialization/",indexes:[138]},JPA:{path:"/category/jpa/",indexes:[320,323,326,349,350,351,352,329,311,353]},数据库视图:{path:"/category/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%86%E5%9B%BE/",indexes:[324]},"Software Engineering":{path:"/category/software-engineering/",indexes:[354,355]},Testing:{path:"/category/testing/",indexes:[23,355,306,356,357,200,358,260,298]},etcd:{path:"/category/etcd/",indexes:[113]},Hibernate:{path:"/category/hibernate/",indexes:[359,360,361,322,167,349,352,353]},SoftDelete:{path:"/category/softdelete/",indexes:[361]},"Apache Camel":{path:"/category/apache-camel/",indexes:[114,362]},Base64:{path:"/category/base64/",indexes:[115]},"String Algorithms":{path:"/category/string-algorithms/",indexes:[116]},字符串:{path:"/category/%E5%AD%97%E7%AC%A6%E4%B8%B2/",indexes:[41,117]},Tutorial:{path:"/category/tutorial/",indexes:[363,118]},CompletableFuture:{path:"/category/completablefuture/",indexes:[119,121]},"Date-Time":{path:"/category/date-time/",indexes:[76]},Concurrency:{path:"/category/concurrency/",indexes:[1,37,77,192,226]},网络编程:{path:"/category/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",indexes:[78]},编程技巧:{path:"/category/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/",indexes:[46,88,122]},Algorithm:{path:"/category/algorithm/",indexes:[79,204,205,252]},Pagination:{path:"/category/pagination/",indexes:[290]},Thymeleaf:{path:"/category/thymeleaf/",indexes:[303]},"JUnit 5":{path:"/category/junit-5/",indexes:[364]},Mockito:{path:"/category/mockito/",indexes:[364,356,170,257]},OpenJDK:{path:"/category/openjdk/",indexes:[365]},Windows:{path:"/category/windows/",indexes:[365]},OpenGrok:{path:"/category/opengrok/",indexes:[366]},代码搜索:{path:"/category/%E4%BB%A3%E7%A0%81%E6%90%9C%E7%B4%A2/",indexes:[366]},AOP:{path:"/category/aop/",indexes:[304]},Arrays:{path:"/category/arrays/",indexes:[126]},"Spring Cloud":{path:"/category/spring-cloud/",indexes:[367]},OAuth2:{path:"/category/oauth2/",indexes:[367]},JDBC:{path:"/category/jdbc/",indexes:[81]},Programming:{path:"/category/programming/",indexes:[2,8,10,28,42,68,73,333,334,335,166,337,338,340,343,345,347,175,177,193,202,229,240,244,263,271]},Quarkus:{path:"/category/quarkus/",indexes:[82]},Maven:{path:"/category/maven/",indexes:[368,369,83,93,370]},"Web Server":{path:"/category/web-server/",indexes:[281]},UUID:{path:"/category/uuid/",indexes:[84]},URL编码:{path:"/category/url%E7%BC%96%E7%A0%81/",indexes:[85]},Kafka:{path:"/category/kafka/",indexes:[371,288,130,131,372,373,309]},"Spring Batch":{path:"/category/spring-batch/",indexes:[87]},"Apache POI":{path:"/category/apache-poi/",indexes:[374]},Excel:{path:"/category/excel/",indexes:[374,145]},日期转换:{path:"/category/%E6%97%A5%E6%9C%9F%E8%BD%AC%E6%8D%A2/",indexes:[89]},日期时间:{path:"/category/%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4/",indexes:[90]},XMLGregorianCalendar:{path:"/category/xmlgregoriancalendar/",indexes:[91]},Unicode:{path:"/category/unicode/",indexes:[70,92]},WebFlux:{path:"/category/webflux/",indexes:[9,308,310]},构建工具:{path:"/category/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/",indexes:[368]},SSL:{path:"/category/ssl/",indexes:[53]},Microservices:{path:"/category/microservices/",indexes:[375,376]},"Event-Driven Architecture":{path:"/category/event-driven-architecture/",indexes:[375]},"Spring Modulith":{path:"/category/spring-modulith/",indexes:[377]},"Event Externalization":{path:"/category/event-externalization/",indexes:[377]},SecureRandom:{path:"/category/securerandom/",indexes:[95]},编码:{path:"/category/%E7%BC%96%E7%A0%81/",indexes:[96]},Kubernetes:{path:"/category/kubernetes/",indexes:[65,378]},Networking:{path:"/category/networking/",indexes:[378]},Spock:{path:"/category/spock/",indexes:[56,97,151]},"Spring JPA":{path:"/category/spring-jpa/",indexes:[360,379]},"Backend Java/Spring Team Lead":{path:"/category/backend-javaspring-team-lead/",indexes:[380]},"Remote Job":{path:"/category/remote-job/",indexes:[380]},Web开发:{path:"/category/web%E5%BC%80%E5%8F%91/",indexes:[99]},多线程:{path:"/category/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",indexes:[101]},正则表达式:{path:"/category/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",indexes:[102,275]},ListIterator:{path:"/category/listiterator/",indexes:[55]},数据压缩:{path:"/category/%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/",indexes:[74]},"Environment Variables":{path:"/category/environment-variables/",indexes:[103]},内存管理:{path:"/category/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/",indexes:[381,104]},"Morse Code":{path:"/category/morse-code/",indexes:[57]},OAuth:{path:"/category/oauth/",indexes:[317]},"2D Geometry":{path:"/category/2d-geometry/",indexes:[27]},"Joda-Time":{path:"/category/joda-time/",indexes:[62]},BigDecimal:{path:"/category/bigdecimal/",indexes:[0,63,64,197]},"Reactive APIs":{path:"/category/reactive-apis/",indexes:[382]},Micronaut:{path:"/category/micronaut/",indexes:[382]},MongoDB:{path:"/category/mongodb/",indexes:[382,237]},JVM:{path:"/category/jvm/",indexes:[29,381]},垃圾收集器:{path:"/category/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/",indexes:[31]},"Spring MVC":{path:"/category/spring-mvc/",indexes:[66]},"Apache Calcite":{path:"/category/apache-calcite/",indexes:[363]},Postman:{path:"/category/postman/",indexes:[67]},"Spring AI":{path:"/category/spring-ai/",indexes:[383]},Baeldung:{path:"/category/baeldung/",indexes:[383]},"Spring Cloud AWS":{path:"/category/spring-cloud-aws/",indexes:[384]},"SQS Integration":{path:"/category/sqs-integration/",indexes:[384]},"Stream API":{path:"/category/stream-api/",indexes:[32,144]},HTTPS:{path:"/category/https/",indexes:[369]},PriorityQueue:{path:"/category/priorityqueue/",indexes:[69,227]},输入处理:{path:"/category/%E8%BE%93%E5%85%A5%E5%A4%84%E7%90%86/",indexes:[50]},字符串操作:{path:"/category/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/",indexes:[48,231]},"Spring WebFlux":{path:"/category/spring-webflux/",indexes:[385,386,387,388]},文件上传:{path:"/category/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",indexes:[385]},JSON:{path:"/category/json/",indexes:[12,35,72,171,346]},SpEL:{path:"/category/spel/",indexes:[321]},日期时间计算:{path:"/category/%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E8%AE%A1%E7%AE%97/",indexes:[33]},StringBuilder:{path:"/category/stringbuilder/",indexes:[25]},IO:{path:"/category/io/",indexes:[4,195]},Algorithms:{path:"/category/algorithms/",indexes:[332,153,154,155,196,245]},文件处理:{path:"/category/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/",indexes:[6,43]},数组:{path:"/category/%E6%95%B0%E7%BB%84/",indexes:[38]},QueryException:{path:"/category/queryexception/",indexes:[359]},"ISO 8601":{path:"/category/iso-8601/",indexes:[7]},Reflection:{path:"/category/reflection/",indexes:[331]},OutputStream:{path:"/category/outputstream/",indexes:[39]},性能:{path:"/category/%E6%80%A7%E8%83%BD/",indexes:[40]},分区:{path:"/category/%E5%88%86%E5%8C%BA/",indexes:[371]},"UTF-8":{path:"/category/utf-8/",indexes:[47]},CRUD:{path:"/category/crud/",indexes:[330]},"Timefold Solver":{path:"/category/timefold-solver/",indexes:[11]},Database:{path:"/category/database/",indexes:[389,188,379]},"IntelliJ IDEA":{path:"/category/intellij-idea/",indexes:[389]},"Software Development":{path:"/category/software-development/",indexes:[13,390,391]},Streams:{path:"/category/streams/",indexes:[14]},"Exception Handling":{path:"/category/exception-handling/",indexes:[15]},异步编程:{path:"/category/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/",indexes:[16]},InputStream:{path:"/category/inputstream/",indexes:[19]},"Spring Kafka":{path:"/category/spring-kafka/",indexes:[392]},"Trusted Packages":{path:"/category/trusted-packages/",indexes:[392]},Set:{path:"/category/set/",indexes:[159]},Eclipse:{path:"/category/eclipse/",indexes:[176]},"Date and Time":{path:"/category/date-and-time/",indexes:[142,160,190]},Jmix:{path:"/category/jmix/",indexes:[293]},JAR文件:{path:"/category/jar%E6%96%87%E4%BB%B6/",indexes:[162]},图像处理:{path:"/category/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/",indexes:[179,201]},"Spring Framework":{path:"/category/spring-framework/",indexes:[393,357]},Collections:{path:"/category/collections/",indexes:[140,149,163,225]},"JEP 418":{path:"/category/jep-418/",indexes:[164]},Framework:{path:"/category/framework/",indexes:[180]},Logging:{path:"/category/logging/",indexes:[362,294,394]},"New Features":{path:"/category/new-features/",indexes:[284]},HTML:{path:"/category/html/",indexes:[165,250]},"Reactive Programming":{path:"/category/reactive-programming/",indexes:[386,387,261]},时间处理:{path:"/category/%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86/",indexes:[141]},RxJava:{path:"/category/rxjava/",indexes:[339]},编码转换:{path:"/category/%E7%BC%96%E7%A0%81%E8%BD%AC%E6%8D%A2/",indexes:[168]},JWT:{path:"/category/jwt/",indexes:[318]},Selenium:{path:"/category/selenium/",indexes:[395]},"Web Automation":{path:"/category/web-automation/",indexes:[395]},Duration:{path:"/category/duration/",indexes:[341]},"Java Concurrency":{path:"/category/java-concurrency/",indexes:[396]},"Java Tutorials":{path:"/category/java-tutorials/",indexes:[396]},"HexFormat API":{path:"/category/hexformat-api/",indexes:[342]},Caching:{path:"/category/caching/",indexes:[393]},XML:{path:"/category/xml/",indexes:[146,268,276]},"EOL Characters":{path:"/category/eol-characters/",indexes:[173]},并行操作:{path:"/category/%E5%B9%B6%E8%A1%8C%E6%93%8D%E4%BD%9C/",indexes:[344]},GZIP:{path:"/category/gzip/",indexes:[174,199]},"Saga Pattern":{path:"/category/saga-pattern/",indexes:[376]},密码学:{path:"/category/%E5%AF%86%E7%A0%81%E5%AD%A6/",indexes:[148]},数据分析:{path:"/category/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/",indexes:[150]},"Commit Offsets":{path:"/category/commit-offsets/",indexes:[372]},"Web Development":{path:"/category/web-development/",indexes:[336,206,397]},"Java Libraries":{path:"/category/java-libraries/",indexes:[398]},"Apache Commons":{path:"/category/apache-commons/",indexes:[398,228]},Redpanda:{path:"/category/redpanda/",indexes:[373]},URI:{path:"/category/uri/",indexes:[157]},Jsoup:{path:"/category/jsoup/",indexes:[158]},Authorization:{path:"/category/authorization/",indexes:[319]},异常处理:{path:"/category/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/",indexes:[209,286]},Elasticsearch:{path:"/category/elasticsearch/",indexes:[399]},"Spring Data":{path:"/category/spring-data/",indexes:[399]},"Software Testing":{path:"/category/software-testing/",indexes:[400]},"Development Practices":{path:"/category/development-practices/",indexes:[400]},数据库:{path:"/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",indexes:[351,262]},数据类型转换:{path:"/category/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/",indexes:[219]},"Google Protocol Buffer":{path:"/category/google-protocol-buffer/",indexes:[182]},JMeter:{path:"/category/jmeter/",indexes:[183]},Lombok:{path:"/category/lombok/",indexes:[222]},Optional:{path:"/category/optional/",indexes:[249,253]},Logback:{path:"/category/logback/",indexes:[394]},数学:{path:"/category/%E6%95%B0%E5%AD%A6/",indexes:[184]},"H2 Database":{path:"/category/h2-database/",indexes:[296]},Gradle:{path:"/category/gradle/",indexes:[224]},计算机科学:{path:"/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/",indexes:[208]},LinkedHashMap:{path:"/category/linkedhashmap/",indexes:[238]},"Development Tools":{path:"/category/development-tools/",indexes:[401]},"Version Control":{path:"/category/version-control/",indexes:[401]},"Spring AOP":{path:"/category/spring-aop/",indexes:[358]},"Update-Or-Insert":{path:"/category/update-or-insert/",indexes:[327]},设计模式:{path:"/category/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",indexes:[211]},macOS:{path:"/category/macos/",indexes:[282]},"Apache Commons Compress":{path:"/category/apache-commons-compress/",indexes:[186]},Libraries:{path:"/category/libraries/",indexes:[255]},SSHJ:{path:"/category/sshj/",indexes:[242]},Email:{path:"/category/email/",indexes:[212]},Java编程:{path:"/category/java%E7%BC%96%E7%A8%8B/",indexes:[402,403]},数据类型比较:{path:"/category/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/",indexes:[402]},jOOQ:{path:"/category/jooq/",indexes:[191]},MyBatis:{path:"/category/mybatis/",indexes:[256]},MapStruct:{path:"/category/mapstruct/",indexes:[243]},PDF:{path:"/category/pdf/",indexes:[270]},Prometheus:{path:"/category/prometheus/",indexes:[297]},"OpenAI API":{path:"/category/openai-api/",indexes:[277]},"Java Persistence":{path:"/category/java-persistence/",indexes:[350]},CSV:{path:"/category/csv/",indexes:[278]},Regex:{path:"/category/regex/",indexes:[279]},安全:{path:"/category/%E5%AE%89%E5%85%A8/",indexes:[283]},Security:{path:"/category/security/",indexes:[215]},ConverterNotFoundException:{path:"/category/converternotfoundexception/",indexes:[328]},WebClient:{path:"/category/webclient/",indexes:[388]},Annotations:{path:"/category/annotations/",indexes:[259]},依赖管理:{path:"/category/%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/",indexes:[370]},"Unit Testing":{path:"/category/unit-testing/",indexes:[216]},Comparator:{path:"/category/comparator/",indexes:[280]},注解与枚举:{path:"/category/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E6%9E%9A%E4%B8%BE/",indexes:[403]}}}},tag:{"/":{path:"/tag/",map:{ALTS:{path:"/tag/alts/",indexes:[272]},安全:{path:"/tag/%E5%AE%89%E5%85%A8/",indexes:[291,272]},PostgreSQL:{path:"/tag/postgresql/",indexes:[287]},MacOS:{path:"/tag/macos/",indexes:[287]},Homebrew:{path:"/tag/homebrew/",indexes:[287]},Database:{path:"/tag/database/",indexes:[287]},DataJpaTest:{path:"/tag/datajpatest/",indexes:[289]},Repository:{path:"/tag/repository/",indexes:[44,289]},数字唯一性:{path:"/tag/%E6%95%B0%E5%AD%97%E5%94%AF%E4%B8%80%E6%80%A7/",indexes:[132]},集合:{path:"/tag/%E9%9B%86%E5%90%88/",indexes:[26,132,241]},流API:{path:"/tag/%E6%B5%81api/",indexes:[132]},位操作:{path:"/tag/%E4%BD%8D%E6%93%8D%E4%BD%9C/",indexes:[132,236]},JavaType:{path:"/tag/javatype/",indexes:[107]},Class:{path:"/tag/class/",indexes:[107]},Netty:{path:"/tag/netty/",indexes:[299]},事件处理器:{path:"/tag/%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E5%99%A8/",indexes:[299]},监听器:{path:"/tag/%E7%9B%91%E5%90%AC%E5%99%A8/",indexes:[299]},GroupId:{path:"/tag/groupid/",indexes:[302]},ConsumerId:{path:"/tag/consumerid/",indexes:[302]},API文档:{path:"/tag/api%E6%96%87%E6%A1%A3/",indexes:[305]},"Spring Boot":{path:"/tag/spring-boot/",indexes:[67,111,324,305,393,306,376,185,327,358,388]},二叉搜索树:{path:"/tag/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/",indexes:[133]},算法:{path:"/tag/%E7%AE%97%E6%B3%95/",indexes:[88,133,178,246,265]},序列:{path:"/tag/%E5%BA%8F%E5%88%97/",indexes:[134]},递归:{path:"/tag/%E9%80%92%E5%BD%92/",indexes:[18,88,129,134]},Java:{path:"/tag/java/",indexes:[0,2,5,6,8,19,25,26,33,38,39,43,46,48,50,374,354,55,57,58,64,68,69,73,74,361,83,90,92,99,101,103,108,110,116,365,131,137,140,146,147,157,362,356,175,177,182,186,191,193,204,206,213,216,227,228,238,246,249,259,274,275,276,277,278,279,402,403,397]},String:{path:"/tag/string/",indexes:[21,22,36,108,342,245,262]},substring:{path:"/tag/substring/",indexes:[108,161]},"Apache Commons Lang":{path:"/tag/apache-commons-lang/",indexes:[108,173]},Guava:{path:"/tag/guava/",indexes:[108]},缩写:{path:"/tag/%E7%BC%A9%E5%86%99/",indexes:[135]},姓名缩写:{path:"/tag/%E5%A7%93%E5%90%8D%E7%BC%A9%E5%86%99/",indexes:[135]},JSON:{path:"/tag/json/",indexes:[109,145,346,188,295,233,310]},"Java List":{path:"/tag/java-list/",indexes:[109]},TypeToken:{path:"/tag/typetoken/",indexes:[109]},S3:{path:"/tag/s3/",indexes:[136,203]},Mock:{path:"/tag/mock/",indexes:[136]},Testing:{path:"/tag/testing/",indexes:[23,103,136,356,357,358]},地图:{path:"/tag/%E5%9C%B0%E5%9B%BE/",indexes:[110]},格式化输出:{path:"/tag/%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/",indexes:[110]},"GraphQL Mutation":{path:"/tag/graphql-mutation/",indexes:[111]},Spring:{path:"/tag/spring/",indexes:[320,321,44,375,377,316,318,357]},"Spring Security":{path:"/tag/spring-security/",indexes:[324,316,319,327,367]},"Spring Data JPA":{path:"/tag/spring-data-jpa/",indexes:[316,327,328]},迁移:{path:"/tag/%E8%BF%81%E7%A7%BB/",indexes:[291]},流:{path:"/tag/%E6%B5%81/",indexes:[137]},列表:{path:"/tag/%E5%88%97%E8%A1%A8/",indexes:[137,234]},打印:{path:"/tag/%E6%89%93%E5%8D%B0/",indexes:[100,137]},"Query Hints":{path:"/tag/query-hints/",indexes:[325]},Performance:{path:"/tag/performance/",indexes:[323,325]},函数式编程:{path:"/tag/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/",indexes:[301]},"Railway Oriented Programming":{path:"/tag/railway-oriented-programming/",indexes:[301]},"trailing spaces":{path:"/tag/trailing-spaces/",indexes:[112]},whitespace:{path:"/tag/whitespace/",indexes:[112]},regex:{path:"/tag/regex/",indexes:[112]},stripTrailing:{path:"/tag/striptrailing/",indexes:[112]},FlatBuffers:{path:"/tag/flatbuffers/",indexes:[138]},Tutorial:{path:"/tag/tutorial/",indexes:[126,138,399]},JsonNode:{path:"/tag/jsonnode/",indexes:[139]},ArrayNode:{path:"/tag/arraynode/",indexes:[139]},Hibernate:{path:"/tag/hibernate/",indexes:[320,323,353]},"REST API":{path:"/tag/rest-api/",indexes:[382,324,327,254]},Testcontainers:{path:"/tag/testcontainers/",indexes:[384,355]},Docker:{path:"/tag/docker/",indexes:[355]},"Testing Tools":{path:"/tag/testing-tools/",indexes:[355]},分布式系统:{path:"/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/",indexes:[371,113]},键值存储:{path:"/tag/%E9%94%AE%E5%80%BC%E5%AD%98%E5%82%A8/",indexes:[113]},Annotation:{path:"/tag/annotation/",indexes:[361,307]},SoftDelete:{path:"/tag/softdelete/",indexes:[361]},动态路由:{path:"/tag/%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/",indexes:[114]},企业集成模式:{path:"/tag/%E4%BC%81%E4%B8%9A%E9%9B%86%E6%88%90%E6%A8%A1%E5%BC%8F/",indexes:[114]},权重平均数:{path:"/tag/%E6%9D%83%E9%87%8D%E5%B9%B3%E5%9D%87%E6%95%B0/",indexes:[75]},计算:{path:"/tag/%E8%AE%A1%E7%AE%97/",indexes:[75,198]},Base64编码:{path:"/tag/base64%E7%BC%96%E7%A0%81/",indexes:[115]},数据编码:{path:"/tag/%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/",indexes:[115]},"String Rotation":{path:"/tag/string-rotation/",indexes:[116]},字符串反转:{path:"/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC/",indexes:[117]},镜像测试:{path:"/tag/%E9%95%9C%E5%83%8F%E6%B5%8B%E8%AF%95/",indexes:[117]},LinkedHashMap:{path:"/tag/linkedhashmap/",indexes:[118,238]},Stream:{path:"/tag/stream/",indexes:[2,118,144,248]},"Java 8":{path:"/tag/java-8/",indexes:[14,32,60,76,118,141,144,149,211,214,221,232,235,240,244,253,280]},CompletableFuture:{path:"/tag/completablefuture/",indexes:[1,16,119,396,254,273]},runAsync:{path:"/tag/runasync/",indexes:[119]},supplyAsync:{path:"/tag/supplyasync/",indexes:[119]},"Unix Timestamp":{path:"/tag/unix-timestamp/",indexes:[76]},表达式转换:{path:"/tag/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BD%AC%E6%8D%A2/",indexes:[120]},逆波兰表示法:{path:"/tag/%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E7%A4%BA%E6%B3%95/",indexes:[120]},uppercase:{path:"/tag/uppercase/",indexes:[106]},lowercase:{path:"/tag/lowercase/",indexes:[106]},count:{path:"/tag/count/",indexes:[106]},CountDownLatch:{path:"/tag/countdownlatch/",indexes:[77]},Semaphore:{path:"/tag/semaphore/",indexes:[77]},URLConnection:{path:"/tag/urlconnection/",indexes:[78]},自定义连接:{path:"/tag/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%9E%E6%8E%A5/",indexes:[78]},thenApply:{path:"/tag/thenapply/",indexes:[121]},thenApplyAsync:{path:"/tag/thenapplyasync/",indexes:[121]},字符串处理:{path:"/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/",indexes:[122,230,275]},数字提取:{path:"/tag/%E6%95%B0%E5%AD%97%E6%8F%90%E5%8F%96/",indexes:[300,122]},"Equilibrium Index":{path:"/tag/equilibrium-index/",indexes:[79]},Array:{path:"/tag/array/",indexes:[79,154,155,252]},非重复元素:{path:"/tag/%E9%9D%9E%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/",indexes:[123]},列表处理:{path:"/tag/%E5%88%97%E8%A1%A8%E5%A4%84%E7%90%86/",indexes:[123]},"Spring Data":{path:"/tag/spring-data/",indexes:[290,399]},JPA:{path:"/tag/jpa/",indexes:[320,321,44,290,352,328,353]},"Learn Spring Security":{path:"/tag/learn-spring-security/",indexes:[315]},"Learn Spring Security Core":{path:"/tag/learn-spring-security-core/",indexes:[315]},"Learn Spring Security OAuth":{path:"/tag/learn-spring-security-oauth/",indexes:[315]},"Learn Spring":{path:"/tag/learn-spring/",indexes:[315]},"Learn Spring Data JPA":{path:"/tag/learn-spring-data-jpa/",indexes:[315]},"System.in.read()":{path:"/tag/system.in.read()/",indexes:[124]},用户输入:{path:"/tag/%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5/",indexes:[124]},findBy:{path:"/tag/findby/",indexes:[329]},多列查询:{path:"/tag/%E5%A4%9A%E5%88%97%E6%9F%A5%E8%AF%A2/",indexes:[329]},Thymeleaf:{path:"/tag/thymeleaf/",indexes:[303]},"Spring MVC":{path:"/tag/spring-mvc/",indexes:[303]},"JUnit 5":{path:"/tag/junit-5/",indexes:[71,364]},Mockito:{path:"/tag/mockito/",indexes:[23,364,356,170,257,260]},测试:{path:"/tag/%E6%B5%8B%E8%AF%95/",indexes:[364,151,257]},JDK:{path:"/tag/jdk/",indexes:[365]},安装:{path:"/tag/%E5%AE%89%E8%A3%85/",indexes:[365]},Java反射:{path:"/tag/java%E5%8F%8D%E5%B0%84/",indexes:[80]},内嵌类实例化:{path:"/tag/%E5%86%85%E5%B5%8C%E7%B1%BB%E5%AE%9E%E4%BE%8B%E5%8C%96/",indexes:[80]},源代码搜索引擎:{path:"/tag/%E6%BA%90%E4%BB%A3%E7%A0%81%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/",indexes:[366]},跨引用:{path:"/tag/%E8%B7%A8%E5%BC%95%E7%94%A8/",indexes:[366]},安装指南:{path:"/tag/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/",indexes:[366]},Logging:{path:"/tag/logging/",indexes:[304,362,394,256]},"Aspect-Oriented Programming":{path:"/tag/aspect-oriented-programming/",indexes:[304]},邮箱地址:{path:"/tag/%E9%82%AE%E7%AE%B1%E5%9C%B0%E5%9D%80/",indexes:[125]},电话号码:{path:"/tag/%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81/",indexes:[125]},脱敏:{path:"/tag/%E8%84%B1%E6%95%8F/",indexes:[125]},正则表达式:{path:"/tag/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",indexes:[70,99,102,125,231,250,275]},Algorithm:{path:"/tag/algorithm/",indexes:[126,177,204,266]},可变对象:{path:"/tag/%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1/",indexes:[127]},不可变对象:{path:"/tag/%E4%B8%8D%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1/",indexes:[127]},"Backend for Frontend":{path:"/tag/backend-for-frontend/",indexes:[367]},Pagination:{path:"/tag/pagination/",indexes:[81]},JDBC:{path:"/tag/jdbc/",indexes:[81]},Kotlin:{path:"/tag/kotlin/",indexes:[331,300,334,335,336,337,343,344,346,347]},"String Parsing":{path:"/tag/string-parsing/",indexes:[334]},"Number Format":{path:"/tag/number-format/",indexes:[334]},Serialization:{path:"/tag/serialization/",indexes:[128,346]},Deserialization:{path:"/tag/deserialization/",indexes:[12,288,128]},Java虚拟线程:{path:"/tag/java%E8%99%9A%E6%8B%9F%E7%BA%BF%E7%A8%8B/",indexes:[82]},并发:{path:"/tag/%E5%B9%B6%E5%8F%91/",indexes:[82]},Maven:{path:"/tag/maven/",indexes:[369,83,370]},"Java 18":{path:"/tag/java-18/",indexes:[281]},"Simple Web Server":{path:"/tag/simple-web-server/",indexes:[281]},动态规划:{path:"/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",indexes:[129]},Base64:{path:"/tag/base64/",indexes:[84]},Encoding:{path:"/tag/encoding/",indexes:[84]},URLEncoder:{path:"/tag/urlencoder/",indexes:[85]},编码:{path:"/tag/%E7%BC%96%E7%A0%81/",indexes:[47,85]},特殊字符:{path:"/tag/%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/",indexes:[85]},"Raw Type":{path:"/tag/raw-type/",indexes:[86]},"Java Generics":{path:"/tag/java-generics/",indexes:[86]},InstanceAlreadyExistsException:{path:"/tag/instancealreadyexistsexception/",indexes:[130]},"Kafka producer":{path:"/tag/kafka-producer/",indexes:[130]},"Kafka consumer":{path:"/tag/kafka-consumer/",indexes:[130]},"Apache Kafka":{path:"/tag/apache-kafka/",indexes:[131]},"Kafka Headers":{path:"/tag/kafka-headers/",indexes:[131]},JobParameters:{path:"/tag/jobparameters/",indexes:[87]},ItemReader:{path:"/tag/itemreader/",indexes:[87]},教程:{path:"/tag/%E6%95%99%E7%A8%8B/",indexes:[374,285]},"Design Pattern":{path:"/tag/design-pattern/",indexes:[354]},"Builder Pattern":{path:"/tag/builder-pattern/",indexes:[354]},工作日计算:{path:"/tag/%E5%B7%A5%E4%BD%9C%E6%97%A5%E8%AE%A1%E7%AE%97/",indexes:[51]},Java日期操作:{path:"/tag/java%E6%97%A5%E6%9C%9F%E6%93%8D%E4%BD%9C/",indexes:[51]},数学运算:{path:"/tag/%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97/",indexes:[88]},Persistence:{path:"/tag/persistence/",indexes:[312,313,314]},REST:{path:"/tag/rest/",indexes:[312,67,313,314]},Security:{path:"/tag/security/",indexes:[312,313,314,318,215]},Gregorian:{path:"/tag/gregorian/",indexes:[89]},Hijri:{path:"/tag/hijri/",indexes:[89]},日期转换:{path:"/tag/%E6%97%A5%E6%9C%9F%E8%BD%AC%E6%8D%A2/",indexes:[90]},Instant:{path:"/tag/instant/",indexes:[90,269]},LocalDate:{path:"/tag/localdate/",indexes:[7,90,142,160,182]},"Joda-Time":{path:"/tag/joda-time/",indexes:[62,90]},"String Date Conversion":{path:"/tag/string-date-conversion/",indexes:[91]},"XML Schema":{path:"/tag/xml-schema/",indexes:[91]},byte:{path:"/tag/byte/",indexes:[52]},int:{path:"/tag/int/",indexes:[52,219]},转换:{path:"/tag/%E8%BD%AC%E6%8D%A2/",indexes:[24,36,52,213,220,235]},Unicode:{path:"/tag/unicode/",indexes:[92]},"Spring WebClient":{path:"/tag/spring-webclient/",indexes:[310]},"Custom Deserialization":{path:"/tag/custom-deserialization/",indexes:[310]},"mvn verify":{path:"/tag/mvn-verify/",indexes:[368,93]},"mvn test":{path:"/tag/mvn-test/",indexes:[93]},"mvn install":{path:"/tag/mvn-install/",indexes:[368]},时间:{path:"/tag/%E6%97%B6%E9%97%B4/",indexes:[94]},时区:{path:"/tag/%E6%97%B6%E5%8C%BA/",indexes:[94]},"SSL Debug":{path:"/tag/ssl-debug/",indexes:[53]},"Java Secure Socket Layer":{path:"/tag/java-secure-socket-layer/",indexes:[53]},"Orkes Conductor":{path:"/tag/orkes-conductor/",indexes:[375,376]},Kafka:{path:"/tag/kafka/",indexes:[377,372,309]},"Event-Driven":{path:"/tag/event-driven/",indexes:[377]},SecureRandom:{path:"/tag/securerandom/",indexes:[95]},随机数生成:{path:"/tag/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90/",indexes:[95]},"Spring-Kafka":{path:"/tag/spring-kafka/",indexes:[288]},字符串:{path:"/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2/",indexes:[300,48,96,231]},"UTF-8":{path:"/tag/utf-8/",indexes:[47,96,168]},"ISO-8859-1":{path:"/tag/iso-8859-1/",indexes:[96,168]},"Service URL":{path:"/tag/service-url/",indexes:[378]},ClusterIP:{path:"/tag/clusterip/",indexes:[378]},NodePort:{path:"/tag/nodeport/",indexes:[378]},LoadBalancer:{path:"/tag/loadbalancer/",indexes:[378]},测试覆盖率:{path:"/tag/%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87/",indexes:[97]},数据管道:{path:"/tag/%E6%95%B0%E6%8D%AE%E7%AE%A1%E9%81%93/",indexes:[97]},KotlinPoet:{path:"/tag/kotlinpoet/",indexes:[333]},"Code Generation":{path:"/tag/code-generation/",indexes:[333]},Baeldung:{path:"/tag/baeldung/",indexes:[285]},"Java Flight Recorder":{path:"/tag/java-flight-recorder/",indexes:[54]},JFR:{path:"/tag/jfr/",indexes:[54]},"Java 21":{path:"/tag/java-21/",indexes:[31,54,284]},"List vs. Set":{path:"/tag/list-vs.-set/",indexes:[360]},OneToMany:{path:"/tag/onetomany/",indexes:[360]},"Part Time":{path:"/tag/part-time/",indexes:[380]},"Integration Experience":{path:"/tag/integration-experience/",indexes:[380]},动态代理:{path:"/tag/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",indexes:[98]},AOP:{path:"/tag/aop/",indexes:[98,358]},装饰者模式:{path:"/tag/%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/",indexes:[98]},反射:{path:"/tag/%E5%8F%8D%E5%B0%84/",indexes:[98,257]},"N+1 Problem":{path:"/tag/n_1-problem/",indexes:[322]},数据库优化:{path:"/tag/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/",indexes:[322]},URL规范化:{path:"/tag/url%E8%A7%84%E8%8C%83%E5%8C%96/",indexes:[99]},"Apache Commons Validator":{path:"/tag/apache-commons-validator/",indexes:[99]},URI类:{path:"/tag/uri%E7%B1%BB/",indexes:[99]},"2D数组":{path:"/tag/2d%E6%95%B0%E7%BB%84/",indexes:[100,218]},多线程:{path:"/tag/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",indexes:[101,104]},文件读写:{path:"/tag/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/",indexes:[101]},密码验证:{path:"/tag/%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81/",indexes:[102]},ListIterator:{path:"/tag/listiterator/",indexes:[55,149]},编程:{path:"/tag/%E7%BC%96%E7%A8%8B/",indexes:[55]},"Run-Length Encoding":{path:"/tag/run-length-encoding/",indexes:[74]},"Environment Variables":{path:"/tag/environment-variables/",indexes:[103]},Runtime:{path:"/tag/runtime/",indexes:[103]},Spock:{path:"/tag/spock/",indexes:[56]},Gradle:{path:"/tag/gradle/",indexes:[56]},OutOfMemoryError:{path:"/tag/outofmemoryerror/",indexes:[381,104]},"Morse Code":{path:"/tag/morse-code/",indexes:[57]},Translation:{path:"/tag/translation/",indexes:[57]},日志记录:{path:"/tag/%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95/",indexes:[105]},结构化日志:{path:"/tag/%E7%BB%93%E6%9E%84%E5%8C%96%E6%97%A5%E5%BF%97/",indexes:[105]},文件名:{path:"/tag/%E6%96%87%E4%BB%B6%E5%90%8D/",indexes:[58]},当前时间:{path:"/tag/%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/",indexes:[58]},"Extension Functions":{path:"/tag/extension-functions/",indexes:[59]},"Private Fields":{path:"/tag/private-fields/",indexes:[59]},JWT:{path:"/tag/jwt/",indexes:[317,318]},"Custom Claims":{path:"/tag/custom-claims/",indexes:[317]},"Spring Authorization Server":{path:"/tag/spring-authorization-server/",indexes:[317]},流式API:{path:"/tag/%E6%B5%81%E5%BC%8Fapi/",indexes:[60]},列表操作:{path:"/tag/%E5%88%97%E8%A1%A8%E6%93%8D%E4%BD%9C/",indexes:[60]},枚举:{path:"/tag/%E6%9E%9A%E4%B8%BE/",indexes:[26,243,403]},float:{path:"/tag/float/",indexes:[61]},integer:{path:"/tag/integer/",indexes:[61]},比较:{path:"/tag/%E6%AF%94%E8%BE%83/",indexes:[61]},Point:{path:"/tag/point/",indexes:[27]},"Straight Line":{path:"/tag/straight-line/",indexes:[27]},Check:{path:"/tag/check/",indexes:[27]},DateTime:{path:"/tag/datetime/",indexes:[62]},Date:{path:"/tag/date/",indexes:[62,141]},BigDecimal:{path:"/tag/bigdecimal/",indexes:[0,63,64,402]},Integer:{path:"/tag/integer/",indexes:[63,64]},Conversion:{path:"/tag/conversion/",indexes:[63]},"Kubernetes Operator":{path:"/tag/kubernetes-operator/",indexes:[65]},"Java Operator SDK":{path:"/tag/java-operator-sdk/",indexes:[65]},Micronaut:{path:"/tag/micronaut/",indexes:[382]},MongoDB:{path:"/tag/mongodb/",indexes:[382]},"Reactive Programming":{path:"/tag/reactive-programming/",indexes:[382,388]},Xmx:{path:"/tag/xmx/",indexes:[29]},MaxRAM:{path:"/tag/maxram/",indexes:[29]},Future:{path:"/tag/future/",indexes:[30]},Promise:{path:"/tag/promise/",indexes:[30]},"Generational ZGC":{path:"/tag/generational-zgc/",indexes:[31]},HttpServletRequest:{path:"/tag/httpservletrequest/",indexes:[66]},"Query String":{path:"/tag/query-string/",indexes:[66]},"Data Management":{path:"/tag/data-management/",indexes:[363]},"Query Optimization":{path:"/tag/query-optimization/",indexes:[363]},"Spring Framework":{path:"/tag/spring-framework/",indexes:[383,156,169,181]},"AI Generative Prompts":{path:"/tag/ai-generative-prompts/",indexes:[383]},"Spring Cloud AWS 3.0":{path:"/tag/spring-cloud-aws-3.0/",indexes:[384]},SQS:{path:"/tag/sqs/",indexes:[384]},"Integration Test":{path:"/tag/integration-test/",indexes:[384]},LocalStack:{path:"/tag/localstack/",indexes:[384]},Stream操作:{path:"/tag/stream%E6%93%8D%E4%BD%9C/",indexes:[32]},HTTPS:{path:"/tag/https/",indexes:[369]},"501错误":{path:"/tag/501%E9%94%99%E8%AF%AF/",indexes:[369]},"main method":{path:"/tag/main-method/",indexes:[68]},"static block":{path:"/tag/static-block/",indexes:[68]},PriorityQueue:{path:"/tag/priorityqueue/",indexes:[69,227]},iterator:{path:"/tag/iterator/",indexes:[69]},BufferedReader:{path:"/tag/bufferedreader/",indexes:[50]},FileReader:{path:"/tag/filereader/",indexes:[50]},Scanner:{path:"/tag/scanner/",indexes:[50]},性能分析:{path:"/tag/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/",indexes:[48]},链表:{path:"/tag/%E9%93%BE%E8%A1%A8/",indexes:[49]},删除操作:{path:"/tag/%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C/",indexes:[49]},非打印字符:{path:"/tag/%E9%9D%9E%E6%89%93%E5%8D%B0%E5%AD%97%E7%AC%A6/",indexes:[70]},文本处理:{path:"/tag/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/",indexes:[70,207]},ParameterResolutionException:{path:"/tag/parameterresolutionexception/",indexes:[71]},"Spring WebFlux":{path:"/tag/spring-webflux/",indexes:[385]},文件上传:{path:"/tag/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",indexes:[385]},"异步I/O":{path:"/tag/%E5%BC%82%E6%AD%A5io/",indexes:[385]},非阻塞:{path:"/tag/%E9%9D%9E%E9%98%BB%E5%A1%9E/",indexes:[385]},Gson:{path:"/tag/gson/",indexes:[12,72,346,194]},JsonParser:{path:"/tag/jsonparser/",indexes:[72]},堆大小:{path:"/tag/%E5%A0%86%E5%A4%A7%E5%B0%8F/",indexes:[381]},"Static Context":{path:"/tag/static-context/",indexes:[73]},"Non-Static Method":{path:"/tag/non-static-method/",indexes:[73]},Query:{path:"/tag/query/",indexes:[321,399]},SpEL:{path:"/tag/spel/",indexes:[321]},ZERO:{path:"/tag/zero/",indexes:[0]},性能:{path:"/tag/%E6%80%A7%E8%83%BD/",indexes:[0,34,373]},日期:{path:"/tag/%E6%97%A5%E6%9C%9F/",indexes:[33]},月份间隔:{path:"/tag/%E6%9C%88%E4%BB%BD%E9%97%B4%E9%9A%94/",indexes:[33]},ListenableFuture:{path:"/tag/listenablefuture/",indexes:[1]},StringBuilder:{path:"/tag/stringbuilder/",indexes:[25,231]},contains:{path:"/tag/contains/",indexes:[25]},indexOf:{path:"/tag/indexof/",indexes:[25]},"String Comparison":{path:"/tag/string-comparison/",indexes:[2]},Set:{path:"/tag/set/",indexes:[2]},List:{path:"/tag/list/",indexes:[2,149]},for循环:{path:"/tag/for%E5%BE%AA%E7%8E%AF/",indexes:[5,34]},迭代器:{path:"/tag/%E8%BF%AD%E4%BB%A3%E5%99%A8/",indexes:[5,34]},"byte array":{path:"/tag/byte-array/",indexes:[35]},"JSON conversion":{path:"/tag/json-conversion/",indexes:[35]},Excel:{path:"/tag/excel/",indexes:[24]},PDF:{path:"/tag/pdf/",indexes:[24]},Long:{path:"/tag/long/",indexes:[36]},Java字符串:{path:"/tag/java%E5%AD%97%E7%AC%A6%E4%B8%B2/",indexes:[3]},字符串转字符列表:{path:"/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%AD%97%E7%AC%A6%E5%88%97%E8%A1%A8/",indexes:[3]},OutputStream:{path:"/tag/outputstream/",indexes:[4,39]},"Byte Array":{path:"/tag/byte-array/",indexes:[4]},ExecutorService:{path:"/tag/executorservice/",indexes:[37,396,226]},"submit()":{path:"/tag/submit()/",indexes:[37]},"execute()":{path:"/tag/execute()/",indexes:[37]},"Dijkstra’s Algorithm":{path:"/tag/dijkstra%E2%80%99s-algorithm/",indexes:[332]},Graphs:{path:"/tag/graphs/",indexes:[332]},文件搜索:{path:"/tag/%E6%96%87%E4%BB%B6%E6%90%9C%E7%B4%A2/",indexes:[6]},文件遍历:{path:"/tag/%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86/",indexes:[6]},数组:{path:"/tag/%E6%95%B0%E7%BB%84/",indexes:[18,38,218,223,265]},缺失数字:{path:"/tag/%E7%BC%BA%E5%A4%B1%E6%95%B0%E5%AD%97/",indexes:[38]},QueryException:{path:"/tag/queryexception/",indexes:[359]},"Named Parameter":{path:"/tag/named-parameter/",indexes:[359]},DateTimeFormatter:{path:"/tag/datetimeformatter/",indexes:[7]},Reflection:{path:"/tag/reflection/",indexes:[331,340,343,193]},"Field Names":{path:"/tag/field-names/",indexes:[331]},StringWriter:{path:"/tag/stringwriter/",indexes:[39]},"System.currentTimeMillis()":{path:"/tag/system.currenttimemillis()/",indexes:[40]},"System.nanoTime()":{path:"/tag/system.nanotime()/",indexes:[40]},"String.length()":{path:"/tag/string.length()/",indexes:[41]},"String.getBytes().length":{path:"/tag/string.getbytes().length/",indexes:[41]},Lambda:{path:"/tag/lambda/",indexes:[8]},"Lazy Initialization":{path:"/tag/lazy-initialization/",indexes:[8,10]},double:{path:"/tag/double/",indexes:[42]},"scientific notation":{path:"/tag/scientific-notation/",indexes:[42]},formatting:{path:"/tag/formatting/",indexes:[42]},Reactor:{path:"/tag/reactor/",indexes:[9,308,261]},"Virtual Threads":{path:"/tag/virtual-threads/",indexes:[9,192]},文件分割:{path:"/tag/%E6%96%87%E4%BB%B6%E5%88%86%E5%89%B2/",indexes:[43]},字符串操作:{path:"/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/",indexes:[45]},字符串旋转:{path:"/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%8B%E8%BD%AC/",indexes:[45]},消息队列:{path:"/tag/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/",indexes:[371]},列表排序:{path:"/tag/%E5%88%97%E8%A1%A8%E6%8E%92%E5%BA%8F/",indexes:[46]},验证:{path:"/tag/%E9%AA%8C%E8%AF%81/",indexes:[47]},"Object Hydration":{path:"/tag/object-hydration/",indexes:[10]},"ORM Frameworks":{path:"/tag/orm-frameworks/",indexes:[10]},getReferenceById:{path:"/tag/getreferencebyid/",indexes:[330]},findById:{path:"/tag/findbyid/",indexes:[330]},员工调度:{path:"/tag/%E5%91%98%E5%B7%A5%E8%B0%83%E5%BA%A6/",indexes:[11]},优化:{path:"/tag/%E4%BC%98%E5%8C%96/",indexes:[11]},"Database Connection":{path:"/tag/database-connection/",indexes:[389]},"IntelliJ IDEA":{path:"/tag/intellij-idea/",indexes:[389,390,401]},Entity:{path:"/tag/entity/",indexes:[13,349]},DTO:{path:"/tag/dto/",indexes:[13,328]},"Stream API":{path:"/tag/stream-api/",indexes:[14,161,232]},NullPointerException:{path:"/tag/nullpointerexception/",indexes:[15,280]},"findFirst()":{path:"/tag/findfirst()/",indexes:[15]},Optional:{path:"/tag/optional/",indexes:[15,235,244,253,271]},单元测试:{path:"/tag/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/",indexes:[16]},"Inter-Process Communication":{path:"/tag/inter-process-communication/",indexes:[17]},"Java IPC":{path:"/tag/java-ipc/",indexes:[17]},InputStream:{path:"/tag/inputstream/",indexes:[19,172,248]},"skip bytes":{path:"/tag/skip-bytes/",indexes:[19]},"Alpaquita Linux":{path:"/tag/alpaquita-linux/",indexes:[392]},"Java apps":{path:"/tag/java-apps/",indexes:[392]},"Kafka message headers":{path:"/tag/kafka-message-headers/",indexes:[392]},static:{path:"/tag/static/",indexes:[20]},final:{path:"/tag/final/",indexes:[20]},常量:{path:"/tag/%E5%B8%B8%E9%87%8F/",indexes:[20]},内存限制:{path:"/tag/%E5%86%85%E5%AD%98%E9%99%90%E5%88%B6/",indexes:[21]},"Integer.MAX_VALUE":{path:"/tag/integer.max-value/",indexes:[21]},StringBuffer:{path:"/tag/stringbuffer/",indexes:[22]},"Lambda Expression":{path:"/tag/lambda-expression/",indexes:[23]},"Set Membership":{path:"/tag/set-membership/",indexes:[159]},"Java Collection":{path:"/tag/java-collection/",indexes:[159]},Java版本:{path:"/tag/java%E7%89%88%E6%9C%AC/",indexes:[176]},"Eclipse IDE":{path:"/tag/eclipse-ide/",indexes:[176]},TemporalAccessor:{path:"/tag/temporalaccessor/",indexes:[160]},"Phone Number Conversion":{path:"/tag/phone-number-conversion/",indexes:[177]},Cacheable:{path:"/tag/cacheable/",indexes:[293]},Caching:{path:"/tag/caching/",indexes:[293]},Scheduling:{path:"/tag/scheduling/",indexes:[306]},"Integration Testing":{path:"/tag/integration-testing/",indexes:[306]},StringUtils:{path:"/tag/stringutils/",indexes:[161]},JAR:{path:"/tag/jar/",indexes:[162]},资源路径:{path:"/tag/%E8%B5%84%E6%BA%90%E8%B7%AF%E5%BE%84/",indexes:[162]},完美数:{path:"/tag/%E5%AE%8C%E7%BE%8E%E6%95%B0/",indexes:[178]},BufferedImage:{path:"/tag/bufferedimage/",indexes:[179,201]},图像缩放:{path:"/tag/%E5%9B%BE%E5%83%8F%E7%BC%A9%E6%94%BE/",indexes:[179]},Events:{path:"/tag/events/",indexes:[357]},"Application Events":{path:"/tag/application-events/",indexes:[357]},Immutable:{path:"/tag/immutable/",indexes:[163]},Unmodifiable:{path:"/tag/unmodifiable/",indexes:[163]},"Service Provider Interface":{path:"/tag/service-provider-interface/",indexes:[164]},"Internet Address Resolution":{path:"/tag/internet-address-resolution/",indexes:[164]},"Light-4J":{path:"/tag/light-4j/",indexes:[180]},Microservices:{path:"/tag/microservices/",indexes:[180]},"Apache Camel":{path:"/tag/apache-camel/",indexes:[362]},Loki:{path:"/tag/loki/",indexes:[294]},Grafana:{path:"/tag/grafana/",indexes:[294]},JEP:{path:"/tag/jep/",indexes:[229,284]},"Desktop Class":{path:"/tag/desktop-class/",indexes:[165]},ProcessBuilder:{path:"/tag/processbuilder/",indexes:[165]},"super()":{path:"/tag/super()/",indexes:[166]},Constructor:{path:"/tag/constructor/",indexes:[166]},"Java Best Practices":{path:"/tag/java-best-practices/",indexes:[166]},"Struct Annotation":{path:"/tag/struct-annotation/",indexes:[167]},"User-Defined Types":{path:"/tag/user-defined-types/",indexes:[167]},"Exception Handling":{path:"/tag/exception-handling/",indexes:[338,386]},"Mono.error()":{path:"/tag/mono.error()/",indexes:[386]},Subselect:{path:"/tag/subselect/",indexes:[349]},SQL:{path:"/tag/sql/",indexes:[349,188,191,256]},"Context Receivers":{path:"/tag/context-receivers/",indexes:[337]},"Immutable List":{path:"/tag/immutable-list/",indexes:[140]},ConcurrentModificationException:{path:"/tag/concurrentmodificationexception/",indexes:[338]},LocalTime:{path:"/tag/localtime/",indexes:[141]},Calendar:{path:"/tag/calendar/",indexes:[141,142]},"Date Comparison":{path:"/tag/date-comparison/",indexes:[142]},"Kotlin Coroutine":{path:"/tag/kotlin-coroutine/",indexes:[339]},"RxJava Single":{path:"/tag/rxjava-single/",indexes:[339]},Deferred:{path:"/tag/deferred/",indexes:[339]},"Prototype Scope":{path:"/tag/prototype-scope/",indexes:[169]},Token:{path:"/tag/token/",indexes:[318]},eachCount:{path:"/tag/eachcount/",indexes:[335]},eachCountTo:{path:"/tag/eachcountto/",indexes:[335]},"Spring Kafka":{path:"/tag/spring-kafka/",indexes:[292,309]},"Kafka Listeners":{path:"/tag/kafka-listeners/",indexes:[292]},"Spring Beans":{path:"/tag/spring-beans/",indexes:[143]},"Dynamic Registration":{path:"/tag/dynamic-registration/",indexes:[143]},"CSS Selectors":{path:"/tag/css-selectors/",indexes:[395]},"Web Testing":{path:"/tag/web-testing/",indexes:[395]},"Ambiguous Method Call":{path:"/tag/ambiguous-method-call/",indexes:[170]},"Unit Testing":{path:"/tag/unit-testing/",indexes:[170,226]},Map:{path:"/tag/map/",indexes:[144]},KClass:{path:"/tag/kclass/",indexes:[340]},Duration:{path:"/tag/duration/",indexes:[341]},"Time Management":{path:"/tag/time-management/",indexes:[341]},Hexadecimal:{path:"/tag/hexadecimal/",indexes:[342]},Parse:{path:"/tag/parse/",indexes:[342]},"Apache POI":{path:"/tag/apache-poi/",indexes:[145]},Jackson:{path:"/tag/jackson/",indexes:[145,346,233]},Caffeine:{path:"/tag/caffeine/",indexes:[393]},Redis:{path:"/tag/redis/",indexes:[393]},"JSON Serialization":{path:"/tag/json-serialization/",indexes:[171]},"Null Values":{path:"/tag/null-values/",indexes:[171]},XML:{path:"/tag/xml/",indexes:[146]},"Invalid Characters":{path:"/tag/invalid-characters/",indexes:[146]},Iteration:{path:"/tag/iteration/",indexes:[343]},InputStreamReader:{path:"/tag/inputstreamreader/",indexes:[172]},"EOL Normalization":{path:"/tag/eol-normalization/",indexes:[173]},"String Replace":{path:"/tag/string-replace/",indexes:[173]},"Java 8 Stream API":{path:"/tag/java-8-stream-api/",indexes:[173]},并行流:{path:"/tag/%E5%B9%B6%E8%A1%8C%E6%B5%81/",indexes:[344]},协程:{path:"/tag/%E5%8D%8F%E7%A8%8B/",indexes:[344]},Generics:{path:"/tag/generics/",indexes:[345,193]},"Kotlin Tutorial":{path:"/tag/kotlin-tutorial/",indexes:[345]},Querydsl:{path:"/tag/querydsl/",indexes:[311]},"JPA Criteria":{path:"/tag/jpa-criteria/",indexes:[311]},GZIPInputStream:{path:"/tag/gzipinputstream/",indexes:[174]},文件处理:{path:"/tag/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/",indexes:[174]},位运算:{path:"/tag/%E4%BD%8D%E8%BF%90%E7%AE%97/",indexes:[147,246]},"Distributed Transactions":{path:"/tag/distributed-transactions/",indexes:[376]},Enum:{path:"/tag/enum/",indexes:[346,259]},"kotlinx.serialization":{path:"/tag/kotlinx.serialization/",indexes:[346]},Backticks:{path:"/tag/backticks/",indexes:[347]},Programming:{path:"/tag/programming/",indexes:[347,348]},Value注解:{path:"/tag/value%E6%B3%A8%E8%A7%A3/",indexes:[307]},"Variable Shadowing":{path:"/tag/variable-shadowing/",indexes:[348]},Vigenère密码:{path:"/tag/vigen%C3%A8re%E5%AF%86%E7%A0%81/",indexes:[148]},加密:{path:"/tag/%E5%8A%A0%E5%AF%86/",indexes:[148]},解密:{path:"/tag/%E8%A7%A3%E5%AF%86/",indexes:[148]},"Setter Methods":{path:"/tag/setter-methods/",indexes:[175]},Constructors:{path:"/tag/constructors/",indexes:[175,222]},百分位数:{path:"/tag/%E7%99%BE%E5%88%86%E4%BD%8D%E6%95%B0/",indexes:[150]},数据集:{path:"/tag/%E6%95%B0%E6%8D%AE%E9%9B%86/",indexes:[150]},统计分布:{path:"/tag/%E7%BB%9F%E8%AE%A1%E5%88%86%E5%B8%83/",indexes:[150]},Groovy:{path:"/tag/groovy/",indexes:[151]},"Happy Number":{path:"/tag/happy-number/",indexes:[152]},算法实现:{path:"/tag/%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/",indexes:[152]},Offsets:{path:"/tag/offsets/",indexes:[372]},Commit:{path:"/tag/commit/",indexes:[372]},"Largest Number":{path:"/tag/largest-number/",indexes:[153]},"Remove Digits":{path:"/tag/remove-digits/",indexes:[153]},"Majority Element":{path:"/tag/majority-element/",indexes:[154]},"Peak Elements":{path:"/tag/peak-elements/",indexes:[155]},"Binary Search":{path:"/tag/binary-search/",indexes:[155]},HTML:{path:"/tag/html/",indexes:[336,158]},"kotlinx.html":{path:"/tag/kotlinx.html/",indexes:[336]},"Servlet Filter":{path:"/tag/servlet-filter/",indexes:[156]},"Apache Commons CLI":{path:"/tag/apache-commons-cli/",indexes:[398]},"CLI Development":{path:"/tag/cli-development/",indexes:[398]},事件流平台:{path:"/tag/%E4%BA%8B%E4%BB%B6%E6%B5%81%E5%B9%B3%E5%8F%B0/",indexes:[373]},URI:{path:"/tag/uri/",indexes:[157]},路径:{path:"/tag/%E8%B7%AF%E5%BE%84/",indexes:[157]},网页抓取:{path:"/tag/%E7%BD%91%E9%A1%B5%E6%8A%93%E5%8F%96/",indexes:[158]},Refresh:{path:"/tag/refresh/",indexes:[326]},Fetch:{path:"/tag/fetch/",indexes:[326]},"Entity Management":{path:"/tag/entity-management/",indexes:[326]},AuthorizationManager:{path:"/tag/authorizationmanager/",indexes:[319]},gRPC:{path:"/tag/grpc/",indexes:[286]},拦截器:{path:"/tag/%E6%8B%A6%E6%88%AA%E5%99%A8/",indexes:[286]},异常拦截器:{path:"/tag/%E5%BC%82%E5%B8%B8%E6%8B%A6%E6%88%AA%E5%99%A8/",indexes:[286]},Elasticsearch:{path:"/tag/elasticsearch/",indexes:[399]},Aggregation:{path:"/tag/aggregation/",indexes:[399]},"equals()":{path:"/tag/equals()/",indexes:[197]},"compareTo()":{path:"/tag/compareto()/",indexes:[197]},移动平均:{path:"/tag/%E7%A7%BB%E5%8A%A8%E5%B9%B3%E5%9D%87/",indexes:[198]},Asynchronous:{path:"/tag/asynchronous/",indexes:[181]},Transactional:{path:"/tag/transactional/",indexes:[181]},Permutation:{path:"/tag/permutation/",indexes:[245]},Anagram:{path:"/tag/anagram/",indexes:[245]},持久化上下文:{path:"/tag/%E6%8C%81%E4%B9%85%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87/",indexes:[353]},清除管理实体:{path:"/tag/%E6%B8%85%E9%99%A4%E7%AE%A1%E7%90%86%E5%AE%9E%E4%BD%93/",indexes:[353]},"Code Coverage":{path:"/tag/code-coverage/",indexes:[400]},"Test Coverage":{path:"/tag/test-coverage/",indexes:[400]},Collectors:{path:"/tag/collectors/",indexes:[232]},数字比较:{path:"/tag/%E6%95%B0%E5%AD%97%E6%AF%94%E8%BE%83/",indexes:[217]},浮点数:{path:"/tag/%E6%B5%AE%E7%82%B9%E6%95%B0/",indexes:[217]},整数:{path:"/tag/%E6%95%B4%E6%95%B0/",indexes:[217]},Flux:{path:"/tag/flux/",indexes:[261]},map:{path:"/tag/map/",indexes:[253,261,271]},doOnNext:{path:"/tag/doonnext/",indexes:[261]},Mono:{path:"/tag/mono/",indexes:[308,273]},异步编程:{path:"/tag/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/",indexes:[273]},数据压缩:{path:"/tag/%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/",indexes:[199]},"Java GZIP":{path:"/tag/java-gzip/",indexes:[199]},重试策略:{path:"/tag/%E9%87%8D%E8%AF%95%E7%AD%96%E7%95%A5/",indexes:[247]},微服务:{path:"/tag/%E5%BE%AE%E6%9C%8D%E5%8A%A1/",indexes:[247,297]},Consumer:{path:"/tag/consumer/",indexes:[309]},Delay:{path:"/tag/delay/",indexes:[309]},TestNG:{path:"/tag/testng/",indexes:[200]},SoftAssert:{path:"/tag/softassert/",indexes:[200]},"1D数组":{path:"/tag/1d%E6%95%B0%E7%BB%84/",indexes:[218]},CLOB:{path:"/tag/clob/",indexes:[262]},数据库操作:{path:"/tag/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/",indexes:[262]},十进制转分数:{path:"/tag/%E5%8D%81%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%88%86%E6%95%B0/",indexes:[274]},short:{path:"/tag/short/",indexes:[219]},Timestamp:{path:"/tag/timestamp/",indexes:[182]},Collection:{path:"/tag/collection/",indexes:[233]},队列:{path:"/tag/%E9%98%9F%E5%88%97/",indexes:[234]},ArrayList:{path:"/tag/arraylist/",indexes:[220,225,235]},原始类型数组:{path:"/tag/%E5%8E%9F%E5%A7%8B%E7%B1%BB%E5%9E%8B%E6%95%B0%E7%BB%84/",indexes:[220]},图像转换:{path:"/tag/%E5%9B%BE%E5%83%8F%E8%BD%AC%E6%8D%A2/",indexes:[201]},"Java NIO":{path:"/tag/java-nio/",indexes:[236]},ByteBuffer:{path:"/tag/bytebuffer/",indexes:[236]},DataOutputStream:{path:"/tag/dataoutputstream/",indexes:[236]},HashMap:{path:"/tag/hashmap/",indexes:[221]},字符计数:{path:"/tag/%E5%AD%97%E7%AC%A6%E8%AE%A1%E6%95%B0/",indexes:[221]},性能测试:{path:"/tag/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/",indexes:[183]},自动化测试:{path:"/tag/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/",indexes:[183]},"Java Enums":{path:"/tag/java-enums/",indexes:[263]},"Inner Classes":{path:"/tag/inner-classes/",indexes:[263]},"Java String":{path:"/tag/java-string/",indexes:[202]},"String Conversion":{path:"/tag/string-conversion/",indexes:[190,202]},Iterator:{path:"/tag/iterator/",indexes:[264]},Iterable:{path:"/tag/iterable/",indexes:[264]},Lombok:{path:"/tag/lombok/",indexes:[222]},Annotations:{path:"/tag/annotations/",indexes:[222,259]},"Optional.of()":{path:"/tag/optional.of()/",indexes:[249]},"Optional.ofNullable()":{path:"/tag/optional.ofnullable()/",indexes:[249]},Logback:{path:"/tag/logback/",indexes:[210,394]},Configuration:{path:"/tag/configuration/",indexes:[210,394]},SDK:{path:"/tag/sdk/",indexes:[203]},文件下载:{path:"/tag/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/",indexes:[203]},复数:{path:"/tag/%E5%A4%8D%E6%95%B0/",indexes:[184]},运算:{path:"/tag/%E8%BF%90%E7%AE%97/",indexes:[184]},文本提取:{path:"/tag/%E6%96%87%E6%9C%AC%E6%8F%90%E5%8F%96/",indexes:[250]},Failsafe:{path:"/tag/failsafe/",indexes:[251]},容错:{path:"/tag/%E5%AE%B9%E9%94%99/",indexes:[251]},Easter:{path:"/tag/easter/",indexes:[204]},"Symmetric Substring":{path:"/tag/symmetric-substring/",indexes:[205]},"String Manipulation":{path:"/tag/string-manipulation/",indexes:[205]},最小元素:{path:"/tag/%E6%9C%80%E5%B0%8F%E5%85%83%E7%B4%A0/",indexes:[223]},索引:{path:"/tag/%E7%B4%A2%E5%BC%95/",indexes:[223,267]},Number:{path:"/tag/number/",indexes:[266]},"URL Redirection":{path:"/tag/url-redirection/",indexes:[206]},HttpURLConnection:{path:"/tag/httpurlconnection/",indexes:[206]},HttpClient:{path:"/tag/httpclient/",indexes:[206]},"Second Smallest":{path:"/tag/second-smallest/",indexes:[252]},"Java 流":{path:"/tag/java-%E6%B5%81/",indexes:[207]},"SQL Syntax Error":{path:"/tag/sql-syntax-error/",indexes:[296]},"Table Not Found":{path:"/tag/table-not-found/",indexes:[296]},"Full-Text Search":{path:"/tag/full-text-search/",indexes:[237]},"Partial-Text Search":{path:"/tag/partial-text-search/",indexes:[237]},"Apache Avro":{path:"/tag/apache-avro/",indexes:[224]},代码生成:{path:"/tag/%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/",indexes:[224]},二进制:{path:"/tag/%E4%BA%8C%E8%BF%9B%E5%88%B6/",indexes:[208]},补码:{path:"/tag/%E8%A1%A5%E7%A0%81/",indexes:[208]},MockMVC:{path:"/tag/mockmvc/",indexes:[295]},Sequence:{path:"/tag/sequence/",indexes:[379]},Nextval:{path:"/tag/nextval/",indexes:[379]},数组排序:{path:"/tag/%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F/",indexes:[267]},编程技巧:{path:"/tag/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/",indexes:[238]},Filter:{path:"/tag/filter/",indexes:[185]},"Response Body":{path:"/tag/response-body/",indexes:[185]},Git:{path:"/tag/git/",indexes:[401]},"Null Handling":{path:"/tag/null-handling/",indexes:[225]},equals:{path:"/tag/equals/",indexes:[253]},get:{path:"/tag/get/",indexes:[253]},WebAssembly:{path:"/tag/webassembly/",indexes:[397]},"java.sql.Timestamp":{path:"/tag/java.sql.timestamp/",indexes:[239]},ZonedDateTime:{path:"/tag/zoneddatetime/",indexes:[239]},"XML to PDF":{path:"/tag/xml-to-pdf/",indexes:[268]},"Apache FOP":{path:"/tag/apache-fop/",indexes:[268]},iText:{path:"/tag/itext/",indexes:[268,270]},XML转换:{path:"/tag/xml%E8%BD%AC%E6%8D%A2/",indexes:[276]},DOM:{path:"/tag/dom/",indexes:[276]},EOFException:{path:"/tag/eofexception/",indexes:[209]},Java异常:{path:"/tag/java%E5%BC%82%E5%B8%B8/",indexes:[209]},文件读取:{path:"/tag/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/",indexes:[209]},"Elvis Operator":{path:"/tag/elvis-operator/",indexes:[240]},WebFlux:{path:"/tag/webflux/",indexes:[387]},Interceptor:{path:"/tag/interceptor/",indexes:[387]},Headers:{path:"/tag/headers/",indexes:[387]},迭代:{path:"/tag/%E8%BF%AD%E4%BB%A3/",indexes:[241]},并行处理:{path:"/tag/%E5%B9%B6%E8%A1%8C%E5%A4%84%E7%90%86/",indexes:[254]},JVM:{path:"/tag/jvm/",indexes:[390]},Pair:{path:"/tag/pair/",indexes:[227]},Comparator:{path:"/tag/comparator/",indexes:[227]},Builder模式:{path:"/tag/builder%E6%A8%A1%E5%BC%8F/",indexes:[211]},继承:{path:"/tag/%E7%BB%A7%E6%89%BF/",indexes:[351]},组合:{path:"/tag/%E7%BB%84%E5%90%88/",indexes:[351]},Java安装:{path:"/tag/java%E5%AE%89%E8%A3%85/",indexes:[282]},macOS:{path:"/tag/macos/",indexes:[282]},"Apache Commons Configuration":{path:"/tag/apache-commons-configuration/",indexes:[228]},Compression:{path:"/tag/compression/",indexes:[186]},Archiving:{path:"/tag/archiving/",indexes:[186]},Brave:{path:"/tag/brave/",indexes:[187]},Zipkin:{path:"/tag/zipkin/",indexes:[187]},分布式追踪:{path:"/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%BD%E8%B8%AA/",indexes:[187]},DuckDB:{path:"/tag/duckdb/",indexes:[188]},CSV:{path:"/tag/csv/",indexes:[188,278]},JFreeChart:{path:"/tag/jfreechart/",indexes:[189]},图表库:{path:"/tag/%E5%9B%BE%E8%A1%A8%E5%BA%93/",indexes:[189]},"Java 22":{path:"/tag/java-22/",indexes:[229]},JavaParser:{path:"/tag/javaparser/",indexes:[255]},AST:{path:"/tag/ast/",indexes:[255]},SSH:{path:"/tag/ssh/",indexes:[242]},Java库:{path:"/tag/java%E5%BA%93/",indexes:[242]},"Simple Java Mail":{path:"/tag/simple-java-mail/",indexes:[212]},"JavaMail API":{path:"/tag/javamail-api/",indexes:[212]},数据比较:{path:"/tag/%E6%95%B0%E6%8D%AE%E6%AF%94%E8%BE%83/",indexes:[402]},无符号字节:{path:"/tag/%E6%97%A0%E7%AC%A6%E5%8F%B7%E5%AD%97%E8%8A%82/",indexes:[213]},OffsetDateTime:{path:"/tag/offsetdatetime/",indexes:[190]},jOOQ:{path:"/tag/jooq/",indexes:[191]},MapStruct:{path:"/tag/mapstruct/",indexes:[269]},LocalDateTime:{path:"/tag/localdatetime/",indexes:[269]},数据映射:{path:"/tag/%E6%95%B0%E6%8D%AE%E6%98%A0%E5%B0%84/",indexes:[243]},"Apache PDFBox":{path:"/tag/apache-pdfbox/",indexes:[270]},Monads:{path:"/tag/monads/",indexes:[258]},"Functional Programming":{path:"/tag/functional-programming/",indexes:[244,258]},监控:{path:"/tag/%E7%9B%91%E6%8E%A7/",indexes:[297]},AI:{path:"/tag/ai/",indexes:[277]},ChatGPT:{path:"/tag/chatgpt/",indexes:[277]},API:{path:"/tag/api/",indexes:[277]},"Parallel Collectors":{path:"/tag/parallel-collectors/",indexes:[192]},PersistenceUnit:{path:"/tag/persistenceunit/",indexes:[350]},PersistenceContext:{path:"/tag/persistencecontext/",indexes:[350]},Polymorphism:{path:"/tag/polymorphism/",indexes:[194]},Java编程:{path:"/tag/java%E7%BC%96%E7%A8%8B/",indexes:[230]},toString方法:{path:"/tag/tostring%E6%96%B9%E6%B3%95/",indexes:[214]},空值处理:{path:"/tag/%E7%A9%BA%E5%80%BC%E5%A4%84%E7%90%86/",indexes:[214]},PrintWriter:{path:"/tag/printwriter/",indexes:[195]},"write()":{path:"/tag/write()/",indexes:[195]},"print()":{path:"/tag/print()/",indexes:[195]},OpenCSV:{path:"/tag/opencsv/",indexes:[278]},"Apache Commons CSV":{path:"/tag/apache-commons-csv/",indexes:[278]},子字符串:{path:"/tag/%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/",indexes:[231]},Regex:{path:"/tag/regex/",indexes:[279]},"Back Reference":{path:"/tag/back-reference/",indexes:[279]},Lookaround:{path:"/tag/lookaround/",indexes:[279]},Java安全:{path:"/tag/java%E5%AE%89%E5%85%A8/",indexes:[283]},UnrecoverableKeyException:{path:"/tag/unrecoverablekeyexception/",indexes:[283]},"Java Stream API":{path:"/tag/java-stream-api/",indexes:[271]},filter:{path:"/tag/filter/",indexes:[271]},Quarkus:{path:"/tag/quarkus/",indexes:[215]},RBAC:{path:"/tag/rbac/",indexes:[215]},持久化:{path:"/tag/%E6%8C%81%E4%B9%85%E5%8C%96/",indexes:[352]},级联:{path:"/tag/%E7%BA%A7%E8%81%94/",indexes:[352]},Matrix:{path:"/tag/matrix/",indexes:[196]},Zero:{path:"/tag/zero/",indexes:[196]},Optimization:{path:"/tag/optimization/",indexes:[196]},Converter:{path:"/tag/converter/",indexes:[328]},"Web Client":{path:"/tag/web-client/",indexes:[388]},"Static Code Analysis":{path:"/tag/static-code-analysis/",indexes:[391]},Infer:{path:"/tag/infer/",indexes:[391]},JUnit:{path:"/tag/junit/",indexes:[260]},doAnswer:{path:"/tag/doanswer/",indexes:[260]},thenReturn:{path:"/tag/thenreturn/",indexes:[260]},依赖树:{path:"/tag/%E4%BE%9D%E8%B5%96%E6%A0%91/",indexes:[370]},依赖图:{path:"/tag/%E4%BE%9D%E8%B5%96%E5%9B%BE/",indexes:[370]},hashCode:{path:"/tag/hashcode/",indexes:[216]},"Unit Test":{path:"/tag/unit-test/",indexes:[216]},Autowired:{path:"/tag/autowired/",indexes:[298]},InjectMocks:{path:"/tag/injectmocks/",indexes:[298]},Sorting:{path:"/tag/sorting/",indexes:[280]},Cache:{path:"/tag/cache/",indexes:[308]},注解:{path:"/tag/%E6%B3%A8%E8%A7%A3/",indexes:[403]}}}}},Xc=["/posts/baeldung/2024-06-25/2024-06-25-BigDecimal.ZERO%20vs.%20new%20BigDecimal%200%20.html","/posts/baeldung/2024-06-25/2024-06-25-Callbacks%20in%20ListenableFuture%20and%20CompletableFuture.html","/posts/baeldung/2024-06-25/2024-06-25-Comparing%20One%20String%20With%20Multiple%20Values%20in%20One%20Expression%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Convert%20a%20String%20to%20a%20List%20of%20Characters%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Convert%20an%20OutputStream%20to%20a%20Byte%20Array%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Detect%20the%20Last%20Iteration%20in%20for%20Loops%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Find%20Files%20by%20Extension%20in%20Specified%20Directory%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Format%20LocalDate%20to%20ISO%208601%20With%20T%20and%20Z.html","/posts/baeldung/2024-06-25/2024-06-25-Lazy%20Field%20Initialization%20with%20Lambdas.html","/posts/baeldung/2024-06-25/2024-06-25-Reactor%20WebFlux%20vs%20Virtual%20Threads.html","/posts/baeldung/2024-06-25/2024-06-25-What%20Does%20It%20Mean%20to%20Hydrate%20an%20Object%20.html","/posts/baeldung/2024-06-26/2024-06-26-A%20Guide%20to%20Timefold%20Solver%20for%20Employee%20Scheduling.html","/posts/baeldung/2024-06-26/2024-06-26-Deserializing%20JSON%20to%20Java%20Record%20using%20Gson.html","/posts/baeldung/2024-06-26/2024-06-26-Differences%20Between%20Entities%20and%20DTOs.html","/posts/baeldung/2024-06-26/2024-06-26-Get%20Index%20of%20First%20Element%20Matching%20Boolean%20Using%20Java%20Streams.html","/posts/baeldung/2024-06-26/2024-06-26-Handling%20NullPointerException%20in%20findFirst%20%20%20When%20the%20First%20Element%20Is%20Null.html","/posts/baeldung/2024-06-26/2024-06-26-How%20to%20Effectively%20Unit%20Test%20CompletableFuture.html","/posts/baeldung/2024-06-26/2024-06-26-Inter%20Process%20Communication%20Methods%20in%20Java.html","/posts/baeldung/2024-06-26/2024-06-26-Recursively%20Sum%20the%20Integers%20in%20an%20Array.html","/posts/baeldung/2024-06-26/2024-06-26-Skip%20Bytes%20in%20InputStream%20in%20Java.html","/posts/baeldung/2024-06-26/2024-06-26-Static%20Final%20Variables%20in%20Java.html","/posts/baeldung/2024-06-26/2024-06-26-String%20s%20Maximum%20Length%20in%20Java.html","/posts/baeldung/2024-06-26/2024-06-26-String%20vs%20StringBuffer%20Comparison%20in%20Java.html","/posts/baeldung/2024-06-26/2024-06-26-Verify%20That%20Lambda%20Expression%20Was%20Called%20Using%20Mockito.html","/posts/baeldung/2024-06-25/2024-06-25-Convert%20Excel%20Files%20to%20PDF%20Using%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Check%20If%20a%20Java%20StringBuilder%20Object%20Contains%20a%20Character.html","/posts/baeldung/2024-06-24/2024-06-24-Check%20if%20List%20Contains%20at%20Least%20One%20Enum.html","/posts/baeldung/2024-06-24/2024-06-24-Check%20if%20a%20Point%20Is%20Between%20Two%20Points%20Drawn%20on%20a%20Straight%20Line%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Convert%20Null%20Value%20to%20a%20Default%20Value%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Difference%20Between%20Xmx%20and%20MaxRAM%20JVM%20Parameters.html","/posts/baeldung/2024-06-24/2024-06-24-Difference%20Between%20a%20Future%20and%20a%20Promise%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Generational%20ZGC%20in%20Java%2021.html","/posts/baeldung/2024-06-24/2024-06-24-Java%208%20Stream%20Operation%20on%20the%20Empty%20List.html","/posts/baeldung/2024-06-25/2024-06-25-Calculate%20Months%20Between%20Two%20Dates%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Comparison%20of%20for%20Loops%20and%20Iterators.html","/posts/baeldung/2024-06-25/2024-06-25-Convert%20Byte%20Array%20to%20JSON%20and%20Vice%20Versa%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Convert%20String%20to%20long%20or%20Long%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Difference%20Between%20execute%20%20%20and%20submit%20%20%20in%20Executor%20Service.html","/posts/baeldung/2024-06-25/2024-06-25-Find%20Missing%20Number%20From%20a%20Given%20Array%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-How%20to%20Write%20Strings%20to%20OutputStream%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Java%20System.currentTimeMillis%20%20%20Vs.%20System.nanoTime%20%20.html","/posts/baeldung/2024-06-25/2024-06-25-Java%20s%20String.length%20%20%20and%20String.getBytes%20%20.length.html","/posts/baeldung/2024-06-25/2024-06-25-Print%20a%20Double%20Value%20Without%20Scientific%20Notation%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Read%20a%20File%20and%20Split%20It%20Into%20Multiple%20Files%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-Return%20Map%20Instead%20of%20List%20in%20Spring%20Data%20JPA.html","/posts/baeldung/2024-06-25/2024-06-25-Rotating%20a%20Java%20String%20By%20n%20Characters.html","/posts/baeldung/2024-06-25/2024-06-25-Sorting%20One%20List%20Based%20on%20Another%20List%20in%20Java.html","/posts/baeldung/2024-06-25/2024-06-25-UTF%208%20Validation%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Remove%20Characters%20From%20a%20String%20That%20Are%20in%20the%20Other%20String.html","/posts/baeldung/2024-06-24/2024-06-24-Removing%20the%20Last%20Node%20in%20a%20Linked%20List.html","/posts/baeldung/2024-06-24/2024-06-24-Read%20Input%20Character%20by%20Character%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Calculate%20Number%20of%20Weekdays%20Between%20Two%20Dates%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Convert%20byte%20to%20int%20Type%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Enable%20Java%20SSL%20Debug%20Logging.html","/posts/baeldung/2024-06-23/2024-06-23-JFR%20View%20Command%20in%20Java%2021.html","/posts/baeldung/2024-06-23/2024-06-23-Reset%20ListIterator%20to%20First%20Element%20of%20the%20List%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Setting%20up%20and%20Using%20Spock%20With%20Gradle.html","/posts/baeldung/2024-06-23/2024-06-23-Simple%20Morse%20Code%20Translation%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Using%20Current%20Time%20as%20Filename%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Accessing%20Private%20Java%20Fields%20via%20Kotlin%20Extension%20Functions.html","/posts/baeldung/2024-06-24/2024-06-24-Call%20a%20Method%20on%20Each%20Element%20of%20a%20List%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Check%20if%20a%20Float%20Value%20is%20Equivalent%20to%20an%20Integer%20Value%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Convert%20Joda%20Time%20DateTime%20to%20Date%20and%20Vice%20Versa.html","/posts/baeldung/2024-06-24/2024-06-24-Converting%20BigDecimal%20to%20Integer%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Converting%20Integer%20to%20BigDecimal%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Create%20Kubernetes%20Operators%20with%20the%20Java%20Operator%20SDK.html","/posts/baeldung/2024-06-24/2024-06-24-Getting%20Query%20String%20Parameters%20from%20HttpServletRequest.html","/posts/baeldung/2024-06-24/2024-06-24-Introduction%20to%20Postman.html","/posts/baeldung/2024-06-24/2024-06-24-Printing%20Message%20on%20Console%20without%20Using%20main%20%20%20Method%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-PriorityQueue%20iterator%20%20%20Method%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Replace%20Non%20Printable%20Unicode%20Characters%20in%20Java.html","/posts/baeldung/2024-06-24/2024-06-24-Solving%20the%20ParameterResolutionException%20in%20JUnit%205.html","/posts/baeldung/2024-06-24/2024-06-24-Using%20Static%20Methods%20Instead%20of%20Deprecated%20JsonParser.html","/posts/baeldung/2024-06-24/2024-06-24-What%20Is%20the%20Error%20%20%20Non%20static%20method%20cannot%20be%20referenced%20from%20a%20static%20context%20%20.html","/posts/baeldung/2024-06-23/2024-06-23-Run%20Length%20Encoding%20and%20Decoding%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Calculate%20Weighted%20Mean%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Convert%20Date%20to%20Unix%20Timestamp%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-CountDownLatch%20vs.%20Semaphore.html","/posts/baeldung/2024-06-22/2024-06-22-Creating%20a%20Custom%20URL%20Connection.html","/posts/baeldung/2024-06-22/2024-06-22-Find%20the%20Equilibrium%20Indexes%20of%20an%20Array%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Instantiate%20an%20Inner%20Class%20With%20Reflection%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Pagination%20With%20JDBC.html","/posts/baeldung/2024-06-22/2024-06-22-Quarkus%20and%20Virtual%20Threads.html","/posts/baeldung/2024-06-22/2024-06-22-Run%20Maven%20From%20Java%20Code.html","/posts/baeldung/2024-06-22/2024-06-22-Storing%20UUID%20as%20Base64%20String%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Translating%20Space%20Characters%20in%20URLEncoder.html","/posts/baeldung/2024-06-22/2024-06-22-Understanding%20%20Raw%20type.%20References%20to%20generic%20types%20should%20be%20parameterized%20%20Error.html","/posts/baeldung/2024-06-23/2024-06-23-Access%20Job%20Parameters%20From%20ItemReader%20in%20Spring%20Batch.html","/posts/baeldung/2024-06-23/2024-06-23-Calculating%20the%20Power%20of%20Any%20Number%20in%20Java%20Without%20Using%20Math%20pow%20%20%20Method.html","/posts/baeldung/2024-06-23/2024-06-23-Convert%20Gregorian%20to%20Hijri%20Date%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Convert%20Long%20to%20Date%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Convert%20String%20Date%20to%20XMLGregorianCalendar%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Creating%20Unicode%20Character%20From%20Its%20Code%20Point%20Hex%20String.html","/posts/baeldung/2024-06-23/2024-06-23-Difference%20Between%20%20mvn%20verify%20%20and%20%20mvn%20test%20.html","/posts/baeldung/2024-06-23/2024-06-23-Difference%20between%20ZoneOffset.UTC%20and%20ZoneId.of%20%20UTC%20%20.html","/posts/baeldung/2024-06-23/2024-06-23-Generating%20Unique%20Positive%20Long%20Using%20SecureRandom%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-How%20to%20Determine%20if%20a%20String%20Contains%20Invalid%20Encoded%20Characters.html","/posts/baeldung/2024-06-23/2024-06-23-Improving%20Test%20Coverage%20and%20Readability%20With%20Spock%20s%20Data%20Pipes%20and%20Tables.html","/posts/baeldung/2024-06-23/2024-06-23-Monkey%20Patching%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Normalize%20a%20URL%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Print%20a%20Java%202D%20Array.html","/posts/baeldung/2024-06-23/2024-06-23-Read%20and%20Write%20Files%20in%20Java%20Using%20Separate%20Threads.html","/posts/baeldung/2024-06-23/2024-06-23-Regular%20Expression%20for%20Password%20Validation%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Set%20an%20Environment%20Variable%20at%20Runtime%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Shutting%20Down%20on%20OutOfMemoryError%20in%20Java.html","/posts/baeldung/2024-06-23/2024-06-23-Structured%20Logging%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Count%20Uppercase%20and%20Lowercase%20Letters%20in%20a%20String.html","/posts/baeldung/2024-06-21/2024-06-21-Create%20JavaType%20From%20Class%20with%20Jackson.html","/posts/baeldung/2024-06-21/2024-06-21-Get%20First%20n%20Characters%20in%20a%20String%20in%20Java.html","/posts/baeldung/2024-06-21/2024-06-21-Gson%20TypeToken%20With%20Dynamic%20List%20Item%20Type.html","/posts/baeldung/2024-06-21/2024-06-21-How%20to%20Pretty%20Print%20a%20Map%20in%20Java.html","/posts/baeldung/2024-06-21/2024-06-21-Implementing%20GraphQL%20Mutation%20Without%20Returning%20Data.html","/posts/baeldung/2024-06-21/2024-06-21-Remove%20Only%20Trailing%20Spaces%20or%20Whitespace%20From%20a%20String%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-A%20Guide%20to%20etcd.html","/posts/baeldung/2024-06-22/2024-06-22-Add%20Camel%20Route%20at%20Runtime%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Check%20if%20String%20is%20Base64%20Encoded.html","/posts/baeldung/2024-06-22/2024-06-22-Check%20if%20Two%20Strings%20Are%20Rotations%20of%20Each%20Other.html","/posts/baeldung/2024-06-22/2024-06-22-Check%20if%20a%20String%20Is%20Equal%20to%20Its%20Mirror%20Reflection.html","/posts/baeldung/2024-06-22/2024-06-22-Collect%20Stream%20of%20entrySet%20%20%20to%20a%20LinkedHashMap.html","/posts/baeldung/2024-06-22/2024-06-22-CompletableFuture%20runAsync%20%20%20vs.%20supplyAsync%20%20%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Convert%20Infix%20to%20Postfix%20Expressions%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Difference%20Between%20thenApply%20%20%20and%20thenApplyAsync%20%20%20in%20CompletableFuture.html","/posts/baeldung/2024-06-22/2024-06-22-Find%20The%20Largest%20Number%20in%20a%20String.html","/posts/baeldung/2024-06-22/2024-06-22-Find%20the%20First%20Non%20repeating%20Element%20of%20a%20List.html","/posts/baeldung/2024-06-22/2024-06-22-Guide%20to%20System.in.read%20%20.html","/posts/baeldung/2024-06-22/2024-06-22-Mask%20an%20Email%20Address%20and%20Phone%20Number%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Moves%20Zeros%20to%20the%20End%20of%20an%20Array%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Mutable%20vs.%20Immutable%20Objects%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Preventing%20Gson%20from%20Expressing%20Integers%20as%20Floats.html","/posts/baeldung/2024-06-22/2024-06-22-Solving%20Rod%20Cutting%20Problem%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Understanding%20Kafka%20InstanceAlreadyExistsException%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-View%20Kafka%20Headers%20in%20Java.html","/posts/baeldung/2024-06-21/2024-06-21-Count%20the%20Number%20of%20Unique%20Digits%20in%20an%20Integer%20using%20Java.html","/posts/baeldung/2024-06-21/2024-06-21-Finding%20the%20Parent%20of%20a%20Node%20in%20a%20Binary%20Search%20Tree%20with%20Java.html","/posts/baeldung/2024-06-21/2024-06-21-Generate%20Juggler%20Sequence%20in%20Java.html","/posts/baeldung/2024-06-21/2024-06-21-Get%20the%20Initials%20of%20a%20Name%20in%20Java.html","/posts/baeldung/2024-06-21/2024-06-21-How%20to%20Mock%20Amazon%20S3%20for%20Integration%20Test.html","/posts/baeldung/2024-06-21/2024-06-21-Modify%20and%20Print%20List%20Items%20With%20Java%20Streams.html","/posts/baeldung/2024-06-21/2024-06-21-Serialization%20with%20FlatBuffers%20in%20Java.html","/posts/baeldung/2024-06-21/2024-06-21-Simplified%20Array%20Operations%20on%20JsonNode%20Without%20Typecasting%20in%20Jackson.html","/posts/baeldung/Archive/2024-06-20-Add%20One%20Element%20to%20an%20Immutable%20List%20in%20Java.html","/posts/baeldung/Archive/2024-06-20-Check%20if%20a%20Given%20Time%20Lies%20Between%20Two%20Times%20Regardless%20of%20Date.html","/posts/baeldung/Archive/2024-06-20-Checking%20if%20a%20Date%20Object%20Equals%20Yesterday.html","/posts/baeldung/Archive/2024-06-20-Dynamically%20Register%20Spring%20Beans%20Based%20on%20Properties.html","/posts/baeldung/Archive/2024-06-20-Flatten%20a%20Stream%20of%20Maps%20to%20a%20Single%20Map%20in%20Java.html","/posts/baeldung/Archive/2024-06-20-How%20to%20Convert%20Excel%20to%20JSON%20in%20Java.html","/posts/baeldung/Archive/2024-06-20-Invalid%20Characters%20in%20XML.html","/posts/baeldung/Archive/2024-06-20-Representation%20of%20Integers%20at%20a%20Bit%20Level%20in%20Java.html","/posts/baeldung/Archive/2024-06-20-Vigen%20re%20Cipher%20in%20Java.html","/posts/baeldung/Archive/2024-06-21-Adding%20Elements%20to%20a%20Collection%20During%20Iteration.html","/posts/baeldung/Archive/2024-06-21-Calculate%20Percentiles%20in%20Java.html","/posts/baeldung/Archive/2024-06-21-Capturing%20Method%20Arguments%20When%20Running%20Spock%20Tests.html","/posts/baeldung/Archive/2024-06-21-Check%20if%20a%20Number%20Is%20a%20Happy%20Number%20in%20Java.html","/posts/baeldung/Archive/2024-06-21-Find%20the%20Largest%20Number%20Possible%20After%20Removing%20k%20Digits%20of%20a%20Number.html","/posts/baeldung/Archive/2024-06-21-Finding%20the%20Majority%20Element%20of%20an%20Array%20in%20Java.html","/posts/baeldung/Archive/2024-06-21-Finding%20the%20Peak%20Elements%20of%20a%20List.html","/posts/baeldung/Archive/2024-06-21-How%20to%20Autowire%20a%20Spring%20Bean%20in%20a%20Servlet%20Filter.html","/posts/baeldung/Archive/2024-06-21-Obtaining%20the%20Last%20Path%20Segment%20of%20a%20URI%20in%20Java.html","/posts/baeldung/Archive/2024-06-21-Parsing%20HTML%20Table%20in%20Java%20With%20Jsoup.html","/posts/baeldung/Archive/2024-06-19-Check%20if%20an%20Element%20Is%20Present%20in%20a%20Set%20in%20Java.html","/posts/baeldung/Archive/2024-06-19-Convert%20TemporalAccessor%20to%20LocalDate.html","/posts/baeldung/Archive/2024-06-19-Get%20Last%20n%20Characters%20From%20a%20String.html","/posts/baeldung/Archive/2024-06-19-Get%20a%20Path%20to%20a%20Resource%20in%20a%20Java%20JAR%20File.html","/posts/baeldung/Archive/2024-06-19-Immutable%20vs%20Unmodifiable%20Collection%20in%20Java.html","/posts/baeldung/Archive/2024-06-19-Internet%20Address%20Resolution%20SPI%20in%20Java.html","/posts/baeldung/Archive/2024-06-19-Opening%20HTML%20File%20Using%20Java.html","/posts/baeldung/Archive/2024-06-19-Statements%20Before%20super%20%20%20in%20Java.html","/posts/baeldung/Archive/2024-06-19-The%20%20Struct%20Annotation%20Type%20in%20Hibernate%20%20%20Structured%20User%20Defined%20Types.html","/posts/baeldung/Archive/2024-06-20-Converting%20UTF%208%20to%20ISO%208859%201%20in%20Java.html","/posts/baeldung/Archive/2024-06-20-Create%20Spring%20Prototype%20Scope%20Bean%20with%20Runtime%20Arguments.html","/posts/baeldung/Archive/2024-06-20-Fix%20Ambiguous%20Method%20Call%20Error%20in%20Mockito.html","/posts/baeldung/Archive/2024-06-20-Include%20null%20Value%20in%20JSON%20Serialization.html","/posts/baeldung/Archive/2024-06-20-Java%20InputStream%20vs.%20InputStreamReader.html","/posts/baeldung/Archive/2024-06-20-Normalizing%20the%20EOL%20Character%20in%20Java.html","/posts/baeldung/Archive/2024-06-20-Reading%20a%20.gz%20File%20Line%20by%20Line%20Using%20GZIPInputStream.html","/posts/baeldung/Archive/2024-06-20-When%20to%20Use%20Setter%20Methods%20or%20Constructors%20for%20Setting%20a%20Variable%20s%20Value%20in%20Java.html","/posts/baeldung/Archive/2024-06-19-Checking%20Which%20Java%20Version%20Is%20Running%20in%20Eclipse.html","/posts/baeldung/Archive/2024-06-19-Convert%20a%20Phone%20Number%20in%20Words%20to%20Number%20with%20Java.html","/posts/baeldung/Archive/2024-06-19-How%20to%20Check%20Number%20Perfection.html","/posts/baeldung/Archive/2024-06-19-How%20to%20Scale%20a%20Bufferedimage%20in%20Java%20.html","/posts/baeldung/Archive/2024-06-19-Introduction%20to%20Light%204J.html","/posts/baeldung/Archive/Can%20%20Transactional%20and%20%20Async%20Work%20Together%20.html","/posts/baeldung/Archive/Convert%20Google%20Protocol%20Buffer%20Timestamp%20to%20LocalDate.html","/posts/baeldung/Archive/Create%20and%20Run%20Apache%20JMeter%20Test%20Scripts%20via%20Java%20Program.html","/posts/baeldung/Archive/Exploring%20Complex%20Number%20Arithmetic%20Operations%20in%20Java.html","/posts/baeldung/Archive/Get%20the%20Response%20Body%20in%20Spring%20Boot%20Filter.html","/posts/baeldung/Archive/Intro%20to%20the%20Apache%20Commons%20Compress%20Project.html","/posts/baeldung/Archive/Introduction%20to%20Brave.html","/posts/baeldung/Archive/Introduction%20to%20DuckDB.html","/posts/baeldung/Archive/Introduction%20to%20JFreeChart.html","/posts/baeldung/Archive/Java%E4%B8%AD%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BAOffsetDateTime.html","/posts/baeldung/Archive/Join%20Two%20Tables%20Using%20jOOQ.html","/posts/baeldung/Archive/Parallel%20Collection%20Processing%20with%20Parallel%20Collectors%20and%20Virtual%20Threads.html","/posts/baeldung/Archive/Pass%20a%20Class%20as%20a%20Parameter%20in%20Java.html","/posts/baeldung/Archive/Polymorphism%20with%20Gson.html","/posts/baeldung/Archive/PrintWriter%20write%20%20%20vs%20print%20%20%20Method%20in%20Java.html","/posts/baeldung/Archive/Set%20Matrix%20Elements%20to%20Zero%20in%20Java.html","/posts/baeldung/Archive/BigDecimal%20equals%20%20%20vs.%20compareTo%20%20.html","/posts/baeldung/Archive/Calculating%20Moving%20Averages%20in%20Java.html","/posts/baeldung/Archive/Compress%20and%20Create%20a%20Byte%20Array%20Using%20GZip.html","/posts/baeldung/Archive/Continue%20the%20Test%20Even%20After%20Assertion%20Failure%20in%20TestNG.html","/posts/baeldung/Archive/Converting%20Image%20to%20BufferedImage%20in%20Java.html","/posts/baeldung/Archive/Difference%20Between%20Casting%20to%20String%20and%20String.valueOf%20%20.html","/posts/baeldung/Archive/Download%20File%20from%20S3%20Given%20a%20URL.html","/posts/baeldung/Archive/Find%20the%20Date%20of%20Easter%20Sunday%20for%20the%20Given%20Year.html","/posts/baeldung/Archive/Find%20the%20Length%20of%20the%20Longest%20Symmetric%20Substring.html","/posts/baeldung/Archive/Finding%20the%20Redirected%20URL%20of%20a%20URL%20in%20Java.html","/posts/baeldung/Archive/Finding%20the%20nth%20Last%20Occurrence%20of%20char%20in%20String.html","/posts/baeldung/Archive/Get%202%20s%20Complement%20of%20a%20Number%20in%20Java.html","/posts/baeldung/Archive/How%20to%20Fix%20EOFException%20in%20Java.html","/posts/baeldung/Archive/How%20to%20Specify%20the%20logback.xml%20Location.html","/posts/baeldung/Archive/Implement%20the%20Builder%20Pattern%20in%20Java%208.html","/posts/baeldung/Archive/Introduction%20to%20Simple%20Java%20Mail.html","/posts/baeldung/Archive/Java%E4%B8%AD%E5%B0%86int%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%97%A0%E7%AC%A6%E5%8F%B7%E5%AD%97%E8%8A%82.html","/posts/baeldung/Archive/Print%20the%20Default%20Value%20When%20Overriding%20toString%20%20%20Method.html","/posts/baeldung/Archive/Role%20Based%20Access%20Control%20in%20Quarkus.html","/posts/baeldung/Archive/Unit%20Test%20for%20hashCode%20%20%20in%20Java.html","/posts/baeldung/Archive/Compare%20the%20Numbers%20of%20Different%20Types.html","/posts/baeldung/Archive/Convert%202D%20Array%20Into%201D%20Array.html","/posts/baeldung/Archive/Convert%20From%20int%20to%20short%20in%20Java.html","/posts/baeldung/Archive/Converting%20Float%20ArrayList%20to%20Primitive%20Array%20in%20Java.html","/posts/baeldung/Archive/Create%20HashMap%20with%20Character%20Count%20of%20a%20String%20in%20Java.html","/posts/baeldung/Archive/Difference%20Between%20Lombok%20%20AllArgsConstructor%20%20%20RequiredArgsConstructor%20and%20%20NoArgConstructor.html","/posts/baeldung/Archive/Finding%20the%20Index%20of%20the%20Smallest%20Element%20in%20an%20Array.html","/posts/baeldung/Archive/Generate%20Java%20Classes%20From%20Avro%20Schemas%20Using%20Gradle.html","/posts/baeldung/Archive/Handling%20Nulls%20in%20ArrayList.addAll%20%20.html","/posts/baeldung/Archive/How%20to%20Unit%20Test%20an%20ExecutorService%20Without%20Using%20Thread.sleep%20%20.html","/posts/baeldung/Archive/How%20to%20Use%20Pair%20With%20Java%20PriorityQueue.html","/posts/baeldung/Archive/Intro%20to%20Apache%20Commons%20Configuration%20Project.html","/posts/baeldung/Archive/Introduction%20to%20Java%2022.html","/posts/baeldung/Archive/Print%20Distinct%20Characters%20of%20a%20String%20in%20Java.html","/posts/baeldung/Archive/Remove%20All%20Characters%20Before%20a%20Specific%20Character%20in%20Java.html","/posts/baeldung/Archive/Collecting%20into%20Map%20using%20Collectors.toMap%20%20%20vs%20Collectors.groupingBy%20%20.html","/posts/baeldung/Archive/Convert%20Jackson%20JsonNode%20to%20Typed%20Collection.html","/posts/baeldung/Archive/Convert%20a%20Queue%20to%20a%20List.html","/posts/baeldung/Archive/Convert%20an%20Optional%20to%20an%20ArrayList%20in%20Java.html","/posts/baeldung/Archive/Converting%20short%20to%20byte%20%20%20in%20Java.html","/posts/baeldung/Archive/Full%20and%20Partial%20Text%20Search%20in%20MongoDB.html","/posts/baeldung/Archive/Get%20the%20Position%20of%20Key%20Value%20in%20LinkedHashMap%20Using%20Its%20Key.html","/posts/baeldung/Archive/How%20to%20Convert%20Between%20java.sql.Timestamp%20and%20ZonedDateTime%20in%20Java.html","/posts/baeldung/Archive/How%20to%20Implement%20Elvis%20Operator%20in%20Java%208.html","/posts/baeldung/Archive/How%20to%20Iterate%20a%20List%20of%20Maps%20in%20Java.html","/posts/baeldung/Archive/Introduction%20to%20SSHJ.html","/posts/baeldung/Archive/Mapping%20Enum%20to%20String%20Using%20MapStruct.html","/posts/baeldung/Archive/Perform%20Action%20Only%20if%20All%20Optionals%20Are%20Available.html","/posts/baeldung/Archive/Check%20if%20Two%20Strings%20Are%20Permutations%20of%20Each%20Other%20in%20Java.html","/posts/baeldung/Archive/Check%20if%20a%20Number%20Is%20Power%20of%202%20in%20Java.html","/posts/baeldung/Archive/Configuring%20Retry%20Policy%20for%20gRPC%20Request.html","/posts/baeldung/Archive/Convert%20InputStream%20to%20Stream%20in%20Java.html","/posts/baeldung/Archive/Difference%20Between%20Optional.of%20%20%20and%20Optional.ofNullable%20%20%20in%20Java.html","/posts/baeldung/Archive/Extract%20Text%20From%20a%20HTML%20Tag%20with%20Regex.html","/posts/baeldung/Archive/Fault%20Tolerance%20in%20Java%20Using%20Failsafe.html","/posts/baeldung/Archive/Finding%20the%20Second%20Smallest%20Integer%20in%20an%20Array%20in%20Java.html","/posts/baeldung/Archive/How%20to%20Check%20if%20Optional%20Contains%20Value%20Equal%20to%20T%20Object.html","/posts/baeldung/Archive/How%20to%20Make%20Multiple%20REST%20Calls%20in%20CompletableFuture.html","/posts/baeldung/Archive/Introduction%20to%20JavaParser.html","/posts/baeldung/Archive/Logging%20SQL%20Queries%20to%20the%20Console%20in%20Mybatis.html","/posts/baeldung/Archive/Mocking%20Protected%20Method%20in%20Java.html","/posts/baeldung/Archive/Monads%20in%20Java.html","/posts/baeldung/Archive/Supply%20Enum%20Value%20to%20an%20Annotation%20From%20a%20Constant%20in%20Java.html","/posts/baeldung/Archive/The%20Difference%20Between%20doAnswer%20%20%20and%20thenReturn%20%20%20in%20Mockito.html","/posts/baeldung/Archive/Comparison%20Between%20Flux.map()%20and%20Flux.doOnNext().html","/posts/baeldung/Archive/Convert%20Between%20CLOB%20and%20String%20in%20Java.html","/posts/baeldung/Archive/Declare%20an%20Enum%20in%20an%20Inner%20Class%20in%20Java.html","/posts/baeldung/Archive/Difference%20Between%20Iterator.forEachRemaining%20%20%20and%20Iterable.forEach%20%20.html","/posts/baeldung/Archive/Finding%20Minimum%20and%20Maximum%20in%20a%202D%20Array.html","/posts/baeldung/Archive/Finding%20the%20Next%20Higher%20Number%20With%20the%20Same%20Digits.html","/posts/baeldung/Archive/Get%20the%20Indices%20of%20an%20Array%20After%20Sorting%20in%20Java.html","/posts/baeldung/Archive/How%20to%20Convert%20XML%20to%20PDF.html","/posts/baeldung/Archive/Map%20LocalDateTime%20to%20Instant%20in%20MapStruct.html","/posts/baeldung/Archive/Merge%20Multiple%20PDF%20Files%20Into%20a%20Single%20PDF%20Using%20Java.html","/posts/baeldung/Archive/Return%20Non-null%20Elements%20From%20Java%20Map%20Operation.html","/posts/articles/gRPC%20Authentication%20in%20Java%20Using%20Application%20Layer%20Transport%20Security%20(ALTS).html","/posts/baeldung/Archive/CompletableFuture%20vs.%20Mono.html","/posts/baeldung/Archive/Convert%20Decimal%20to%20Fraction%20in%20Java.html","/posts/baeldung/Archive/Extracting%20Text%20Between%20Parentheses%20in%20Java.html","/posts/baeldung/Archive/How%20to%20Convert%20org.w3c.dom.Document%20to%20String%20in%20Java.html","/posts/baeldung/Archive/OpenAI%20API%20Client%20in%20Java.html","/posts/baeldung/Archive/Reading%20CSV%20Headers%20Into%20a%20List.html","/posts/baeldung/Archive/Replacing%20Strings%20in%20Java%20Using%20Regex_%20Back%20Reference%20vs.%20Lookaround.html","/posts/baeldung/Archive/Using%20Comparator.nullsLast()%20to%20Avoid%20NullPointerException%20When%20Sorting.html","/posts/baeldung/2024-06-22/2024-06-22-Simple%20Web%20Server%20in%20Java%2018.html","/posts/baeldung/Archive/Install%20Java%20on%20macOS.html","/posts/baeldung/Archive/Resolving%20Security%20Exception%20%20java.security.UnrecoverableKeyException%20%20Cannot%20Recover%20Key.html","/posts/baeldung/Archive/2024-06-19-New%20Features%20in%20Java%2021.html","/posts/baeldung/2024-06-23/2024-06-23-Introduction%20to%20gRPC%20with%20Spring%20Boot.html","/posts/baeldung/Archive/Add%20Global%20Exception%20Interceptor%20in%20gRPC%20Server.html","/posts/articles/postgresql/%E5%9C%A8Mac%E8%AF%B4%E5%AE%89%E8%A3%85postgresql%E5%B9%B6%E4%B8%94%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8D%95%E7%8B%AC%E7%BB%99%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E8%B5%8B%E4%BA%88%E6%9D%83%E9%99%90.html","/posts/baeldung/2024-06-23/2024-06-23-How%20to%20Catch%20Deserialization%20Errors%20in%20Spring%20Kafka%20.html","/posts/baeldung/2024-06-21/2024-06-21-%20DataJpaTest%20and%20Repository%20Class%20in%20JUnit.html","/posts/baeldung/2024-06-22/2024-06-22-Get%20All%20Results%20at%20Once%20in%20a%20Spring%20Boot%20Paged%20Query%20Method.html","/posts/baeldung/2024-06-21/2024-06-21-Migrate%20Application%20from%20Spring%20Security%205%20to%20Spring%20Security%206%20Spring%20Boot%203.html","/posts/baeldung/Archive/2024-06-20-Dynamically%20Managing%20Kafka%20Listeners%20in%20Spring%20Boot.html","/posts/baeldung/Archive/2024-06-19-Disable%20%20Cacheable%20in%20Spring%20Boot.html","/posts/baeldung/Archive/2024-06-19-Logging%20in%20Spring%20Boot%20With%20Loki.html","/posts/baeldung/Archive/Get%20JSON%20Content%20as%20Object%20Using%20MockMVC.html","/posts/baeldung/Archive/Fix%20Spring%20Boot%20H2%20JdbcSQLSyntaxErrorException%20%20Table%20not%20found%20.html","/posts/baeldung/Archive/Monitor%20a%20Spring%20Boot%20App%20Using%20Prometheus.html","/posts/baeldung/Archive/Using%20@Autowired%20and%20@InjectMocks%20in%20Spring%20Boot%20Tests.html","/posts/baeldung/2024-06-21/2024-06-21-Custom%20Event%20Handlers%20and%20Listeners%20in%20Netty.html","/posts/baeldung/2024-06-26/2024-06-26-Extract%20Numbers%20From%20a%20String%20in%20Kotlin.html","/posts/baeldung/2024-06-21/2024-06-21-Railway%20Oriented%20Programming%20in%20Kotlin.html","/posts/baeldung/2024-06-21/2024-06-21-Difference%20Between%20GroupId%20and%20ConsumerId%20in%20Apache%20Kafka.html","/posts/baeldung/2024-06-22/2024-06-22-How%20to%20Check%20if%20a%20Variable%20Is%20Defined%20in%20Thymeleaf.html","/posts/baeldung/2024-06-22/2024-06-22-Logging%20With%20AOP%20in%20Spring.html","/posts/baeldung/2024-06-21/2024-06-21-Document%20Query%20Parameters%20with%20Spring%20REST%20Docs.html","/posts/baeldung/Archive/2024-06-19-Disable%20%20EnableScheduling%20on%20Spring%20Tests.html","/posts/baeldung/Archive/2024-06-20-Using%20the%20%20Value%20Annotation%20in%20Kotlin.html","/posts/baeldung/Archive/Using%20Reactor%20Mono.cache%20%20%20for%20Memoization.html","/posts/baeldung/Archive/Consumer%20Processing%20of%20Kafka%20Messages%20With%20Delay.html","/posts/baeldung/2024-06-23/2024-06-23-Custom%20JSON%20Deserialization%20Using%20Spring%20WebClient.html","/posts/baeldung/Archive/2024-06-20-Querydsl%20vs.%20JPA%20Criteria.html","/posts/baeldung/2024-06-25/2024-06-25-Difference%20Between%201L%20and%20%20long%20%201.html","/posts/baeldung/2024-06-23/2024-06-23-Check%20if%20Two%20Date%20Ranges%20Overlap.html","/posts/baeldung/2024-06-23/2024-06-23-Rotate%20a%20Vertex%20Around%20a%20Certain%20Point%20in%20Java.html","/posts/baeldung/2024-06-22/2024-06-22-Get%20a%20Range%20of%20Items%20from%20a%20Stream%20in%20Java.html","/posts/baeldung/2024-06-21/2024-06-21-Increase%20the%20Memory%20Size%20Limit%20on%20IntelliJ%20IDEA.html","/posts/baeldung/2024-06-24/2024-06-24-Add%20Authorities%20as%20Custom%20Claims%20in%20JWT%20Access%20Tokens%20in%20Spring%20Authorization%20Server.html","/posts/baeldung/Archive/2024-06-20-Creating%20a%20Spring%20Security%20Key%20for%20Signing%20a%20JWT%20Token.html","/posts/baeldung/Archive/2024-06-21-Spring%20Security%20AuthorizationManager.html","/posts/baeldung/2024-06-25/2024-06-25-How%20to%20Get%20Last%20Record%20in%20Spring%20Data%20JPA.html","/posts/baeldung/2024-06-25/2024-06-25-%20Query%20Definitions%20With%20SpEL%20Support%20in%20Spring%20Data%20JPA.html","/posts/baeldung/2024-06-23/2024-06-23-N%201%20Problem%20in%20Hibernate%20and%20Spring%20Data%20JPA.html","/posts/baeldung/2024-06-21/2024-06-21-Skip%20Select%20Before%20Insert%20in%20Spring%20Data%20JPA.html","/posts/baeldung/2024-06-21/2024-06-21-Spring%20Data%20JPA%20Repository%20for%20Database%20View.html","/posts/baeldung/2024-06-21/2024-06-21-Query%20Hints%20in%20Spring%20Data%20JPA.html","/posts/baeldung/Archive/2024-06-21-Refresh%20and%20Fetch%20an%20Entity%20After%20Save%20in%20JPA.html","/posts/baeldung/Archive/Implement%20Update%20Or%20Insert%20in%20Spring%20Data%20JPA.html","/posts/baeldung/Archive/Solving%20Spring%20Data%20JPA%20ConverterNotFoundException_%20No%20converter%20found.html","/posts/baeldung/2024-06-22/2024-06-22-How%20To%20Use%20findBy%20%20%20With%20Multiple%20Columns%20in%20JPA.html","/posts/baeldung/2024-06-25/2024-06-25-When%20to%20Use%20the%20getReferenceById%20%20%20and%20findById%20%20%20Methods%20in%20Spring%20Data%20JPA.html","/posts/baeldung/2024-06-25/2024-06-25-Getting%20All%20Field%20Names%20of%20a%20Class%20Using%20Kotlin%20Reflection.html","/posts/baeldung/2024-06-25/2024-06-25-Dijkstra%20s%20Algorithm%20in%20Kotlin.html","/posts/baeldung/2024-06-23/2024-06-23-Introduction%20to%20KotlinPoet.html","/posts/baeldung/2024-06-22/2024-06-22-Parse%20String%20With%20Thousands%20Separator%20in%20Kotlin.html","/posts/baeldung/Archive/2024-06-20-Difference%20Between%20eachCount%20%20%20and%20eachCountTo%20%20%20Methods%20in%20Kotlin.html","/posts/baeldung/Archive/2024-06-21-HTML%20Builder%20in%20Kotlin.html","/posts/baeldung/Archive/2024-06-20-A%20Guide%20to%20Kotlin%20Context%20Receivers.html","/posts/baeldung/Archive/2024-06-20-Avoiding%20the%20ConcurrentModificationException%20in%20Kotlin.html","/posts/baeldung/Archive/2024-06-20-Convert%20RxJava%20Single%20to%20Kotlin%20Coroutine%20Deferred.html","/posts/baeldung/Archive/2024-06-20-Getting%20a%20Kotlin%20KClass%20from%20a%20Package%20Class%20Name%20String.html","/posts/baeldung/Archive/2024-06-20-Guide%20to%20Duration%20in%20Kotlin.html","/posts/baeldung/Archive/2024-06-20-Guide%20to%20the%20HexFormat%20API.html","/posts/baeldung/Archive/2024-06-20-Iterating%20Over%20Components%20of%20Object%20in%20Kotlin.html","/posts/baeldung/Archive/2024-06-20-Parallel%20Operations%20on%20Kotlin%20Collections.html","/posts/baeldung/Archive/2024-06-20-Passing%20a%20Type%20to%20Generic%20Method%20in%20Kotlin.html","/posts/baeldung/Archive/2024-06-20-Serialize%20Enum%20Property%20to%20JSON%20in%20Kotlin.html","/posts/baeldung/Archive/2024-06-20-Use%20of%20Backticks%20in%20Kotlin.html","/posts/baeldung/Archive/2024-06-20-Variable%20Shadowing%20in%20Kotlin.html","/posts/baeldung/Archive/2024-06-20-%20Subselect%20Annotation%20in%20Hibernate.html","/posts/baeldung/Archive/PersistenceUnit%20vs.%20PersistenceContext.html","/posts/baeldung/Archive/Inheritance%20vs.%20Composition%20in%20JPA.html","/posts/baeldung/Archive/Save%20Child%20Objects%20Automatically%20Using%20JPA.html","/posts/baeldung/Archive/Clear%20Managed%20Entities%20in%20JPA%20Hibernate.html","/posts/baeldung/2024-06-23/2024-06-23-Builder%20Pattern%20and%20Inheritance.html","/posts/baeldung/2024-06-21/2024-06-21-Testcontainers%20Desktop.html","/posts/baeldung/Archive/2024-06-19-Multiple%20Level%20Mock%20Injection%20Into%20Mockito%20Spy%20Objects.html","/posts/baeldung/Archive/2024-06-19-How%20to%20Test%20Spring%20Application%20Events.html","/posts/baeldung/Archive/How%20to%20Test%20a%20Spring%20AOP%20Aspect.html","/posts/baeldung/2024-06-25/2024-06-25-Fixing%20Hibernate%20QueryException%20%20Named%20Parameter%20Not%20Bound.html","/posts/baeldung/2024-06-23/2024-06-23-List%20vs.%20Set%20in%20%20OneToMany%20JPA.html","/posts/baeldung/2024-06-22/2024-06-22-A%20Guide%20to%20the%20%20SoftDelete%20Annotation%20in%20Hibernate.html","/posts/baeldung/Archive/2024-06-19-Logging%20in%20Apache%20Camel.html","/posts/baeldung/2024-06-24/2024-06-24-Introduction%20to%20Apache%20Calcite.html","/posts/baeldung/2024-06-22/2024-06-22-Injecting%20%20Mock%20and%20%20Captor%20in%20JUnit%205%20Method%20Parameters.html","/posts/baeldung/2024-06-22/2024-06-22-Install%20OpenJDK%20on%20Windows.html","/posts/baeldung/2024-06-22/2024-06-22-Introduction%20to%20OpenGrok.html","/posts/baeldung/2024-06-22/2024-06-22-OAuth2%20Backend%20for%20Frontend%20With%20Spring%20Cloud%20Gateway.html","/posts/baeldung/2024-06-23/2024-06-23-Difference%20Between%20mvn%20install%20and%20mvn%20verify.html","/posts/baeldung/2024-06-24/2024-06-24-Maven%20Dependencies%20Failing%20With%20a%20501%20Error%20%20HTTPS%20Required%20.html","/posts/baeldung/Archive/Understanding%20Maven%20Dependency%20Graph%20or%20Tree.html","/posts/baeldung/2024-06-25/2024-06-25-Sending%20Data%20to%20a%20Specific%20Partition%20in%20Kafka.html","/posts/baeldung/Archive/2024-06-21-Commit%20Offsets%20in%20Kafka.html","/posts/baeldung/Archive/2024-06-21-Introduction%20to%20Redpanda.html","/posts/baeldung/2024-06-23/2024-06-23-Apply%20Bold%20Text%20Style%20for%20an%20Entire%20Row%20Using%20Apache%20POI.html","/posts/baeldung/2024-06-23/2024-06-23-Event%20Driven%20Microservices%20With%20Orkes%20Conductor.html","/posts/baeldung/Archive/2024-06-20-Saga%20Pattern%20in%20a%20Microservices%20Architecture.html","/posts/baeldung/2024-06-23/2024-06-23-Event%20Externalization%20with%20Spring%20Modulith.html","/posts/baeldung/2024-06-23/2024-06-23-How%20to%20Find%20the%20URL%20of%20a%20Service%20in%20Kubernetes.html","/posts/baeldung/Archive/Get%20Nextval%20From%20Sequence%20With%20Spring%20JPA.html","/posts/baeldung/2024-06-23/2024-06-23-Looking%20for%20a%20Backend%20Java%20Spring%20Team%20Lead%20with%20Integration%20Experience%20%20Remote%20%20%20Part%20Time%20%20%20%20not%20open.html","/posts/baeldung/2024-06-24/2024-06-24-What%20Happens%20When%20the%20JVM%20Runs%20Out%20of%20Memory%20to%20Allocate%20During%20Runtime%20.html","/posts/baeldung/2024-06-24/2024-06-24-Creating%20Reactive%20APIs%20With%20Micronaut%20and%20MongoDB.html","/posts/baeldung/2024-06-24/2024-06-24-Introduction%20to%20Spring%20AI.html","/posts/baeldung/2024-06-24/2024-06-24-Introduction%20to%20Spring%20Cloud%20AWS%203.0%20%20%20SQS%20Integration.html","/posts/baeldung/2024-06-24/2024-06-24-Upload%20Multiple%20Files%20Using%20WebFlux.html","/posts/baeldung/Archive/2024-06-19-The%20Difference%20Between%20Throwing%20an%20Exception%20and%20Mono.error%20%20%20in%20Spring%20Webflux.html","/posts/baeldung/Archive/How%20to%20Intercept%20a%20Request%20and%20Add%20Headers%20in%20WebFlux.html","/posts/baeldung/Archive/Spring%20WebClient%20exchange%20%20%20vs%20retrieve%20%20.html","/posts/baeldung/2024-06-26/2024-06-26-Connect%20to%20Database%20Through%20Intellij%20Data%20Sources%20and%20Drivers.html","/posts/baeldung/Archive/How%20to%20Set%20JVM%20Arguments%20in%20IntelliJ%20IDEA%20.html","/posts/baeldung/Archive/Static%20Code%20Analysis%20Using%20Infer.html","/posts/baeldung/2024-06-26/2024-06-26-Spring%20Kafka%20Trusted%20Packages%20Feature.html","/posts/baeldung/Archive/2024-06-20-Implement%20Two%20Level%20Cache%20With%20Spring.html","/posts/baeldung/Archive/Disable%20Logging%20From%20a%20Specific%20Class%20in%20Logback.html","/posts/baeldung/Archive/2024-06-20-Finding%20Element%20by%20Attribute%20in%20Selenium.html","/posts/baeldung/Archive/2024-06-20-Guide%20to%20ExecutorService%20vs.%20CompletableFuture.html","/posts/baeldung/Archive/How%20to%20Compile%20Java%20to%20WASM%20%20Web%20Assembly%20.html","/posts/baeldung/Archive/2024-06-21-Intro%20to%20the%20Apache%20Commons%20CLI.html","/posts/baeldung/Archive/Add%20an%20Aggregation%20to%20an%20Elasticsearch%20Query.html","/posts/baeldung/Archive/Code%20Coverage%20vs.%20Test%20Coverage.html","/posts/baeldung/Archive/Git%20Integration%20in%20IntelliJ%20IDEA.html","/posts/baeldung/Archive/Java%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%AF%94%E8%BE%83.html","/posts/baeldung/Archive/%E6%8E%A2%E7%B4%A2Java%E4%B8%AD%E5%B0%86%E6%9E%9A%E4%B8%BE%E5%80%BC%E4%BB%8E%E5%B8%B8%E9%87%8F%E4%BC%A0%E9%80%92%E5%88%B0%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%8F%AF%E8%83%BD%E6%80%A7.html","/posts/baeldung/2024-06-25/2024-06-25-Get%20Client%20Information%20From%20HTTP%20Request%20in%20Java.html","/posts/baeldung/2024-06-21/2024-06-21-Find%20an%20Unique%20Email%20Address%20in%20a%20List.html","/posts/baeldung/2024-06-21/2024-06-21-Iterating%20All%20Fields%20of%20a%20Data%20Class%20Without%20Reflection%20in%20Kotlin.html","/posts/baeldung/Archive/Get%20the%20First%20and%20the%20Last%20Elements%20From%20an%20Array%20in%20Java.html","/posts/articles/mongo-share.html"],Oo=xa(Q_);ve(Oo);const Zc=a=>{const t=Aa(),e=da(),s=ne();return y(()=>{var l;const o=a??((l=e.value.blog)==null?void 0:l.key)??"";if(!o)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!Oo.value[o])throw new Error(`useBlogCategory: key ${o} is invalid`);const r=Oo.value[o][s.value],i={path:r.path,map:{}};for(const c in r.map){const u=r.map[c];i.map[c]={path:u.path,items:[]};for(const d of u.indexes){const{path:g,meta:m}=Pt(Xc[d]);i.map[c].items.push({path:g,info:m})}t.value.path===u.path&&(i.currentItems=i.map[c].items)}return i})},X_={article:{"/":{path:"/article/",indexes:[0,1,2,3,4,5,6,7,331,320,8,9,10,11,389,12,13,300,14,15,16,17,18,19,392,20,21,22,23,24,404,25,312,317,26,27,28,382,29,30,31,383,32,381,321,33,34,35,36,37,332,38,359,39,40,41,42,43,44,45,371,46,47,48,49,50,374,354,51,52,368,53,288,54,360,55,56,57,58,59,60,61,62,63,64,65,66,363,67,384,369,68,69,70,71,385,72,73,313,314,74,361,75,76,77,78,79,364,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,375,377,95,96,378,97,333,285,380,98,322,99,100,101,102,103,104,105,334,366,106,315,289,107,302,108,109,110,111,301,112,323,324,355,113,114,115,116,117,118,119,120,121,122,123,290,124,303,365,304,125,126,127,128,129,130,131,405,316,406,407,132,305,133,134,135,136,291,137,325,138,139,140,141,142,318,335,292,143,144,396,145,393,146,147,148,149,150,151,152,372,153,154,155,336,156,398,373,157,158,326,319,287,159,160,293,306,161,162,163,164,362,294,356,165,166,167,349,337,338,339,168,169,395,170,340,341,342,171,343,172,173,344,345,174,376,346,347,307,348,175,176,177,178,179,357,180,386,181,400,182,183,184,185,387,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,327,211,212,213,350,214,215,216,217,218,219,220,221,222,223,224,295,379,225,358,226,227,228,229,230,231,388,232,233,234,235,236,296,237,238,239,240,241,351,242,243,244,352,308,286,399,245,246,247,248,249,394,250,251,252,253,254,390,255,256,257,258,259,260,370,261,262,263,264,265,266,267,268,269,270,297,271,328,298,408,272,273,309,274,275,276,277,278,279,391,280,402,403,329,281,310,282,299,330,367,311,353,283,284,397,401]}},star:{"/":{path:"/star/",indexes:[]}},timeline:{"/":{path:"/timeline/",indexes:[0,1,2,3,4,5,6,7,331,320,8,9,10,11,389,12,13,300,14,15,16,17,18,19,392,20,21,22,23,24,404,25,312,317,26,27,28,382,29,30,31,383,32,381,321,33,34,35,36,37,332,38,359,39,40,41,42,43,44,45,371,46,47,48,49,50,374,354,51,52,368,53,288,54,360,55,56,57,58,59,60,61,62,63,64,65,66,363,67,384,369,68,69,70,71,385,72,73,313,314,74,361,75,76,77,78,79,364,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,375,377,95,96,378,97,333,285,380,98,322,99,100,101,102,103,104,105,334,366,106,315,289,107,302,108,109,110,111,301,112,323,324,355,113,114,115,116,117,118,119,120,121,122,123,290,124,303,365,304,125,126,127,128,129,130,131,405,316,406,407,132,305,133,134,135,136,291,137,325,138,139,140,141,142,318,335,292,143,144,396,145,393,146,147,148,149,150,151,152,372,153,154,155,336,156,398,373,157,158,326,319,287,159,160,293,306,161,162,163,164,362,294,356,165,166,167,349,337,338,339,168,169,395,170,340,341,342,171,343,172,173,344,345,174,376,346,347,307,348,175,176,177,178,179,357,180,386,181,400,182,183,184,185,387,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,327,211,212,213,350,214,215,216,217,218,219,220,221,222,223,224,295,379,225,358,226,227,228,229,230,231,388,232,233,234,235,236,296,237,238,239,240,241,351,242,243,244,352,308,286,399,245,246,247,248,249,394,250,251,252,253,254,390,255,256,257,258,259,260,370,261,262,263,264,265,266,267,268,269,270,297,271,328,298,408,272,273,309,274,275,276,277,278,279,391,280,402,403,329,281,310,282,299,330,367,311,353,283,284,397,401]}}},Jo=xa(X_);ve(Jo);const Rs=a=>{const t=da(),e=ne();return y(()=>{var i;const s=a??((i=t.value.blog)==null?void 0:i.key)??"";if(!s)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!Jo.value[s])throw new Error(`useBlogType: key ${a} is invalid`);const o=Jo.value[s][e.value],r={path:o.path,items:[]};for(const l of o.indexes){const{path:c,meta:u}=Pt(Xc[l]);r.items.push({path:c,info:u})}return r})},kr=()=>p(ga,{name:"lock"},()=>p("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));kr.displayName="LockIcon";var Z_=[];const Yc=Symbol(""),Ar=()=>{const a=Sa(Yc);if(!a)throw new Error("useTimeline() is called without provider.");return a},Y_=()=>{const a=Rs("timeline"),t=y(()=>{const e=[];return a.value.items.forEach(({info:s,path:o})=>{const r=pr(s[Ua.date]);if(r){const i=r.getFullYear(),l=r.getMonth()+1,c=r.getDate();(!e[0]||e[0].year!==i)&&e.unshift({year:i,items:[]}),e[0].items.push({date:`${l}/${c}`,info:s,path:o})}}),{...a.value,config:e.reverse()}});vt(Yc,t)},a2=Symbol(""),jn=()=>{const a=Sa(a2);if(!a)throw new Error("useArticles() is called without provider.");return a},ah=()=>{const a=Rs("article");vt(a2,a)},t2=Symbol.for("categoryMap"),Nn=()=>{const a=Sa(t2);if(!a)throw new Error("useCategoryMap() is called without provider.");return a},th=()=>{const a=Zc("category");vt(t2,a)},e2=Symbol(""),yr=()=>{const a=Sa(e2);if(!a)throw new Error("useStars() is called without provider.");return a},eh=()=>{const a=Rs("star");vt(e2,a)},n2=Symbol.for("tagMap"),Hn=()=>{const a=Sa(n2);if(!a)throw new Error("useTagMap() is called without provider.");return a},nh=()=>{const a=Zc("tag");vt(n2,a)},sh=()=>{ah(),th(),eh(),nh(),Y_()},Un=()=>{const a=kt(),t=ra();return y(()=>({...a.value.blog,...t.value.blog}))},oh=a=>{const t=ra();return y(()=>{const{[Ua.author]:e}=a.value;return e?En(e):e===!1?[]:En(t.value.author,!1)})},rh=a=>{const t=Nn();return y(()=>cc(a.value[Ua.category]).map(e=>({name:e,path:t.value.map[e].path})))},ih=a=>{const t=Hn();return y(()=>uc(a.value[Ua.tag]).map(e=>({name:e,path:t.value.map[e].path})))},ph=a=>y(()=>{const{[Ua.date]:t}=a.value;return pr(t)}),lh=a=>{const t=Fe(a,"info"),e=Un(),s=oh(t),o=rh(t),r=ih(t),i=ph(t),l=Ec(),c=y(()=>({author:s.value,category:o.value,date:i.value,localizedDate:t.value[Ua.localizedDate]??"",tag:r.value,isOriginal:t.value[Ua.isOriginal]??!1,readingTime:t.value[Ua.readingTime]??null,readingTimeLocale:t.value[Ua.readingTime]&&l.value?fc(t.value[Ua.readingTime],l.value):null,pageview:a.path})),u=y(()=>e.value.articleInfo);return{info:c,items:u}};var s2=j({name:"SocialMedias",setup(){const a=Un(),t=Ga(),e=y(()=>Jn(a.value.medias??{}).map(([s,o])=>({name:s,icon:q_[s],url:o})));return()=>e.value.length?p("div",{class:"vp-social-medias"},e.value.map(({name:s,icon:o,url:r})=>p("a",{class:"vp-social-media",href:r,rel:"noopener noreferrer",target:"_blank","aria-label":s||"",...t.value?{}:{"data-balloon-pos":"up"},innerHTML:o}))):null}}),Ir=j({name:"BloggerInfo",setup(){const a=Un(),t=xn(),e=ra(),s=jn(),o=Nn(),r=Hn(),i=Ar(),l=Ee(),c=y(()=>{var m;return a.value.name??((m=En(e.value.author)[0])==null?void 0:m.name)??t.value.title}),u=y(()=>a.value.avatar??e.value.logo),d=y(()=>e.value.blogLocales),g=y(()=>a.value.intro);return()=>{const{article:m,category:_,tag:v,timeline:k}=d.value,b=[[s.value.path,s.value.items.length,m],[o.value.path,ut(o.value.map).length,_],[r.value.path,ut(r.value.map).length,v],[i.value.path,i.value.items.length,k]];return p("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[p("div",{class:"vp-blogger",...g.value?{"aria-label":d.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>l(g.value)}:{}},[u.value?p("img",{class:"vp-blogger-avatar",src:ha(u.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,c.value?p("div",{class:"vp-blogger-name",property:"name"},c.value):null,a.value.description?p("div",{class:"vp-blogger-description",innerHTML:a.value.description}):null,g.value?p("meta",{property:"url",content:ha(g.value)}):null]),p("div",{class:"vp-blog-counts"},b.map(([A,I,E])=>p(Ta,{class:"vp-blog-count",to:A},()=>[p("div",{class:"count"},I),p("div",E)]))),p(s2)])}}});const br=()=>p(ga,{name:"category"},()=>p("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));br.displayName="CategoryIcon";const Sr=()=>p(ga,{name:"tag"},()=>p("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Sr.displayName="TagIcon";const Pr=()=>p(ga,{name:"timeline"},()=>p("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));Pr.displayName="TimelineIcon";const o2=()=>p(ga,{name:"slides"},()=>p("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));o2.displayName="SlideIcon";const r2=()=>p(ga,{name:"sticky"},()=>[p("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);r2.displayName="StickyIcon";const Os=()=>p(ga,{name:"article"},()=>p("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));Os.displayName="ArticleIcon";const i2=()=>p(ga,{name:"book"},()=>p("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));i2.displayName="BookIcon";const p2=()=>p(ga,{name:"link"},()=>p("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));p2.displayName="LinkIcon";const l2=()=>p(ga,{name:"project"},()=>p("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));l2.displayName="ProjectIcon";const c2=()=>p(ga,{name:"friend"},()=>p("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));c2.displayName="FriendIcon";const Co=()=>p(ga,{name:"slide-down"},()=>p("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));Co.displayName="SlideDownIcon";const u2=()=>p("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});u2.displayName="EmptyIcon";var ch=j({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(a,{slots:t}){const e=Fe(a,"info"),{info:s,items:o}=lh(a);return()=>{var m,_,v;const{[za.title]:r,[Ua.type]:i,[Ua.isEncrypted]:l=!1,[Ua.cover]:c,[Ua.excerpt]:u,[Ua.sticky]:d}=e.value,g=s.value;return p("div",{class:"vp-article-wrapper"},p("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((m=t.cover)==null?void 0:m.call(t,{cover:c}))??(c?[p("img",{class:"vp-article-cover",src:ha(c),alt:"",loading:"lazy"}),p("meta",{property:"image",content:ha(c)})]:[]),d?p(r2):null,p(Ta,{to:a.path},()=>{var k;return((k=t.title)==null?void 0:k.call(t,{title:r,isEncrypted:l,type:i}))??p("header",{class:"vp-article-title"},[l?p(kr):null,i===Sc.slide?p(o2):null,p("span",{property:"headline"},r)])}),((_=t.excerpt)==null?void 0:_.call(t,{excerpt:u}))??(u?p("div",{class:"vp-article-excerpt",innerHTML:u}):null),p("hr",{class:"vp-article-hr"}),((v=t.info)==null?void 0:v.call(t,{info:g}))??p(zc,{info:g,...o.value?{items:o.value}:{}})]))}}}),uh=j({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(a,{emit:t}){let e;const s=ra(),o=X(""),r=y(()=>s.value.paginationLocales),i=y(()=>Math.ceil(a.total/a.perPage)),l=y(()=>!!i.value&&i.value!==1),c=y(()=>i.value<7?!1:a.current>4),u=y(()=>i.value<7?!1:a.current<i.value-3),d=y(()=>{const{current:_}=a;let v=1,k=i.value;const b=[];i.value>=7&&(_<=4&&_<i.value-3?(v=1,k=5):_>4&&_>=i.value-3?(k=i.value,v=i.value-4):i.value>7&&(v=_-2,k=_+2));for(let A=v;A<=k;A++)b.push(A);return b}),g=_=>t("updateCurrentPage",_),m=_=>{const v=parseInt(_,10);v<=i.value&&v>0?g(v):e.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${r.value.errorText.replace(/\$page/gu,i.value.toString())}`)};return fa(()=>{e=new s1}),()=>p("div",{class:"vp-pagination"},l.value?p("nav",{class:"vp-pagination-list"},[p("div",{class:"vp-pagination-number "},[a.current>1?p("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>g(a.current-1)},r.value.prev):null,c.value?[p("div",{role:"navigation",onClick:()=>g(1)},1),p("div",{class:"ellipsis"},"...")]:null,d.value.map(_=>p("div",{key:_,class:{active:a.current===_},role:"navigation",onClick:()=>g(_)},_)),u.value?[p("div",{class:"ellipsis"},"..."),p("div",{role:"navigation",onClick:()=>g(i.value)},i.value)]:null,a.current<i.value?p("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>g(a.current+1)},r.value.next):null]),p("div",{class:"vp-pagination-nav"},[p("label",{for:"navigation-text"},`${r.value.navigate}: `),p("input",{id:"navigation-text",value:o.value,onInput:({target:_})=>{o.value=_.value},onKeydown:_=>{_.key==="Enter"&&(_.preventDefault(),m(o.value))}}),p("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:r.value.action,onClick:()=>m(o.value)},r.value.action)])]):[])}}),Dr=j({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(a){const t=Vt(),e=fe(),s=Un(),o=X(1),r=y(()=>s.value.articlePerPage??10),i=y(()=>a.items.slice((o.value-1)*r.value,o.value*r.value)),l=async c=>{o.value=c;const u={...t.query};!(u.page===c.toString()||c===1&&!u.page)&&(c===1?delete u.page:u.page=c.toString(),await e.push({path:t.path,query:u}))};return fa(()=>{const{page:c}=t.query;l(c?Number(c):1),ua(o,()=>{const u=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,u)},100)})}),()=>p("div",{id:"article-list",class:"vp-article-list",role:"feed"},i.value.length?[...i.value.map(({info:c,path:u},d)=>p(sa,{appear:!0,delay:d*.04},()=>p(ch,{key:u,info:c,path:u}))),p(uh,{current:o.value,perPage:r.value,total:a.items.length,onUpdateCurrentPage:l})]:p(u2))}});console.log(se);var d2=j({name:"CategoryList",setup(){const a=Aa(),t=Nn();return()=>p("ul",{class:"vp-category-list"},Jn(t.value.map).sort(([,e],[,s])=>s.items.length-e.items.length).map(([e,{path:s,items:o}])=>p("li",{class:["vp-category",`color${Vn(e,Number(se.colorNumber))}`,{active:s===a.value.path}]},p(Ta,{to:s},()=>[e,p("span",{class:"count"},o.length)]))))}}),g2=j({name:"TagList",setup(){const a=da(),t=Hn(),e=s=>{var o;return s===((o=a.value.blog)==null?void 0:o.name)};return()=>p("ul",{class:"tag-list-wrapper"},Jn(t.value.map).sort(([,s],[,o])=>o.items.length-s.items.length).map(([s,{path:o,items:r}])=>p("li",{class:["tag",`color${Vn(s,Number(se.colorNumber))}`,{active:e(s)}]},p(Ta,{to:o},()=>[s,p("span",{class:"tag-num"},r.length)]))))}}),dh=j({name:"TimelineList",setup(){const a=ra(),t=Ar(),e=Ee(),s=y(()=>a.value.blogLocales.timeline);return()=>p("div",{class:"timeline-list-wrapper"},[p("div",{class:"timeline-list-title",onClick:()=>e(t.value.path)},[p(Pr),p("span",{class:"num"},t.value.items.length),s.value]),p("hr"),p("div",{class:"timeline-content"},p("ul",{class:"timeline-list"},t.value.config.map(({year:o,items:r},i)=>p(sa,{appear:!0,delay:.08*(i+1)},()=>p("li",[p("h3",{class:"timeline-year"},o),p("ul",{class:"timeline-year-wrapper"},r.map(({date:l,info:c,path:u})=>p("li",{class:"timeline-item"},[p("span",{class:"timeline-date"},l),p(Ta,{class:"timeline-title",to:u},()=>c[za.title])])))])))))])}});const gh={article:Os,category:br,tag:Sr,timeline:Pr};var m2=j({name:"InfoList",setup(){const a=ra(),t=jn(),e=Nn(),s=y(()=>ut(e.value.map).length),o=yr(),r=Hn(),i=y(()=>ut(r.value.map).length),l=Ee(),c=X("article"),u=y(()=>a.value.blogLocales);return()=>p("div",{class:"vp-blog-infos"},[p("div",{class:"vp-blog-type-switcher"},Jn(gh).map(([d,g])=>p("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{c.value=d}},p("div",{class:["icon-wrapper",{active:c.value===d}],"aria-label":u.value[d],"data-balloon-pos":"up"},p(g))))),p(sa,()=>c.value==="article"?p("div",{class:"vp-star-article-wrapper"},[p("div",{class:"title",onClick:()=>l(t.value.path)},[p(Os),p("span",{class:"num"},t.value.items.length),u.value.article]),p("hr"),o.value.items.length?p("ul",{class:"vp-star-articles"},o.value.items.map(({info:d,path:g},m)=>p(sa,{appear:!0,delay:.08*(m+1)},()=>p("li",{class:"vp-star-article"},p(Ta,{to:g},()=>d[za.title]))))):p("div",{class:"vp-star-article-empty"},u.value.empty.replace("$text",u.value.star))]):c.value==="category"?p("div",{class:"vp-category-wrapper"},[s.value?[p("div",{class:"title",onClick:()=>l(e.value.path)},[p(br),p("span",{class:"num"},s.value),u.value.category]),p("hr"),p(sa,{delay:.04},()=>p(d2))]:p("div",{class:"vp-category-empty"},u.value.empty.replace("$text",u.value.category))]):c.value==="tag"?p("div",{class:"vp-tag-wrapper"},[i.value?[p("div",{class:"title",onClick:()=>l(r.value.path)},[p(Sr),p("span",{class:"num"},i.value),u.value.tag]),p("hr"),p(sa,{delay:.04},()=>p(g2))]:p("div",{class:"vp-tag-empty"},u.value.empty.replace("$text",u.value.tag))]):p(sa,()=>p(dh)))])}}),Js=j({name:"BlogWrapper",slots:Object,setup(a,{slots:t}){const{isMobile:e}=Mn();return()=>[p(fr),p(vr,{noSidebar:!0,noToc:!0},{default:()=>t.default(),navScreenBottom:()=>p(Ir),sidebar:e.value?()=>p(m2):null})]}});const Kn=()=>p("aside",{class:"vp-blog-info-wrapper"},[p(sa,()=>p(Ir)),p(sa,{delay:.04},()=>p(m2))]);Kn.displayName="InfoPanel";var mh=j({name:"BlogPage",setup(){const a=Aa(),t=da(),e=Nn(),s=Hn();return()=>{const{key:o="",name:r=""}=t.value.blog||{},i=r?o==="category"?e.value.map[r].items:o==="tag"?s.value.map[r].items:[]:[];return p(Js,()=>p("div",{class:"vp-page vp-blog"},p("div",{class:"blog-page-wrapper"},[p("main",{id:"main-content",class:"vp-blog-main"},[p(sa,()=>o==="category"?p(d2):o==="tag"?p(g2):null),r?p(sa,{appear:!0,delay:.24},()=>p(Dr,{key:a.value.path,items:i})):null]),p(sa,{delay:.16},()=>p(Kn,{key:"blog"}))])))}}});const _h="//theme-hope-assets.vuejs.press/hero/default.jpg";var hh=j({name:"BlogHero",slots:Object,setup(a,{slots:t}){const e=da(),s=xn(),o=xa(),r=y(()=>e.value.heroFullScreen??!1),i=y(()=>{const{heroText:c,heroImage:u,heroImageDark:d,heroAlt:g,heroImageStyle:m,tagline:_}=e.value;return{text:c??s.value.title??"Hello",tagline:_??"",image:u?ha(u):null,imageDark:d?ha(d):null,alt:g??c??"",imageStyle:m,isFullScreen:r.value}}),l=y(()=>{const{bgImage:c,bgImageDark:u,bgImageStyle:d}=e.value;return{image:Pa(c)?ha(c):c===!1?null:_h,imageDark:Pa(u)?ha(u):null,bgStyle:d,isFullScreen:r.value}});return()=>{var c,u;return e.value.hero===!1?null:p("div",{ref:o,class:["vp-blog-hero",{fullscreen:r.value,"no-bg":!l.value.image}]},[((c=t.bg)==null?void 0:c.call(t,l.value))??[l.value.image?p("div",{class:["vp-blog-mask",{light:l.value.imageDark}],style:[{background:`url(${l.value.image}) center/cover no-repeat`},l.value.bgStyle]}):null,l.value.imageDark?p("div",{class:"vp-blog-mask dark",style:[{background:`url(${l.value.imageDark}) center/cover no-repeat`},l.value.bgStyle]}):null],((u=t.info)==null?void 0:u.call(t,i.value))??[p(sa,{appear:!0,type:"group",delay:.04},()=>{const{image:d,imageDark:g,imageStyle:m,alt:_}=i.value;return[d?p("img",{key:"light",class:["vp-blog-hero-image",{light:g}],style:m,src:d,alt:_}):null,g?p("img",{key:"dark",class:"vp-blog-hero-image dark",style:m,src:g,alt:_}):null]}),p(sa,{appear:!0,delay:.08},()=>i.value.text?p("h1",{class:"vp-blog-hero-title"},i.value.text):null),p(sa,{appear:!0,delay:.12},()=>i.value.tagline?p("p",{class:"vp-blog-hero-description",innerHTML:i.value.tagline}):null)],i.value.isFullScreen?p("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:o.value.clientHeight,behavior:"smooth"})}},[p(Co),p(Co)]):null])}}});const vh=["link","article","book","project","friend"];var fh=j({name:"ProjectPanel",components:{ArticleIcon:Os,BookIcon:i2,FriendIcon:c2,LinkIcon:p2,ProjectIcon:l2},props:{items:{type:Array,required:!0}},setup(a){const t=Ga(),e=Ee(),s=(o="",r="icon")=>vh.includes(o)?p(lt(`${o}-icon`)):ee(o)?p("img",{class:"vp-project-image",src:o,alt:r}):Cn(o)?p("img",{class:"vp-project-image",src:ha(o),alt:r}):p(Na,{icon:o});return()=>p("div",{class:"vp-project-panel"},a.items.map(({icon:o,link:r,name:i,desc:l,background:c})=>p("div",{class:["vp-project-card",{[`color${Vn(i,Number(se.colorNumber))}`]:!t.value&&!c}],...c?{style:c}:{},onClick:()=>e(r)},[s(o,i),p("div",{class:"vp-project-name"},i),p("div",{class:"vp-project-desc"},l)])))}}),Eh=j({name:"BlogHomePage",setup(){const a=jn(),t=da(),e=y(()=>t.value.projects??[]);return()=>p("div",{class:"vp-page vp-blog"},[p(hh),p("div",{class:"blog-page-wrapper"},[p("main",{id:"main-content",class:"vp-blog-main"},[e.value.length?p(sa,{appear:!0,delay:.16},()=>p(fh,{items:e.value})):null,p(sa,{appear:!0,delay:.24},()=>p(Dr,{items:a.value.items}))]),p(sa,{appear:!0,delay:.16},()=>p(Kn,{key:"blog"}))]),p(sa,{appear:!0,delay:.28},()=>p(Ve))])}});const _2=()=>p(Js,()=>p(Eh));_2.displayName="BlogHome";var kh=_2,Ah=j({name:"ArticleType",setup(){const a=Aa(),t=ne(),e=ra(),s=jn(),o=yr(),r=y(()=>{const i=e.value.blogLocales;return[{text:i.all,path:s.value.path},{text:i.star,path:o.value.path},...Z_.map(({key:l,path:c})=>({text:i[l],path:c.replace(/^\//,t.value)}))]});return()=>p("ul",{class:"vp-article-type-wrapper"},r.value.map(i=>p("li",{class:["vp-article-type",{active:i.path===a.value.path}]},p(Ta,{to:i.path},()=>i.text))))}}),yh=j({name:"BlogPage",setup(){const a=Rs(),t=da(),e=Aa(),s=jn(),o=yr(),r=y(()=>{const{key:i="",type:l}=t.value.blog||{};return i==="star"?o.value.items:l==="type"&&i?a.value.items:s.value.items});return()=>p(Js,()=>p("div",{class:"vp-page vp-blog"},p("div",{class:"blog-page-wrapper"},[p("main",{id:"main-content",class:"vp-blog-main"},[p(sa,()=>p(Ah)),p(sa,{appear:!0,delay:.24},()=>p(Dr,{key:e.value.path,items:r.value}))]),p(sa,{delay:.16},()=>p(Kn,{key:"blog"}))])))}}),Ih=j({name:"TimelineItems",setup(){const a=Un(),t=ra(),e=Ar(),s=y(()=>a.value.timeline??t.value.blogLocales.timelineTitle),o=y(()=>e.value.config.map(({year:r})=>({title:r.toString(),level:2,slug:r.toString(),children:[]})));return()=>p("div",{class:"timeline-wrapper"},p("ul",{class:"timeline-content"},[p(sa,()=>p("li",{class:"motto"},s.value)),p($c,{items:o.value}),e.value.config.map(({year:r,items:i},l)=>p(sa,{appear:!0,delay:.08*(l+1),type:"group"},()=>[p("h3",{key:"title",id:r,class:"timeline-year-title"},p("span",r)),p("li",{key:"content",class:"timeline-year-list"},[p("ul",{class:"timeline-year-wrapper"},i.map(({date:c,info:u,path:d})=>p("li",{class:"timeline-item"},[p("span",{class:"timeline-date"},c),p(Ta,{class:"timeline-title",to:d},()=>u[za.title])])))])]))]))}});const h2=()=>p(Js,()=>p("div",{class:"vp-page vp-blog"},p("div",{class:"blog-page-wrapper"},[p("main",{id:"main-content",class:"vp-blog-main"},[p(sa,{appear:!0,delay:.24},()=>p(Ih))]),p(sa,{delay:.16},()=>p(Kn,{key:"blog"}))])));h2.displayName="Timeline";var bh=h2,Sh={};const Ae="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),oo=Array.from({length:64},(a,t)=>t),os=a=>Array(a).fill(-1),Ht=[...os(46),0,1,...oo.slice(54,64),...os(7),...oo.slice(2,28),...os(6),...oo.slice(28,54),...os(5)],Qi=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],Xi=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],v2=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892],Bo=(a,t)=>{if(t<=0||t>a.length)throw Error(`Illegal len: ${t}`);let e=0,s,o;const r=[];for(;e<t;){if(s=a[e++]&255,r.push(Ae[s>>2&63]),s=(s&3)<<4,e>=t){r.push(Ae[s&63]);break}if(o=a[e++]&255,s|=o>>4&15,r.push(Ae[s&63]),s=(o&15)<<2,e>=t){r.push(Ae[s&63]);break}o=a[e++]&255,s|=o>>6&3,r.push(Ae[s&63]),r.push(Ae[o&63])}return r.join("")},Ph=(a,t)=>{const e=a.length;let s=0,o=0,r,i,l,c,u,d;const g=[];for(;s<e-1&&o<t&&(d=a.charCodeAt(s++),r=d<Ht.length?Ht[d]:-1,d=a.charCodeAt(s++),i=d<Ht.length?Ht[d]:-1,!(r==-1||i==-1||(u=r<<2>>>0,u|=(i&48)>>4,g.push(String.fromCharCode(u)),++o>=t||s>=e)||(d=a.charCodeAt(s++),l=d<Ht.length?Ht[d]:-1,l==-1)||(u=(i&15)<<4>>>0,u|=(l&60)>>2,g.push(String.fromCharCode(u)),++o>=t||s>=e)));)d=a.charCodeAt(s++),c=d<Ht.length?Ht[d]:-1,u=(l&3)<<6>>>0,u|=c,g.push(String.fromCharCode(u)),++o;return g.map(m=>m.charCodeAt(0))},Dh=(a,t)=>{let e=null;for(typeof a=="number"&&(e=a,a=()=>null);e!==null||(e=a())!==null;)e<128?t(e&127):e<2048?(t(e>>6&31|192),t(e&63|128)):e<65536?(t(e>>12&15|224),t(e>>6&63|128),t(e&63|128)):(t(e>>18&7|240),t(e>>12&63|128),t(e>>6&63|128),t(e&63|128)),e=null},Th=(a,t)=>{let e,s=null;for(;(e=s!==null?s:a())!==null;){if(e>=55296&&e<=57343&&(s=a())!==null&&s>=56320&&s<=57343){t((e-55296)*1024+s-56320+65536),s=null;continue}t(e)}s!==null&&t(s)},Lh=(a,t)=>{Th(a,function(e){Dh(e,t)})},xh=typeof process=="object"&&Sh.NEXT_RUNTIME==="edge"?setTimeout:typeof setImmediate=="function"?setImmediate:typeof process=="object"&&typeof process.nextTick=="function"?process.nextTick:setTimeout,Rh=a=>{const t=[];let e=0;return Lh(()=>e>=a.length?null:a.charCodeAt(e++),s=>{t.push(s)}),t},An=(a,t,e,s)=>{let o,r=a[t],i=a[t+1];return r^=e[0],o=s[r>>>24],o+=s[256|r>>16&255],o^=s[512|r>>8&255],o+=s[768|r&255],i^=o^e[1],o=s[i>>>24],o+=s[256|i>>16&255],o^=s[512|i>>8&255],o+=s[768|i&255],r^=o^e[2],o=s[r>>>24],o+=s[256|r>>16&255],o^=s[512|r>>8&255],o+=s[768|r&255],i^=o^e[3],o=s[i>>>24],o+=s[256|i>>16&255],o^=s[512|i>>8&255],o+=s[768|i&255],r^=o^e[4],o=s[r>>>24],o+=s[256|r>>16&255],o^=s[512|r>>8&255],o+=s[768|r&255],i^=o^e[5],o=s[i>>>24],o+=s[256|i>>16&255],o^=s[512|i>>8&255],o+=s[768|i&255],r^=o^e[6],o=s[r>>>24],o+=s[256|r>>16&255],o^=s[512|r>>8&255],o+=s[768|r&255],i^=o^e[7],o=s[i>>>24],o+=s[256|i>>16&255],o^=s[512|i>>8&255],o+=s[768|i&255],r^=o^e[8],o=s[r>>>24],o+=s[256|r>>16&255],o^=s[512|r>>8&255],o+=s[768|r&255],i^=o^e[9],o=s[i>>>24],o+=s[256|i>>16&255],o^=s[512|i>>8&255],o+=s[768|i&255],r^=o^e[10],o=s[r>>>24],o+=s[256|r>>16&255],o^=s[512|r>>8&255],o+=s[768|r&255],i^=o^e[11],o=s[i>>>24],o+=s[256|i>>16&255],o^=s[512|i>>8&255],o+=s[768|i&255],r^=o^e[12],o=s[r>>>24],o+=s[256|r>>16&255],o^=s[512|r>>8&255],o+=s[768|r&255],i^=o^e[13],o=s[i>>>24],o+=s[256|i>>16&255],o^=s[512|i>>8&255],o+=s[768|i&255],r^=o^e[14],o=s[r>>>24],o+=s[256|r>>16&255],o^=s[512|r>>8&255],o+=s[768|r&255],i^=o^e[15],o=s[i>>>24],o+=s[256|i>>16&255],o^=s[512|i>>8&255],o+=s[768|i&255],r^=o^e[16],a[t]=i^e[17],a[t+1]=r,a},Ie=(a,t)=>{let e=0;for(let s=0;s<4;++s)e=e<<8|a[t]&255,t=(t+1)%a.length;return{key:e,offp:t}},Zi=(a,t,e)=>{const s=t.length,o=e.length;let r=0,i=[0,0],l;for(let c=0;c<s;c++)l=Ie(a,r),r=l.offp,t[c]=t[c]^l.key;for(let c=0;c<s;c+=2)i=An(i,0,t,e),t[c]=i[0],t[c+1]=i[1];for(let c=0;c<o;c+=2)i=An(i,0,t,e),e[c]=i[0],e[c+1]=i[1]},Oh=(a,t,e,s)=>{const o=e.length,r=s.length;let i=0,l=[0,0],c;for(let u=0;u<o;u++)c=Ie(t,i),i=c.offp,e[u]=e[u]^c.key;i=0;for(let u=0;u<o;u+=2)c=Ie(a,i),i=c.offp,l[0]^=c.key,c=Ie(a,i),i=c.offp,l[1]^=c.key,l=An(l,0,e,s),e[u]=l[0],e[u+1]=l[1];for(let u=0;u<r;u+=2)c=Ie(a,i),i=c.offp,l[0]^=c.key,c=Ie(a,i),i=c.offp,l[1]^=c.key,l=An(l,0,e,s),s[u]=l[0],s[u+1]=l[1]},Yi=(a,t,e,s,o)=>{const r=v2.slice(),i=r.length;if(e<4||e>31){const m=new Error(`Illegal number of rounds (4-31): ${e}`);if(s===!1)return Promise.reject(m);throw m}if(t.length!==16){const m=new Error(`Illegal salt length: ${t.length} != 16`);if(s===!1)return Promise.reject(m);throw m}e=1<<e>>>0;let l,c,u=0,d;Int32Array?(l=new Int32Array(Qi),c=new Int32Array(Xi)):(l=Qi.slice(),c=Xi.slice()),Oh(t,a,l,c);const g=()=>{if(u<e){const m=Date.now();for(;u<e&&(u=u+1,Zi(a,l,c),Zi(t,l,c),!(Date.now()-m>100)););}else{for(u=0;u<64;u++)for(d=0;d<i>>1;d++)An(r,d<<1,l,c);const m=[];for(u=0;u<i;u++)m.push((r[u]>>24&255)>>>0),m.push((r[u]>>16&255)>>>0),m.push((r[u]>>8&255)>>>0),m.push((r[u]&255)>>>0);return s===!1?Promise.resolve(m):m}if(s===!1)return new Promise(m=>xh(()=>{g().then(m)}))};if(s===!1)return g();{let m;for(;;)if(typeof(m=g())<"u")return m||[]}},Jh=a=>{try{let t;typeof window<"u"?t=window.crypto??window.msCrypto:t=globalThis.crypto;const e=new Uint32Array(a);return t==null||t.getRandomValues(e),Array.from(e)}catch{throw Error("WebCryptoAPI is not available")}},Ch=(a=10)=>{if(typeof a!="number")throw Error("Illegal arguments: "+typeof a);a<4?a=4:a>31&&(a=31);const t=[];return t.push("$2a$"),a<10&&t.push("0"),t.push(a.toString()),t.push("$"),t.push(Bo(Jh(16),16)),t.join("")};function Bh(a,t,e,s){if(typeof a!="string"||typeof t!="string"){const _=new Error("Invalid string / salt: Not a string");if(e===!1)return Promise.reject(_);throw _}let o,r;if(t.charAt(0)!=="$"||t.charAt(1)!=="2"){const _=new Error("Invalid salt version: "+t.substring(0,2));if(e===!1)return Promise.reject(_);throw _}if(t.charAt(2)==="$")o="\0",r=3;else{if(o=t.charAt(2),o!=="a"&&o!=="b"&&o!=="y"||t.charAt(3)!=="$"){const _=Error("Invalid salt revision: "+t.substring(2,4));if(e===!1)return Promise.reject(_);throw _}r=4}if(t.charAt(r+2)>"$"){const _=new Error("Missing salt rounds");if(e===!1)return Promise.reject(_);throw _}const i=parseInt(t.substring(r,r+1),10)*10,l=parseInt(t.substring(r+1,r+2),10),c=i+l,u=t.substring(r+3,r+25);a+=o>="a"?"\0":"";const d=Rh(a),g=Ph(u,16),m=_=>{const v=[];return v.push("$2"),o>="a"&&v.push(o),v.push("$"),c<10&&v.push("0"),v.push(c.toString()),v.push("$"),v.push(Bo(g,g.length)),v.push(Bo(_,v2.length*4-1)),v.join("")};return e===!1?Yi(d,g,c,!1).then(_=>m(_)):m(Yi(d,g,c,!0))}const wh=(a,t=10)=>{if(typeof t=="number"&&(t=Ch(t)),typeof a!="string"||typeof t!="string")throw Error("Illegal arguments: "+typeof a+", "+typeof t);return Bh(a,t,!0)},wo=(a,t)=>{if(typeof a!="string"||typeof t!="string")throw Error("Illegal arguments: "+typeof a+", "+typeof t);return t.length!==60?!1:wh(a,t.substring(0,t.length-31))===t};var f2=j({name:"PasswordModal",props:{full:Boolean},emits:["verify"],setup(a,{emit:t}){const e=da(),s=ra(),o=X(""),r=X(!1),i=X(!1),l=y(()=>s.value.encryptLocales);let c=null;const u=()=>{c&&clearTimeout(c),r.value=!1,t("verify",o.value,i.value),Bt().then(()=>{r.value=!0,c=setTimeout(()=>{r.value=!1},1e3)})};return()=>p("div",{class:["vp-decrypt-layer",{expand:a.full||e.value.home}]},p("div",{class:"vp-decrypt-modal"},[p("div",{class:["vp-decrypt-hint",{tried:r.value}]},r.value?l.value.errorHint:p(kr,{"aria-label":l.value.iconLabel})),p("div",{class:"vp-decrypt-input"},[p("input",{type:"password",value:o.value,placeholder:l.value.placeholder,onInput:({target:d})=>{o.value=d.value},onKeydown:({key:d})=>{d==="Enter"&&u()}})]),p("div",{class:"vp-remember-password"},[p("input",{type:"checkbox",value:i.value,onChange:()=>i.value=!i.value}),l.value.remember]),p("button",{type:"button",class:"vp-decrypt-submit",onClick:()=>u()},"OK")]))}});const E2=()=>{const a=kt();return y(()=>a.value.encrypt||{})},ap="VUEPRESS_HOPE_GLOBAL_TOKEN",Vh=()=>{const a=E2(),t=Ue(ap,""),e=Wl(ap,""),s=y(()=>{const{global:r=!1,admin:i=[]}=a.value;return r&&i.length>0}),o=y(()=>{if(s.value){if(t.value)return a.value.admin.some(r=>wo(t.value,r));if(e.value)return a.value.admin.some(r=>wo(e.value,r))}return!1});return{isEncrypted:s,isDecrypted:o,validate:(r,i=!1)=>{(i?t:e).value=r}}},ro=(a="",t)=>!!a&&wo(a,t),tp="VUEPRESS_HOPE_PATH_TOKEN",Mh=()=>{const a=Aa(),t=E2(),e=Ue(tp,{}),s=Wl(tp,{}),o=i=>Ne(t.value.config)?ut(t.value.config).filter(l=>we(decodeURI(i),l)).sort((l,c)=>c.length-l.length):[],r=i=>{const l=o(i);if(l.length>0){const{config:c={}}=t.value;return{isEncrypted:!0,isDecrypted:l.some(u=>e.value[u]&&c[u].some(d=>ro(e.value[u],d))||s.value[u]&&c[u].some(d=>ro(s.value[u],d)))}}return{isDecrypted:!1,isEncrypted:!1}};return{status:y(()=>r(a.value.path)),getStatus:r,validate:(i,l=!1)=>{const{config:c={}}=t.value,u=o(a.value.path);for(const d of u)if(c[d].filter(g=>ro(i,g))){(l?e:s).value[d]=i;break}}}};var Fh=j({name:"GlobalEncrypt",slots:Object,setup(a,{slots:t}){const{isDecrypted:e,isEncrypted:s,validate:o}=Vh(),r=Ga(),i=X(!1);return fa(()=>{i.value=!0}),()=>p(r.value?xs:Er,()=>s.value?i.value?e.value?t.default():p(f2,{full:!0,onVerify:o}):null:t.default())}}),jh=j({name:"LocalEncrypt",slots:Object,setup(a,{slots:t}){const{status:e,validate:s}=Mh(),o=X(!1);return fa(()=>{o.value=!0}),()=>{const{isEncrypted:r,isDecrypted:i}=e.value;return r?o.value?i?t.default():p(f2,{full:!0,onVerify:s}):null:t.default()}}});Lm(a=>{const t=a.t,e=a.I!==!1,s=a.i;return e?{title:t,content:s?()=>[p(Na,{icon:s}),t]:null,order:a.O,index:a.I}:null});const Nh=Dt({enhance:({app:a,router:t})=>{const{scrollBehavior:e}=t.options;t.options.scrollBehavior=async(...s)=>(await Lo.wait(),e(...s)),n_(a),a.component("HopeIcon",Na),a.component("BloggerInfo",Ir),a.component("SocialMedias",s2),a.component("GlobalEncrypt",Fh),a.component("LocalEncrypt",jh)},setup:()=>{s_(),i_(),sh()},layouts:{Layout:W_,NotFound:$_,BlogCategory:mh,BlogHome:kh,BlogType:yh,Timeline:bh}}),rs=[Dg,ym,Tm,Cm,Vm,Nm,Wm,Zm,x1,K1,Nh],Hh=JSON.parse('{"base":"/","lang":"zh-CN","title":"Baeldung 中文网","description":"Baeldung 帮助开发人员探索 Java 生态系统并成为更好的工程师。 我们发布重点指南和课程，重点关注构建 Web 应用程序、Spring、Spring Security 和 RESTful API。","head":[],"locales":{}}');var qe=xa(Hh),Uh=Gd,Kh=()=>{const a=hg({history:Uh(sr("/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(t,e,s)=>s||(t.hash?{el:t.hash}:{top:0})});return a.beforeResolve(async(t,e)=>{if(t.path!==e.path||e===Rt){const s=Pt(t.path);if(s.path!==t.path)return s.path;const o=await s.loader();t.meta={...s.meta,_pageChunk:o}}else t.path===e.path&&(t.meta=e.meta)}),a},Gh=a=>{a.component("ClientOnly",Ts),a.component("Content",Ll),a.component("RouteLink",Ta)},Wh=(a,t,e)=>{const s=y(()=>t.currentRoute.value.path),o=Dp((b,A)=>({get(){return b(),t.currentRoute.value.meta._pageChunk},set(I){t.currentRoute.value.meta._pageChunk=I,A()}})),r=y(()=>pe.resolveLayouts(e)),i=y(()=>pe.resolveRouteLocale(qe.value.locales,s.value)),l=y(()=>pe.resolveSiteLocaleData(qe.value,i.value)),c=y(()=>o.value.comp),u=y(()=>o.value.data),d=y(()=>u.value.frontmatter),g=y(()=>pe.resolvePageHeadTitle(u.value,l.value)),m=y(()=>pe.resolvePageHead(g.value,d.value,l.value)),_=y(()=>pe.resolvePageLang(u.value,l.value)),v=y(()=>pe.resolvePageLayout(u.value,r.value)),k={layouts:r,pageData:u,pageComponent:c,pageFrontmatter:d,pageHead:m,pageHeadTitle:g,pageLang:_,pageLayout:v,redirects:Ao,routeLocale:i,routePath:s,routes:hn,siteData:qe,siteLocaleData:l};return a.provide(ir,k),Object.defineProperties(a.config.globalProperties,{$frontmatter:{get:()=>d.value},$head:{get:()=>m.value},$headTitle:{get:()=>g.value},$lang:{get:()=>_.value},$page:{get:()=>u.value},$routeLocale:{get:()=>i.value},$site:{get:()=>qe.value},$siteLocale:{get:()=>l.value},$withBase:{get:()=>ha}}),k},zh=()=>{const a=Eg(),t=Pl();let e=[];const s=()=>{a.value.forEach(i=>{const l=$h(i);l&&e.push(l)})},o=()=>{const i=[];return a.value.forEach(l=>{const c=qh(l);c&&i.push(c)}),i},r=()=>{document.documentElement.lang=t.value;const i=o();e.forEach((l,c)=>{const u=i.findIndex(d=>l.isEqualNode(d));u===-1?(l.remove(),delete e[c]):i.splice(u,1)}),i.forEach(l=>document.head.appendChild(l)),e=[...e.filter(l=>!!l),...i]};vt(Ig,r),fa(()=>{s(),ua(a,r,{immediate:!1})})},$h=([a,t,e=""])=>{const s=Object.entries(t).map(([l,c])=>Pa(c)?`[${l}=${JSON.stringify(c)}]`:c===!0?`[${l}]`:"").join(""),o=`head > ${a}${s}`;return Array.from(document.querySelectorAll(o)).find(l=>l.innerText===e)||null},qh=([a,t,e])=>{if(!Pa(a))return null;const s=document.createElement(a);return Ne(t)&&Object.entries(t).forEach(([o,r])=>{Pa(r)?s.setAttribute(o,r):r===!0&&s.setAttribute(o,"")}),Pa(e)&&s.appendChild(document.createTextNode(e)),s},Qh=ad,Xh=async()=>{var e;const a=Qh({name:"Vuepress",setup(){var r;zh();for(const i of rs)(r=i.setup)==null||r.call(i);const s=rs.flatMap(({rootComponents:i=[]})=>i.map(l=>p(l))),o=kg();return()=>[p(o.value),s]}}),t=Kh();Gh(a),Wh(a,t,rs);for(const s of rs)await((e=s.enhance)==null?void 0:e.call(s,{app:a,router:t,siteData:qe}));return a.use(t),{app:a,router:t}};Xh().then(({app:a,router:t})=>{t.isReady().then(()=>{a.mount("#app")})});export{ev as a,nl as b,tv as c,Xh as createVueApp,sl as d,Ja as e,av as o,lt as r,Yh as t};
