import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as t}from"./app-813qSKfg.js";const p={},e=t(`<h1 id="检查字符串中的字符是否唯一-java" tabindex="-1"><a class="header-anchor" href="#检查字符串中的字符是否唯一-java"><span>检查字符串中的字符是否唯一（Java）</span></a></h1><p>在本教程中，我们将学习多种技术来检查字符串中的所有字符（包括非ASCII字符）是否唯一。此外，这里讨论的所有方法都是不区分大小写的。</p><h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述"><span>1. 概述</span></a></h2><h2 id="_2-暴力法" tabindex="-1"><a class="header-anchor" href="#_2-暴力法"><span>2. 暴力法</span></a></h2><p>这是最明显的技术之一，但可能不是最有效的。我们比较字符串中的字符：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UniqueCharChecker</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">bruteForceCheck</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \`<span class="token operator">&lt;</span> chars<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> chars<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> chars<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们为上述方法编写一些测试用例：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UniqueCharCheckerUnitTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenUnique_whenBruteForceCheck_thenReturnTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sampleStrings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;Justfewdi123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$%&amp;Hibusc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hibusc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;მშვნიერ&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG</span> <span class="token operator">=</span> <span class="token string">&quot;发现重复&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>sampleStrings<span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sampleStr <span class="token operator">-&gt;</span>\` <span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token constant">MSG</span> <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> sampleStr<span class="token punctuation">,</span> <span class="token class-name">UniqueCharChecker</span><span class="token punctuation">.</span><span class="token function">checkV1</span><span class="token punctuation">(</span>sampleStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenNotUnique_whenBruteForceCheck_thenReturnFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sampleStrings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;Justfewdif123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$%&amp;Hibushc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hibusuc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hi%busc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;მშვენიერი&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG</span> <span class="token operator">=</span> <span class="token string">&quot;未发现重复&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>sampleStrings<span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sampleStr <span class="token operator">-&gt;</span> <span class="token function">assertFalse</span><span class="token punctuation">(</span><span class="token constant">MSG</span> <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> sampleStr<span class="token punctuation">,</span> <span class="token class-name">UniqueCharChecker</span><span class="token punctuation">.</span><span class="token function">checkV1</span><span class="token punctuation">(</span>sampleStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-排序" tabindex="-1"><a class="header-anchor" href="#_3-排序"><span>3. 排序</span></a></h2><p>这与暴力法技术类似，但在这里我们首先对字符串中的字符进行排序，然后只与它们的邻居进行比较，而不是与每个人比较。让我们看看实现：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">sortAndThenCheck</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>chars<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \`<span class="token operator">&lt;</span> chars<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> chars<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们测试一下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenUnique_whenSortAndThenCheck_thenReturnTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sampleStrings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;Justfewdi123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$%&amp;Hibusc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hibusc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;მშვნიერ&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG</span> <span class="token operator">=</span> <span class="token string">&quot;发现重复&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>sampleStrings<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sampleStr <span class="token operator">-&gt;</span>\` <span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token constant">MSG</span> <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> sampleStr<span class="token punctuation">,</span> <span class="token class-name">UniqueCharChecker</span><span class="token punctuation">.</span><span class="token function">checkV2</span><span class="token punctuation">(</span>sampleStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenNotUnique_whenSortAndThenCheck_thenReturnFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sampleStrings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;Justfewdif123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$%&amp;Hibushc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hibusuc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hi%busc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;მშვენიერი&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG</span> <span class="token operator">=</span> <span class="token string">&quot;未发现重复&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>sampleStrings<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sampleStr <span class="token operator">-&gt;</span> <span class="token function">assertFalse</span><span class="token punctuation">(</span><span class="token constant">MSG</span> <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> sampleStr<span class="token punctuation">,</span> <span class="token class-name">UniqueCharChecker</span><span class="token punctuation">.</span><span class="token function">checkV2</span><span class="token punctuation">(</span>sampleStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-hashset" tabindex="-1"><a class="header-anchor" href="#_4-hashset"><span>4. HashSet</span></a></h2><p>在这里，我们利用java.util.Set的能力来去除重复的字符：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">useSetCheck</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span>\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span>\` set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token operator">:</span> chars<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，让我们看看测试用例：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenUnique_whenUseSetCheck_thenReturnTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sampleStrings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;Justfewdi123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$%&amp;Hibusc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hibusc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;მშვნიერ&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG</span> <span class="token operator">=</span> <span class="token string">&quot;发现重复&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>sampleStrings<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sampleStr <span class="token operator">-&gt;</span> <span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token constant">MSG</span> <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> sampleStr<span class="token punctuation">,</span> <span class="token class-name">UniqueCharChecker</span><span class="token punctuation">.</span><span class="token function">checkV3</span><span class="token punctuation">(</span>sampleStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenNotUnique_whenUseSetCheck_thenReturnFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sampleStrings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;Justfewdif123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$%&amp;Hibushc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hibusuc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hi%busc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;მშვენიერი&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG</span> <span class="token operator">=</span> <span class="token string">&quot;未发现重复&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>sampleStrings<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sampleStr <span class="token operator">-&gt;</span> <span class="token function">assertFalse</span><span class="token punctuation">(</span><span class="token constant">MSG</span> <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> sampleStr<span class="token punctuation">,</span> <span class="token class-name">UniqueCharChecker</span><span class="token punctuation">.</span><span class="token function">checkV3</span><span class="token punctuation">(</span>sampleStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-java-streams" tabindex="-1"><a class="header-anchor" href="#_5-java-streams"><span>5. Java Streams</span></a></h2><p>这种技术与上节中使用的方法类似。然而，我们使用Streams API来创建Set。让我们看看实现：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">useStreamCheck</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> isUnique <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chars</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">mapToObj</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> c<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> isUnique<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们检查单元测试：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenUnique_whenUseStreamCheck_thenReturnTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sampleStrings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;Justfewdi123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$%&amp;Hibusc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hibusc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;მშვნიერ&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG</span> <span class="token operator">=</span> <span class="token string">&quot;发现重复&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>sampleStrings<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sampleStr <span class="token operator">-&gt;</span> <span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token constant">MSG</span> <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> sampleStr<span class="token punctuation">,</span> <span class="token class-name">UniqueCharChecker</span><span class="token punctuation">.</span><span class="token function">checkV1</span><span class="token punctuation">(</span>sampleStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenNotUnique_whenUseStreamCheck_thenReturnFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sampleStrings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;Justfewdif123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$%&amp;Hibushc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hibusuc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hi%busc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;მშვენიერი&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG</span> <span class="token operator">=</span> <span class="token string">&quot;未发现重复&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>sampleStrings<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sampleStr <span class="token operator">-&gt;</span> <span class="token function">assertFalse</span><span class="token punctuation">(</span><span class="token constant">MSG</span> <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> sampleStr<span class="token punctuation">,</span> <span class="token class-name">UniqueCharChecker</span><span class="token punctuation">.</span><span class="token function">checkV4</span><span class="token punctuation">(</span>sampleStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-stringutils" tabindex="-1"><a class="header-anchor" href="#_6-stringutils"><span>6. StringUtils</span></a></h2><p>基本上，在这里，我们将使用commons-lang StringUtils类的containsIgnoreCase()方法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">useStringUtilscheck</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \`<span class="token operator">&lt;</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> curChar <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> remainingStr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">containsIgnoreCase</span><span class="token punctuation">(</span>remainingStr<span class="token punctuation">,</span> curChar<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们测试这个方法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenUnique_whenUseStringUtilscheck_thenReturnTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sampleStrings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;Justfewdi123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$%&amp;Hibusc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hibusc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;მშვნიერ&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG</span> <span class="token operator">=</span> <span class="token string">&quot;发现重复&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>sampleStrings<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sampleStr <span class="token operator">-&gt;</span>\` <span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token constant">MSG</span> <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> sampleStr<span class="token punctuation">,</span> <span class="token class-name">UniqueCharChecker</span><span class="token punctuation">.</span><span class="token function">checkV5</span><span class="token punctuation">(</span>sampleStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">givenNotUnique_whenUseStringUtilscheck_thenReturnFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sampleStrings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;Justfewdif123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$%&amp;Hibushc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hibusuc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hi%busc%$#&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;მშვენიერი&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG</span> <span class="token operator">=</span> <span class="token string">&quot;未发现重复&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>sampleStrings<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sampleStr <span class="token operator">-&gt;</span> <span class="token function">assertFalse</span><span class="token punctuation">(</span><span class="token constant">MSG</span> <span class="token operator">+</span> <span class="token string">&quot; in &quot;</span> <span class="token operator">+</span> sampleStr<span class="token punctuation">,</span> <span class="token class-name">UniqueCharChecker</span><span class="token punctuation">.</span><span class="token function">checkV5</span><span class="token punctuation">(</span>sampleStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-结论" tabindex="-1"><a class="header-anchor" href="#_7-结论"><span>7. 结论</span></a></h2><p>在本教程中，我们看到了五种不同的方法来检查字符串是否具有唯一字符。我们还得出结论，<strong>没有现成的库可用于解决这个问题</strong>。</p><p>这里使用的代码片段以及相关的JUnit测试用例可以在GitHub上找到。</p>`,31),o=[e];function c(l,u){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","2024-07-02-Check if a String Has All Unique Characters in Java.html.vue"]]),d=JSON.parse('{"path":"/posts/baeldung/2024-07-02/2024-07-02-Check%20if%20a%20String%20Has%20All%20Unique%20Characters%20in%20Java.html","title":"检查字符串中的字符是否唯一（Java）","lang":"zh-CN","frontmatter":{"date":"2022-04-01T00:00:00.000Z","category":["Java","String Manipulation"],"tag":["Java","Unique Characters","String"],"head":[["meta",{"name":"keywords","content":"Java, Unique Characters, String Manipulation"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-02/2024-07-02-Check%20if%20a%20String%20Has%20All%20Unique%20Characters%20in%20Java.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"检查字符串中的字符是否唯一（Java）"}],["meta",{"property":"og:description","content":"检查字符串中的字符是否唯一（Java） 在本教程中，我们将学习多种技术来检查字符串中的所有字符（包括非ASCII字符）是否唯一。此外，这里讨论的所有方法都是不区分大小写的。 1. 概述 2. 暴力法 这是最明显的技术之一，但可能不是最有效的。我们比较字符串中的字符： 让我们为上述方法编写一些测试用例： 3. 排序 这与暴力法技术类似，但在这里我们首先对..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-02T20:34:30.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Unique Characters"}],["meta",{"property":"article:tag","content":"String"}],["meta",{"property":"article:published_time","content":"2022-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-02T20:34:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"检查字符串中的字符是否唯一（Java）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-02T20:34:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"检查字符串中的字符是否唯一（Java） 在本教程中，我们将学习多种技术来检查字符串中的所有字符（包括非ASCII字符）是否唯一。此外，这里讨论的所有方法都是不区分大小写的。 1. 概述 2. 暴力法 这是最明显的技术之一，但可能不是最有效的。我们比较字符串中的字符： 让我们为上述方法编写一些测试用例： 3. 排序 这与暴力法技术类似，但在这里我们首先对..."},"headers":[{"level":2,"title":"1. 概述","slug":"_1-概述","link":"#_1-概述","children":[]},{"level":2,"title":"2. 暴力法","slug":"_2-暴力法","link":"#_2-暴力法","children":[]},{"level":2,"title":"3. 排序","slug":"_3-排序","link":"#_3-排序","children":[]},{"level":2,"title":"4. HashSet","slug":"_4-hashset","link":"#_4-hashset","children":[]},{"level":2,"title":"5. Java Streams","slug":"_5-java-streams","link":"#_5-java-streams","children":[]},{"level":2,"title":"6. StringUtils","slug":"_6-stringutils","link":"#_6-stringutils","children":[]},{"level":2,"title":"7. 结论","slug":"_7-结论","link":"#_7-结论","children":[]}],"git":{"createdTime":1719952470000,"updatedTime":1719952470000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.85,"words":856},"filePathRelative":"posts/baeldung/2024-07-02/2024-07-02-Check if a String Has All Unique Characters in Java.md","localizedDate":"2022年4月1日","excerpt":"\\n<p>在本教程中，我们将学习多种技术来检查字符串中的所有字符（包括非ASCII字符）是否唯一。此外，这里讨论的所有方法都是不区分大小写的。</p>\\n<h2>1. 概述</h2>\\n<h2>2. 暴力法</h2>\\n<p>这是最明显的技术之一，但可能不是最有效的。我们比较字符串中的字符：</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">UniqueCharChecker</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">bruteForceCheck</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> str<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">char</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> chars <span class=\\"token operator\\">=</span> str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toUpperCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toCharArray</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i `<span class=\\"token operator\\">&lt;</span> chars<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> j <span class=\\"token operator\\">=</span> i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&lt;</span> chars<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>chars<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> chars<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
