import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as e}from"./app-0nXvcScy.js";const t={},p=e(`<h1 id="创建java中的kubernetes准入控制器" tabindex="-1"><a class="header-anchor" href="#创建java中的kubernetes准入控制器"><span>创建Java中的Kubernetes准入控制器</span></a></h1><p>在与Kubernetes合作一段时间后，我们很快就会意识到其中涉及很多样板代码。即使是一个简单的服务，我们也需要提供所有必需的详细信息，通常以相当冗长的YAML文档的形式出现。</p><p>此外，当在给定环境中部署多个服务时，这些YAML文档往往包含很多重复的元素。例如，我们可能想要向所有部署中添加一个特定的_ConfigMap_或一些sidecar容器。</p><p>在本文中，我们将探讨如何使用Kubernetes准入控制器坚持DRY原则，避免所有这些重复的代码。</p><h2 id="_2-什么是准入控制器" tabindex="-1"><a class="header-anchor" href="#_2-什么是准入控制器"><span>2. 什么是准入控制器？</span></a></h2><p>准入控制器是Kubernetes用来在API请求经过身份验证但执行前进行预处理的机制。</p><p>API服务器进程（<em>kube-apiserver</em>）已经内置了几个控制器，每个控制器负责API处理的特定方面。</p><p><em>AllwaysPullImage</em> 是一个很好的例子：这个准入控制器修改了pod创建请求，使得镜像拉取策略变为“always”，无论指定的值是什么。Kubernetes文档包含了标准准入控制器的完整列表。</p><p>除了这些内置控制器，实际上作为_kubeapi-server_进程的一部分运行，Kubernetes还支持外部准入控制器。在这种情况下，准入控制器只是一个来自API服务器的HTTP服务。</p><p>此外，这些外部准入控制器可以动态添加和删除，因此得名动态准入控制器。这导致处理流程看起来像这样：</p><figure><img src="https://www.baeldung.com/wp-content/uploads/2021/07/k8s-admission-controllers.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>在这里，我们可以看到，经过身份验证的传入API请求，在到达持久层之前，会依次通过每个内置的准入控制器。</p><h2 id="_3-准入控制器类型" tabindex="-1"><a class="header-anchor" href="#_3-准入控制器类型"><span>3. 准入控制器类型</span></a></h2><p>目前有两种类型的准入控制器：</p><ul><li>可变准入控制器</li><li>验证准入控制器</li></ul><p>顾名思义，它们的主要区别在于对传入请求的处理类型。可变控制器可能在将请求传递到下游之前修改它，而验证控制器只能验证它们。</p><p>关于这些类型的一个重点在于API服务器执行它们的顺序：首先是可变控制器，然后是验证控制器。这是有意义的，因为一旦我们有了最终的请求，可能已经被任何可变控制器改变了，就会进行验证。</p><h3 id="_3-1-准入审查请求" tabindex="-1"><a class="header-anchor" href="#_3-1-准入审查请求"><span>3.1. 准入审查请求</span></a></h3><p>内置的准入控制器（可变和验证）使用简单的HTTP请求/响应模式与外部准入控制器通信：</p><ul><li>请求：一个包含其_request_属性中要处理的API调用的_AdmissionReview_ JSON对象</li><li>响应：一个包含其_response_属性中结果的_AdmissionReview_ JSON对象</li></ul><p>这是一个请求的示例：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;kind&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AdmissionReview&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;apiVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admission.k8s.io/v1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;uid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c46a6607-129d-425b-af2f-c6f87a0756da&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;kind&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;group&quot;</span><span class="token operator">:</span> <span class="token string">&quot;apps&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;kind&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Deployment&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;resource&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;group&quot;</span><span class="token operator">:</span> <span class="token string">&quot;apps&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;resource&quot;</span><span class="token operator">:</span> <span class="token string">&quot;deployments&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;requestKind&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;group&quot;</span><span class="token operator">:</span> <span class="token string">&quot;apps&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;kind&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Deployment&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;requestResource&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;group&quot;</span><span class="token operator">:</span> <span class="token string">&quot;apps&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;resource&quot;</span><span class="token operator">:</span> <span class="token string">&quot;deployments&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test-deployment&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;namespace&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test-namespace&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;operation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;CREATE&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;object&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;kind&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Deployment&quot;</span><span class="token punctuation">,</span>
      ... deployment fields omitted
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;oldObject&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dryRun&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;options&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;kind&quot;</span><span class="token operator">:</span> <span class="token string">&quot;CreateOptions&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;apiVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;meta.k8s.io/v1&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在可用字段中，有些特别重要：</p><ul><li><em>operation</em>：这表明此请求将创建、修改或删除资源</li><li><em>object</em>：正在处理的资源的规范详细信息。</li><li><em>oldObject</em>：当修改或删除资源时，此字段包含现有资源</li></ul><p>预期的响应也是一个_AdmissionReview_ JSON对象，但具有_response_字段而不是_request_：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;apiVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admission.k8s.io/v1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;kind&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AdmissionReview&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;response&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;uid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c46a6607-129d-425b-af2f-c6f87a0756da&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;allowed&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;patchType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;JSONPatch&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;patch&quot;</span><span class="token operator">:</span> <span class="token string">&quot;W3sib3A ... Base64 patch data omitted&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们剖析一下_response_对象的字段：</p><ul><li><em>uid</em>：此字段的值必须与传入_request_字段中出现的相应字段匹配</li><li><em>allowed</em>：审查操作的结果。_true_意味着API调用处理可以进入下一步</li><li><em>patchType</em>：仅对可变准入控制器有效。指示_AdmissionReview_请求返回的补丁类型</li><li><em>patch</em>：要应用在传入对象上的补丁。详细信息在下一部分</li></ul><h3 id="_3-2-补丁数据" tabindex="-1"><a class="header-anchor" href="#_3-2-补丁数据"><span>3.2. 补丁数据</span></a></h3><p>来自可变准入控制器的响应中的_patch_字段告诉API服务器在请求继续之前需要更改什么。它的值是一个Base64编码的JSONPatch对象，包含API服务器用来修改传入API调用正文的一系列指令的数组：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;op&quot;</span><span class="token operator">:</span> <span class="token string">&quot;add&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/spec/template/spec/volumes/-&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;migration-data&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;emptyDir&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，我们有一个单一的指令，将一个卷添加到部署规范的_volumes_数组中。处理补丁时的一个常见问题是，除非原始对象中已经存在，否则没有办法向现有数组添加一个元素。这在处理Kubernetes API对象时特别烦人，因为最常见的对象（例如，部署）包括可选数组。</p><p>例如，前一个例子只有在传入的_deployment_至少有一个卷时才有效。如果不是这种情况，我们将不得不使用稍微不同的指令：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;op&quot;</span><span class="token operator">:</span> <span class="token string">&quot;add&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/spec/template/spec/volumes&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;migration-data&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;emptyDir&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，我们定义了一个新的_volumes_字段，其值是一个包含卷定义的数组。之前，值是一个对象，因为我们正在将其追加到现有数组中。</p><h2 id="_4-示例用例-wait-for-it" tabindex="-1"><a class="header-anchor" href="#_4-示例用例-wait-for-it"><span>4. 示例用例：Wait-For-It</span></a></h2><p>现在我们已经对准入控制器的预期行为有了基本的了解，让我们编写一个简单的示例。在Kubernetes中管理运行时依赖关系是一个常见问题，特别是当使用微服务架构时。例如，如果一个特定的微服务需要访问数据库，如果前者离线，启动就没有意义。</p><p>为了解决这样的问题，我们可以使用_pods_中的_initContainer_在启动主容器之前进行检查。一个简单的方法是使用流行的_wait-for-it_ shell脚本，也可以作为docker镜像使用。</p><p>该脚本采用_hostname_和_port_参数，并尝试连接到它。如果测试成功，容器以成功的状态码退出，pod初始化继续进行。否则，它将失败，并且相关的控制器将根据定义的策略继续重试。将此预检外部化的好处是，任何相关的Kubernetes服务都会注意到失败。因此，不会向其发送任何请求，可能会提高整体的弹性。</p><h3 id="_4-1-准入控制器的案例" tabindex="-1"><a class="header-anchor" href="#_4-1-准入控制器的案例"><span>4.1. 准入控制器的案例</span></a></h3><p>这是一个典型的部署，其中添加了_wait-for-it_ init容器：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> frontend
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">labels</span><span class="token punctuation">:</span>
        <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">initContainers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> wait<span class="token punctuation">-</span>backend
        <span class="token key atrule">image</span><span class="token punctuation">:</span> willwill/wait<span class="token punctuation">-</span>for<span class="token punctuation">-</span>it
        <span class="token key atrule">args</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token punctuation">-</span>www.google.com<span class="token punctuation">:</span><span class="token number">80</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
        <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.14.2
        <span class="token key atrule">ports</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>虽然在这个简单的例子中并不复杂，但在每个部署中添加相关代码有一些缺点。特别是，我们给部署作者带来了确切指定依赖检查应该如何进行的负担。相反，更好的体验只需要定义_应该_测试什么。</p><p>进入我们的准入控制器。为了解决这个用例，我们将编写一个可变准入控制器，它查找资源中特定注释的存在，并在存在时向其添加_initContainer_。这是一个带注释的部署规范的样子：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> frontend
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>
    <span class="token key atrule">com.baeldung/wait-for-it</span><span class="token punctuation">:</span> <span class="token string">&quot;www.google.com:80&quot;</span>
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45),o=[p];function l(i,u){return a(),s("div",null,o)}const d=n(t,[["render",l],["__file","2024-07-27-Creating a Kubernetes Admission Controller in Java.html.vue"]]),k=JSON.parse('{"path":"/posts/baeldung/2024-07-27/2024-07-27-Creating%20a%20Kubernetes%20Admission%20Controller%20in%20Java.html","title":"创建Java中的Kubernetes准入控制器","lang":"zh-CN","frontmatter":{"date":"2021-07-01T00:00:00.000Z","category":["Kubernetes","Java"],"tag":["Admission Controller","Java","Kubernetes"],"head":[["meta",{"name":"keywords","content":"Kubernetes, Java, Admission Controller"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-07-27/2024-07-27-Creating%20a%20Kubernetes%20Admission%20Controller%20in%20Java.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"创建Java中的Kubernetes准入控制器"}],["meta",{"property":"og:description","content":"创建Java中的Kubernetes准入控制器 在与Kubernetes合作一段时间后，我们很快就会意识到其中涉及很多样板代码。即使是一个简单的服务，我们也需要提供所有必需的详细信息，通常以相当冗长的YAML文档的形式出现。 此外，当在给定环境中部署多个服务时，这些YAML文档往往包含很多重复的元素。例如，我们可能想要向所有部署中添加一个特定的_Con..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.baeldung.com/wp-content/uploads/2021/07/k8s-admission-controllers.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-27T15:01:59.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"Admission Controller"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:published_time","content":"2021-07-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-27T15:01:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"创建Java中的Kubernetes准入控制器\\",\\"image\\":[\\"https://www.baeldung.com/wp-content/uploads/2021/07/k8s-admission-controllers.png\\"],\\"datePublished\\":\\"2021-07-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-27T15:01:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"创建Java中的Kubernetes准入控制器 在与Kubernetes合作一段时间后，我们很快就会意识到其中涉及很多样板代码。即使是一个简单的服务，我们也需要提供所有必需的详细信息，通常以相当冗长的YAML文档的形式出现。 此外，当在给定环境中部署多个服务时，这些YAML文档往往包含很多重复的元素。例如，我们可能想要向所有部署中添加一个特定的_Con..."},"headers":[{"level":2,"title":"2. 什么是准入控制器？","slug":"_2-什么是准入控制器","link":"#_2-什么是准入控制器","children":[]},{"level":2,"title":"3. 准入控制器类型","slug":"_3-准入控制器类型","link":"#_3-准入控制器类型","children":[{"level":3,"title":"3.1. 准入审查请求","slug":"_3-1-准入审查请求","link":"#_3-1-准入审查请求","children":[]},{"level":3,"title":"3.2. 补丁数据","slug":"_3-2-补丁数据","link":"#_3-2-补丁数据","children":[]}]},{"level":2,"title":"4. 示例用例：Wait-For-It","slug":"_4-示例用例-wait-for-it","link":"#_4-示例用例-wait-for-it","children":[{"level":3,"title":"4.1. 准入控制器的案例","slug":"_4-1-准入控制器的案例","link":"#_4-1-准入控制器的案例","children":[]}]}],"git":{"createdTime":1722092519000,"updatedTime":1722092519000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":6.21,"words":1863},"filePathRelative":"posts/baeldung/2024-07-27/2024-07-27-Creating a Kubernetes Admission Controller in Java.md","localizedDate":"2021年7月1日","excerpt":"\\n<p>在与Kubernetes合作一段时间后，我们很快就会意识到其中涉及很多样板代码。即使是一个简单的服务，我们也需要提供所有必需的详细信息，通常以相当冗长的YAML文档的形式出现。</p>\\n<p>此外，当在给定环境中部署多个服务时，这些YAML文档往往包含很多重复的元素。例如，我们可能想要向所有部署中添加一个特定的_ConfigMap_或一些sidecar容器。</p>\\n<p>在本文中，我们将探讨如何使用Kubernetes准入控制器坚持DRY原则，避免所有这些重复的代码。</p>\\n<h2>2. 什么是准入控制器？</h2>\\n<p>准入控制器是Kubernetes用来在API请求经过身份验证但执行前进行预处理的机制。</p>","autoDesc":true}');export{d as comp,k as data};
