import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as t}from"./app-DNwYcgl6.js";const p={},e=t('<h1 id="如何将excel数据转换为java对象列表-baeldung" tabindex="-1"><a class="header-anchor" href="#如何将excel数据转换为java对象列表-baeldung"><span>如何将Excel数据转换为Java对象列表 | Baeldung</span></a></h1><h2 id="_1-引言" tabindex="-1"><a class="header-anchor" href="#_1-引言"><span>1. 引言</span></a></h2><p>在软件开发中，理解数据映射是至关重要的。Excel是一种广泛使用的数据管理软件，因此对于Java开发人员来说，了解如何在Excel和Java对象之间映射数据至关重要。</p><p>在本教程中，我们将探讨如何将Excel数据转换为Java对象列表。</p><p>在Maven仓库中有几种Java库可用于在Java中处理Excel文件，其中Apache POI是最常见的。然而，在本教程中，我们将使用四种Java Excel库，包括Apache POI、Poiji、FastExcel和JExcelApi (Jxl)，将Excel数据转换为Java对象列表。</p><h2 id="_2-模型设置" tabindex="-1"><a class="header-anchor" href="#_2-模型设置"><span>2. 模型设置</span></a></h2><p>要开始，我们需要创建我们对象的蓝图，即_FoodInfo_类：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FoodInfo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> category<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> measure<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">double</span> calories<span class="token punctuation">;</span>\n\n    <span class="token comment">// 标准构造函数，toString，getter和setter</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-apache-poi" tabindex="-1"><a class="header-anchor" href="#_3-apache-poi"><span>3. Apache POI</span></a></h2><p>Apache POI (Poor Obfuscation Implementation) 是一个用于Microsoft文档的Java API。它是一系列用于从/向Microsoft Office文件（如Word、Outlook、Excel等）读取和写入数据的纯Java库。</p><h3 id="_3-1-maven依赖" tabindex="-1"><a class="header-anchor" href="#_3-1-maven依赖"><span>3.1. Maven依赖</span></a></h3><p>让我们将我们的Maven依赖项添加到_pom.xml_文件中：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>``````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>``````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````org.apache.poi```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````poi```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```````5.2.5```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```````\n```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```````\n``````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>``````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````org.apache.poi```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````poi-ooxml```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```````5.2.5```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```````\n```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```````\n``````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>``````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````org.apache.poi```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````poi-ooxml-schemas```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```````4.1.2```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```````\n```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-将excel数据转换为对象列表" tabindex="-1"><a class="header-anchor" href="#_3-2-将excel数据转换为对象列表"><span>3.2. 将Excel数据转换为对象列表</span></a></h3><p>通过使用其_Workbook_接口，我们可以访问各种功能来读取Excel文件的表格和单元格。这个接口有两个实现，每个Excel格式一个——<em>HSSFWorkbook_用于</em>.xls_和_XSSFWorkbook_用于_.xlsx_。</p><p>这段代码片段使用Apache POI库从_.xlsx_文件读取并转换Excel数据到_FoodInfo_对象列表：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` <span class="token function">excelDataToListOfObjets_withApachePOI</span><span class="token punctuation">(</span><span class="token class-name">String</span> fileLocation<span class="token punctuation">)</span>\n    <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">FileInputStream</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fileLocation<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Workbook</span> workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` foodData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>`````````````<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">DataFormatter</span> dataFormatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> sheet<span class="token punctuation">.</span><span class="token function">getPhysicalNumberOfRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">FoodInfo</span> foodInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FoodInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> i <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getFirstCellNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        foodInfo<span class="token punctuation">.</span><span class="token function">setCategory</span><span class="token punctuation">(</span>dataFormatter<span class="token punctuation">.</span><span class="token function">formatCellValue</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        foodInfo<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>dataFormatter<span class="token punctuation">.</span><span class="token function">formatCellValue</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        foodInfo<span class="token punctuation">.</span><span class="token function">setMeasure</span><span class="token punctuation">(</span>dataFormatter<span class="token punctuation">.</span><span class="token function">formatCellValue</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        foodInfo<span class="token punctuation">.</span><span class="token function">setCalories</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNumericCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        foodData<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>foodInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> foodData<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-poiji" tabindex="-1"><a class="header-anchor" href="#_4-poiji"><span>4. Poiji</span></a></h2><p>Poiji是一个线程安全的Java库，提供了一个从Excel表格到Java类的单向数据映射API。它建立在Apache POI库之上。但与Apache POI不同，它更易于使用，并且直接将每个Excel行转换为Java对象。</p><h3 id="_4-1-设置maven依赖" tabindex="-1"><a class="header-anchor" href="#_4-1-设置maven依赖"><span>4.1. 设置Maven依赖</span></a></h3><p>这是我们需要添加到_pom.xml_文件中的Poiji Maven依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>``````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>``````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````com.github.ozlerhakan```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````poiji```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```````4.1.1```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```````\n```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-使用注解设置类" tabindex="-1"><a class="header-anchor" href="#_4-2-使用注解设置类"><span>4.2. 使用注解设置类</span></a></h3><p>Poiji库通过要求类字段使用_@ExcelCellName(String cellName)<em>或</em>@ExcelCell(int cellIndex)_进行注解，简化了Excel数据检索。</p><p>下面，我们通过添加注解为Poiji库设置_FoodInfo_类：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FoodInfo</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@ExcelCellName</span><span class="token punctuation">(</span><span class="token string">&quot;Category&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> category<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@ExcelCellName</span><span class="token punctuation">(</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@ExcelCellName</span><span class="token punctuation">(</span><span class="token string">&quot;Measure&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> measure<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@ExcelCellName</span><span class="token punctuation">(</span><span class="token string">&quot;Calories&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token keyword">double</span> calories<span class="token punctuation">;</span>\n\n    <span class="token comment">// 标准构造函数，getter和setter</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>API支持映射具有多个表格的Excel工作簿。当我们的文件有多个表格时，我们可以在我们的类上使用_@ExcelSheet(String sheetName)_注解来指示我们想要工作的表格。其他表格将被忽略。</p><p>然而，如果我们不使用这个注解，只有工作簿中的第一个Excel表格会被考虑。</p><p>在某些情况下，我们可能不需要从我们正在针对的Excel表格中提取每一行的数据。为了解决这个问题，我们可以在我们的类中包含一个用_@ExcelRow_注解的_private int_ _rowIndex_属性。这将允许我们指定我们想要访问的行项的索引。</p><h3 id="_4-3-将excel数据转换为对象列表" tabindex="-1"><a class="header-anchor" href="#_4-3-将excel数据转换为对象列表"><span>4.3. 将Excel数据转换为对象列表</span></a></h3><p>与本文中提到的库不同，Poiji库默认情况下会忽略Excel表格的标题行。</p><p>以下代码片段从Excel文件中提取数据，并将其转换为_FoodInfo_列表：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelDataToListOfObjectsPOIJI</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` <span class="token function">excelDataToListOfObjets_withPOIJI</span><span class="token punctuation">(</span><span class="token class-name">String</span> fileLocation<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name">Poiji</span><span class="token punctuation">.</span><span class="token function">fromExcel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fileLocation<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">FoodInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>程序将_fileLocation文件_的第一个Excel表格转换为_FoodInfo_类。每一行都成为_FoodInfo_类的一个实例，单元格值表示对象的属性。输出是一个_FoodInfo_对象列表，其大小等同于原始Excel表格中行数（不包括标题行）。</p><p>在某些情况下，我们的Excel表格可能受到密码保护。我们可以通过_PoijiOptionsBuilder_定义密码：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">PoijiOptions</span> options <span class="token operator">=</span> <span class="token class-name">PoijiOptionsBuilder</span><span class="token punctuation">.</span><span class="token function">settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">&quot;`&lt;excel_sheet_password&gt;`&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` foodData <span class="token operator">=</span> <span class="token class-name">Poiji</span><span class="token punctuation">.</span><span class="token function">fromExcel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fileLocation<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">FoodInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了确保我们的代码按预期工作，我们编写一个单元测试：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">whenParsingExcelFileWithPOIJI_thenConvertsToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` foodInfoList <span class="token operator">=</span>\n      <span class="token class-name">ExcelDataToListOfObjectsPOIJI</span>\n        <span class="token punctuation">.</span><span class="token function">excelDataToListOfObjets_withPOIJI</span><span class="token punctuation">(</span><span class="token string">&quot;src\\\\main\\\\resources/food_info.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;Beverages&quot;</span><span class="token punctuation">,</span> foodInfoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;Dairy&quot;</span><span class="token punctuation">,</span> foodInfoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-fastexcel" tabindex="-1"><a class="header-anchor" href="#_5-fastexcel"><span>5. FastExcel</span></a></h2><p>FastExcel是一个高效的库，它使用最少的内存，并为在Java中创建和读取基本Excel工作簿提供高性能。它仅支持较新的Excel文件版本（<em>.xlsx</em>），并且与Apache POI相比，其功能有限。</p><p>它只读取单元格内容，不包括图表、样式或其他单元格格式。</p><h3 id="_5-1-设置maven依赖" tabindex="-1"><a class="header-anchor" href="#_5-1-设置maven依赖"><span>5.1. 设置Maven依赖</span></a></h3><p>下面是添加到_pom.xml_的FastExcel和FastExcel reader Maven依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>``````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>``````\n      ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````org.dhatim```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n      ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````fastexcel```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n      ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```````0.15.7```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```````\n```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```````\n``````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>``````\n      ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````org.dhatim```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n      ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````fastexcel-reader```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n      ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```````0.15.7```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```````\n```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-将excel数据转换为对象列表" tabindex="-1"><a class="header-anchor" href="#_5-2-将excel数据转换为对象列表"><span>5.2. 将Excel数据转换为对象列表</span></a></h3><p>在处理大型文件时，FastExcel reader是一个不错的选择，尽管其功能有限。它易于使用，我们可以使用_ReadableWorkbook_类访问整个Excel工作簿。</p><p>这允许我们单独通过名称或索引检索表格。</p><p>在下面的方法中，我们从Excel表格中读取数据并将其转换为_FoodInfo_对象列表：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` <span class="token function">excelDataToListOfObjets_withFastExcel</span><span class="token punctuation">(</span><span class="token class-name">String</span> fileLocation<span class="token punctuation">)</span>\n   <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">NumberFormatException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` foodData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>`````````````<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileInputStream</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>fileLocation<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token class-name">ReadableWorkbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReadableWorkbook</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">getFirstSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Row</span> row<span class="token operator">:</span> sheet<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getRowNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">continue</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token class-name">FoodInfo</span> food <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FoodInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            food<span class="token punctuation">.</span><span class="token function">setCategory</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getCellText</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            food<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getCellText</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                      food<span class="token punctuation">.</span><span class="token function">setMeasure</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getCellText</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            food<span class="token punctuation">.</span><span class="token function">setCalories</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getCellText</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            foodData<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>food<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> foodData<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 由于API读取了表格中的所有行(包括标题行)，我们需要在遍历行时跳过第一行(非零基索引)。</span>\n<span class="token comment">// 访问单元格可以通过实例化一个_Cell_类：_Cell cell = row.getCell()_，它有两个实现，一个接受一个_int cellIndex_，另一个接受一个_String cellAddress_（例如，“C4”）参数。或者直接获取单元格中的数据：例如，_row.getCellText()_。</span>\n<span class="token comment">// 无论哪种方式，在提取每个单元格的内容后，我们需要确保必要时将其转换为适当的_food_对象字段类型。</span>\n\n让我们编写一个单元测试以确保转换工作正常：\n\n```java\n<span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">whenParsingExcelFileWithFastExcel_thenConvertsToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` foodInfoList <span class="token operator">=</span> <span class="token class-name">ExcelDataToListOfObjectsFastExcel</span>\n      <span class="token punctuation">.</span><span class="token function">excelDataToListOfObjets_withFastExcel</span><span class="token punctuation">(</span><span class="token string">&quot;src\\\\main\\\\resources/food_info.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;Beverages&quot;</span><span class="token punctuation">,</span> foodInfoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;Dairy&quot;</span><span class="token punctuation">,</span> foodInfoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-jexcelapi-jxl" tabindex="-1"><a class="header-anchor" href="#_6-jexcelapi-jxl"><span>6. JExcelApi (Jxl)</span></a></h2><p><strong>JExcelApi (或 Jxl) 是一个轻量级的Java库，用于读取、写入和修改Excel电子表格。</strong></p><h3 id="_6-1-设置maven依赖" tabindex="-1"><a class="header-anchor" href="#_6-1-设置maven依赖"><span>6.1. 设置Maven依赖</span></a></h3><p>让我们将JExcelApi的Maven依赖添加到_pom.xml_文件中：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>``````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>``````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>```````net.sourceforge.jexcelapi```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````jxl```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>```````\n    ```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>```````2.6.12```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>```````\n```````<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>```````\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-将excel数据转换为对象列表" tabindex="-1"><a class="header-anchor" href="#_6-2-将excel数据转换为对象列表"><span>6.2. 将Excel数据转换为对象列表</span></a></h3><p>尽管它只支持旧版本的Excel格式(.<em>xls</em>)文件，JExcel库提供了一系列的类来操作Excel文件。_Workbook_类用于访问文件中的Excel表格列表。</p><p>下面的代码使用该库将数据从_.xls_文件转换为_FoodInfo_对象列表，<em>foodData</em>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` <span class="token function">excelDataToListOfObjets_withJxl</span><span class="token punctuation">(</span><span class="token class-name">String</span> fileLocation<span class="token punctuation">)</span>\n  <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">BiffException</span> <span class="token punctuation">{</span>\n\n    <span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` foodData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>`````````````<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token class-name">Workbook</span> workbook <span class="token operator">=</span> <span class="token class-name">Workbook</span><span class="token punctuation">.</span><span class="token function">getWorkbook</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fileLocation<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">int</span> rows <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rows<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">FoodInfo</span> foodInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FoodInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        foodInfo<span class="token punctuation">.</span><span class="token function">setCategory</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        foodInfo<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        foodInfo<span class="token punctuation">.</span><span class="token function">setMeasure</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        foodInfo<span class="token punctuation">.</span><span class="token function">setCalories</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        foodData<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>foodInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> foodData<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于库不忽略标题行，我们必须从_i = 1_开始循环。表格对象是一个基于零的行列表。</p><p><strong>使用JExcel库检索单元格数据与FastExcel库非常相似。两个库都使用getCell()方法，有两个实现。</strong></p><p>然而，在JExcel中，这个方法是直接从_Sheet_对象而不是_Row_对象访问的。此外，getCell()方法的一个实现在JExcel中接受两个参数，<em>colNum_和_rowNum</em>，它们都是整数：<em>sheet.getCell(colNum, rowNum)</em>。</p><p>为了确保转换工作良好，让我们为我们的方法编写一个单元测试：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">whenParsingExcelFileWithJxl_thenConvertsToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">BiffException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">List</span>`````````````<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodInfo</span><span class="token punctuation">&gt;</span></span>````````````` foodInfoList <span class="token operator">=</span> <span class="token class-name">ExcelDataToListOfObjectsJxl</span>\n      <span class="token punctuation">.</span><span class="token function">excelDataToListOfObjets_withJxl</span><span class="token punctuation">(</span><span class="token string">&quot;src\\\\main\\\\resources/food_info.xls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;Beverages&quot;</span><span class="token punctuation">,</span> foodInfoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;Dairy&quot;</span><span class="token punctuation">,</span> foodInfoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-结论" tabindex="-1"><a class="header-anchor" href="#_7-结论"><span>7. 结论</span></a></h2><p>在本文中，我们探讨了使用几种库，如Apache POI、Poiji、FastExcel和JExcelApi，从Excel文件读取并转换数据到Java对象。然而，选择使用哪个库取决于具体需求，考虑到每个库的优势和局限性。</p><p>例如，如果我们优先考虑从Excel文件中读取数据并直接将其转换为Java对象列表的最简单方式，我们可能会选择使用Poiji库。</p><p>当涉及到Java中Excel数据映射的性能和简单性时，FastExcel和JExcelApi库是极好的选择。然而，与支持样式和图表的功能丰富的Apache POI库相比，它们提供的功能较少。</p><p>如常，本文的完整源代码可在GitHub上找到。</p><p>[文章结束]</p><p>OK</p>',70),o=[e];function c(l,i){return a(),s("div",null,o)}const d=n(p,[["render",c],["__file","2024-06-30-How To Convert Excel Data Into List Of Java Objects.html.vue"]]),r=JSON.parse('{"path":"/posts/baeldung/2024-06-30/2024-06-30-How%20To%20Convert%20Excel%20Data%20Into%20List%20Of%20Java%20Objects.html","title":"如何将Excel数据转换为Java对象列表 | Baeldung","lang":"zh-CN","frontmatter":{"date":"2024-06-30T00:00:00.000Z","category":["Java","Excel"],"tag":["Apache POI","Poiji","FastExcel","JExcelApi"],"head":[["meta",{"name":"keywords","content":"Java, Excel, 数据转换, 列表, 对象"}],["meta",{"property":"og:url","content":"https://www.kahen.xyz/posts/baeldung/2024-06-30/2024-06-30-How%20To%20Convert%20Excel%20Data%20Into%20List%20Of%20Java%20Objects.html"}],["meta",{"property":"og:site_name","content":"Baeldung 中文网"}],["meta",{"property":"og:title","content":"如何将Excel数据转换为Java对象列表 | Baeldung"}],["meta",{"property":"og:description","content":"如何将Excel数据转换为Java对象列表 | Baeldung 1. 引言 在软件开发中，理解数据映射是至关重要的。Excel是一种广泛使用的数据管理软件，因此对于Java开发人员来说，了解如何在Excel和Java对象之间映射数据至关重要。 在本教程中，我们将探讨如何将Excel数据转换为Java对象列表。 在Maven仓库中有几种Java库可用于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-30T05:54:42.000Z"}],["meta",{"property":"article:author","content":"Kahen"}],["meta",{"property":"article:tag","content":"Apache POI"}],["meta",{"property":"article:tag","content":"Poiji"}],["meta",{"property":"article:tag","content":"FastExcel"}],["meta",{"property":"article:tag","content":"JExcelApi"}],["meta",{"property":"article:published_time","content":"2024-06-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-30T05:54:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何将Excel数据转换为Java对象列表 | Baeldung\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-30T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-30T05:54:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kahen\\",\\"url\\":\\"https://www.kahen.xyz\\"}]}"]],"description":"如何将Excel数据转换为Java对象列表 | Baeldung 1. 引言 在软件开发中，理解数据映射是至关重要的。Excel是一种广泛使用的数据管理软件，因此对于Java开发人员来说，了解如何在Excel和Java对象之间映射数据至关重要。 在本教程中，我们将探讨如何将Excel数据转换为Java对象列表。 在Maven仓库中有几种Java库可用于..."},"headers":[{"level":2,"title":"1. 引言","slug":"_1-引言","link":"#_1-引言","children":[]},{"level":2,"title":"2. 模型设置","slug":"_2-模型设置","link":"#_2-模型设置","children":[]},{"level":2,"title":"3. Apache POI","slug":"_3-apache-poi","link":"#_3-apache-poi","children":[{"level":3,"title":"3.1. Maven依赖","slug":"_3-1-maven依赖","link":"#_3-1-maven依赖","children":[]},{"level":3,"title":"3.2. 将Excel数据转换为对象列表","slug":"_3-2-将excel数据转换为对象列表","link":"#_3-2-将excel数据转换为对象列表","children":[]}]},{"level":2,"title":"4. Poiji","slug":"_4-poiji","link":"#_4-poiji","children":[{"level":3,"title":"4.1. 设置Maven依赖","slug":"_4-1-设置maven依赖","link":"#_4-1-设置maven依赖","children":[]},{"level":3,"title":"4.2. 使用注解设置类","slug":"_4-2-使用注解设置类","link":"#_4-2-使用注解设置类","children":[]},{"level":3,"title":"4.3. 将Excel数据转换为对象列表","slug":"_4-3-将excel数据转换为对象列表","link":"#_4-3-将excel数据转换为对象列表","children":[]}]},{"level":2,"title":"5. FastExcel","slug":"_5-fastexcel","link":"#_5-fastexcel","children":[{"level":3,"title":"5.1. 设置Maven依赖","slug":"_5-1-设置maven依赖","link":"#_5-1-设置maven依赖","children":[]},{"level":3,"title":"5.2. 将Excel数据转换为对象列表","slug":"_5-2-将excel数据转换为对象列表","link":"#_5-2-将excel数据转换为对象列表","children":[]}]},{"level":2,"title":"6. JExcelApi (Jxl)","slug":"_6-jexcelapi-jxl","link":"#_6-jexcelapi-jxl","children":[{"level":3,"title":"6.1. 设置Maven依赖","slug":"_6-1-设置maven依赖","link":"#_6-1-设置maven依赖","children":[]},{"level":3,"title":"6.2. 将Excel数据转换为对象列表","slug":"_6-2-将excel数据转换为对象列表","link":"#_6-2-将excel数据转换为对象列表","children":[]}]},{"level":2,"title":"7. 结论","slug":"_7-结论","link":"#_7-结论","children":[]}],"git":{"createdTime":1719726882000,"updatedTime":1719726882000,"contributors":[{"name":"Kahen","email":"Kahen@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":7.45,"words":2234},"filePathRelative":"posts/baeldung/2024-06-30/2024-06-30-How To Convert Excel Data Into List Of Java Objects.md","localizedDate":"2024年6月30日","excerpt":"\\n<h2>1. 引言</h2>\\n<p>在软件开发中，理解数据映射是至关重要的。Excel是一种广泛使用的数据管理软件，因此对于Java开发人员来说，了解如何在Excel和Java对象之间映射数据至关重要。</p>\\n<p>在本教程中，我们将探讨如何将Excel数据转换为Java对象列表。</p>\\n<p>在Maven仓库中有几种Java库可用于在Java中处理Excel文件，其中Apache POI是最常见的。然而，在本教程中，我们将使用四种Java Excel库，包括Apache POI、Poiji、FastExcel和JExcelApi (Jxl)，将Excel数据转换为Java对象列表。</p>","autoDesc":true}');export{d as comp,r as data};
